
extensions:  
  - addsTo:
      pack: custom-codeql-queries
      extensible: sensitiveComments
    data:
    - ["$%^&&*().java", "$%^&&*()"]
    - ["undefined", "CLI.jar is hard-coded with the built-in knowledge about a specific protocol."]
    - ["undefined", "Starting 1.419, CLI supports SSH public key based client/server mutual authentication."]
    - ["undefined", "http://stackoverflow.com/a/3651696/12916"]
    - ["undefined", "TODO COPIED FROM hudson.remoting"]
    - ["undefined", "Name of the job to build"]
    - ["undefined", "Number of the build"]
    - ["undefined", "DisplayName to be set"]
    - ["undefined", "WEB-INF/lib"]
    - ["undefined", "TODO: allow {@link MarkupFormatter} to control the UI that the user uses to edit."]
    - ["undefined", "hudson.model.AsyncPeriodicWork.logRotateMinutes"]
    - ["undefined", "hudson.model.AsyncPeriodicWork.logRotateSize"]
    - ["undefined", "Jenkins.getActiveInstance().getRootDir()"]
    - ["undefined", "Handle addJobToView web method."]
    - ["undefined", "Handle removeJobFromView web method."]
    - ["undefined", "If the user lacks {@link #CONFIGURE} then any {@link Secret}s must be masked out, even in encrypted form."]
    - ["undefined", "see https://stackoverflow.com/q/22694884/12916"]
    - ["undefined", "TODO could delegate to allItems overload taking Authentication"]
    - ["undefined", "ID that uniquely identifies this permalink."]
    - ["undefined", "The is also used as an URL token to represent the permalink."]
    - ["undefined", "Gets the root directory on the file system that this {@link Item} can use freely for storing the configuration data."]
    - ["undefined", "Root object of a persisted object tree that gets its own file system directory."]
    - ["undefined", "TODO use !Functions.isExtensionsAvailable() once JENKINS-33377"]
    - ["undefined", "TODO: once we have cvsnews plugin, refer to its usage."]
    - ["undefined", "The current HTTP request being processed."]
    - ["undefined", "JSON fragment that corresponds to this describable object."]
    - ["undefined", "you'll need to do data serialization by yourself. Do so by storing a file under {@link AbstractProject#getRootDir()}"]
    - ["undefined", "mailto:nicolas.deloof@gmail.com"]
    - ["undefined", "Configuration screen should be defined in <tt>config.jelly</tt>."]
    - ["undefined", "See {@link hudson.search.UserSearchProperty}'s <tt>config.jelly</tt> for an example."]
    - ["undefined", "A property may also define a {@code summary.jelly} view to show in the main user screen."]
    - ["undefined", "according to http://developer.apple.com/technotes/tn2002/tn2110.html"]
    - ["undefined", "Disabled by default: JENKINS-35098"]
    - ["undefined", "This also creates the URL binding for views (in the form of .../view/FOOBAR/...)"]
    - ["undefined", "It is the caller's responsibility to ensure that the new name is a {@linkplain jenkins.model.Jenkins#checkGoodName(String) legal view name}."]
    - ["undefined", "Returns the path of this group, relative to the context root, like foo/bar/zot/. Note no leading slash but trailing slash."]
    - ["undefined", "Default TabBar is provided by Hudson Platform."]
    - ["undefined", "By default, {@link Jenkins#getInstance}."]
    - ["undefined", "may be empty but never null; {@link Jenkins#getActions} by default"]
    - ["undefined", "nicolas.deloof@gmail.com"]
    - ["undefined", "The username for the system user"]
    - ["undefined", "The username for the anonymous user"]
    - ["undefined", "Tomcat persists sessions by using Java serialization (and that includes the security token created by Acegi, which includes this object)"]
    - ["undefined", "Hudson stops persisting {@link Authentication} altogether (see {@link NonSerializableSecurityContext})"]
    - ["undefined", "Legacy secure mode."]
    - ["undefined", "Authentication is performed by the container."]
    - ["undefined", "This is the only secured mode of Hudson up to 1.160."]
    - ["undefined", "Security-enabled mode implemented through Acegi."]
    - ["undefined", "can any of the currently idle executors take this task?"]
    - ["undefined", "we've been in demand for long enough"]
    - ["undefined", "this 'item' cannot be built by any of the existing idle nodes, but it can be built by 'c'"]
    - ["undefined", "no point revisiting until we can be confident we will be idle"]
    - ["undefined", "assume the answer is no until we can find such an executor"]
    - ["undefined", "The delay (in minutes) for which the agent must be in demand before trying to launch it."]
    - ["undefined", "The delay (in minutes) for which the agent must be idle before taking it offline."]
    - ["undefined", "we've been idle for long enough"]
    - ["undefined", "Creates environment variable override for launching child processes in this node."]
    - ["undefined", "this method is used for other process launch activities that happens outside the context of a build, such as polling, one time action (tagging, deployment, etc.)"]
    - ["undefined", "this method and {@link #setUp(AbstractBuild, Launcher, BuildListener)} are layered properly."]
    - ["undefined", "this method from {@link Environment#buildEnvVars(Map)}."]
    - ["undefined", "Manipulate this variable (normally by adding more entries.)"]
    - ["undefined", "Note that this is an override, so it doesn't contain environment variables that are currently set for the agent process itself."]
    - ["undefined", "Can be used to send messages."]
    - ["undefined", "MD5 sum"]
    - ["undefined", "Internet Explorer's <tt>XmlHttpRequest.responseText</tt> seems to normalize the line end, and if we only send LF without CR, it will not recognize that as a new line. To work around this problem, we use this filter to always convert LF to CR+LF."]
    - ["undefined", "http://jroller.com/page/Solomon?entry=programmatic_configuration_in_spring"]
    - ["undefined", "Credit must go to Solomon Duskis and the article: http://jroller.com/page/Solomon?entry=programmatic_configuration_in_spring"]
    - ["undefined", "http://creativecommons.org/licenses/publicdomain"]
    - ["undefined", "System.getProperty(file.encoding)"]
    - ["undefined", "for compatibility reasons, the actual value is stored in Jenkins"]
    - ["undefined", "Winston.Prakash@oracle.com"]
    - ["undefined", "The user who made this change."]
    - ["undefined", "The path in the workspace that was affected"]
    - ["undefined", "Failed to read permalink cache"]
    - ["undefined", "Failed to parse the build number in the permalink cache"]
    - ["undefined", "Failed to update permalink for"]
    - ["undefined", "Avoid calling resolveSymlink on a nonexistent file as it will probably throw an IOException"]
    - ["undefined", "The message of the failure will be presented to the user."]
    - ["undefined", "if this method returns true, the naming will be enforced at every config change."]
    - ["undefined", "regex pattern a job's name has to follow"]
    - ["undefined", "return /help/system-config/defaultJobNamingStrategy.html;"]
    - ["undefined", "return /help/system-config/patternJobNamingStrategy.html;"]
    - ["undefined", "TODO: remove once Minimum supported Remoting version is 3.15 or above"]
    - ["undefined", "TODO: remove once Callable#getOpenChannelOrFail() once Minimaumsupported Remoting version is 3.15 or above"]
    - ["undefined", "TODO: Since Remoting 2.33, we still need to explicitly declare minimum Remoting version"]
    - ["undefined", "Fired when a user was successfully authenticated using credentials. It could be password or any other credentials."]
    - ["undefined", "Fired when a user tried to authenticate but failed. In case the authentication method uses multiple layers to validate the credentials, we do fire this event only when even the last layer failed to authenticate."]
    - ["undefined", "Fired when a user has logged in. Compared to authenticated, there is a notion of storage / cache. It should be called after the org.acegisecurity.context.SecurityContextHolder#getContext()'s authentication is set."]
    - ["undefined", "Fired when a user has failed to log in. Would be called after failedToAuthenticate."]
    - ["undefined", "Fired when a user logs out."]
    - ["undefined", "TODO should there be an option to check lastCompletedBuild even if it failed?"]
    - ["undefined", "TODO uncomment once we can have a delegating ClassFilter, also add SystemProperty to toggle feature"]
    - ["undefined", "SYSTEM can see all the views"]
    - ["undefined", "Alice can't"]
    - ["undefined", "http://issues.hudson-ci.org/browse/HUDSON-8656"]
    - ["undefined", "uploaded legacy plugins get renamed to *.jpi"]
    - ["undefined", "plugin depender optionally depends on plugin dependee."]
    - ["undefined", "they are written like this: org.jenkinsci.plugins.dependencytest.dependee: public class Dependee { public static String getValue() { return dependee; } } public abstract class DependeeExtensionPoint implements ExtensionPoint { } org.jenkinsci.plugins.dependencytest.depender: public class Depender { public static String getValue() { if (Jenkins.getInstance().getPlugin(dependee) != null) { return Dependee.getValue(); } return depender; } } @Extension(optional=true) public class DependerExtension extends DependeeExtensionPoint { }"]
    - ["undefined", "URL url = PluginManagerTest.class.getResource(/plugins/tasks-update-center.json);"]
    - ["undefined", "URL res = getClass().getClassLoader().getResource(plugins/htmlpublisher.jpi);"]
    - ["undefined", "URL url = PluginManagerTest.class.getResource(/plugins/upload-test-update-center.json);"]
    - ["undefined", "File plugin = new File(dir, Parameterized-Remote-Trigger.hpi);"]
    - ["undefined", "File plugin = new File(dir, legacy.hpi);"]
    - ["undefined", "File plugin = new File(dir, tasks.jpi);"]
    - ["undefined", "URL fromPlugin = w.classLoader.getResource(org/jenkinsci/plugins/pluginfirst/HelloWorldBuilder/config.jelly);"]
    - ["undefined", "URL fromToolkit = ClassLoaderReflectionToolkit._findResource(w.classLoader, org/jenkinsci/plugins/pluginfirst/HelloWorldBuilder/config.jelly);"]
    - ["undefined", "rootUrl = https://127.0.0.1:8080/"]
    - ["undefined", "$ANTLR 2.7.6 (2005-12-22): crontab.g -> CrontabParser.java$"]
    - ["undefined", "$ANTLR 2.7.6 (2005-12-22): crontab.g -> CrontabLexer.java$"]
    - ["undefined", "Renders a help entry for one environment variable. See EnvironmentContributor. The body of this tag renders the content."]
    - ["undefined", "Deprecated as of 1.463. Use &lt;config-publishers2&gt; and update your code to do publishers.rebuildHetero(req, json, Publisher.all(), publisher);"]
    - ["undefined", "See http://ml.seasar.org/archives/operation/2008-November/004003.html"]
    - ["undefined", "nor check permissions"]
    - ["undefined", "http://infradna.com/"]
    - ["undefined", "did not manage to save p, but at least we are not holding onto a reference to it anymore"]
    - ["undefined", "Test timeout indicates JENKINS-24763 exists"]
    - ["undefined", "test will hang here due to JENKINS-24763"]
    - ["undefined", "Issac Newton"]
    - ["undefined", "key pair for testing"]
    - ["undefined", "A bit intrusive with UsageStatistics internals, but done to prevent undetected changes"]
    - ["undefined", "that would cause issues with parsing/analyzing uploaded usage statistics"]
    - ["undefined", "run x1000 the regular speed to speed up the test"]
    - ["undefined", "if it's taking too long, abort."]
    - ["undefined", "since there's only one job, we expect there to be just one slave"]
    - ["undefined", "the time it takes to complete a job is eternally long compared to the time it takes to launch"]
    - ["undefined", "a new slave, so in this scenario we end up allocating 5 slaves for 5 jobs."]
    - ["undefined", "add slaves statically upfront"]
    - ["undefined", "we should have used two static slaves, thus only 3 slaves should have been provisioned"]
    - ["undefined", "cloud should only give us 5 nodes for 5 red jobs"]
    - ["undefined", "and all blue jobs should be still stuck in the queue"]
    - ["undefined", "let it roam free, or else it ties itself to the master since we have no slaves"]
    - ["undefined", "start a dummy service"]
    - ["undefined", "no build on the master, to make sure we get everything from the cloud"]
    - ["undefined", "set a large delay, to simulate the situation where we need to provision more slaves"]
    - ["undefined", "to keep up with the load"]
    - ["undefined", "time out so that the automated test won't hang forever, even when we have bugs"]
    - ["undefined", "we want to check that we are blocking LdapAttribute"]
    - ["undefined", "return armed payload object to be serialized that will execute specified command on deserialization"]
    - ["undefined", "get payload classes by classpath scanning"]
    - ["undefined", "tom.fennelly@gmail.com"]
    - ["undefined", "I was getting 404s and other errors"]
    - ["undefined", "/plugin/xxx/icon.png"]
    - ["undefined", "/plugin/12345/icons/s2.png"]
    - ["undefined", "The issue with CommonsCollections2 does not appear in manual tests on Jenkins, but it may be a risk"]
    - ["undefined", "in newer commons-collections version => remoting implementation should filter this class anyway"]
    - ["undefined", "TODO: Fix the conversion layer (not urgent)"]
    - ["undefined", "There is an issue in the conversion layer after the migration to another XALAN namespace"]
    - ["undefined", "with newer libs. SECURITY-218 does not appear in this case in manual tests anyway"]
    - ["undefined", "Reason it is 1 is that it is testing a test that is not in our version of Spring"]
    - ["undefined", "Caused by: java.lang.ClassNotFoundException: org.springframework.beans.factory.support.AutowireUtils$ObjectFactoryDelegatingInvocationHandler"]
    - ["undefined", "Reason it is 1 is that it is testing a test that is not in our version of Spring 4"]
    - ["undefined", "Caused by: java.lang.ClassNotFoundException: org.springframework.core.SerializableTypeWrapper$TypeProvider"]
    - ["undefined", "with a proper fix, this should fail with EXIT_CODE_REJECTED"]
    - ["undefined", "otherwise this will fail with -1 exit code"]
    - ["undefined", "Bypassing _main because it does nothing interesting here."]
    - ["undefined", "Hardcoding CLI protocol version 1 (CliProtocol) because it is easier to sniff."]
    - ["undefined", "Invoke backward call"]
    - ["undefined", "We don't care what happens here. Object should be sent over the channel"]
    - ["undefined", "It should happen if the remote channel reject a class."]
    - ["undefined", "That's what we have done in SECURITY-218 => may be OK"]
    - ["undefined", "Something wrong"]
    - ["undefined", "We ignore this exception, because there is a known issue in the test payload"]
    - ["undefined", "CommonsCollections1, CommonsCollections2 and Groovy1 fail with this error, but actually it means that the conversion has been triggered"]
    - ["undefined", "ERROR: user is missing the Overall/Administer permission"]
    - ["undefined", "Modify a project directly on the disc"]
    - ["undefined", "oldstr old configuration item - for rewrite"]
    - ["undefined", "newstr rew configuration item - after rewrite"]
    - ["ConnectionMockTest.java", "marco.miller@ericsson.com"]
    - ["SSHCLI.java", "suppress: BouncyCastle not registered, using the default JCE provider"]
    - ["ClearQueueCommand.java", "Clears the build queue"]
    - ["MethodBinder.java", "to work in cooperation with earlier arguments, add bias to all the ones that this one defines."]
    - ["HexDump.java", "TODO COPIED FROM hudson.remoting"]
    - ["CliProtocol2.java", "send a signature to prove our identity"]
    - ["CliProtocol2.java", "perform coin-toss and come up with a session key to encrypt data"]
    - ["AbstractMarkupText.java", "limit who can subclass this type."]
    - ["DiagnosedStreamCorruptionException.java", "TODO COPIED FROM hudson.remoting"]
    - ["CliEntryPoint.java", "Initiates authentication out of band."]
    - ["CliCrumbExclusion.java", "Makes CLI HTTP fallback work with CSRF protection enabled (JENKINS-18114)."]
    - ["AbstractBuildRangeCommand.java", "Name of the job to build"]
    - ["AbstractBuildRangeCommand.java", "Range of the build records to delete. 'N-M', 'N,M', or 'N'"]
    - ["Messages.java", "ReverseBuildTrigger.running_as_cannot_even_see_for_trigger_f"]
    - ["CliPort.java", "Server instance identity. Can be null."]
    - ["CliPort.java", "Gets the public part of the RSA key that represents the server identity."]
    - ["CliPort.java", "The TCP endpoint to talk to."]
    - ["DeleteViewCommand.java", "Remove duplicates"]
    - ["CLIMethod.java", "Messages.properties"]
    - ["CLIMethod.java", "CLI.<i>command-name</i>.shortDescription"]
    - ["BulkChange.java", "remember who allocated this object in case someone forgot to call save() at the end."]
    - ["BulkChange.java", "move this object out of the scope first before save, or otherwise the save() method will do nothing."]
    - ["CLIRegisterer.java", "run the CLI with the right credential"]
    - ["CLIRegisterer.java", "to the caller, we can't reveal whether the user didn't exist or the password didn't match."]
    - ["CLIRegisterer.java", "authentication"]
    - ["CliProtocol.java", "Connection can contain cipher wrapper, which can't be NIO-ed."]
    - ["CliProtocol.java", "A/B test turning off this protocol by default."]
    - ["CLI.java", "Kill switch to disable the CLI-over-Remoting system."]
    - ["CLI.java", "Marked as no external use because the CLI subsystem is nearing EOL."]
    - ["CLI.java", "should not happen"]
    - ["CLI.java", "historical default, but overridden in SetupWizard"]
    - ["DeleteBuildsCommand.java", "@Restricted(DoNotUse.class) // command implementation only"]
    - ["GetNodeCommand.java", "Name of the node"]
    - ["GroovyCommand.java", "this allows the caller to manipulate the JVM state, so require the execute script privilege."]
    - ["CommandDuringBuild.java", "We use the environment variables that Jenkins sets to determine the build that is being run."]
    - ["CommandDuringBuild.java", "Gets the environment variables that points to the build being executed."]
    - ["CreateNodeCommand.java", "change userId too"]
    - ["PlainCLIProtocol.java", "TODO set distinctive Thread.name"]
    - ["PlainCLIProtocol.java", "TODO verify that we hit EOF immediately, not partway into framelen"]
    - ["PlainCLIProtocol.java", "in case trick in CLIAction does not work"]
    - ["GroovyshCommand.java", "this allows the caller to manipulate the JVM state, so require the admin privilege."]
    - ["CliManagerImpl.java", "Runs callable from this CLI client with the transport authentication credential."]
    - ["CliManagerImpl.java", "remoting sets the context classloader to the RemoteClassLoader, which slows down the classloading. we don't load anything from CLI, so counter that effect."]
    - ["GetJobCommand.java", "Name of the job"]
    - ["HelpCommand.java", "You must authenticate to access this Jenkins."]
    - ["GenericItemOptionHandler.java", "final Authentication who = Jenkins.getAuthentication();"]
    - ["ConnectionTest.java", "SecretKey sessionKey = new SecretKeySpec(new byte[16],AES)"]
    - ["QuotedStringTokenizer.java", "http://www.mortbay.org/jetty"]
    - ["QuotedStringTokenizer.java", "http://www.apache.org/licenses/LICENSE-2.0"]
    - ["UpdateViewCommand.java", "@author ogondza"]
    - ["ReloadConfigurationCommand.java", "Reload everything from the file system."]
    - ["ReloadConfigurationCommand.java", "could throw JenkinsReloadFailed.cause if it were not deprecated"]
    - ["ViewOptionHandler.java", "user was not granted {@link View#READ} permission"]
    - ["ViewOptionHandler.java", "If user doesn't have a READ permission for the view"]
    - ["SetBuildResultCommand.java", "Sets the result of the current build. Works only if invoked from within a build."]
    - ["SetBuildParameterCommand.java", "This allows one build step to affect the environment variables seen by later build steps."]
    - ["VersionCommand.java", "CLICommand.main checks Hudson.READ permission.. no other check needed."]
    - ["InstallToolCommand.java", "where is this build running?"]
    - ["WhoAmICommand.java", "Report the current granted authorities"]
    - ["UpdateNodeCommand.java", "Name of the node"]
    - ["ExpandableDetailsNote.java", "impossible, but don't make this a fatal problem"]
    - ["OfflineNodeCommand.java", "CLI Command, which puts the Jenkins node offline."]
    - ["SetBuildDescriptionCommand.java", "Name of the job to build"]
    - ["SetBuildDescriptionCommand.java", "Number of the build"]
    - ["SetBuildDescriptionCommand.java", "Description to be set"]
    - ["CLICommand.java", "run the CLI with the right credential"]
    - ["CLICommand.java", "to the caller, we can't reveal whether the user didn't exist or the password didn't match."]
    - ["CLICommand.java", "do that to the server log instead"]
    - ["CLICommand.java", "User details loaded from the CLI {@link ClientAuthenticationCache}"]
    - ["CLICommand.java", "The user is never anonymous since it must be authenticated to be stored in the cache"]
    - ["CLICommand.java", "Set by the caller of the CLI system if the transport already provides authentication."]
    - ["CLICommand.java", "Key for {@link Channel#getProperty(Object)} that links to the {@link Authentication} object which captures the identity of the client given by the transport layer."]
    - ["ModelHyperlinkNote.java", "impossible, but don't make this a fatal problem"]
    - ["LineTransformationOutputStream.java", "TODO: Mac is supposed to be CR-only. This class needs to handle that."]
    - ["RunRangeCommand.java", "Name of the job to build"]
    - ["RunRangeCommand.java", "Range of the build records to delete. 'N-M', 'N,M', or 'N'"]
    - ["ConsoleLogFilter.java", "({@link ArgumentListBuilder#add(String, boolean)} is a simpler way to suppress a single password.)"]
    - ["CLIConnectionFactory.java", "Top URL of the Jenkins to connect to."]
    - ["CLIConnectionFactory.java", "For CLI connection that goes through HTTP, sometimes you need to pass in the custom authentication header (before Jenkins even get to authenticate the CLI channel.) This method lets you specify the value of this header."]
    - ["CLIConnectionFactory.java", "Configures the HTTP proxy that we use for making a plain TCP/IP connection. host:port that points to an HTTP proxy or null."]
    - ["CLIConnectionFactory.java", "Convenience method to call {@link #authorization} with the HTTP basic authentication. Currently unused."]
    - ["CLIConnectionFactory.java", "Convenience method to call {@link #authorization} with the HTTP basic authentication. Cf. {@code BasicHeaderApiTokenAuthenticator}."]
    - ["UrlAnnotator.java", "test=http://www.example.com/"]
    - ["CLIAction.java", "the actual authentication for the connecting Channel is done by CLICommand"]
    - ["CLIAction.java", "capture the identity given by the transport, since this can be useful for SecurityRealm.createCliAuthenticator()"]
    - ["CLIAction.java", "do not require any permission to establish a CLI connection"]
    - ["LoginCommand.java", "Saves the current credential to allow future commands to run without explicit credential information."]
    - ["LoginCommand.java", "If we use the stored authentication for the login command, login becomes no-op, which is clearly not what the user has intended."]
    - ["LoginCommand.java", "throw new CmdLineException(No credentials specified.); // this causes CLI to show the command line options."]
    - ["BuildCommand.java", "not passed in use default"]
    - ["BuildCommand.java", "handle missing parameters by adding as default values ISSUE JENKINS-7162"]
    - ["BuildCommand.java", "preemptively check for a polling veto"]
    - ["BuildCommand.java", "writeWholeLogTo may fail with FileNotFound"]
    - ["BuildCommand.java", "exception on a slow/busy machine, if it takes"]
    - ["BuildCommand.java", "longish to create the log file"]
    - ["BuildCommand.java", "if the CLI is aborted, try to abort the build as well"]
    - ["DependencyRunner.java", "SecurityContext oldContext = ACL.impersonate(ACL.SYSTEM);"]
    - ["LogoutCommand.java", "Deletes the credential stored with the login command."]
    - ["ListJobsCommand.java", "If name is given retrieve jobs for the given view."]
    - ["ListJobsCommand.java", "If no view was found, try with an item group."]
    - ["ListJobsCommand.java", "If item group was found use it's jobs."]
    - ["ListJobsCommand.java", "No view and no item group with the given name found."]
    - ["ListJobsCommand.java", "Fallback to listing all jobs."]
    - ["ListJobsCommand.java", "Print all jobs."]
    - ["ConsoleAnnotatorFactory.java", "script.js"]
    - ["ConsoleAnnotatorFactory.java", "style.css"]
    - ["ListChangesCommand.java", "Loading job for this CLI command requires Item.READ permission."]
    - ["ListChangesCommand.java", "No other permission check needed."]
    - ["NullIdDescriptorMonitor.java", "JENKINS-8866"]
    - ["UpdateJobCommand.java", "Name of the job"]
    - ["PrivateKeyProvider.java", "Read DSA or RSA key from file(s) asking for password interactively."]
    - ["PrivateKeyProvider.java", "Read keys from default keyFiles

<tt>.ssh/id_rsa</tt>, <tt>.ssh/id_dsa</tt> and <tt>.ssh/identity</tt>."]
    - ["PrivateKeyProvider.java", "Read key from keyFile."]
    - ["PrivateKeyProvider.java", "simple check if the file is encrypted"]
    - ["InstallPluginCommand.java", "is this an URL?"]
    - ["InstallPluginCommand.java", "is this a plugin the update center?"]
    - ["InstallPluginCommand.java", "is this a file?"]
    - ["InstallPluginCommand.java", "looks like a short plugin name. Why did we fail to find it in the update center?"]
    - ["SessionIdCommand.java", "Prints the current session ID number (that changes for every run) to allow clients to reliably wait for a restart."]
    - ["WaitNodeOfflineCommand.java", "Name of the node"]
    - ["ExtensionListListener.java", "tom.fennelly@gmail.com"]
    - ["ExpressionFactory2.java", "let the security exception pass through"]
    - ["FullDuplexHttpStream.java", "Authorization header value needed to get through the HTTP layer."]
    - ["FullDuplexHttpStream.java", "so that the server can correlate those two connections"]
    - ["FullDuplexHttpStream.java", "request POST to avoid caching"]
    - ["FullDuplexHttpStream.java", "make sure we hit the right URL; no need for CLI.verifyJenkinsConnection here"]
    - ["FullDuplexHttpStream.java", "calling getResponseCode or getHeaderFields breaks everything"]
    - ["FullDuplexHttpStream.java", "client->server uses chunked encoded POST for unlimited capacity."]
    - ["FullDuplexHttpStream.java", "As this transport mode is using POST, it is necessary to resolve possible redirections using GET first."]
    - ["FullDuplexHttpStream.java", "Do not obscure the problem propagating the exception. If the problem is real it will manifest during the actual exchange so will be reported properly there. If it is not real (no permission in UI but sufficient for CLI connection using one of its mechanisms), there is no reason to bother user about it."]
    - ["PrivateKeyProviderTest.java", "keyFile(.ssh/id_dsa)"]
    - ["PrivateKeyProviderTest.java", "keyFile(.ssh/id_rsa)"]
    - ["PrivateKeyProviderTest.java", "System.setProperty(user.home, home.getAbsolutePath())"]
    - ["PrivateKeyProviderTest.java", "factory.jenkins = new URL(http://example.com)"]
    - ["PrivateKeyProviderTest.java", "run(-remoting, -i, dsaKey.getAbsolutePath(), -i, rsaKey.getAbsolutePath(), -s, http://example.com)"]
    - ["ConsoleAnnotationOutputStream.java", "LOGGER.log(Level.FINE,Failed to resurrect annotation,e);"]
    - ["HyperlinkNote.java", "if we are serving HTTP request, we want to use app relative URL"]
    - ["HyperlinkNote.java", "otherwise presumably this is rendered for e-mails and other non-HTTP stuff"]
    - ["HyperlinkNote.java", "impossible, but don't make this a fatal problem"]
    - ["HyperlinkNote.java", "If this starts with '/', it's interpreted as a path within the context path."]
    - ["InitialUserContent.java", "Prepares userContent folder and put a readme if it doesn't exist."]
    - ["DescriptorExtensionList.java", "LOGGER.log(Level.WARNING, Cannot load extension components, because Jenkins instance has not been assigned yet)"]
    - ["DescriptorExtensionList.java", "LOGGER.log(Level.SEVERE, d.getClass() +  doesn't extend Descriptor with a type parameter, e)"]
    - ["ExitLifecycle.java", "alon.barlev@gmail.com"]
    - ["HudsonHomeDiskUsageMonitor.java", "Human-readable ID of this monitor, which needs to be unique within the system."]
    - ["HudsonHomeDiskUsageMonitor.java", "This ID is used to remember persisted setting for this monitor, so the ID should remain consistent beyond the Hudson JVM lifespan."]
    - ["HudsonHomeDiskUsageMonitor.java", "Returns the URL of this monitor, relative to the context path."]
    - ["HudsonHomeDiskUsageMonitor.java", "All registered {@link Solution}s."]
    - ["LauncherDecorator.java", "fakeroot, sudo, pfexec"]
    - ["InitMilestone.java", "TODO nothing attains() this so when does it actually happen?"]
    - ["EnvVars.java", "PATH=/usr/bin"]
    - ["EnvVars.java", "PATH=/opt/something/bin:${PATH1}"]
    - ["EnvVars.java", "PATH1=/usr/local/bin:${PATH}"]
    - ["EnvVars.java", "if unit test is launched with maven debug switch, we need to prevent forked Maven processes from seeing it, or else they'll hang"]
    - ["Terminator.java", "Key in <tt>Messages.properties</tt> that represents what this task is about. Used for rendering the progress."]
    - ["Initializer.java", "Key in <tt>Messages.properties</tt> that represents what this task is about. Used for rendering the progress."]
    - ["Initializer.java", "Should the failure in this task prevent Hudson from starting up?"]
    - ["AnnotatedLargeText.java", "don't deserialize something too old to prevent a replay attack"]
    - ["AnnotatedLargeText.java", "send timestamp to prevent a replay attack"]
    - ["AnnotatedLargeText.java", "The serialized {@link ConsoleAnnotator} is encrypted to avoid malicious clients from instantiating arbitrary {@link ConsoleAnnotator}s."]
    - ["AnnotatedLargeText.java", "Used for sending the state of ConsoleAnnotator to the client, because we are deserializing this object later."]
    - ["DNSMultiCast.java", "escape hatch"]
    - ["DNSMultiCast.java", "the registerService call can be slow. run these asynchronously"]
    - ["DNSMultiCast.java", "failed to parse the version number"]
    - ["DNSMultiCast.java", "for backward compatibility"]
    - ["DNSMultiCast.java", "Make Jenkins appear in Safari's Bonjour bookmarks"]
    - ["DNSMultiCast.java", "LOGGER.log(Level.WARNING,Failed to close down JmDNS instance!,e);"]
    - ["ClientAuthenticationCache.java", "We store encrypted user names."]
    - ["ClientAuthenticationCache.java", "Where the store should be placed."]
    - ["ClientAuthenticationCache.java", "Loaded contents of the store."]
    - ["ClientAuthenticationCache.java", "Gets the persisted authentication for this Jenkins."]
    - ["ClientAuthenticationCache.java", "Persists the specified authentication."]
    - ["ClientAuthenticationCache.java", "Removes the persisted credential, if there's one."]
    - ["ClientAuthenticationCache.java", "try to protect this file from other users, if we can."]
    - ["ClientAuthenticationCache.java", "Computes the key that identifies this Hudson among other Hudsons that the user has a credential for."]
    - ["ClientAuthenticationCache.java", "TODO there is no check to be consistent with User.ALLOW_NON_EXISTENT_USER_TO_LOGIN"]
    - ["ClientAuthenticationCache.java", "make sure that this security realm is capable of retrieving the authentication by name, as it's not required."]
    - ["HudsonExceptionNote.java", "http://stacktrace.jenkins-ci.org"]
    - ["HudsonExceptionNote.java", "https://github.com/jenkinsci/jenkins/pull/2808#pullrequestreview-27467560"]
    - ["FeedAdapter.java", "Author of this entry."]
    - ["FeedAdapter.java", "Unique ID of each entry."]
    - ["FeedAdapter.java", "Gets the URL that represents this entry."]
    - ["InstallUncaughtExceptionHandler.java", "If any threads die due to unhandled coding errors then there will be no logging of this information. The lack of this diagnostic information will make it harder to track down issues which will reduce the supportability of Jenkins."]
    - ["InstallUncaughtExceptionHandler.java", "if this was an OutOfMemoryError then all bets about logging are off - but in the absence of anything else..."]
    - ["ExtensionListView.java", "TODO: we need a few more types whose implementations get uglier"]
    - ["WorkspaceSnapshotSCM.java", "The job name from which we inherit the workspace."]
    - ["WorkspaceSnapshotSCM.java", "The permalink name indicating the build from which to inherit the workspace."]
    - ["WorkspaceSnapshotSCM.java", "Exception indicating that the resolution of the job/permalink failed."]
    - ["WorkspaceSnapshotSCM.java", "Obtains the WorkspaceSnapshot object that this SCM points to, or throws hudson.fsp.WorkspaceSnapshotSCM.ResolvedFailedException upon failing."]
    - ["TooManyJobsButNoView.java", "Depending on whether the user said yes or no, send him to the right place."]
    - ["TooManyJobsButNoView.java", "I noticed at an user visit that some users didn't notice the '+' icon in the tab bar."]
    - ["SolarisSMFLifecycle.java", "In SMF managed environment, just commit a suicide and the service will be restarted by SMF."]
    - ["SolarisSMFLifecycle.java", "guard against repeated concurrent calls to restart"]
    - ["InitStrategy.java", "$JENKINS_HOME/plugins/*.jpi"]
    - ["InitStrategy.java", "hudson.bundled.plugins"]
    - ["GroovyInitScript.java", "Run the initialization script, if it exists."]
    - ["Actionable.java", "this double checked synchronization is only safe if the field 'actions' is volatile"]
    - ["ConsoleNote.java", "Disables checking of {@link #MAC} so do not set this flag unless you completely trust all users capable of affecting build output, which in practice means that all SCM committers as well as all Jenkins users with any non-read-only access are consider administrators."]
    - ["ConsoleNote.java", "else we are in another JVM and cannot sign; result will be ignored unless INSECURE"]
    - ["ConsoleNote.java", "if (!INSECURE) { throw new IOException(Refusing to deserialize unsigned note from an old log.); }"]
    - ["ConsoleNote.java", "MAC mismatch"]
    - ["ConsoleNote.java", "bogus 'sz' can result in OutOfMemoryError."]
    - ["Main.java", "check for authentication info"]
    - ["Main.java", "get a crumb to pass the csrf check"]
    - ["Main.java", "presumably this Hudson doesn't use CSRF protection"]
    - ["LocalPluginManager.java", "Jenkins home directory"]
    - ["LocalPluginManager.java", "Servlet context. Provided for compatibility as {@code Jenkins.getInstance().servletContext} should be used."]
    - ["LocalPluginManager.java", "File names of the bundled plugins. Like {ssh-slaves.jpi,subversion.jpi}"]
    - ["LocalPluginManager.java", "this is used in tests, when we want to override the default bundled plugins with .jpl (or .hpl) versions"]
    - ["AbstractCIBase.java", "LOG_STARTUP_PERFORMANCE"]
    - ["AbstractCIBase.java", "Jenkins#getRootUrl()"]
    - ["AutoCompletionCandidates.java", "and read permission required"]
    - ["AperiodicWork.java", "Math.abs(Long.MIN_VALUE)==Long.MIN_VALUE!"]
    - ["AperiodicWork.java", "start all AperidocWorks"]
    - ["MarkupText.java", "escape char"]
    - ["MarkupText.java", "replace by group"]
    - ["MarkupText.java", "other chars"]
    - ["MarkupText.java", "# of chars already copied from text to buf"]
    - ["MarkupText.java", "perhaps this method doesn't need to be here to remain binary compatible with past versions, but having this seems to be safer."]
    - ["BuildListener.java", "TODO elide duplicates as per CauseAction.getCauseCounts (used in summary.jelly)"]
    - ["BallColor.java", "String like red.png that represents the file name of the image."]
    - ["UnixLifecycle.java", "http://lists.apple.com/archives/cocoa-dev/2005/Oct/msg00836.html"]
    - ["UnixLifecycle.java", "http://factor-language.blogspot.com/2007/07/execve-returning-enotsup-on-mac-os-x.html"]
    - ["UnixLifecycle.java", "http://www.nabble.com/Restarting-hudson-not-working-on-MacOS--to24641779.html"]
    - ["UnixLifecycle.java", "http://www.mail-archive.com/wine-devel@winehq.org/msg66797.html"]
    - ["AsyncAperiodicWork.java", "hudson.model.AsyncAperiodicWork.logRotateMinutes"]
    - ["AsyncAperiodicWork.java", "hudson.model.AsyncAperiodicWork.logRotateSize"]
    - ["AsyncAperiodicWork.java", "Jenkins.getActiveInstance().getRootDir()"]
    - ["BuildAuthorizationToken.java", "Authorization token to allow projects to trigger themselves under the secured environment."]
    - ["BuildAuthorizationToken.java", "everyone is authorized"]
    - ["BuildAuthorizationToken.java", "check the provided token"]
    - ["WindowsServiceLifecycle.java", "jenkins.exe"]
    - ["WindowsServiceLifecycle.java", "hudson.exe"]
    - ["WindowsServiceLifecycle.java", "jenkins.war"]
    - ["WindowsServiceLifecycle.java", "System.getenv(WINSW_EXECUTABLE)"]
    - ["WindowsServiceLifecycle.java", "System.getenv(BASE)"]
    - ["ExtensionList.java", "Place to store manually registered instances with the per-Hudson scope. {@link CopyOnWriteArrayList} is used here to support concurrent iterations and mutation."]
    - ["ExtensionList.java", "Place to store manually registered instances. The version of the constructor that omits this uses a new {@link Vector}, making the storage lifespan tied to the life of {@link ExtensionList}. If the manually registered instances are scoped to VM level, the caller should pass in a static list."]
    - ["ExtensionList.java", "Write access will put the instance into a legacy store."]
    - ["ExtensionList.java", "Places to store static-scope legacy instances."]
    - ["ExtensionList.java", "Exposed for the test harness to clear all legacy extension instances."]
    - ["BooleanParameterValue.java", "Exposes the name/value as an environment variable."]
    - ["BooleanParameterValue.java", "backward compatibility pre 1.345"]
    - ["ChoiceParameterDefinition.java", "Checks if parameterized build choices are valid."]
    - ["BuildStepListener.java", "nicolas.deloof@gmail.com"]
    - ["CheckPoint.java", "internalName"]
    - ["LogRecorder.java", "The file we save our configuration."]
    - ["LogRecorder.java", "Loads the settings from a file."]
    - ["LogRecorder.java", "Save the settings to a file."]
    - ["LogRecorder.java", "Accepts submission from the configuration page."]
    - ["LogRecorder.java", "Deletes this recorder, then go back to the parent."]
    - ["LogRecorder.java", "RSS feed for log entries."]
    - ["LogRecorder.java", "Access Control"]
    - ["AbstractModelObject.java", "req.setAttribute(exception, e);"]
    - ["AbstractModelObject.java", "req.setAttribute(message,message);"]
    - ["AbstractModelObject.java", "req.setAttribute(pre,true);"]
    - ["EnvironmentContributingAction.java", "Environment variables should be added to this map."]
    - ["CauseAction.java", "no CauseAction found, so add a copy of this one"]
    - ["CauseAction.java", "if we are being read in from an older version"]
    - ["LogRecorderManager.java", "redirect to the config screen"]
    - ["LogRecorderManager.java", "Loads the configuration from disk."]
    - ["LogRecorderManager.java", "cut off .xml"]
    - ["LogRecorderManager.java", "TODO: one URL for one log entry?"]
    - ["Cause.java", "User ID"]
    - ["Cause.java", "User display name"]
    - ["Cause.java", "User URL"]
    - ["Cause.java", "authenticationName"]
    - ["Cause.java", "upstreamUrl"]
    - ["Build.java", "not calling Executor.recordCauseOfInterruption here. We do that where this exception is consumed."]
    - ["Build.java", "tear down in reverse order"]
    - ["Build.java", "WARNING The return in the finally clause will trump any return before"]
    - ["Build.java", "at this point it's too late to mark the build as a failure, so ignore return value."]
    - ["Build.java", "someone asked build interruption, let stop the build before trying to run another build step"]
    - ["EnvironmentContributor.java", "Served from /env-vars.html"]
    - ["AllView.java", "there's no configuration page"]
    - ["AllView.java", "none of our business fixing as we can only safely fix the primary view"]
    - ["AllView.java", "the primary view is an AllView but using a non-default name"]
    - ["AllView.java", "bingo JENKINS-38606 detected"]
    - ["FreeStyleProject.java", "id:cactusman"]
    - ["DisplayNameListener.java", "the user renamed the job, but the old project name which is shown as the displayname if no displayname was set, has been set into the displayname field."]
    - ["DisplayNameListener.java", "to null as it was before"]
    - ["ComputerSet.java", "change userId too"]
    - ["ComputerSet.java", "send the browser to the config page"]
    - ["ComputerSet.java", "take the user back to the agent list top page"]
    - ["ComputerSet.java", "the descriptor didn't load? see JENKINS-15869"]
    - ["BuildTimelineWidget.java", "TODO instead render lazily"]
    - ["BuildTimelineWidget.java", "what to put in the description?"]
    - ["BuildTimelineWidget.java", "e.description = Longish description of event +r.getFullDisplayName();"]
    - ["BuildTimelineWidget.java", "e.durationEvent = true;"]
    - ["FingerprintMap.java", "fingerprint database"]
    - ["FingerprintMap.java", "illegal input"]
    - ["AdministrativeMonitor.java", "Requires ADMINISTER permission for any operation in here."]
    - ["AdministrativeMonitor.java", "URL binding to disable this monitor."]
    - ["AdministrativeMonitor.java", "Human-readable ID of this monitor, which needs to be unique within the system."]
    - ["AdministrativeMonitor.java", "This ID is used to remember persisted setting for this monitor, so the ID should remain consistent beyond the Hudson JVM lifespan."]
    - ["AdministrativeMonitor.java", "Returns the URL of this monitor, relative to the context path, like administrativeMonitor/foobar."]
    - ["FileParameterDefinition.java", "the requested file parameter wasn't uploaded"]
    - ["FileParameterDefinition.java", "capture the file to the server"]
    - ["Environment.java", "application server, a database reserved for the build"]
    - ["Environment.java", "exporting additional environment variables to the map"]
    - ["Environment.java", "you'll want to stop application server even if a build fails"]
    - ["Executor.java", "worth recording who did it"]
    - ["Executor.java", "avoid using User.get() to avoid deadlock."]
    - ["FullDuplexHttpChannel.java", "so that we can detect dead clients, periodically send something"]
    - ["FullDuplexHttpChannel.java", "this will cause the channel to abort and subsequently clean up"]
    - ["AbstractBuild.java", "The file path on the node that performed a build. Kept as a string since {@link FilePath} is not serializable into XML."]
    - ["AbstractBuild.java", "Name of the agent this project was built on. Null or  if built by the master. (null happens when we read old record that didn't have this information.)"]
    - ["AbstractBuild.java", "Version of Hudson that built this."]
    - ["AbstractBuild.java", "Builds up a set of variable names that contain sensitive values that should not be exposed. The expectation is that this set is populated with keys returned by {@link #getBuildVariables()} that should have their values masked for display purposes."]
    - ["AbstractBuild.java", "If we use this/executor/stop URL, it causes 404 if the build is already killed, as {@link #getExecutor()} returns null."]
    - ["JobParameterDefinition.java", "@Extension --- not live yet"]
    - ["Fingerprint.java", "We expose the data to Jenkins administrators in order to"]
    - ["Fingerprint.java", "The file we save our configuration."]
    - ["Fingerprint.java", "Fast check to avoid security context switches"]
    - ["Fingerprint.java", "To get the item existence fact, a user needs Item.DISCOVER for the item"]
    - ["DescriptorVisibilityFilter.java", "JENKINS-40545: throwing instead of logging so jelly can amend the actual jelly expression that failed."]
    - ["DescriptorVisibilityFilter.java", "the healthy path will never see this synchronized block"]
    - ["DescriptorVisibilityFilter.java", "Lazy initialization singleton for the map of bad filters. Should never be instantiated in a healthy instance."]
    - ["FingerprintCleanupThread.java", "get the fingerprint in the official map so have the changes visible to Jenkins"]
    - ["FingerprintCleanupThread.java", "otherwise the mutation made in FingerprintMap can override our trimming."]
    - ["FingerprintCleanupThread.java", "Scans the fingerprint database and remove old records that are no longer relevant."]
    - ["FingerprintCleanupThread.java", "A {@link Fingerprint} is removed when none of the builds that it point to is available in the records."]
    - ["Functions.java", "load static resources from the path dedicated to a specific version."]
    - ["Functions.java", "Checks if the current user is anonymous."]
    - ["Functions.java", "Try to infer this from the configured root URL."]
    - ["Functions.java", "Used by <f:password/> so that we send an encrypted value to the client."]
    - ["Functions.java", "Returns {@code true} if the {@link Run#ARTIFACTS} permission is enabled, {@code false} otherwise."]
    - ["Functions.java", "Returns {@code true} if the {@link Item#WIPEOUT} permission is enabled, {@code false} otherwise."]
    - ["Functions.java", "Advertises the minimum set of HTTP headers that assist programmatic discovery of Jenkins."]
    - ["Connection.java", "Cryptographic utility code."]
    - ["Connection.java", "Performs a Diffie-Hellman key exchange and produce a common secret between two ends of the connection."]
    - ["Connection.java", "DH is also useful as a coin-toss algorithm. Two parties get the same random number without trusting each other."]
    - ["Connection.java", "Upgrades a connection with transport encryption by the specified symmetric cipher."]
    - ["Connection.java", "Verifies that we are talking to a peer that actually owns the private key corresponding to the public key we get."]
    - ["Connection.java", "Used in conjunction with {@link #verifyIdentity(byte[])} to prove that we actually own the private key of the given key pair."]
    - ["Connection.java", "verify the identity of the server"]
    - ["Connection.java", "send a half and get a half"]
    - ["RunListener.java", "Can contribute additional properties/env vars to the environment."]
    - ["FileSystemProvisioner.java", "TODO: is this per {@link Computer}? Per {@link Job}?"]
    - ["FileSystemProvisioner.java", "Configuration mechanism. Should we auto-detect FileSystemProvisioner per OS? (but for example, zfs support would require the root access.)"]
    - ["FileSystemProvisioner.java", "when an agent connects, we auto-detect the file system provisioner. (for example, ZFS FSP would check the agent root user prop and/or attempt to pfexec zfs create and take over.)"]
    - ["FileSystemProvisioner.java", "TODO : the method needs to be able to see the snapshot would be later needed. In fact, perhaps we should only call this method when Hudson knows that a snapshot is later needed?"]
    - ["DependencyGraph.java", "Set full privileges while computing to avoid missing any projects the current user cannot see."]
    - ["DependencyGraph.java", "See http://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm"]
    - ["DependencyGraph.java", "The authentication in effect ({@link Jenkins#getAuthentication}) will be that of the upstream build."]
    - ["DependencyGraph.java", "An implementation is expected to perform any relevant access control checks: that an upstream project can both see and build a downstream project, or that a downstream project can see an upstream project."]
    - ["LabelFinder.java", "Signature of this class changed in 1.323, after making sure that no plugin in the Subversion repository is using this."]
    - ["ReverseProxySetupMonitor.java", "TODO this could also verify that j.getRootUrl() has been properly configured, and send a different message if not"]
    - ["ReverseProxySetupMonitor.java", "May need to send an absolute URL, since handling of HttpRedirect with a relative URL does not currently honor X-Forwarded-Proto/Port at all."]
    - ["ReverseProxySetupMonitor.java", "Depending on whether the user said yes or no, send him to the right place."]
    - ["ReverseProxySetupMonitor.java", "return true to always inject an HTML fragment to perform a test"]
    - ["ReverseProxySetupMonitor.java", "Looks out for a broken reverse proxy setup that doesn't rewrite the location header correctly."]
    - ["ReverseProxySetupMonitor.java", "Have the JavaScript make an AJAX call, to which we respond with 302 redirect. If the reverse proxy is done correctly, this will be handled by web methods, but otherwise we'll report that as an error. Unfortunately, {@code XmlHttpRequest} doesn't expose properties that allow the client-side JavaScript to learn the details of the failure, so we have to make do with limited information."]
    - ["ReverseProxySetupMonitor.java", "not using equals due to JENKINS-24014"]
    - ["ReverseProxySetupMonitor.java", "dismiss"]
    - ["ReverseProxySetupMonitor.java", "of course the irony is that this redirect won't work"]
    - ["LargeText.java", "when sending big text, try compression. don't bother if it's small"]
    - ["LargeText.java", "file doesn't exist yet"]
    - ["JobParameterValue.java", "Exposes the name/value as an environment variable."]
    - ["ExtensionFinder.java", "TODO: need to learn more about concurrent access to {@link Injector} and how it interacts with classloading."]
    - ["ExtensionFinder.java", "failing to load all bindings are disastrous, so recover by creating minimum that works by just including the core"]
    - ["ExtensionFinder.java", "expose Injector via lookup mechanism for interop with non-Guice clients"]
    - ["ExtensionFinder.java", "according to JDK-4993813 this is the only way to force class initialization"]
    - ["ExtensionFinder.java", "this method cannot be synchronized because of a dead lock possibility in the following order of events: 1. thread X can start listing indices, locking this object 'SZ' 2. thread Y starts loading a class, locking a classloader 'CL' 3. thread X needs to load a class, now blocked on CL 4. thread Y decides to load extensions, now blocked on SZ. 5. dead lock"]
    - ["ExtensionFinder.java", "make unique key, because Guice wants that."]
    - ["OldDataMonitor.java", "Need this path, at least for unit tests, but also in case of very broken startup"]
    - ["OldDataMonitor.java", "Startup failed, something is very broken, so report what we can."]
    - ["OldDataMonitor.java", "Note that there a race condition here: we acquire the lock and get localCopy which includes some project (say); then we go through our loop and save that project; then someone POSTs a new config.xml for the project with some old data, causing remove to be called and the project to be added to data (in the new version); then we hit the end of this method and the project is removed from data again, even though it again has old data."]
    - ["OldDataMonitor.java", "Depending on whether the user said yes or no, send him to the right place."]
    - ["Action.java", "http://www.sun.com/"]
    - ["Action.java", "/plugin/foo/abc.gif"]
    - ["Action.java", "/foo/bar/zot"]
    - ["Action.java", "/foo/bar/zot/xyz"]
    - ["Action.java", "/lib/hudson:actions"]
    - ["Action.java", "/ws/"]
    - ["Action.java", "/wipeOutWorkspace"]
    - ["LoadBalancer.java", "if we are quieting down, don't start anything new so that all executors will be eventually free."]
    - ["SCMPollListener.java", "TODO switch to Job"]
    - ["ModifiableItemGroup.java", "The request format follows that of {@code &lt;n:form xmlns:n=/lib/form>}."]
    - ["Hudson.java", "Checks if the current user (for which we are processing the current request) has the admin access."]
    - ["Hudson.java", "For a quick migration, use {@code Hudson.getInstance().getACL().hasPermission(Hudson.ADMINISTER)} To check if the user has the 'administer' role in Hudson."]
    - ["Hudson.java", "But ideally, your plugin should first identify a suitable {@link hudson.security.Permission} (or create one, if appropriate), then identify a suitable {@link hudson.security.AccessControlled} object to check its permission against."]
    - ["Hudson.java", "Define a custom {@link hudson.security.Permission} and check against ACL. See {@link #isAdmin()} for more instructions."]
    - ["LoadStatistics.java", "update statistics on agents"]
    - ["LoadStatistics.java", "update statistics of the entire system"]
    - ["ManagementLink.java", "http://server/hudson/manage"]
    - ["Items.java", "The file we save our configuration."]
    - ["Items.java", "group.getItems() is responsible for performing the permission check so we will not repeat it"]
    - ["Items.java", "slower path because the caller has switched authentication"]
    - ["Items.java", "we need to keep the original authentication so that allItems() can be used"]
    - ["Items.java", "Cannot hide its existence, so at least be as vague as possible."]
    - ["ItemListener.java", "At this point the data files of the job is already gone."]
    - ["ItemListener.java", "TODO JENKINS-21224 generalize this to a method perhaps in ExtensionList and use consistently from all listeners"]
    - ["NoFingerprintMatch.java", "md5sum"]
    - ["DirectoryBrowserSupport.java", "allow users to prevent sending this header by setting empty system property"]
    - ["DirectoryBrowserSupport.java", "the expected syntax is foo/bar/*zip*/bar.zip"]
    - ["DirectoryBrowserSupport.java", "In ZIP archives All slashes MUST be forward slashes (http://pkware.com/documents/casestudies/APPNOTE.TXT)"]
    - ["DirectoryBrowserSupport.java", "TODO On Linux file names can contain backslashes which should not treated as file separators."]
    - ["DirectoryBrowserSupport.java", "JENKINS-19947: traditional behavior is to prepend the directory name"]
    - ["DirectoryBrowserSupport.java", "TODO JENKINS-20663 make this overridable via query parameter"]
    - ["DirectoryBrowserSupport.java", "compatibility with Hudson<1.129"]
    - ["JDK.java", "Sets PATH and JAVA_HOME from this JDK."]
    - ["JDK.java", "Checks if the JAVA_HOME is a valid JAVA_HOME path."]
    - ["JDK.java", "see EnvVars javadoc for why this adds PATH."]
    - ["PaneStatusProperties.java", "@param paneId panel name"]
    - ["PaneStatusProperties.java", "@return the actual state of panel"]
    - ["AbstractItem.java", "Project name."]
    - ["AbstractItem.java", "Project description. Can be HTML."]
    - ["AbstractItem.java", "Gets the project description HTML."]
    - ["AbstractItem.java", "Sets the project description HTML."]
    - ["AbstractItem.java", "Accepts the new description."]
    - ["AbstractItem.java", "Accepts <tt>config.xml</tt> submission, as well as serve it."]
    - ["AbstractItem.java", "Writes {@code config.xml} to the specified output stream."]
    - ["AbstractItem.java", "Updates an Item by its XML definition."]
    - ["AbstractItem.java", "Reloads this job from the disk."]
    - ["AbstractItem.java", "Save the settings to a file."]
    - ["AbstractItem.java", "Deletes this item."]
    - ["AbstractItem.java", "Does the real job of deleting the item."]
    - ["Lifecycle.java", "when we are run by Solaris SMF, these environment variables are set."]
    - ["Lifecycle.java", "if run on Unix, we can do restart"]
    - ["Lifecycle.java", "Replaces jenkins.war by the given file."]
    - ["Lifecycle.java", "backing up the old jenkins.war before it gets lost due to upgrading"]
    - ["Lifecycle.java", "newly downloaded jenkins.war and 'backup' (jenkins.war.tmp) are the same files"]
    - ["Lifecycle.java", "unless we are trying to rewrite jenkins.war by a backup itself"]
    - ["Lifecycle.java", "we don't want to keep backup if we are downgrading"]
    - ["Lifecycle.java", "if we don't know where jenkins.war is, it's impossible to replace."]
    - ["PeriodicWork.java", "Math.abs(Long.MIN_VALUE)==Long.MIN_VALUE!"]
    - ["PeriodicWork.java", "start all PeriodicWorks"]
    - ["MultiStageTimeSeries.java", "Parses the {@link TimeScale} from the query parameter."]
    - ["MultiStageTimeSeries.java", "This object is renderable as HTTP response."]
    - ["MyView.java", "If the security is not enabled, there's no point in having this type of views."]
    - ["MyView.java", "there's no configuration page"]
    - ["MyView.java", "{@link View} that only contains projects for which the current user has access to."]
    - ["Api.java", "Used to expose remote access API for .../api/"]
    - ["Api.java", "If the parent object has a <tt>_api.jelly</tt> view, it will be included in the api index page."]
    - ["Api.java", "switch to gzipped output"]
    - ["Api.java", "apply XPath"]
    - ["Api.java", "otherwise XML"]
    - ["Api.java", "serve the whole thing"]
    - ["Api.java", "simple output prohibited"]
    - ["Api.java", "simple output allowed"]
    - ["Api.java", "apply exclusions"]
    - ["Api.java", "first write to String"]
    - ["Api.java", "Generate schema."]
    - ["Api.java", "Exposes the bean as JSON."]
    - ["Api.java", "Exposes the bean as Python literal."]
    - ["PasswordParameterValue.java", "kept for backward compatibility"]
    - ["PasswordParameterValue.java", "backward compatibility pre 1.345"]
    - ["ItemGroupMixIn.java", "AccessDeniedException2 does not permit a custom message, and anyway redirecting the user to the login screen is obviously pointless."]
    - ["ItemGroupMixIn.java", "if anything fails, delete the config file to avoid further confusion"]
    - ["ItemGroupMixIn.java", "place it as config.xml"]
    - ["ItemGroupMixIn.java", "copy config"]
    - ["ItemGroupMixIn.java", "reload from the new config"]
    - ["ItemGroupMixIn.java", "check if the name looks good"]
    - ["ItemGroupMixIn.java", "resolve a name to Item"]
    - ["ItemGroupMixIn.java", "create empty job and redirect to the project config screen"]
    - ["ItemGroupMixIn.java", "Try to retain the identity of an existing child object if we can."]
    - ["ParametersDefinitionProperty.java", "avoid open redirect"]
    - ["MyViewsProperty.java", "do not show when not logged in"]
    - ["MyViewsProperty.java", "Jenkins.getInstance().getViewActions() are tempting but they are in a wrong scope"]
    - ["PasswordParameterDefinition.java", "Parameter whose value is a {@link Secret} and is hidden from the UI."]
    - ["PasswordParameterDefinition.java", "used from Jelly"]
    - ["PasswordParameterDefinition.java", "kept for backward compatibility"]
    - ["HealthReport.java", "The path to the icon corresponding to this health score or <code>null</code> to use the default icon corresponding to the current health score."]
    - ["HealthReport.java", "If the path begins with a '/' then it will be the absolute path, otherwise the image is assumed to be in one of <code>/images/16x16/</code>, <code>/images/24x24/</code> or <code>/images/32x32/</code> depending on the icon size selected by the user."]
    - ["HealthReport.java", "When calculating the url to display for absolute paths, the getIconUrl(String) method will replace /32x32/ in the path with the appropriate size."]
    - ["HealthReport.java", "Get's the iconUrl relative to the hudson root url, for the correct size."]
    - ["HealthReport.java", "If we are being read back in from an older version"]
    - ["ParametersAction.java", "Treat it as untrusted data"]
    - ["ParametersAction.java", "SECURITY-170"]
    - ["ParametersAction.java", "SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME"]
    - ["ParametersAction.java", "KEEP_UNDEFINED_PARAMETERS_SYSTEM_PROPERTY_NAME"]
    - ["FileParameterValue.java", "Exposes the originalFileName as an environment variable."]
    - ["FileParameterValue.java", "The name of the originally uploaded file."]
    - ["FileParameterValue.java", "Compares file parameters (existing files will be considered as different). @since 1.586 Function has been modified in order to avoid <a href=https://jenkins-ci.org/issue/19017>JENKINS-19017</a> issue (wrong merge of builds in the queue)."]
    - ["FileParameterValue.java", "Overrides the location in the build to place this file. Initially set to {@link #getName()}"]
    - ["FileParameterValue.java", "Serve this file parameter in response to a {@link StaplerRequest}."]
    - ["FileParameterValue.java", "Default implementation from {@link File}."]
    - ["FileParameterValue.java", "TODO: check fingerprints or checksums to improve the behavior (JENKINS-25211)"]
    - ["BackFiller.java", "don't persist"]
    - ["BackFiller.java", "Once this feature stabilizes, move it to the heavyjob plugin"]
    - ["ParameterDefinition.java", "TODO: {@link ParameterValue} needs to have some mechanism to expose values to the build"]
    - ["ParameterDefinition.java", "TODO: what Jelly pages does this object need for rendering UI?"]
    - ["ParameterValue.java", "Instances of {@link ParameterValue}s are persisted into build's <tt>build.xml</tt> through XStream (via {@link ParametersAction}), so instances need to be persistable."]
    - ["ParameterValue.java", "Returns whether the information contained in this ParameterValue is sensitive or security related. Used to determine whether the value provided by this object should be masked in output."]
    - ["LabelAtom.java", "If the label contains 'unsafe' chars, escape them."]
    - ["LabelAtom.java", "return the read only list to cause a failure on plugins who try to add an action here"]
    - ["LabelAtom.java", "Don't want Label.ConverterImpl to be used:"]
    - ["LabelAtom.java", "class name is not ConverterImpl, to avoid getting picked up by AssociatedConverterImpl"]
    - ["LabelAtom.java", "additional restricted chars"]
    - ["WindowsInstallerLink.java", "Location of the jenkins.war."]
    - ["WindowsInstallerLink.java", "If the installation is completed, this value holds the installation directory."]
    - ["WindowsInstallerLink.java", "copy files over there"]
    - ["WindowsInstallerLink.java", "install as a service"]
    - ["WindowsInstallerLink.java", "installation was successful"]
    - ["WindowsInstallerLink.java", "this exception is used as a signal to terminate processing. the error should have been already reported"]
    - ["WindowsInstallerLink.java", "if the user reloads the page after Hudson has restarted, it comes back here. In such a case, don't let this restart Hudson."]
    - ["WindowsInstallerLink.java", "so just send them back to the top page"]
    - ["WindowsInstallerLink.java", "initiate an orderly shutdown after we finished serving this request"]
    - ["WindowsInstallerLink.java", "let the service start after we close our sockets, to avoid conflicts"]
    - ["WindowsInstallerLink.java", "we can't really move the exploded war."]
    - ["WindowsInstallerLink.java", "plugins can also fail to move"]
    - ["WindowsInstallerLink.java", "and this is how we know where is jenkins.war."]
    - ["WindowsInstallerLink.java", "in certain situations where we know the user is just trying Jenkins (like when Jenkins is launched from JNLP), also put this link on the navigation bar to increase visibility"]
    - ["WindowsInstallerLink.java", "error code 740 is ERROR_ELEVATION_REQUIRED, indicating that we run in UAC-enabled Windows and we need to run this in an elevated privilege"]
    - ["ResourceList.java", "Otherwise set it to a very large value, since it's read/write conflict"]
    - ["PageDecorator.java", "Convenient place for adding tracking beacons"]
    - ["PageDecorator.java", "Convenient place for additional stylesheet, <meta> tags"]
    - ["PageDecorator.java", "This fragment can write additional <st:header name=… value=…/> tags"]
    - ["PageDecorator.java", "Obtains the URL of this object, excluding the context path"]
    - ["ProxyView.java", "TODO: this does not respond to renaming or deleting the proxied view."]
    - ["ProxyView.java", "if this is a valid global view name, let's assume the user wants to show it"]
    - ["ProxyView.java", "just so we avoid errors just after creation"]
    - ["ProxyView.java", "Fails if a global view with the given name does not exist."]
    - ["ProxyView.java", "doesn't make sense to add a ProxyView to the global views"]
    - ["Label.java", "passing these causes an infinite loop - getTotalExecutors(),getBusyExecutors()"]
    - ["Label.java", "In a system without security this should be the same as {@code getTiedJobs().size()} but significantly faster as it involves fewer temporary objects and avoids sorting the intermediary list. In a system with security, this will likely return a higher value as it counts all jobs (mostly) irrespective of access."]
    - ["Label.java", "denormalize for performance"]
    - ["Label.java", "we don't need to respect security as much when returning a simple count"]
    - ["Label.java", "top level gives the map without checking security of items in the map therefore best performance"]
    - ["Label.java", "we run the risk of permissions checks in ItemGroup#getItems()"]
    - ["Label.java", "not much we can do here though"]
    - ["RunParameterValue.java", "Exposes the name/value as an environment variable."]
    - ["StringParameterDefinition.java", "Jelly"]
    - ["ResourceController.java", "TODO revalidate the resource list after re-acquiring lock, for now we just let the build fail"]
    - ["ResourceController.java", "we have a go"]
    - ["ResourceController.java", "TODO if AsynchronousExecution, do that later"]
    - ["RSS.java", "Don't allow path to any jelly"]
    - ["Tasks.java", "call {@link Task#getDefaultAuthentication(Item)} directly"]
    - ["Tasks.java", "call {@link Task#getDefaultAuthentication()} directly"]
    - ["Tasks.java", "call {@link hudson.model.Queue.Item#authenticate} directly"]
    - ["Node.java", "Jenkins doesn't try to start/remove this node until its configuration is saved once."]
    - ["Node.java", "Jenkins.getInstance() == null"]
    - ["Node.java", "Jenkins.getInstanceOrNull()"]
    - ["Node.java", "Jenkins.getInstance()"]
    - ["Node.java", "Jenkins.getInstance().getAuthorizationStrategy().getACL(this)"]
    - ["Node.java", "Jenkins.getInstance().getNumExecutors()"]
    - ["Node.java", "Jenkins.getInstance().getMode()"]
    - ["Node.java", "Jenkins.updateNode(this)"]
    - ["Node.java", "Jenkins#updateComputerList()"]
    - ["Node.java", "Jenkins.getInstance().getComputer(this)"]
    - ["StatusIcon.java", "context path"]
    - ["MappingWorksheet.java", "nodeAcl = node.getACL();"]
    - ["MappingWorksheet.java", "if (!nodeAcl.hasPermission(item.authenticate(), Computer.BUILD))"]
    - ["TextParameterValue.java", "mailto:rtorre@tuenti.com"]
    - ["QueueSorter.java", "someone has already installed something. leave that alone."]
    - ["TaskListener.java", "TODO Java 9 make private"]
    - ["TaskListener.java", "annotate(new HudsonExceptionNote()) if and when this is made to do something"]
    - ["StringParameterValue.java", "Exposes the name/value as an environment variable."]
    - ["StringParameterValue.java", "backward compatibility pre 1.345"]
    - ["StockStatusIcon.java", "Short file name like folder.gif that points to a stock icon in Hudson."]
    - ["StockStatusIcon.java", "Used as {@link #getDescription()}."]
    - ["RunMap.java", "TODO: before first complete build"]
    - ["RunMap.java", "patch up next/previous build link"]
    - ["RunMap.java", "if the build result file isn't in the directory, ignore it."]
    - ["TaskThread.java", "FIXME this failed to compile super(owner.getBuild().toString()+' '+owner.getDisplayName());"]
    - ["ViewDescriptor.java", "TODO do we need a permissions check here?"]
    - ["ViewProperty.java", "Configuration screen should be defined in <code>config.jelly</code>."]
    - ["AbstractNodeMonitorDescriptor.java", "notify the admin"]
    - ["RunParameterDefinition.java", "use getFilter() so we dont have to worry about null filter value."]
    - ["RunParameterDefinition.java", "delegate to updated constructor with additional RunParameterFilter parameter defaulted to ALL."]
    - ["RunParameterDefinition.java", "if filter is null, default to RunParameterFilter.ALL"]
    - ["RunParameterDefinition.java", "use getFilter() method so we dont have to worry about null filter value."]
    - ["DiskSpaceMonitor.java", "Hide this column from non-admins"]
    - ["ViewGroupMixIn.java", "JENKINS-38606: primary view is the default AllView, is somebody using an old link to localized form?"]
    - ["ViewGroupMixIn.java", "why yes they are, let's keep that link working"]
    - ["NodeMonitor.java", "Configuration fragment to be displayed in {@code http://server/hudson/computer/configure}."]
    - ["CauseOfBlockage.java", "Build is blocked because a node (or its retention strategy) is not accepting tasks."]
    - ["CauseOfBlockage.java", "Build is blocked because everyone that matches the specified label is fully busy"]
    - ["CauseOfBlockage.java", "Human readable description of why the build is blocked."]
    - ["CauseOfBlockage.java", "Report a line to the listener about this cause."]
    - ["CauseOfBlockage.java", "Build is blocked because a node is fully busy"]
    - ["CauseOfBlockage.java", "Marker interface to indicates that we can reasonably expect that adding a suitable executor/node will resolve this blockage."]
    - ["CauseOfBlockage.java", "Build is blocked because a node is offline."]
    - ["CauseOfBlockage.java", "Build is blocked because all the nodes that match a given label is offline."]
    - ["ListView.java", "Submitted via UI"]
    - ["ListView.java", "Submitted via API"]
    - ["ListView.java", "Query parameter 'name' is required"]
    - ["ListView.java", "Query parameter 'name' does not correspond to a known item"]
    - ["ListView.java", "Query parameter 'name' does not correspond to a known and readable item"]
    - ["ListView.java", "capture the value to isolate us from concurrent update"]
    - ["ListView.java", "do not hold ListView lock at the time"]
    - ["TreeView.java", "TODO: use ViewGroupMixIn"]
    - ["TreeView.java", "TODO listen for changes that might affect jobNames"]
    - ["TreeView.java", "this feature is not public yet"]
    - ["PosixException.java", "@deprecated Leaks reference to deprecated jna-posix API."]
    - ["PosixAPI.java", "TODO"]
    - ["TopLevelItemDescriptor.java", "will to live falling"]
    - ["TopLevelItemDescriptor.java", "we'll strip the icon-md to get the class name"]
    - ["TopLevelItemDescriptor.java", "here we go with the dance of the IconSet's"]
    - ["TopLevelItemDescriptor.java", "this one is easy... too easy... also will never happen"]
    - ["TopLevelItemDescriptor.java", "Oh the fun of somebody adding a legacy way of referencing images into 2.0 code"]
    - ["WorkUnitContext.java", "the one that executes the main thing will send notifications"]
    - ["WorkUnitContext.java", "+1 for the main task"]
    - ["WorkUnitContext.java", "If the execution is aborted, set to non-null that indicates where it was aborted."]
    - ["WorkUnitContext.java", "the main thread will send a notification"]
    - ["ViewJob.java", "In the very old version of Hudson, an external job submission was just creating files on the file system, so we needed to periodically reload the jobs from a file system to pick up new records."]
    - ["ViewJob.java", "We then switched to submission via HTTP, so this reloading is no longer necessary, so only do this when explicitly requested."]
    - ["Result.java", "The build was manually aborted."]
    - ["Result.java", "Is this a complete build - i.e. did it run to the end (not aborted)?"]
    - ["Result.java", "Combines two {@link Result}s and returns the worse one."]
    - ["Result.java", "Bigger numbers are worse."]
    - ["Result.java", "The build outcome."]
    - ["Result.java", "The build had a fatal error."]
    - ["Result.java", "The build had no errors."]
    - ["Result.java", "The build had some errors but they were not fatal."]
    - ["Result.java", "Default ball color for this status."]
    - ["Result.java", "The module was not built."]
    - ["TemporarySpaceMonitor.java", "Monitors the disk space of /tmp."]
    - ["TemporarySpaceMonitor.java", "Hide this column from non-admins"]
    - ["TemporarySpaceMonitor.java", "if the disk is really filled up we can't even create a single file, so calling File.createTempFile and figuring out the directory won't reliably work."]
    - ["AbstractDiskSpaceMonitor.java", "mark online (again), if free space is over threshold"]
    - ["AbstractDiskSpaceMonitor.java", "Marks the given node as offline if free disk space is below the configured threshold."]
    - ["AbstractDiskSpaceMonitor.java", "The free space threshold, below which the node monitor will be triggered. This is a human readable string representation as entered by the user, so that we can retain the original notation."]
    - ["AbstractDiskSpaceMonitor.java", "backward compatibility with the data format that didn't have 'freeSpaceThreshold'"]
    - ["PluginManagerStaplerOverride.java", "It is also possible to add/modify API calls coming via Stapler, but this requires caution."]
    - ["RestrictedSince.java", "Hudson version number that this restriction has started."]
    - ["Computer.java", "Files were used to be $JENKINS_ROOT/slave-NAME.log (and .1, .2, ...) but now they are at $JENKINS_ROOT/logs/slaves/NAME/slave.log (and .1, .2, ...)"]
    - ["Computer.java", "fetch the localized string for 'Disconnected By'"]
    - ["Computer.java", "regex to remove commented reason base string"]
    - ["Computer.java", "regex to remove non-commented reason base string"]
    - ["Computer.java", "this is a debug probe and may expose sensitive information"]
    - ["Computer.java", "flush here once so that even if the dump from the agent fails, the client gets some useful info"]
    - ["Computer.java", "The operation will fail if mkdir fails"]
    - ["Computer.java", "allow the administrator to manually specify the host name as a fallback. HUDSON-5373"]
    - ["Computer.java", "if a given name fails to parse on this host, we get this error"]
    - ["Computer.java", "This permission was historically scoped to this class albeit declared in Cloud. While deserializing, Jenkins loads the scope class to make sure the permission is initialized and registered. since Cloud class is used rather seldom, it might appear the permission does not exist. Referencing the permission from here to make sure it gets loaded."]
    - ["CronTabList.java", "just for form validation"]
    - ["Slave.java", "Path to the root of the workspace from the view point of this node, such as /hudson, this need not be absolute provided that the launcher establishes a consistent working directory, such as ./.jenkins-slave when used with an SSH launcher."]
    - ["Slave.java", "Command line to launch the agent, like ssh myslave java -jar /path/to/hudson-remoting.jar"]
    - ["Slave.java", "Prevent the access to war contents & prevent the folder escaping (SECURITY-195)"]
    - ["Slave.java", "see http://support.microsoft.com/kb/260519 and http://www.boutell.com/newfaq/creating/forcedownload.html"]
    - ["Slave.java", "agent has already existed"]
    - ["Slave.java", "Return id of user which created this agent"]
    - ["Slave.java", "Id of user which creates this agent {@link User}."]
    - ["ZFSProvisioner.java", "TODO: for now, only support agents that are already on ZFS."]
    - ["ZFSProvisioner.java", "nope. create a file system"]
    - ["ZFSProvisioner.java", "@deprecated as of 1.350"]
    - ["Proc.java", "https://jenkins.io/redirect/troubleshooting/process-leaked-file-descriptors"]
    - ["Proc.java", "https://jenkins-ci.org/issue/23271"]
    - ["AbstractScmTagAction.java", "tagForm.jelly"]
    - ["AbstractScmTagAction.java", "inProgress.jelly"]
    - ["BaseParser.java", "This property hashes tokens in the cron tab tokens like @daily so that they spread evenly."]
    - ["Hash.java", "MD5 is a part of JRE"]
    - ["Hash.java", "UTF-8 is mandatory"]
    - ["PluginFirstClassLoader.java", "classLoader which use first /WEB-INF/lib/*.jar and /WEB-INF/classes before core classLoader"]
    - ["PluginFirstClassLoader.java", "you must use the pluginFirstClassLoader true in the maven-hpi-plugin"]
    - ["PluginFirstClassLoader.java", "List of jar used by the plugin /WEB-INF/lib/*.jar and classes directory /WEB-INF/classes"]
    - ["RepositoryBrowser.java", "configuration information (such as the URL of the FishEye site)"]
    - ["RepositoryBrowser.java", "query parameters in URL"]
    - ["SCMDescriptor.java", "XStream may overwrite even the final field."]
    - ["SCMDescriptor.java", "causing the field to be persisted and overwritten on the load method."]
    - ["SU.java", "TODO: detect if the password didn't work"]
    - ["SU.java", "try sudo, in the hope that the user has the permission to do so without password"]
    - ["SU.java", "we won't be using password. this helps disambiguate empty password"]
    - ["SU.java", "try sudo with the given password. Also run in pfexec so that we can elevate the privileges"]
    - ["SU.java", "in solaris, pfexec never asks for a password, so username==null means"]
    - ["SU.java", "give some time for orderly shutdown, but don't block forever."]
    - ["SU.java", "TODO: perhaps use RunAs to run as an Administrator?"]
    - ["SCMRevisionState.java", "I can't really make this comparable because comparing two revision states often requires non-trivial computation and conversations with the repository (mainly to figure out which changes are insignificant and which are not.) So instead, here we opt to a design where we tell SCM upfront about what we are comparing against (baseline), and have it give us the new state and degree of change in PollingResult."]
    - ["SCMS.java", "JENKINS-36043 workaround for AbstractMultiBranchProject.submit"]
    - ["SearchFactory.java", "user-sensitive search"]
    - ["SearchFactory.java", "incoming HTTP response"]
    - ["SearchItem.java", "URL like foo or foo/bar. The path can end with '/'. The path that starts with '/' will be interpreted as the absolute path (within the context path of Jenkins.)"]
    - ["RepositoryBrowsers.java", "TODO: There was a TODO in the original code, which presumes passing something meaningful to the newInstance() JSON param"]
    - ["RepositoryBrowsers.java", "Now we just pass empty JSON in order to make the code compliant with the defined interface"]
    - ["ProxyConfiguration.java", "encrypted password"]
    - ["ProxyConfiguration.java", "Add an authenticator which provides the credentials for proxy authentication"]
    - ["ProxyConfiguration.java", "Possibly null proxy user name."]
    - ["ProxyConfiguration.java", "@return the password in plain text"]
    - ["ProxyConfiguration.java", "this code may run on a slave"]
    - ["ProxyConfiguration.java", "this code could be called between the JVM flag being set and theInstance initialized"]
    - ["ProxyConfiguration.java", "backward compatibility : get scrambled password and store it encrypted"]
    - ["ProxyConfiguration.java", "List of host names that shouldn't use proxy, as typed by users."]
    - ["AuthenticationManagerProxy.java", "fix the reference we are working with"]
    - ["AccessDeniedHandlerImpl.java", "Specifically, send 403 error code and the login page."]
    - ["CaptchaSupport.java", "Winston.Prakash@oracle.com"]
    - ["CliAuthenticator.java", "Vulnerable to JENKINS-12543"]
    - ["DownloadService.java", "URL to download."]
    - ["DownloadService.java", "URLs to download from."]
    - ["DownloadService.java", "How often do we retrieve the new image?"]
    - ["DownloadService.java", "This is where the retrieved file will be stored."]
    - ["DownloadService.java", "When shall we retrieve this file next time?"]
    - ["DownloadService.java", "Loads the current file into JSON and returns it, or null if no data exists."]
    - ["DownloadService.java", "This is where the browser sends us the data."]
    - ["DownloadService.java", "Install this listener to the Downloadable extension list after all extensions have been loaded; we only care about those that are added after initialization"]
    - ["DownloadService.java", "Look for Downloadables that have no data, and update them."]
    - ["DownloadService.java", "Represents a periodically updated JSON data file obtained from a remote URL."]
    - ["DownloadService.java", "URL relative to {@link UpdateCenter#getDefaultBaseUrl()}. So if this string is foo.json, the ultimate URL will be something like http://updates.jenkins-ci.org/updates/foo.json"]
    - ["DownloadService.java", "For security and privacy reasons, we don't allow the retrieval from random locations."]
    - ["DownloadService.java", "Uses the class name as an ID."]
    - ["DownloadService.java", "Function that takes multiple JSONObjects and returns a single one."]
    - ["DownloadService.java", "check if the list of update center entries has duplicates"]
    - ["DownloadService.java", "Returns all the registered {@link Downloadable}s."]
    - ["DownloadService.java", "Returns the {@link Downloadable} that has the given ID."]
    - ["DownloadService.java", "May be used to temporarily disable signature checking on {@link DownloadService} and {@link UpdateCenter}. Useful when upstream signatures are broken, such as due to expired certificates. Should only be used when {@link DownloadSettings#isUseBrowser}; disabling signature checks for in-browser downloads is <em>very dangerous</em> as unprivileged users could submit spoofed metadata!"]
    - ["Launcher.java", "Environment variable overrides"]
    - ["Launcher.java", "The censored portions will remain visible through /proc, pargs, process explorer, etc."]
    - ["WorkspaceCleanupThread.java", "children will typically have their own workspaces as subdirectories; probably no real workspace of its own"]
    - ["WorkspaceCleanupThread.java", "if younger than a month, keep it"]
    - ["WorkspaceCleanupThread.java", "How often the clean up should run. This is final as Jenkins will not reflect changes anyway."]
    - ["WorkspaceCleanupThread.java", "this is the active workspace. keep it."]
    - ["WorkspaceCleanupThread.java", "Could even invert master loop so that one FileCallable takes care of all known items."]
    - ["WorkspaceCleanupThread.java", "no such thing as TopLevelItemGroup, and ItemGroup offers no access to its type parameter"]
    - ["WorkspaceCleanupThread.java", "TODO could also be good to add checkbox that lets users configure a workspace to never be auto-cleaned."]
    - ["WorkspaceCleanupThread.java", "One remoting can execute exists, lastModified, and delete all at once."]
    - ["WorkspaceCleanupThread.java", "Number of days workspaces should be retained."]
    - ["WorkspaceCleanupThread.java", "Can be used to disable workspace clean up."]
    - ["WorkspaceCleanupThread.java", "offline, fine"]
    - ["WorkspaceCleanupThread.java", "TODO check instead for SCMTriggerItem:"]
    - ["WorkspaceCleanupThread.java", "TODO: the use of remoting is not optimal."]
    - ["WorkspaceCleanupThread.java", "Clean up old left-over workspaces from agents."]
    - ["UsageStatistics.java", "the rest of the data will be encrypted by this symmetric cipher"]
    - ["UsageStatistics.java", "place the symmetric key by encrypting it with asymmetric cipher"]
    - ["UsageStatistics.java", "Public key to encrypt the usage statistics"]
    - ["UsageStatistics.java", "Lazily computed {@link PublicKey} representation of {@link #keyImage}."]
    - ["UsageStatistics.java", "Creates an instance with a specific public key image."]
    - ["UsageStatistics.java", "json -> UTF-8 encode -> gzip -> encrypt -> base64 -> string"]
    - ["UsageStatistics.java", "Gets the encrypted usage stat data to be sent to the Hudson server."]
    - ["UsageStatistics.java", "Asymmetric cipher is slow and in case of Sun RSA implementation it can only encrypt the first block."]
    - ["UsageStatistics.java", "So first create a symmetric key, then place this key in the beginning of the stream by encrypting it with the asymmetric cipher. The rest of the stream will be encrypted by a symmetric cipher."]
    - ["UsageStatistics.java", "first read the symmetric key cipher"]
    - ["UsageStatistics.java", "the rest of the data will be decrypted by this symmetric cipher"]
    - ["AccessControlled.java", "Convenient short-cut for {@code getACL().checkPermission(permission)}"]
    - ["AccessControlled.java", "Convenient short-cut for {@code getACL().hasPermission(permission)}"]
    - ["AccessControlled.java", "Convenient short-cut for {@code getACL().hasPermission(a, permission)}"]
    - ["AccessControlled.java", "Object that has an {@link ACL}"]
    - ["CrumbIssuerDescriptor.java", "salt"]
    - ["CrumbIssuerDescriptor.java", "crumbRequestField"]
    - ["ACL.java", "The username for the anonymous user"]
    - ["ACL.java", "The username for the system user"]
    - ["ChainedServletFilter.java", "reached to the end"]
    - ["ChainedServletFilter.java", "call next"]
    - ["ChainedServletFilter.java", "capture the array for thread-safety"]
    - ["DefaultCrumbIssuer.java", "A crumb issuing algorithm based on the request principal and the remote address."]
    - ["DefaultCrumbIssuer.java", "String.equals() is not constant-time, but this is"]
    - ["DefaultCrumbIssuer.java", "This state is prohibited according to the Javadoc of the super method."]
    - ["GlobalCrumbIssuerConfiguration.java", "for compatibility reasons, the actual value is stored in Jenkins"]
    - ["GlobalCrumbIssuerConfiguration.java", "immediately after the security setting"]
    - ["FederatedLoginServiceUserProperty.java", "Remembers identifiers given by {@link FederatedLoginService} to this user."]
    - ["FederatedLoginServiceUserProperty.java", "See {@link FederatedLoginService} for what identifier exactly means"]
    - ["AccessDeniedException2.java", "This object represents the user being authenticated."]
    - ["AccessDeniedException2.java", "This object represents the permission that the user needed."]
    - ["AccessDeniedException2.java", "If true, report {@code X-You-Are-In-Group} headers. Disabled due to JENKINS-39402; use {@code /whoAmI} etc. to diagnose permission issues."]
    - ["AccessDeniedException2.java", "Reports the details of the access failure in HTTP headers to assist diagnosis."]
    - ["AccessDeniedException2.java", "Reports the details of the access failure. This method is similar to {@link #reportAsHeaders(HttpServletResponse)} for the intention but instead of using HTTP headers, this version is meant to go inside the payload."]
    - ["HttpSessionContextIntegrationFilter2.java", "don't let Acegi see invalid security context"]
    - ["HttpSessionContextIntegrationFilter2.java", "Erases the {@link SecurityContext} persisted in {@link HttpSession} if {@link InvalidatableUserDetails#isInvalid()} returns true."]
    - ["LegacyAuthorizationStrategy.java", "new GrantedAuthoritySid(admin)"]
    - ["LegacyAuthorizationStrategy.java", "return Collections.singleton(admin)"]
    - ["ContainerAuthentication.java", "for anonymous users, we just don't call SecurityContextHolder.getContext().setAuthentication."]
    - ["ContainerAuthentication.java", "Servlet container can tie a {@link ServletRequest} to the request handling thread, so we need to capture all the information upfront to allow {@link Authentication} to be passed to other threads, like update center does. See HUDSON-5382."]
    - ["ContainerAuthentication.java", "Servlet API doesn't provide a way to list up all roles the current user has, so we need to ask AuthorizationStrategy what roles it is going to check against."]
    - ["GlobalSecurityConfiguration.java", "for compatibility reasons, the actual value is stored in Jenkins"]
    - ["GlobalSecurityConfiguration.java", "persist all the additional security configs"]
    - ["GlobalSecurityConfiguration.java", "Agent settings"]
    - ["GlobalSecurityConfiguration.java", "Security configuration. For historical reasons, most of the actual configuration values are stored in {@link Jenkins}."]
    - ["AbstractPasswordBasedSecurityRealm.java", "username/password based authentication"]
    - ["AbstractPasswordBasedSecurityRealm.java", "username/password information"]
    - ["AbstractPasswordBasedSecurityRealm.java", "User name to authenticate yourself to Jenkins"]
    - ["AbstractPasswordBasedSecurityRealm.java", "Password for authentication. Note that passing a password in arguments is insecure."]
    - ["AbstractPasswordBasedSecurityRealm.java", "File that contains the password"]
    - ["AbstractPasswordBasedSecurityRealm.java", "If the user name and the password pair matches"]
    - ["AbstractPasswordBasedSecurityRealm.java", "e-mail address"]
    - ["AbstractPasswordBasedSecurityRealm.java", "If the user name and the password pair doesn't match"]
    - ["AbstractPasswordBasedSecurityRealm.java", "authentication is assumed to be done already in the retrieveUser method"]
    - ["AbstractPasswordBasedSecurityRealm.java", "Asks for the password."]
    - ["BasicAuthenticationFilter.java", "authenticate the user"]
    - ["BasicAuthenticationFilter.java", "attempt to authenticate as API token"]
    - ["BasicAuthenticationFilter.java", "create is true as the user may not have been saved and the default api token may be in use."]
    - ["BasicAuthenticationFilter.java", "validation of the user will be performed against the underlying realm in impersonate."]
    - ["BasicAuthenticationFilter.java", "normal requests, or security not enabled"]
    - ["BasicAuthenticationFilter.java", "before we route this request, integrate the container authentication"]
    - ["BasicAuthenticationFilter.java", "to Acegi. For anonymous users that doesn't have user principal,"]
    - ["BasicAuthenticationFilter.java", "AnonymousProcessingFilter that follows this should create"]
    - ["BasicAuthenticationFilter.java", "an Authentication object."]
    - ["BasicAuthenticationFilter.java", "prepare a redirect"]
    - ["BasicAuthenticationFilter.java", "... but first let the container authenticate this request"]
    - ["LegacySecurityRealm.java", "To have the username/password authenticated by the container, submit the form to the URL defined by the servlet spec."]
    - ["LegacySecurityRealm.java", "Filter to run for the LegacySecurityRealm is the ChainServletFilter legacy from /WEB-INF/security/SecurityFilters.groovy."]
    - ["Permission.java", "if some plugin serialized old version of this class using XStream, `id` can be null"]
    - ["Permission.java", "force the initialization so that it will put all its permissions into the list."]
    - ["PermissionAdder.java", "make the first user created in the system be automatically granted administer privilege"]
    - ["PermissionAdder.java", "give a user global permission"]
    - ["HudsonAuthenticationEntryPoint.java", "container authentication normally relies on session attribute to"]
    - ["HudsonAuthenticationEntryPoint.java", "report the diagnosis information if possible"]
    - ["HudsonAuthenticationEntryPoint.java", "See http://support.microsoft.com/kb/294807"]
    - ["FullControlOnceLoggedInAuthorizationStrategy.java", "Whether to allow anonymous read access, for backward compatibility
     * default is to allow it"]
    - ["FullControlOnceLoggedInAuthorizationStrategy.java", "If true, anonymous read access will be allowed"]
    - ["FullControlOnceLoggedInAuthorizationStrategy.java", "@deprecated as of 1.643
     *      Inject descriptor via {@link Inject}."]
    - ["DeferredCreationLdapAuthoritiesPopulator.java", "A default role which will be assigned to all authenticated users if set."]
    - ["DeferredCreationLdapAuthoritiesPopulator.java", "The ID of the attribute which contains the role name for a group"]
    - ["DeferredCreationLdapAuthoritiesPopulator.java", "An initial context factory is only required if searching for groups is required."]
    - ["DeferredCreationLdapAuthoritiesPopulator.java", "The base DN from which the search for group membership should be performed"]
    - ["DeferredCreationLdapAuthoritiesPopulator.java", "The pattern to be used for the user search. {0} is the user's DN"]
    - ["RememberMeServicesProxy.java", "ConfidentialStore"]
    - ["SparseACL.java", "Access control list."]
    - ["SparseACL.java", "Parent to delegate to. Can be null."]
    - ["SparseACL.java", "the ultimate default is to reject everything"]
    - ["UserDetailsServiceProxy.java", "fix the reference for concurrency support"]
    - ["UserMayOrMayNotExistException.java", "security realm is on top of the servlet implementation"]
    - ["AbstractCloudSlave.java", "TODO: send the output to somewhere real"]
    - ["WhoAmI.java", "Expose the data needed for /whoAmI, so it can be exposed by Api."]
    - ["Job.java", "this should have been DescribableList but now it's too late"]
    - ["Job.java", "starting 1.28, we store nextBuildNumber in a separate file."]
    - ["Job.java", "but old Hudson didn't do it, so if the file doesn't exist, assume that nextBuildNumber was read from config.xml"]
    - ["Job.java", "From the old Hudson, or doCreateItem. Create this file now."]
    - ["Job.java", "check this error early to avoid HTTP response splitting."]
    - ["Job.java", "we need to get computer environment to inherit platform details"]
    - ["Job.java", "servlet container may have set CLASSPATH in its launch script, so don't let that inherit to the new child process."]
    - ["Job.java", "apply them in a reverse order so that higher ordinal ones can modify values added by lower ordinal ones"]
    - ["Job.java", "rename is essentially delete followed by a create"]
    - ["Job.java", "send to the new job page note we can't use getUrl() because that would pick up old name in the Ancestor.getUrl()"]
    - ["Job.java", "OK builds are stored somewhere outside of the item's root, so none of the other move operations has probably moved it. So let's try even though we lack some information"]
    - ["Job.java", "we use the null check variant so that people can write true unit tests with a mock ItemParent and without a JenkinsRule. Such tests are of limited utility as there is a high risk of hitting some code that needs the singleton, but for persistence migration test cases it makes sense to permit"]
    - ["Job.java", "no failures, like ever"]
    - ["Job.java", "this should catch the case where totalCount == 1 as failCount must be between 0 and totalCount and we can't get here if failCount == 0"]
    - ["Job.java", "do nothing as these are inconclusive statuses"]
    - ["Job.java", "store the cache"]
    - ["Job.java", "check the cache"]
    - ["Job.java", "a save, which will clear the holdOffBuildUntilUserSave and causing a regression of JENKINS-2494"]
    - ["Job.java", "HUDSON-2682 workaround for Eclipse compilation bug on (c instanceof ChartLabel)"]
    - ["Job.java", "TODO: consider gradation. See http://www.javadrive.jp/java2d/shape/index9.html"]
    - ["Job.java", "not sure what would be really useful here. This needs more thoughts. for the time being, I'm starting with permalinks"]
    - ["Job.java", "we can give a simple view of build health from the last five builds"]
    - ["Job.java", "User has Read permissions for existing job with the same name"]
    - ["CloudRetentionStrategy.java", "Try to connect to it ASAP."]
    - ["ComputerConnector.java", "The host name / IP address of the machine to connect to."]
    - ["Channels.java", "TODO: what to pass as a context?"]
    - ["Channels.java", "use -cp + FQCN instead of -jar since remoting.jar can be rebundled (like in the case of the swarm plugin.)"]
    - ["ComputerLauncher.java", "This page will be rendered into the top page of the computer (/computer/NAME/)"]
    - ["TokenBasedRememberMeServices2.java", "if we can mark the cookie HTTP only, do so to protect this cookie even in case of XSS vulnerability."]
    - ["TokenBasedRememberMeServices2.java", "TODO log warning when receiving remember-me request despite the feature being disabled?"]
    - ["TokenBasedRememberMeServices2.java", "whether the login is done over HTTPS or not would be a good enough approximation of whether Jenkins runs in HTTPS or not, so use that."]
    - ["TokenBasedRememberMeServices2.java", "if the user is running Jenkins over HTTPS, we also want to prevent the cookie from leaking in HTTP."]
    - ["TokenBasedRememberMeServices2.java", "Used to compute the token signature securely."]
    - ["DumbSlave.java", "/*because this is in effect the canonical slave type*/"]
    - ["Cloud.java", "EC2 instance ID"]
    - ["Cloud.java", "URL path token"]
    - ["HudsonFilter.java", "see HUDSON-4592. In some containers this happens before Hudson is starting up."]
    - ["HudsonFilter.java", "this is not the best place to do it, but doing it here makes the patch smaller."]
    - ["HudsonFilter.java", "even when security setting is reconfigured."]
    - ["HudsonFilter.java", "the whole thing fail hard before a nicer error check in WebAppMain.contextInitialized. So for now, this is how we make us available to the rest of Hudson."]
    - ["HudsonFilter.java", "just report it here, and let the WebAppMain handle the failure gracefully."]
    - ["HudsonFilter.java", "no security related filter needed."]
    - ["HudsonFilter.java", "The {@link #init(FilterConfig)} may be called before the Jenkins instance is up (which is required for initialization of the filter).  So we store the filterConfig for later lazy-initialization of the filter."]
    - ["HudsonFilter.java", "make sure this.filter is always a valid filter."]
    - ["HudsonFilter.java", "to deal with concurrency, we need to capture the object."]
    - ["HudsonFilter.java", "looks like we are initialized after Hudson came into being. initialize it now. See #3069"]
    - ["NodeDescriptor.java", "http://server/hudson/computers/new"]
    - ["ComputerRetentionWork.java", "at the moment I don't trust strategies to wait more than 60 minutes"]
    - ["ComputerRetentionWork.java", "strategies need to wait at least one minute"]
    - ["ComputerRetentionWork.java", "MINS->MILLIS"]
    - ["User.java", "The file we save our configuration."]
    - ["User.java", "The URL of the user page."]
    - ["User.java", "Used to load/save user configuration."]
    - ["User.java", "Exposed remote API."]
    - ["User.java", "Gets the directory where Hudson stores user information."]
    - ["User.java", "Deletes this user from Hudson."]
    - ["User.java", "This lock is used to guard access to the {@link AllUsers#byName} map. Use {@link java.util.concurrent.locks.ReadWriteLock#readLock()} for normal access and {@link java.util.concurrent.locks.ReadWriteLock#writeLock()} for {@link #rekey()} or any other operation that requires operating on the map as a whole."]
    - ["User.java", "Gets list of Illegal usernames, for which users should not be created. Always includes users from {@link #ILLEGAL_PERSISTED_USERNAMES}"]
    - ["User.java", "TODO: This method is designed for further extensibility via system properties. To be extended in a follow-up issue"]
    - ["User.java", "Per-{@link Jenkins} holder of all known {@link User}s."]
    - ["User.java", "Keyed by {@link User#id}. This map is used to ensure singleton-per-id semantics of {@link User} objects. The key needs to be generated by {@link IdStrategy#keyFor(String)}."]
    - ["User.java", "Resolve user ID from full name"]
    - ["User.java", "Tries to verify if an ID is valid. If so, we do not want to even consider users who might have the same full name."]
    - ["User.java", "Jenkins now refuses to let the user login if he/she doesn't exist in {@link SecurityRealm}, which was necessary to make sure users removed from the backend will get removed from the frontend. Unfortunately this infringed some legitimate use cases of creating Jenkins-local users for automation purposes. This escape hatch switch can be enabled to resurrect that behaviour. JENKINS-22346."]
    - ["User.java", "Jenkins historically created a (usually) ephemeral user record when an user with Overall/Administer permission accesses a /user/arbitraryName URL. Unfortunately this constitutes a CSRF vulnerability, as malicious users can make admins create arbitrary numbers of ephemeral user records, so the behavior was changed in Jenkins 2.TODO / 2.32.2. As some users may be relying on the previous behavior, setting this to true restores the previous behavior. This is not recommended. SECURITY-406."]
    - ["NodeList.java", "make sure that all names are unique"]
    - ["EnvironmentVariablesNodeProperty.java", "yes, I know this is a hack."]
    - ["EnvironmentVariablesNodeProperty.java", "we're on a node configuration page, show show that help page"]
    - ["EnvironmentVariablesNodeProperty.java", "show the help for the global config page"]
    - ["EnvironmentVariablesNodeProperty.java", "Agent-specific environment variables"]
    - ["SecurityRealm.java", "create our default TokenBasedRememberMeServices, which depends on the availability of the secret key"]
    - ["SecurityRealm.java", "TokenBasedRememberMeServices needs to be used in conjunction with RememberMeAuthenticationProvider, and both needs to use the same key (this is a reflection of a poor design in AcgeiSecurity, if you ask me) and various security plugins have its own groovy script that configures them. So if we change this, it creates a painful situation for those plugins by forcing them to choose to work with earlier version of Jenkins or newer version of Jenkins, and not both. So we keep this here."]
    - ["SecurityRealm.java", "reset remember-me cookie"]
    - ["SecurityRealm.java", "source: https://stackoverflow.com/a/3414217"]
    - ["NodePropertyDescriptor.java", "preserve legacy behaviour, even if brain-dead stupid, where applying to Jenkins was the discriminator"]
    - ["NodePropertyDescriptor.java", "note that it would be a mistake to assume Jenkins.getInstance().getClass() == Jenkins.class"]
    - ["NodePropertyDescriptor.java", "the groovy code tested against app.class, so we replicate that exact logic."]
    - ["ChannelPinger.java", "if interval wasn't set we read the deprecated property in minutes"]
    - ["ChannelPinger.java", "Disassociate computer channel before closing it"]
    - ["ChannelPinger.java", "make sure the ping thread is terminated"]
    - ["ChannelPinger.java", "Keep in a separate method so we do not even try to do class loading on {@link PingFailureAnalyzer} from an agent JVM."]
    - ["ChannelPinger.java", "set up ping from both directions, so that in case of a router dropping a connection, both sides can notice it and take compensation actions."]
    - ["SimpleScheduledRetentionStrategy.java", "no need to get the queue lock as the user has selected the break builds option!"]
    - ["ConnectionActivityMonitor.java", "haven't heard from this agent for a while."]
    - ["ConnectionActivityMonitor.java", "send a ping. if we receive a reply, it will be reflected in the next getLastHeard() call."]
    - ["ConnectionActivityMonitor.java", "we are receiving data nicely"]
    - ["ConnectionActivityMonitor.java", "disabled by default until proven in the production"]
    - ["BatchFile.java", "Performs on-the-fly validation of the errorlevel."]
    - ["JNLPLauncher.java", "specify the host:port here. This can include the special syntax host: and :port to indicate the default host/port shall be used."]
    - ["JNLPLauncher.java", "https://github.com/search?q=org%3Ajenkinsci+%22extends+JNLPLauncher%22&type=Code"]
    - ["JNLPLauncher.java", "TODO: Enable workDir by default in API? Otherwise classes inheriting from JNLPLauncher will need to enable the feature by default as well."]
    - ["PermissionGroup.java", "Gets the {@link PermissionGroup} whose {@link PermissionGroup#owner} is the given class."]
    - ["PermissionGroup.java", "Human readable title of this permission group."]
    - ["PermissionGroup.java", "Returns all the {@link PermissionGroup}s available in the system."]
    - ["PermissionGroup.java", "Both creates a registers a new permission group."]
    - ["PermissionGroup.java", "Finds a permission that has the given name."]
    - ["PermissionGroup.java", "Lists up all the permissions in this group."]
    - ["PermissionGroup.java", "Group of {@link Permission}s that share the same {@link Permission#owner owner}."]
    - ["PermissionGroup.java", "All the permissions in the system, keyed by their owners."]
    - ["ArtifactArchiver.java", "Message is not enough as that is the filename only"]
    - ["ArtifactArchiver.java", "no other reason to be here"]
    - ["OfflineCause.java", "Storing the User in a filed was a mistake, switch to userId"]
    - ["OfflineCause.java", "The user field is not properly deserialized so id may be missing. Look the user up by fullname"]
    - ["OfflineCause.java", "null when unknown"]
    - ["WorkspaceList.java", "It may also be used for security-sensitive files which {@link DirectoryBrowserSupport} ought not serve"]
    - ["Builder.java", "these two methods need to remain to keep binary compatibility with plugins built with Hudson < 1.150"]
    - ["UpdateSite.java", "Source of the update center information, like http://jenkins-ci.org/update-center.json"]
    - ["UpdateSite.java", "Path to <tt>update-center.json</tt>, like <tt>http://jenkins-ci.org/update-center.json</tt>"]
    - ["UpdateSite.java", "Exposed to get rid of hardcoding of the URL that serves up update-center.json in Javascript."]
    - ["UpdateSite.java", "URL which exposes the metadata location in a specific update site."]
    - ["UpdateSite.java", "This is the endpoint that receives the update center data file from the browser."]
    - ["UpdateSite.java", "Gets a URL for the Internet connection check."]
    - ["UpdateSite.java", "If this is non-null, Jenkins is going to check the connectivity to this URL to make sure the network connection is up. Null to skip the check."]
    - ["UpdateSite.java", "The base64 encoded binary SHA-1 checksum of the file."]
    - ["UpdateSite.java", "Verifies the signature in the update center data file."]
    - ["UpdateSite.java", "Let sub-classes of UpdateSite provide their own signature validator."]
    - ["UpdateSite.java", "The {@link UpdateSite} ID."]
    - ["UpdateSite.java", "ID string for this update source."]
    - ["UpdateSite.java", "The globally unique ID of this warning."]
    - ["BuildWrappers.java", "old BuildWrapper that doesn't implement BuildWrapperDescriptor"]
    - ["BuildWrapper.java", "sensitive build variables"]
    - ["BuildWrapper.java", "suppress a single password"]
    - ["Publisher.java", "for compatibility, if the descriptor is manually registered in a specific way, detect that."]
    - ["Publisher.java", "for backward compatibility, the signature is not BuildStepDescriptor"]
    - ["Shell.java", "Executable requires admin permission"]
    - ["CommandInterpreter.java", "on Windows environment variables are converted to all upper case, but no such conversions are done on Unix, so to make this cross-platform, convert variables to all upper cases."]
    - ["CommandInterpreter.java", "JENKINS-5073"]
    - ["SidACL.java", "SYSTEM user has full access"]
    - ["SidACL.java", "default to rejection"]
    - ["SidACL.java", "ACL entries for this principal takes precedence"]
    - ["SidACL.java", "after that, we check if the groups this principal belongs to"]
    - ["SidACL.java", "permissions granted to 'everyone' and 'anonymous' users are granted to everyone"]
    - ["SidACL.java", "hmm..."]
    - ["SidACL.java", "Creates a new {@link SidACL} that first consults 'this' {@link SidACL} and then delegate to the given parent {@link SidACL}. By doing this at the {@link SidACL} level and not at the {@link ACL} level, this allows the child ACLs to have an explicit deny entry. Note that the combined ACL calls hasPermission(Sid,Permission) in the child and parent SidACLs directly, so if these override _hasPermission then this custom behavior will not be applied."]
    - ["BuildTrigger.java", "Require CONFIGURE permission on this project"]
    - ["BuildTrigger.java", "check whether the supposed user is expected to be able to build"]
    - ["BuildTrigger.java", "update BuildTrigger of other projects that point to this object"]
    - ["BuildTrigger.java", "can't we generalize this?"]
    - ["BatchCommandInstaller.java", "Installs tool via script execution of Batch script."]
    - ["UserNameResolver.java", "All registered {@link UserNameResolver} implementations."]
    - ["UserNameResolver.java", "Finds full name of the given user."]
    - ["UserNameResolver.java", "Finds full name off the user when none is specified."]
    - ["UserNameResolver.java", "Returns all the registered {@link UserNameResolver} descriptors."]
    - ["UserAvatarResolver.java", "Jenkins.getInstance().getRootUrl()"]
    - ["CommandInstaller.java", "Installs a tool by running an arbitrary shell command."]
    - ["InstallSourceProperty.java", "TODO: get the proper Saveable"]
    - ["Fingerprinter.java", "Need to log in to access this job, so ignore"]
    - ["Fingerprinter.java", "consider the file to be produced by this build only if the timestamp is newer than when the build has started. 2000ms is an error margin since since VFAT only retains timestamp at 2sec precision"]
    - ["Fingerprinter.java", "for historical reasons this setup is done in the constructor instead"]
    - ["Fingerprinter.java", "From file name to the digest."]
    - ["Fingerprinter.java", "Map from file names of the fingerprinted file to its fingerprint record."]
    - ["Fingerprinter.java", "Obtains the raw data."]
    - ["DownloadFromUrlInstaller.java", "http://archive.apache.org/dist/ant/binaries/jakarta-ant-1.1.zip"]
    - ["DownloadFromUrlInstaller.java", "expected.child(.installedFrom).write(inst.url,UTF-8)"]
    - ["TcpSlaveAgentListener.java", "authentication cookie and any other required cookies (JSESSIONID, etc.)"]
    - ["TcpSlaveAgentListener.java", "Base64 encoded public key"]
    - ["TcpSlaveAgentListener.java", "password-protected path"]
    - ["ZipExtractionInstaller.java", "URL of a ZIP file which should be downloaded in case the tool is missing."]
    - ["AbstractCommandInstaller.java", "TODO support Unix scripts with interpreter line (see Shell.buildCommandLine)"]
    - ["NodeProvisioner.java", "do the removal based on instance identity not equality"]
    - ["NodeProvisioner.java", "We need to get the lock on Queue for two reasons"]
    - ["NodeProvisioner.java", "clean up the cancelled launch activity, then count the # of executors that we are about to bring up."]
    - ["NodeProvisioner.java", "since we confirmed that the future is already done"]
    - ["NodeProvisioner.java", "we are not supposed to try and recover from Errors"]
    - ["NodeProvisioner.java", "Just log it"]
    - ["NodeProvisioner.java", "the contract for List.remove(o) is that the first element i where (o==null ? get(i)==null : o.equals(get(i))) is true will be removed from the list"]
    - ["NodeProvisioner.java", "since PlannedNode.equals(o) is not final and we cannot assume that subclasses do not override with an equals which does not assure object identity comparison, we need to manually do the removal based on instance identity not equality"]
    - ["NodeProvisioner.java", "ExecutionException: ignore, this will be caught by others later"]
    - ["NodeProvisioner.java", "InterruptedException: should never happen as we were told the future was done"]
    - ["NodeProvisioner.java", "consider displaying reasons in a future cloud ux"]
    - ["NodeProvisioner.java", "the exponential smoothing will delay the build unnecessarily"]
    - ["NodeProvisioner.java", "we don't want to allocate two nodes but just one."]
    - ["NodeProvisioner.java", "so the threshold here is 1-MARGIN, and hence floor(excessWorkload+MARGIN) is needed to handle this."]
    - ["NodeProvisioner.java", "defensively ensure that the threshold margin is in (0,1)"]
    - ["NodeProvisioner.java", "TODO: picker should be selectable"]
    - ["ToolInstaller.java", "the url of the release"]
    - ["ToolInstaller.java", "the id of the of the release entry"]
    - ["ToolInstaller.java", "the name of the release entry"]
    - ["SafeTimerTask.java", "background activity gets system credential"]
    - ["SafeTimerTask.java", "just like executors get it"]
    - ["ToolDescriptor.java", "this can be used to check the existence of a file on the server, so needs to be protected"]
    - ["ToolDescriptor.java", "TODO: Get rid of it?"]
    - ["ToolDescriptor.java", "It's unsafe according to http://stackoverflow.com/questions/2927391/whats-the-reason-i-cant-create-generic-array-types-in-java"]
    - ["TimerTrigger.java", "backward compatibility"]
    - ["TimerTrigger.java", "Performs syntax check."]
    - ["ToolLocationNodeProperty.java", "node-specific configuration takes precedence"]
    - ["ToolLocationNodeProperty.java", "consult translators"]
    - ["ToolLocationNodeProperty.java", "fall back is no-op"]
    - ["ToolLocationNodeProperty.java", "TODO this was mistakenly made to be the ToolDescriptor class name, rather than .id as you would expect; now baked into serial form"]
    - ["UDPBroadcastThread.java", "prepare a response"]
    - ["UDPBroadcastThread.java", "Multicast socket address."]
    - ["FederatedLoginService.java", "Gets the e-mail address of this user, like abc@def.com"]
    - ["FederatedLoginService.java", "Locates the user who owns this identifier."]
    - ["FederatedLoginService.java", "Gets a short ID of this user, as a suitable candidate for {@link User#getId()}. This should be Unix username like token."]
    - ["FederatedLoginService.java", "Abstraction for a login mechanism through external authenticator/identity provider (instead of username/password.)"]
    - ["FederatedLoginService.java", "The user can have (possibly multiple, possibly zero) opaque strings to their {@linkplain User} object. Such opaque strings are called identifiers. Think of them as OpenID URLs, twitter account names, etc."]
    - ["FederatedLoginService.java", "After getting authenticated by some means, the user can add additional identifiers to their account."]
    - ["FederatedLoginService.java", "In the login page, instead of entering the username and password, the user opts for authenticating via other services. Think of OpenID, OAuth, your corporate SSO service, etc."]
    - ["FederatedLoginService.java", "Each {@link FederatedLoginService} is exposed to the URL space via {@link jenkins.model.Jenkins#getFederatedLoginService(String)}. So for example if your {@linkplain #getUrlName() url name} is openid, this object gets /federatedLoginService/openid as the URL."]
    - ["FederatedLoginService.java", "Identity information as obtained from {@link FederatedLoginService}."]
    - ["FederatedLoginService.java", "Gets a human readable full name of this user. Maps to {@link User#getDisplayName()}"]
    - ["FederatedLoginService.java", "Call this method to authenticate the user when you confirmed (via your protocol specific work) that the current HTTP request indeed owns this identifier."]
    - ["FederatedLoginService.java", "Unassociated identity."]
    - ["FederatedLoginService.java", "Returns your implementation of {@link FederatedLoginServiceUserProperty} that stores opaque identifiers."]
    - ["FederatedLoginService.java", "Gets the string representation of the identity in the form that makes sense to the enclosing {@link FederatedLoginService}, such as full OpenID URL."]
    - ["FederatedLoginService.java", "Returns the url name that determines where this {@link FederatedLoginService} is mapped to in the URL space."]
    - ["FederatedLoginService.java", "Returns a human-readable pronoun that describes this kind of identifier. This is used for rendering UI. For example, OpenID, Twitter ID, etc."]
    - ["FederatedLoginService.java", "This security realm doesn't support user registration."]
    - ["FederatedLoginService.java", "Used in {@link FederatedIdentity#signin()} to indicate that the identifier is not currently associated with anyone."]
    - ["FederatedLoginService.java", "Login as this user"]
    - ["FederatedLoginService.java", "Your implementation will call this method to add this identifier to the current user of an already authenticated session."]
    - ["Trigger.java", "The job {0} has a null crontab spec which is incorrect"]
    - ["Trigger.java", "Failed to parse crontab spec %s in job %s"]
    - ["Trigger.java", "The job {0} has a syntactically incorrect config and is missing the cron spec for a trigger"]
    - ["HudsonPrivateSecurityRealm.java", "If true, sign up is not allowed."]
    - ["HudsonPrivateSecurityRealm.java", "If true, captcha will be enabled."]
    - ["HudsonPrivateSecurityRealm.java", "If Hudson is newly set up with the security realm and there's no user account created yet, insert a filter that asks the user to create one"]
    - ["HudsonPrivateSecurityRealm.java", "Show the sign up page with the data from the identity."]
    - ["HudsonPrivateSecurityRealm.java", "Creates an account and associates that with the given identity. Used in conjunction with {@link #commenceSignup}."]
    - ["HudsonPrivateSecurityRealm.java", "Creates an user account. Used for self-registration."]
    - ["HudsonPrivateSecurityRealm.java", "Creates a user account. Used by admins."]
    - ["HudsonPrivateSecurityRealm.java", "Lets the current user silently login as the given user and report back accordingly."]
    - ["HudsonPrivateSecurityRealm.java", "Creates a user account. Requires {@link Jenkins#ADMINISTER}"]
    - ["HudsonPrivateSecurityRealm.java", "Creates a first admin user account. This can be run by anyone, but only to create the very first user account."]
    - ["HudsonPrivateSecurityRealm.java", "Try to make this user a super-user"]
    - ["HudsonPrivateSecurityRealm.java", "To display an error message, set it here."]
    - ["HudsonPrivateSecurityRealm.java", "When a {@link User} object is re-configured via the UI, the password is sent to the hidden input field by using {@link Protector}, so that the same password can be retained but without leaking information to the browser."]
    - ["HudsonPrivateSecurityRealm.java", "Hashed password."]
    - ["HudsonPrivateSecurityRealm.java", "@deprecated Scrambled password. Field kept here to load old (pre 1.283) user records, but now marked transient so field is no longer saved."]
    - ["HudsonPrivateSecurityRealm.java", "Convert to hashed password and report to monitor if we load old data"]
    - ["HudsonPrivateSecurityRealm.java", "Creates a new user account by registering a password to the user."]
    - ["HudsonPrivateSecurityRealm.java", "Displays manage users link in the system config if {@link HudsonPrivateSecurityRealm} is in effect."]
    - ["HudsonPrivateSecurityRealm.java", "The salt is prepended to the hashed password and returned. So the encoded password is of the form <tt>SALT ':' hash(PASSWORD,SALT)</tt>."]
    - ["HudsonPrivateSecurityRealm.java", "Creates a hashed password by generating a random salt."]
    - ["HudsonPrivateSecurityRealm.java", "Generates random salt."]
    - ["HudsonPrivateSecurityRealm.java", "CLASSIC encoder outputs salt:hash where salt is [a-z]+, so we use unique prefix '#jbcyrpt to designate JBCRYPT-format hash. '#' is neither in base64 nor hex, which makes it a good choice."]
    - ["HudsonPrivateSecurityRealm.java", "allow signup from the Jenkins home page, or /manage, which is where a /configureSecurity form redirects to"]
    - ["BootFailure.java", "JENKINS_HOME"]
    - ["BootFailure.java", "boot attempt file"]
    - ["BootFailure.java", "failed boot attempts"]
    - ["ChartUtil.java", "query parameter 'width' and 'height' in the request"]
    - ["ByteBuffer.java", "The MIT License"]
    - ["ByteBuffer.java", "Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi"]
    - ["AtomicFileWriter.java", "DISABLE_FORCED_FLUSH flag used, this could result in dataloss if failures happen in your storage subsystem."]
    - ["AtomicFileWriter.java", "JENKINS-48407: NIO's createTempFile creates file with 0600 permissions, so we use pre-NIO for this..."]
    - ["ClassLoaderSanityThreadFactory.java", "https://issues.jenkins-ci.org/browse/JENKINS-49206"]
    - ["AdministrativeError.java", "Unique ID that distinguishes this error from other errors. Must remain the same across Hudson executions. Use a caller class name, or something like that."]
    - ["AdministrativeError.java", "A title of the problem. This is used as the HTML title of the details page. Should be just one sentence, like ZFS migration error."]
    - ["AdministrativeError.java", "A short description of the problem. This is used in the /manage page, and can include HTML, but it should be still short."]
    - ["AdministrativeError.java", "An exception indicating the problem. The administrator can see this once they click more details."]
    - ["ChunkedInputStream.java", "http://www.apache.org/"]
    - ["ChunkedInputStream.java", "mailto:mbowler@GargoyleSoftware.com"]
    - ["ChunkedInputStream.java", "mailto:oleg@ural.ru"]
    - ["ClassicPluginStrategy.java", "TODO: define a mechanism to hide classes"]
    - ["ClassicPluginStrategy.java", "should not normally happen, due to createClassJarFromWebInfClasses"]
    - ["ClassicPluginStrategy.java", "override the context classloader. This no longer makes sense, but it is left for the backward compatibility"]
    - ["ClassicPluginStrategy.java", "gracefully handle any error in plugin."]
    - ["ClassicPluginStrategy.java", "delete the contents so that old files won't interfere with new files"]
    - ["ClassicPluginStrategy.java", "this ZipOutputStream is reused and not created for each directory"]
    - ["ClassicPluginStrategy.java", "some earlier versions of maven-hpi-plugin apparently puts null as a literal in Hudson-Version. watch out for them."]
    - ["ClassicPluginStrategy.java", "use wrappedZOut instead of zOut"]
    - ["ClassicPluginStrategy.java", "not found. try next"]
    - ["ClassicPluginStrategy.java", "Implicit dependencies that are known to be unnecessary and which must be cut out to prevent a dependency cycle among bundled plugins."]
    - ["ClassicPluginStrategy.java", "this is the manifest already"]
    - ["ClassicPluginStrategy.java", "* Gets the minimum required version for the current version of Jenkins."]
    - ["ClassicPluginStrategy.java", "don't fix the dependency for itself, or else we'll have a cycle"]
    - ["ClassicPluginStrategy.java", "* All the plugins eventually delegate this classloader to load core, servlet APIs, and SE runtime."]
    - ["ClassicPluginStrategy.java", "already expanded"]
    - ["ClassicPluginStrategy.java", "backward compatibility"]
    - ["ClassicPluginStrategy.java", "also need to be masked by all the other plugins that depend on the database plugin."]
    - ["ClassicPluginStrategy.java", "* See {@link ExtensionFinder#scout(Class, Hudson)} for the dead lock issue and what this does."]
    - ["ClassicPluginStrategy.java", "use the default dummy instance"]
    - ["ClassicPluginStrategy.java", "handle wildcard"]
    - ["ClassicPluginStrategy.java", "* Creates the classloader that can load all the specified jar files and delegate to the given parent."]
    - ["ClassicPluginStrategy.java", "such as database plugin for JPA support. The Mask-Classes attribute is insufficient because those classes"]
    - ["ClassicPluginStrategy.java", "* Computes the classloader that takes the class masking into account."]
    - ["ClassicPluginStrategy.java", "This will be recalculated at the next time."]
    - ["ClassicPluginStrategy.java", "Avoid infinite recursion of using ExtensionFinders to find ExtensionFinders"]
    - ["ClassicPluginStrategy.java", "* Get the list of plugins that have been detached since a specific Jenkins release version."]
    - ["ClassicPluginStrategy.java", "* Explodes the plugin into a directory, if necessary."]
    - ["ClassicPluginStrategy.java", "* Filter for jar files."]
    - ["ClassicPluginStrategy.java", "Locate the manifest"]
    - ["ClassicPluginStrategy.java", "roundup"]
    - ["ClassicPluginStrategy.java", "* Get the list of all plugins that have ever been {@link DetachedPlugin detached} from Jenkins core."]
    - ["ClassicPluginStrategy.java", "initialize plugin"]
    - ["ClassicPluginStrategy.java", "no need to expand"]
    - ["ClassicPluginStrategy.java", "* This classloader is created for this plugin. Useful during debugging."]
    - ["ClassicPluginStrategy.java", "String export = manifest.getMainAttributes().getValue(Export);"]
    - ["ClassicPluginStrategy.java", "* Topologically sorted list of transient dependencies."]
    - ["ClassicPluginStrategy.java", "try next"]
    - ["ClassicPluginStrategy.java", "impossible"]
    - ["ClassicPluginStrategy.java", "List<PluginWrapper> r = new ArrayList<PluginWrapper>();"]
    - ["ClassicPluginStrategy.java", "* Returns all the plugin dependencies that are implicit based on a particular Jenkins version"]
    - ["ClassicPluginStrategy.java", "* Get the Jenkins version from which the plugin was detached."]
    - ["ClassicPluginStrategy.java", "* Forces the fixed timestamp for directories to make sure classes.jar always get a consistent checksum."]
    - ["ClassicPluginStrategy.java", "if (w!=null)    r.add(w);"]
    - ["ClassicPluginStrategy.java", "* Is the named plugin a plugin that was detached from Jenkins at some point in the past."]
    - ["ClassicPluginStrategy.java", "Register global classpath mask. This is useful for hiding JavaEE APIs that you might see from the container,"]
    - ["ClassicPluginStrategy.java", "for (Dependency d : dependencies) {"]
    - ["ClassicPluginStrategy.java", "AntClassLoaders hold parents not only as AntClassLoader#getParent()"]
    - ["ClassicPluginStrategy.java", "* Get the short name of the plugin."]
    - ["ClassicPluginStrategy.java", "such error should have been reported earlier"]
    - ["ClassicPluginStrategy.java", "if .hpi, this is the directory where war is expanded"]
    - ["ClassicPluginStrategy.java", "* Repackage classes directory into a jar file to make it remoting friendly. The remoting layer can cache jar files but not class files."]
    - ["ClassicPluginStrategy.java", "but also as AntClassLoader#getConfiguredParent()"]
    - ["ClassicPluginStrategy.java", "timestamp check"]
    - ["ClassicPluginStrategy.java", "public List<PluginWrapper> getDependencyPluginWrappers() {"]
    - ["ClassicPluginStrategy.java", "* Information about plugins that were originally in the core."]
    - ["ClassicPluginStrategy.java", "resolve the .hpl file to the location of the manifest file"]
    - ["ClassicPluginStrategy.java", "* {@link AntClassLoader} with a few methods exposed, {@link Closeable} support, and {@link Transformer} support."]
    - ["ClassicPluginStrategy.java", "Read the manifest"]
    - ["ClassicPluginStrategy.java", "attribute not found"]
    - ["ArgumentListBuilder.java", "Bit mask indicating arguments that shouldn't be echoed-back (e.g., password)"]
    - ["ArgumentListBuilder.java", "Optionally hide this part of the command line from being printed to the log."]
    - ["ArgumentListBuilder.java", "Returns true if there are any masked arguments."]
    - ["ArgumentListBuilder.java", "Add a masked argument"]
    - ["ArgumentListBuilder.java", "Debug/error message friendly output."]
    - ["ClockDifference.java", "clock is in sync"]
    - ["ClockDifference.java", "Returns true if the difference is big enough to be considered dangerous."]
    - ["CopyOnWriteList.java", "read the items from xml into a list"]
    - ["DataSetBuilder.java", "insert rows and columns in the right order"]
    - ["ChunkedOutputStream.java", "Mohammad Rezaei, Goldman, Sachs & Co."]
    - ["ChunkedOutputStream.java", "/home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//httpclient/src/java/org/apache/commons/httpclient/ChunkedOutputStream.java"]
    - ["DescribableList.java", "by ID"]
    - ["DescribableList.java", "by position"]
    - ["AbstractProject.java", "User-specified workspace directory, or null if it's up to Jenkins."]
    - ["AbstractProject.java", "if we don't have baseline yet, it means the data is built by old Hudson that doesn't set the baseline"]
    - ["AbstractProject.java", "add all the transient actions, too"]
    - ["AbstractProject.java", "no good. We should just wait for the agent to come back."]
    - ["AbstractProject.java", "Block builds until they are done with post-production"]
    - ["AbstractProject.java", "if there's no workspace, report a nice error message"]
    - ["AbstractProject.java", "node built-on doesn't exist anymore"]
    - ["AbstractProject.java", "prevent a new build while a delete operation is in progress"]
    - ["AbstractProject.java", "The build has been likely deleted after the isLogUpdated() call."]
    - ["AbstractProject.java", "WorkspaceOfflineReason"]
    - ["AbstractProject.java", "if doing non-concurrent build, acquire a workspace in a way that causes builds to block for this workspace."]
    - ["AbstractProject.java", "This prevents multiple workspaces of the same job --- the behavior of Hudson < 1.319."]
    - ["AbstractProject.java", "by having multiple workspaces"]
    - ["AbstractProject.java", "give time for agents to come online if we are right after reconnection (JENKINS-8408)"]
    - ["AbstractProject.java", "Do not trigger build, if no suitable agent is online"]
    - ["AbstractProject.java", "No suitable executor is online"]
    - ["AbstractProject.java", "build now, or nothing will ever be built"]
    - ["AbstractProject.java", "if the build is fixed on a node, then attempting a build will do us"]
    - ["AbstractProject.java", "node still exists, but has 0 executors - o.s.l.t."]
    - ["AbstractProject.java", "If we get here, that means the SCM blocked the workspace deletion."]
    - ["EditDistance.java", "kohsuke.kawaguchi@sun.com"]
    - ["ToolInstallation.java", "JDK on the master might be on /usr/local/java but on a Windows agent it could be at c:Program FilesJava"]
    - ["ToolInstallation.java", "To add entry to PATH, do {@code envVars.put(PATH+XYZ,path)} where 'XYZ' is something unique."]
    - ["SCMTrigger.java", "note that job().poll(listener) should also check this"]
    - ["SCMTrigger.java", "Once attached to the build, we'll move this into a file to reduce the memory footprint."]
    - ["SCMTrigger.java", "Where the log file is written."]
    - ["SCMTrigger.java", "Returns the file that records the last/current polling activity."]
    - ["SCMTrigger.java", "Update the {@link ExecutorService} instance."]
    - ["SCMTrigger.java", "Sends out the raw polling log output."]
    - ["SCMTrigger.java", "Used from <tt>polling.jelly</tt> to write annotated polling log to the given output."]
    - ["SCMTrigger.java", "TODO: resurrect compressed log file support"]
    - ["SCMTrigger.java", "Save configuration"]
    - ["SCMTrigger.java", "Prevent jelly from flushing stream so Content-Length header can be added afterwards"]
    - ["SCMTrigger.java", "to make sure that the log file contains up-to-date text,"]
    - ["SCMTrigger.java", "as per the requirement of SequentialExecutionQueue, value equality is necessary"]
    - ["SCMTrigger.java", "Only used while ths cause is in the queue."]
    - ["SCMTrigger.java", "TODO: charset of this log file?"]
    - ["SCMTrigger.java", "Use {@link SCMTrigger.SCMTriggerCause#SCMTriggerCause(String)}."]
    - ["SCMTrigger.java", "How long is too long for a polling activity to be in the queue?"]
    - ["FileChannelWriter.java", "filePath"]
    - ["CompressedFile.java", "The name of the raw file."]
    - ["CompressedFile.java", "The name of the compressed file."]
    - ["CompressedFile.java", "Gets the OutputStream to write to the file."]
    - ["CompressedFile.java", "Reads the contents of a file."]
    - ["CompressedFile.java", "Loads the file content as a string."]
    - ["CompressedFile.java", "Asynchronously schedules the compression of this file."]
    - ["CompressedFile.java", "if the compressed file is created successfully, remove the original"]
    - ["CompressedFile.java", "Executor used for compression. Limited up to one thread since this should be a fairly low-priority task."]
    - ["CharacterEncodingFilter.java", "containers often implement RFCs incorrectly in that it doesn't interpret query parameter"]
    - ["CharacterEncodingFilter.java", "text/xml;charset=xxx"]
    - ["CharacterEncodingFilter.java", "but doing this for config.xml submission could potentially overwrite valid"]
    - ["CharacterEncodingFilter.java", "decoding with UTF-8. This will ensure we get it right."]
    - ["CharacterEncodingFilter.java", "Filter that sets the character encoding to be used in parsing the request to avoid Non-ASCII characters garbled."]
    - ["CharacterEncodingFilter.java", "The default character encoding."]
    - ["CharacterEncodingFilter.java", "The character encoding sets forcibly?"]
    - ["HexBinaryConverter.java", "needs to be called before hasMoreChildren."]
    - ["HeadBufferingStream.java", "Useful for sniffing the content of the stream after the error is discovered."]
    - ["IncompatibleAntVersionDetected.java", "index.jelly"]
    - ["HeapSpaceStringConverter.java", "See http://jira.codehaus.org/browse/XSTR-604"]
    - ["HttpResponses.java", "tom.fennelly@gmail.com"]
    - ["DescriptorList.java", "none was selected"]
    - ["DescriptorList.java", "Data submission error"]
    - ["ConsistentHash.java", "Used for remembering the computed MD5 hash, since it's bit expensive to do it all over again."]
    - ["ConsistentHash.java", "Compresses a string into an integer with MD5."]
    - ["ConsistentHash.java", "Takes a string, hash it with MD5, then calls {@link #lookup(int)}."]
    - ["ConsistentHash.java", "Takes a string, hash it with MD5, then calls {@link #list(int)}."]
    - ["ConsistentHash.java", "16 bytes -> 4 bytes"]
    - ["IncompatibleVMDetected.java", "index.jelly"]
    - ["Graph.java", "This object exposes two URLs:"]
    - ["Graph.java", "Timestamp of this graph. Used for HTTP cache related headers."]
    - ["Graph.java", "OpenJDK on ARM produces an error like this in case of headless error"]
    - ["Graph.java", "not available. send out error message"]
    - ["ReopenableRotatingFileOutputStream.java", "deprecated due to risk for file leak"]
    - ["RewindableFileOutputStream.java", "In addition to close, ensure that the next open would truncate the file."]
    - ["FormFillFailure.java", "Use this with caution, so that anonymous users do not gain too much insights into the state of the system, as error stack trace often reveals a lot of information."]
    - ["FormFillFailure.java", "This method must be used with care to avoid cross-site scripting attack."]
    - ["IOUtils.java", "avoid security issues"]
    - ["ReopenableFileOutputStream.java", "deprecated due to risk for file leak"]
    - ["InsufficientPermissionDetected.java", "we don't have enough permissions to run"]
    - ["Advapi32.java", "lpServiceStartName"]
    - ["Advapi32.java", "lpPassword"]
    - ["ZipArchiver.java", "Setting this bit explicitly is needed by some unzipping applications (see JENKINS-3294)."]
    - ["ZipArchiver.java", "Bitmask indicating directories in 'external attributes' of a ZIP archive entry."]
    - ["TarArchiver.java", "ensure we don't write more bytes than the declared when we created the entry"]
    - ["TarArchiver.java", "Separate try block not to wrap exception thrown while opening the input stream into an exception"]
    - ["TarArchiver.java", "indicating a problem while writing"]
    - ["TarArchiver.java", "log the exception in any case"]
    - ["TarArchiver.java", "always close the entry"]
    - ["RegistryKey.java", "KEY_ALL_ACCESS"]
    - ["RegistryKey.java", "KEY_READ"]
    - ["MorphTagLibrary.java", "See textbox.jelly as an example of using this tag library."]
    - ["MorphTagLibrary.java", "@see http://github.com/jenkinsci/jelly/commit/4ae67d15957b5b4d32751619997a3cb2a6ad56ed"]
    - ["MorphTagLibrary.java", "@see jelly.impl.DynamicTag.setAttribute() -- ${attrs} has duplicates with Attr suffix"]
    - ["HistoricalSecrets.java", "Turns {@link Jenkins#getSecretKey()} into an AES key."]
    - ["HistoricalSecrets.java", "This is no longer the key we use to encrypt new information, but we still need this to be able to decrypt what's already persisted."]
    - ["HistoricalSecrets.java", "if the key doesn't match with the bytes, it can result in BadPaddingException"]
    - ["HistoricalSecrets.java", "try our historical key for backward compatibility"]
    - ["HistoricalSecrets.java", "Historical algorithms for decrypting {@link Secret}s."]
    - ["DoubleLaunchChecker.java", "JENKINS_HOME"]
    - ["DoubleLaunchChecker.java", "ID string of the other Hudson that we are colliding with. Can be null."]
    - ["DoubleLaunchChecker.java", "we noticed that someone else have updated this file."]
    - ["DoubleLaunchChecker.java", "if failed to write, err on the safe side and assume things are OK."]
    - ["DoubleLaunchChecker.java", "The timestamp of the owner file when we updated it for the last time. 0 to indicate that there was no update before."]
    - ["DoubleLaunchChecker.java", "in servlet 2.5, we can get the context path"]
    - ["DoubleLaunchChecker.java", "randomize the scheduling so that multiple Hudson instances will write at the file at different time"]
    - ["DoubleLaunchChecker.java", "Ignore the problem and go back to using Hudson."]
    - ["FormValidation.java", "look in PATH"]
    - ["FormValidation.java", "didn't find it"]
    - ["FormValidation.java", "any invalid URL comes here"]
    - ["FormValidation.java", "Sun JRE (and probably others too) often return just the URL in the error."]
    - ["FormValidation.java", "use HTTP content type to find out the charset."]
    - ["FormValidation.java", "TODO is this even permitted by URL.openConnection?"]
    - ["FormValidation.java", "couldn't find it. HTML spec says default is US-ASCII, but UTF-8 is a better choice since (1) it's compatible with US-ASCII (2) a well-written web applications tend to use UTF-8"]
    - ["FormValidation.java", "being called from some other context"]
    - ["FormValidation.java", "insufficient permission to perform validation?"]
    - ["FormValidation.java", "this is full path"]
    - ["FormValidation.java", "unknown parameter name. we'll report the error when the form is submitted."]
    - ["FormValidation.java", "'a' in getCurrentDescriptorByNameUrl is always non-null because we already have Hudson as the sentinel"]
    - ["FormValidation.java", "put this under the right contextual umbrella."]
    - ["JVMBuilder.java", "TODO: if we are to support a remote launch, JVM would be on a different path."]
    - ["JVMBuilder.java", "Enables the debugger support on the given port."]
    - ["ListBoxModel.java", "optionValues?value='+encode(this.value)"]
    - ["ListBoxModel.java", "doOptionValues(&#64;QueryParameter(value) String value)"]
    - ["Kernel32.java", "See http://msdn.microsoft.com/en-us/library/aa365240(VS.85).aspx"]
    - ["Kernel32.java", "Creates a symbolic link.
     *
     * Windows Vista+, Windows Server 2008+
     *
     * @param lpSymlinkFileName
     *      Symbolic link to be created
     * @param lpTargetFileName
     *      Target of the link.
     * @param dwFlags
     *      0 or {@link #SYMBOLIC_LINK_FLAG_DIRECTORY}
     * @see <a href=http://msdn.microsoft.com/en-us/library/windows/desktop/aa363866(v=vs.85).aspx>MSDN</a>"]
    - ["JDKInstaller.java", "Submits the Oracle account username/password."]
    - ["JDKInstaller.java", "The release ID that Sun assigns to each JDK, such as jdk-6u13-oth-JPR@CDS-CDS_Developer"]
    - ["JDKInstaller.java", "This ID can be seen in the ProductRef query parameter of the download page, like https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewProductDetail-Start?ProductRef=jdk-6u13-oth-JPR@CDS-CDS_Developer"]
    - ["JDKInstaller.java", "We require that the user accepts the license by clicking a checkbox, to make up for the part that we auto-accept cds.sun.com license click through."]
    - ["JDKInstaller.java", "Mount the DMG distribution bundle"]
    - ["JDKInstaller.java", "log file is in UTF-16"]
    - ["JDKInstaller.java", "Create a private JRE by omitting PublicjreFeature"]
    - ["JDKInstaller.java", "CMD.EXE /C must be followed by a single parameter (do not split it!)"]
    - ["JDKInstaller.java", "Windows silent installation is full of bad know-how."]
    - ["JDKInstaller.java", "Oracle switched from old to new, and then back to old. This code should work for either."]
    - ["JDKInstaller.java", "Old Login flow: 1. /mysso/signon.jsp: Form for username + password: Submit actions is: 2. /oam/server/sso/auth_cred_submit: Returns a 302 to: 3. https://edelivery.oracle.com/osso_login_success: Returns a 302 to the download."]
    - ["JDKInstaller.java", "New Login flow: 1. /oaam_server/oamLoginPage.jsp: Form for username + password. Submit action is: 2. /oaam_server/login.do: Returns a 302 to: 3. /oaam_server/loginAuth.do: After 2 seconds, JS sets window.location to: 4. /oaam_server/authJump.do: Contains a single form with hidden inputs and JS that submits the form to: 5. /oam/server/dap/cred_submit: Returns a 302 to: 6. https://edelivery.oracle.com/osso_login_success: Returns a 302 to the download."]
    - ["Kernel32Utils.java", "http://msdn.microsoft.com/en-us/library/aa365247(v=VS.85).aspx"]
    - ["Kernel32Utils.java", "network share"]
    - ["Kernel32Utils.java", "servershare --> ?UNCservershare"]
    - ["Kernel32Utils.java", "http://msdn.microsoft.com/en-us/library/windows/desktop/aa363866(v=vs.85).aspx"]
    - ["Kernel32Utils.java", "the first arg is number of wchar"]
    - ["MaskingClassLoader.java", "The name of a resource is a '/'-separated path name"]
    - ["NoClientBindProtocolSocketFactory.java", "ignore the local address/port for binding"]
    - ["Memoizer.java", "TODO: if we want to, we can avoid locking altogether by putting a sentinel value"]
    - ["UpdateCenter.java", "save this info"]
    - ["UpdateCenter.java", "clear this info"]
    - ["UpdateCenter.java", "http://www.ashlux.com/wordpress/2009/08/14/hudson-and-the-sonar-plugin-fail-maveninstallation-nosuchmethoderror/"]
    - ["UpdateCenter.java", "http://www.google.com"]
    - ["UpdateCenter.java", "http://jenkins-ci.org/"]
    - ["UpdateCenter.java", "http://jenkins-ci.org/update-center.json"]
    - ["WINNT.java", "Unicode nul terminated string (with environment variable references)"]
    - ["WINNT.java", "open for backup or restore"]
    - ["WINNT.java", "privilege required"]
    - ["WINNT.java", "Created key is a symbolic link"]
    - ["WINNT.java", "Open symbolic link"]
    - ["NoHomeDir.java", "index.jelly"]
    - ["LogTaskListener.java", "TODO: AbstractTaskListener is empty now, but there are dependencies on that e.g. Ruby Runtime - JENKINS-48116)"]
    - ["LogTaskListener.java", "The change needs API deprecation policy or external usages cleanup."]
    - ["NamingThreadFactory.java", "TODO consider uniquifying this"]
    - ["NoClientBindSSLProtocolSocketFactory.java", "To be eventually deprecated when migrated to Java 1.4 or above"]
    - ["ProcessKillingVeto.java", "daniel.weber.dev@gmail.com"]
    - ["FormFieldValidator.java", "this is to protect Hudson administrator from broken ACL/SecurityRealm implementation/configuration."]
    - ["FormFieldValidator.java", "Pass true to only let admin users to run the check. This is necessary for security reason, so that unauthenticated user cannot obtain sensitive information or run a process that may have side-effect."]
    - ["FormFieldValidator.java", "Require CONFIGURE permission on this job"]
    - ["FormFieldValidator.java", "Require admin permission"]
    - ["FormFieldValidator.java", "look in PATH"]
    - ["FormFieldValidator.java", "didn't find it"]
    - ["FormFieldValidator.java", "can be used to check the existence of any file in file system"]
    - ["FormFieldValidator.java", "or other HTTP URLs inside firewall, so limit this to the admin."]
    - ["FormFieldValidator.java", "The base directory from which the path name is resolved."]
    - ["FormFieldValidator.java", "Checks a valid executable binary (specified in the 'value' query parameter). It has to be either given as a full path to the executable, or else it will be searched in PATH."]
    - ["FormFieldValidator.java", "This file also handles .exe omission in Windows --- I thought Windows has actually more generic mechanism for the executable extension omission, so perhaps this needs to be extended to handle that correctly. More info needed."]
    - ["FormFieldValidator.java", "1x16 spacer needed for IE since it doesn't support min-height"]
    - ["FormFieldValidator.java", "use HTTP content type to find out the charset."]
    - ["FormFieldValidator.java", "couldn't find it. HTML spec says default is US-ASCII, but UTF-8 is a better choice since (1) it's compatible with US-ASCII (2) a well-written web applications tend to use UTF-8"]
    - ["FormFieldValidator.java", "Checks a valid directory name (specified in the 'value' query parameter) against the current workspace."]
    - ["FormFieldValidator.java", "Checks a valid file name or directory (specified in the 'value' query parameter) against the current workspace."]
    - ["PluginServletFilter.java", "https://marvelution.atlassian.net/browse/JJI-188"]
    - ["DotNet.java", "see http://support.microsoft.com/?scid=kb;en-us;315291 for the basic algorithm"]
    - ["DotNet.java", "observation in my registry shows that the actual key name can be things like v2.0 SP1 or v2.0.50727, so the regexp is written to accommodate this."]
    - ["DotNet.java", "thrown when openReadonly fails because the key doesn't exist."]
    - ["DotNet.java", "Returns true if the .NET framework of the given version (or grater) is installed on a remote machine."]
    - ["DotNet.java", "not found"]
    - ["SHELLEXECUTEINFO.java", "lpVerb"]
    - ["SHELLEXECUTEINFO.java", "lpFile"]
    - ["SHELLEXECUTEINFO.java", "lpParameters"]
    - ["SHELLEXECUTEINFO.java", "lpDirectory"]
    - ["SHELLEXECUTEINFO.java", "lpClass"]
    - ["SHELLEXECUTEINFO.java", "hkeyClass"]
    - ["SHELLEXECUTEINFO.java", "hProcess"]
    - ["GNUCLibrary.java", "see http://www.gnu.org/s/libc/manual/html_node/Renaming-Files.html"]
    - ["GNUCLibrary.java", "this is listed in http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man3/sysctlbyname.3.html"]
    - ["GNUCLibrary.java", "but not in http://www.gnu.org/software/libc/manual/html_node/System-Parameters.html#index-sysctl-3493"]
    - ["GNUCLibrary.java", "obtained from Linux. Needs to be checked if these values are portable."]
    - ["GNUCLibrary.java", "See http://linux.die.net/man/3/symlink"]
    - ["ProcessTreeKiller.java", "model environment variables"]
    - ["ProcessTreeKiller.java", "Creates a magic cookie that can be used as the model environment variable"]
    - ["QueryParameterMap.java", "String that looks like {@code abc=def&ghi=jkl}"]
    - ["ReflectionUtils.java", "TODO the version in org.kohsuke.stapler is incomplete"]
    - ["Protector.java", "Encrypt/decrypt data by using a session key that only lasts for the duration of the server instance."]
    - ["Protector.java", "Returns null if fails to decrypt properly."]
    - ["RobustCollectionConverter.java", "CopyOnWriteArrayList used to serialize as custom serialization"]
    - ["RobustCollectionConverter.java", "so read it in a compatible fashion"]
    - ["SequentialExecutionQueue.java", "Caller must have a lock"]
    - ["RunList.java", "can't publish on-going builds"]
    - ["RunList.java", "this is a type unsafe operation"]
    - ["Scrambler.java", "Do not use this for storing passwords and the like in configuration."]
    - ["Scrambler.java", "corrupted data."]
    - ["RuntimeSpringConfiguration.java", "Credit must go to Solomon Duskis and the article: http://jroller.com/page/Solomon?entry=programmatic_configuration_in_spring"]
    - ["RingBufferLogHandler.java", "This constructor is deprecated. It can't access system properties with {@link jenkins.util.SystemProperties} as it's not legal to use it on remoting agents."]
    - ["BeanBuilder.java", "username = sa"]
    - ["BeanBuilder.java", "password = "]
    - ["BeanBuilder.java", "url = jdbc:hsqldb:mem:grailsDB"]
    - ["SecretRewriter.java", "Rewrites XML files by looking for Secrets that are stored with the old key and replaces them by the new encrypted values."]
    - ["SecretRewriter.java", "Encrypting  in Secret produces 24-letter characters, so this must be the minimum length"]
    - ["SecretRewriter.java", "not encrypted with the legacy key. leave it unmodified"]
    - ["SecretRewriter.java", "@deprecated SECURITY-376: {@code backupDirectory} is ignored"]
    - ["SecretRewriter.java", "@deprecated SECURITY-376: {@code backup} is ignored"]
    - ["SecretRewriter.java", "ignoring the workspace and the artifacts directories. Both of them are potentially large and they do not store any secrets."]
    - ["SubClassGenerator.java", "null only during tests."]
    - ["SubClassGenerator.java", "can't change the field type as it breaks binary compatibility"]
    - ["StreamTaskListener.java", "served to the browser immediately"]
    - ["StreamTaskListener.java", "The change needs API deprecation policy or external usages cleanup."]
    - ["StreamTaskListener.java", "it's not very pretty to do this, but otherwise we'd have to touch too many call sites."]
    - ["UnbufferedBase64InputStream.java", "initial placement to force the decoding in the next read()"]
    - ["TextFile.java", "Shift-JIS (http://en.wikipedia.org/wiki/Shift_JIS)"]
    - ["StackedAreaRenderer2.java", "add an item entity, if this information is being collected"]
    - ["SFTPClient.java", "Checks if the given path exists."]
    - ["SFTPClient.java", "Graceful {@link #stat(String)} that returns null if the path doesn't exist."]
    - ["SFTPClient.java", "Makes sure that the directory exists, by creating it if necessary."]
    - ["SFTPClient.java", "Creates a new file and writes to it."]
    - ["NoTempDir.java", "index.jelly"]
    - ["NoTempDir.java", "System.getProperty(java.io.tmpdir)"]
    - ["DefaultRuntimeSpringConfiguration.java", "http://jroller.com/page/Solomon?entry=programmatic_configuration_in_spring"]
    - ["VariableResolver.java", "The name shouldn't include the syntactic marker of an expression. IOW, it should be foo but not ${foo}."]
    - ["RemotingDiagnostics.java", "Heap dump, exposable to URL via Stapler."]
    - ["RemotingDiagnostics.java", "Obtains the heap dump."]
    - ["RemotingDiagnostics.java", "if we run locally, cl!=null. Otherwise the delegating classloader will be available as context classloader."]
    - ["RemotingDiagnostics.java", "Executes Groovy script remotely."]
    - ["RemotingDiagnostics.java", "Obtains the heap dump in an HPROF file."]
    - ["MapperDelegate.java", "LICENSE.txt file"]
    - ["DefaultViewsTabBar.java", "Winston.Prakash@Oracle.com"]
    - ["JobColumn.java", "put this in the middle of icons and properties"]
    - ["DefaultMyViewsTabBar.java", "Winston.Prakash@Oracle.com"]
    - ["GlobalDefaultViewConfiguration.java", "for compatibility reasons, the actual value is stored in Jenkins"]
    - ["GlobalDefaultViewConfiguration.java", "Fallback if the view is not specified"]
    - ["ListViewColumn.java", "Standard ordinal positions for built-in ListViewColumns"]
    - ["MyViewsTabBarDescriptor.java", "Winston.Prakash@oracle.com"]
    - ["ViewsTabBarDescriptor.java", "Winston.Prakash@oracle.com"]
    - ["ViewsTabBar.java", "for compatibility reasons, the actual value is stored in Jenkins"]
    - ["RenderOnDemandClosure.java", "currentDescriptorByNameUrl"]
    - ["XStream2.java", "http://www.openwall.com/lists/oss-security/2017/04/03/4"]
    - ["XStream2.java", "SECURITY-105 defense"]
    - ["XStream2.java", "SECURITY-247 defense"]
    - ["XStream2.java", "JENKINS-21017"]
    - ["XStream2.java", "JENKINS-19561"]
    - ["Widget.java", "This method is useful when the widget needs to expose additional URLs, for example for serving AJAX requests."]
    - ["WorkspaceSnapshot.java", "by default, hide from the UI"]
    - ["WorkspaceSnapshot.java", "The file path to which the snapshot shall be restored to."]
    - ["HsErrPidFile.java", "Serves hs_err_pid file."]
    - ["URICheckEncodingMonitor.java", "expected is non-ASCII String"]
    - ["Secret.java", "For testing only. Override the secret key so that we can test this class without {@link Jenkins}."]
    - ["Secret.java", "Encrypts {@link #value} and returns it in an encoded printable form."]
    - ["Secret.java", "Reset the internal secret key for testing."]
    - ["Secret.java", "The key that encrypts the data on disk."]
    - ["Secret.java", "Obtains the plain text password."]
    - ["Secret.java", "Unencrypted secret text."]
    - ["Secret.java", "Workaround for JENKINS-6459 / http://java.net/jira/browse/GLASSFISH-11862"]
    - ["Secret.java", "Pattern matching a possible output of {@link #getEncryptedValue}"]
    - ["Secret.java", "Obtains the secret in a plain text."]
    - ["Secret.java", "Glorified {@link String} that uses encryption in the persisted form, to avoid accidental exposure of a secret."]
    - ["Secret.java", "Works just like {@link Secret#toString()} but avoids NPE when the secret is null."]
    - ["Secret.java", "Attempts to treat the given string first as a cipher text, and if it doesn't work, treat the given string as the unencrypted secret value."]
    - ["Secret.java", "likely CBC encrypted/containing metadata but could be plain text"]
    - ["Secret.java", "For PAYLOAD_V1 we use this byte shifting model, V2 probably will need DataOutput"]
    - ["Secret.java", "it's v1 which cannot be historical, but not decrypting"]
    - ["Secret.java", "impossible"]
    - ["XmlFile.java", "TODO: expose XStream the driver from XStream"]
    - ["FilePathFilterAggregator.java", "Accessible as channel property."]
    - ["SecurityIsOffMonitor.java", "Unsecured Jenkins is, well, insecure."]
    - ["SecurityIsOffMonitor.java", "Call attention to the fact that Jenkins is not secured, and encourage the administrator to take an action."]
    - ["SecurityIsOffMonitor.java", "Depending on whether the user said yes or no, send him to the right place."]
    - ["HsErrPidList.java", "we should find a memory mapped file for secret.key"]
    - ["HsErrPidList.java", "Expose files to the URL."]
    - ["HsErrPidList.java", "see http://www.oracle.com/technetwork/java/javase/felog-138657.html"]
    - ["InstallState.java", "tom.fennelly@gmail.com"]
    - ["ProcessTree.java", "Failed to get the environment variables"]
    - ["ProcessTree.java", "Failed to obtain killers"]
    - ["ProcessTree.java", "Failed to kill pid"]
    - ["ProcessTree.java", "Failed to terminate pid"]
    - ["ProcessTree.java", "Failed to obtain memory requirement"]
    - ["ProcessTree.java", "Failed to call kern.proc.all"]
    - ["ProcessTree.java", "Failed to obtain process list"]
    - ["ProcessTree.java", "Failed to get kern.argmax"]
    - ["ProcessTree.java", "Failed to obtain ken.procargs2"]
    - ["ProcessTree.java", "Failed to parse arguments"]
    - ["ProcessTree.java", "Failed to parse PPID from /proc"]
    - ["ProcessTree.java", "Failed to read. this can happen under normal circumstances (most notably permission denied)"]
    - ["InitReactorRunner.java", "noteworthy milestones --- at least while we debug problems further"]
    - ["HistoryWidget.java", "URL of the {@link #owner}."]
    - ["HistoryWidget.java", "Handles AJAX requests from browsers to update build history."]
    - ["HistoryWidget.java", "The build 'number' to fetch. This is string because various variants uses non-numbers as the build key."]
    - ["JenkinsHttpSessionListener.java", "tom.fennelly@gmail.com"]
    - ["JenkinsHttpSessionListener.java", "TODO: Seems like classes like this should live in the /war/src/java"]
    - ["AdministrativeMonitorsConfiguration.java", "LOGGER.log(Level.WARNING, Failed to process form submission for  + am.id, e);"]
    - ["ConfigureLink.java", "mailto:nicolas.deloof@gmail.com"]
    - ["RobustReflectionConverter.java", "Remember outermost Saveable encountered, for reporting below"]
    - ["RobustReflectionConverter.java", "Not quite right since a subclass could shadow a field, but probably suffices: make sure that the specified type in XML is compatible with the field type."]
    - ["RobustReflectionConverter.java", "Unlock"]
    - ["RobustReflectionConverter.java", "Attributes might be preferred to child elements ..."]
    - ["RobustReflectionConverter.java", "Child elements not covered already processed as attributes ..."]
    - ["RobustReflectionConverter.java", "Process attributes before recursing into child elements."]
    - ["RobustReflectionConverter.java", "There are typically few critical fields around, but we end up looking up in this map a lot. in addition, this map is really only written to during static initialization, so we should use reader writer lock to avoid locking as much as possible. In addition, to avoid looking up the class name (which requires calling class.getName, which may not be cached, the map is inverted with the fields as the keys."]
    - ["RobustReflectionConverter.java", "create the hash map field"]
    - ["RobustReflectionConverter.java", "If the class already exists, then add a new field, otherwise"]
    - ["RobustReflectionConverter.java", "boolean fieldExistsInClass = reflectionProvider.fieldDefinedInClass(attrName, result.getClass());"]
    - ["RobustReflectionConverter.java", "behave as if we didn't see this element"]
    - ["RobustReflectionConverter.java", "Marks {@code plugin=...} on elements where the owner is known and distinct from the closest owned ancestor."]
    - ["RobustReflectionConverter.java", "Lock the write lock"]
    - ["RobustReflectionConverter.java", "{@code pkg.Clazz#fieldName}"]
    - ["RobustReflectionConverter.java", "during unmarshalling, unmarshal into transient fields like XStream 1.1.3"]
    - ["RobustReflectionConverter.java", "intercept an exception so that the stack trace shows how we end up marshalling the object in question"]
    - ["RobustReflectionConverter.java", "TODO the reflection provider should have returned the proper field in first place ...."]
    - ["ReloadLink.java", "mailto:nicolas.deloof@gmail.com"]
    - ["CliLink.java", "mailto:nicolas.deloof@gmail.com"]
    - ["ConsoleLink.java", "nicolas.deloof@gmail.com"]
    - ["UpgradeWizard.java", "only admin users should see this"]
    - ["UpgradeWizard.java", "only show when Jenkins is fully up & running"]
    - ["NodesLink.java", "nicolas.deloof@gmail.com"]
    - ["AsynchronousAdministrativeMonitor.java", "See {@link RekeySecretAdminMonitor} for an example of how to subtype this class."]
    - ["AsynchronousAdministrativeMonitor.java", "The logging output from it gets persisted, and this class provides a /log view that allows the administrator to monitor its progress."]
    - ["PluginsLink.java", "mailto:nicolas.deloof@gmail.com"]
    - ["SystemLogLink.java", "nicolas.deloof@gmail.com"]
    - ["I18n.java", "mailto:tom.fennelly@gmail.com"]
    - ["I18n.java", "https://www.w3.org/International/questions/qa-lang-priorities"]
    - ["SystemInfoLink.java", "nicolas.deloof@gmail.com"]
    - ["StatisticsLink.java", "nicolas.deloof@gmail.com"]
    - ["InstallUtil.java", "mailto:tom.fennelly@gmail.com"]
    - ["InstallUtil.java", "jenkins.install.state"]
    - ["InstallUtil.java", "jenkins.install.runSetupWizard"]
    - ["InstallUtil.java", "hudson.Main.development"]
    - ["InstallUtil.java", "config.xml"]
    - ["InstallUtil.java", "jenkins.install.InstallUtil.lastExecVersion"]
    - ["InstallUtil.java", "jenkins.install.InstallUtil.installingPlugins"]
    - ["ArtifactManager.java", "the XVNC plugin could use this to save {@code screenshot.jpg} if so configured"]
    - ["AdministrativeMonitorsDecorator.java", "don't show for some URLs served directly by Jenkins"]
    - ["AdministrativeMonitorsDecorator.java", "otherwise this would be added to every internal context menu building request"]
    - ["AdministrativeMonitorsDecorator.java", "don't show while Jenkins is loading"]
    - ["AdministrativeMonitorsDecorator.java", "Whether the administrative monitors notifier should be shown."]
    - ["AdministrativeMonitorsDecorator.java", "don't show here to allow admins to disable malfunctioning monitors via AdministrativeMonitorsDecorator"]
    - ["AdministrativeMonitorsDecorator.java", "make reverse proxy monitor work when shown on any URL"]
    - ["AdministrativeMonitorsDecorator.java", "make URI encoding monitor work when shown on any URL"]
    - ["AdministrativeMonitorsDecorator.java", "… or restarting"]
    - ["ShutdownLink.java", "mailto:nicolas.deloof@gmail.com"]
    - ["DefaultUserCanonicalIdResolver.java", "mailto:nicolas.deloof@gmail.com"]
    - ["DiskSpaceMonitorDescriptor.java", "Specify the file path that was monitored."]
    - ["DiskSpaceMonitorDescriptor.java", "The path that was checked"]
    - ["ClockMonitor.java", "@deprecated as of 2.0
     *      Don't use this field, use injection."]
    - ["CoreEnvironmentContributor.java", "Legacy compatibility"]
    - ["GlobalNodePropertiesConfiguration.java", "historically this was placed above GlobalPluginConfiguration"]
    - ["TarOutputStream.java", "http://issues.apache.org/bugzilla/show_bug.cgi?id=28776"]
    - ["TarOutputStream.java", "time@ice.com"]
    - ["GlobalConfigurationCategory.java", "Security related configurations."]
    - ["SwapSpaceMonitor.java", "Hide this column from non-admins"]
    - ["SwapSpaceMonitor.java", "@deprecated as of 2.0
     *      use injection"]
    - ["GlobalCloudConfiguration.java", "historically this was placed at the very end of the configuration page"]
    - ["CauseOfInterruption.java", "Gets ID of the user, who interrupted the build."]
    - ["CauseOfInterruption.java", "Gets user, who caused the interruption."]
    - ["GlobalSCMRetryCountConfiguration.java", "for compatibility reasons, this value is stored in Jenkins"]
    - ["Plugin.java", "http://server/hudson/configure"]
    - ["Plugin.java", "Jenkins.VERSION_HASH"]
    - ["GlobalQuietPeriodConfiguration.java", "for compatibility reasons, this value is stored in Jenkins"]
    - ["AssetManager.java", "Exposes assets in the core classloader over HTTP."]
    - ["AssetManager.java", "Stapler routes requests like the /static/.../foo/bar/zot to be treated like /foo/bar/zot"]
    - ["AssetManager.java", "and this is used to serve long expiration header, by using Jenkins.VERSION_HASH as ..."]
    - ["AssetManager.java", "use serveLocalizedFile to support automatic locale selection"]
    - ["AssetManager.java", "crude avoidance of directory traversal attack"]
    - ["AssetManager.java", "pick the last one, which is the one closest to the leaf of the classloader tree."]
    - ["Category.java", "This class is not thread-safe."]
    - ["DownloadSettings.java", "JENKINS-32886: downloadables like the tool installer data may have never been tried if the plugin was installed after a restart, so let's give them a try here."]
    - ["DownloadSettings.java", "This checks updates of the update sites and downloadables."]
    - ["ResponseHeaderFilter.java", "Cache-Control: no-cache"]
    - ["ResponseHeaderFilter.java", "web.xml"]
    - ["ResponseHeaderFilter.java", "security-constraint"]
    - ["NestedProjectsCategory.java", "This category should be moved to cloudbees-folder-plugin short-term."]
    - ["NestedProjectsCategory.java", "TODO Make public when be moved to cloudbees-folder-plugin."]
    - ["BuildReference.java", "jenkins.model.lazy.BuildReference.MODE"]
    - ["Boundary.java", "if we had some x_i==p"]
    - ["FilePathFilter.java", "Inspects {@link FilePath} access from remote channels."]
    - ["FilePathFilter.java", "To insert a custom {@link FilePathFilter} into a connection, see {@link ChannelConfigurator#onChannelBuilding(ChannelBuilder, Object)}"]
    - ["FilePathFilter.java", "Checks if the given file/directory can be read. On POSIX, this corresponds to the 'r' permission of the file/directory itself."]
    - ["FilePathFilter.java", "Checks if the given file can be written. On POSIX, this corresponds to the 'w' permission of the file itself."]
    - ["FilePathFilter.java", "Checks if a symlink can be created at 'f'. On POSIX, this corresponds to the 'w' permission of the file itself."]
    - ["FilePathFilter.java", "Checks if the given directory can be created. On POSIX, this corresponds to the 'w' permission of the parent directory."]
    - ["FilePathFilter.java", "Checks if the given file can be created. On POSIX, this corresponds to the 'w' permission of the parent directory."]
    - ["FilePathFilter.java", "Checks if the given file/directory can be deleted. On POSIX, this corresponds to the 'w' permission of the parent directory."]
    - ["FilePathFilter.java", "Checks if the metadata of the given file/directory (as opposed to the content) can be accessed. On POSIX, this corresponds to the 'r' permission of the parent directory."]
    - ["FilePathFilter.java", "Returns an {@link FilePathFilter} object that represents all the in-scope filters, or {@code null} if none is needed."]
    - ["FilePathFilter.java", "Immutable instance that represents the filter that allows everything."]
    - ["MasterBuildConfiguration.java", "for compatibility reasons, this value is stored in Jenkins"]
    - ["ResponseTimeMonitor.java", "if we failed to monitor, put in the special value that indicates a failure"]
    - ["ResponseTimeMonitor.java", "unlike other monitors whose failure still allow us to communicate with the agent, the failure in this monitor indicates that we are just unable to make any requests to this agent. So we should severe the connection, as opposed to marking it temporarily off line, which still keeps the underlying channel open."]
    - ["ResponseTimeMonitor.java", "this method must be being invoked locally, which means the roundtrip time is zero and zero forever"]
    - ["ResponseTimeMonitor.java", "Record of the past 5 times. -1 if time out. Otherwise in milliseconds. Old ones first."]
    - ["ResponseTimeMonitor.java", "Computes the recurrence of the time out"]
    - ["ResponseTimeMonitor.java", "Computes the average response time, by taking the time out into account."]
    - ["ResponseTimeMonitor.java", "String rendering of the data"]
    - ["ResponseTimeMonitor.java", "Time out interval in milliseconds."]
    - ["NewViewLink.java", "Jenkins.getInstance().getRootUrl() + URL_NAME"]
    - ["ModifiableTopLevelItemGroup.java", "Nicolas De Loof"]
    - ["ModifiableTopLevelItemGroup.java", "nicolas.deloof@gmail.com"]
    - ["IdentityRootAction.java", "A simple root action that exposes the public key to users so that they do not need to search for the {@code X-Instance-Identity} response header, also exposes the fingerprint of the public key so that people can verify a fingerprint of a master before connecting to it."]
    - ["IdentityRootAction.java", "Returns the PEM encoded public key."]
    - ["IdentityRootAction.java", "Returns the fingerprint of the public key."]
    - ["IdentityRootAction.java", "TODO replace with org.jenkinsci.remoting.util.KeyUtils once JENKINS-36871 changes are merged"]
    - ["JenkinsLocationConfiguration.java", "Stores the location of Jenkins (e-mail address and the HTTP URL.)"]
    - ["JenkinsLocationConfiguration.java", "Gets the service administrator e-mail address."]
    - ["JenkinsLocationConfiguration.java", "Sets the e-mail address of Jenkins administrator."]
    - ["JenkinsLocationConfiguration.java", "If the Jenkins URL starts from https, force the secure session flag"]
    - ["ModelObjectWithContextMenu.java", "<l:task> will look for this variable and populate us"]
    - ["ModelObjectWithContextMenu.java", "run sidepanel but ignore generated HTML"]
    - ["ModelObjectWithContextMenu.java", "fallback"]
    - ["CaptchaSupportDescriptor.java", "Winston.Prakash@oracle.com"]
    - ["CompositeCauseOfBlockage.java", "Represents the fact that there was at least one {@link hudson.model.Queue.JobOffer} which rejected a task."]
    - ["OptionalJobProperty.java", "config-details.jelly"]
    - ["OptionalJobProperty.java", "config-details.groovy"]
    - ["OptionalJobProperty.java", "help.html"]
    - ["StandardArtifactManager.java", "transfer of  + artifacts.size() +  files"]
    - ["AuthorizationStrategy.java", "Hudson by itself won't put the ACL returned from {@link #getRootACL()} into the serialized object graph, so if that object contains state and needs to be persisted, it's the responsibility of {@link AuthorizationStrategy} to do so (by keeping them in an instance field.)"]
    - ["AuthorizationStrategy.java", "This method is used by {@link ContainerAuthentication} to work around the servlet API issue that prevents us from enumerating roles that the user has."]
    - ["Nodes.java", "TODO we should not need to lock the queue for adding nodes but until we have a way to update the computer list for just the new node"]
    - ["Nodes.java", "TODO there is a theoretical race whereby the node instance is updated/removed after lock release"]
    - ["Nodes.java", "use the queue lock until Nodes has a way of directly modifying a single node."]
    - ["DefaultGlobalSettingsProvider.java", "nicolas.deloof@gmail.com"]
    - ["DefaultSettingsProvider.java", "nicolas.deloof@gmail.com"]
    - ["FilePathGlobalSettingsProvider.java", "nicolas.deloof@gmail.com"]
    - ["Search.java", "See http://developer.mozilla.org/en/docs/Supporting_search_suggestions_in_search_plugins"]
    - ["Search.java", "used from stapler views only"]
    - ["Search.java", "no exact match. show the suggestions"]
    - ["Search.java", "paths already added, to control duplicates"]
    - ["Search.java", "we have more than one suggested item, so return the item who's url contains the query as this is probably the job's name"]
    - ["Search.java", "If the path to this suggestion starts with the token list, 1. Otherwise 0."]
    - ["Search.java", "ones with head match should show up earlier"]
    - ["TransientActionFactory.java", "Restricted(NoExternalUse.class)"]
    - ["FilePathSettingsProvider.java", "mailto:nicolas.deloof@gmail.com"]
    - ["GlobalMavenConfig.java", "as close as it gets to the global Maven Project configuration"]
    - ["UnlabeledLoadStatistics.java", "why does Iterators.FilterIterator do the stupid thing and allow remove?"]
    - ["UnlabeledLoadStatistics.java", "remove should remove the object last returned by next(), but it won't if hasNext() is called"]
    - ["UnlabeledLoadStatistics.java", "the way Iterators.FilterIterator is written... it should just return a read-only view... which is what we do!"]
    - ["GlobalSettingsProviderDescriptor.java", "nicolas.deloof@gmail.com"]
    - ["SettingsProviderDescriptor.java", "nicolas.deloof@gmail.com"]
    - ["PluginSubtypeMarker.java", "javac sucks at reporting errors in annotation processors"]
    - ["PluginSubtypeMarker.java", "JENKINS-11739"]
    - ["IdStrategy.java", "The strategy to use for manipulating converting names (e.g. user names, group names, etc) into ids."]
    - ["IdStrategy.java", "Converts an ID into a name for use as a filename. The return value must not contain any filesystem unsafe characters or names. See https://msdn.microsoft.com/en-us/library/aa365247.aspx for information on reserved names."]
    - ["IdStrategy.java", "Legacy implementation used only for migrating old style config files to the new implementation."]
    - ["IdStrategy.java", "Converts a filename into the corresponding id. This may contain filesystem unsafe characters."]
    - ["IdStrategy.java", "A case sensitive email address {@link IdStrategy}. Providing this implementation among the set of default implementations as given the history of misunderstanding in the Jenkins code base around ID case sensitivity, if not provided people will get this wrong. Note: Not all email addresses are case sensitive. It is knowledge that belongs to the server that holds the mailbox. Most sane system administrators do not configure their accounts using case sensitive mailboxes but the RFC does allow them the option to configure that way. Domain names are always case insensitive per RFC."]
    - ["IdStrategy.java", "The @ can be used in local-part if quoted correctly => the last @ is the one used to separate the domain and local-part"]
    - ["View.java", "When did this user made a last commit on any of our projects? Can be null."]
    - ["View.java", "Which project did this user commit? Can be null."]
    - ["View.java", "Returns a human-readable string representation of when this user was last active."]
    - ["View.java", "Does this {@link View} has any associated user information recorded?"]
    - ["View.java", "Gets the users that show up in the changelog of this job collection."]
    - ["View.java", "TODO consider also adding the user of the UserCause when applicable"]
    - ["View.java", "this method can be used to check if a file exists anywhere in the file system, so it should be protected."]
    - ["View.java", "pity we don't have a handy way to clone Jenkins.XSTREAM to temp add the omit Field"]
    - ["View.java", "this allows us to use UTF-8 for storing data, plus it checks any well-formedness issue in the submitted data"]
    - ["View.java", "Do not allow overwriting view name as it might collide with another view in same ViewGroup and might not satisfy Jenkins.checkGoodName."]
    - ["View.java", "mostly reflection errors"]
    - ["ApiCrumbExclusion.java", "JENKINS-22474: Makes API Token calls bypass CSRF protection to ease usage"]
    - ["ApiTokenFilter.java", "HTTP basic authentication based on API token"]
    - ["ApiTokenFilter.java", "filter that handles BASIC auth with the real password"]
    - ["SettingsProvider.java", "Provides the path on the (possible) remote settings file."]
    - ["SettingsProvider.java", "the filepath to the provided file. <code>null</code> if no settings will be provided."]
    - ["SettingsProvider.java", "Provides the path to the settings.xml"]
    - ["CSRFAdministrativeMonitor.java", "Monitor that the CSRF protection is enabled on the application."]
    - ["RunWithSCM.java", "TODO: Probably it should not auto-create users"]
    - ["RunWithSCM.java", "we are still building, so this is just the current latest information, but we seems to be failing so far, so inherit culprits from the previous build."]
    - ["BasicHeaderAuthenticator.java", "When Jenkins receives HTTP basic authentication, this hook will validate the username/password pair."]
    - ["BasicHeaderAuthenticator.java", "Given the parsed username and password field from the basic authentication header, determine the effective security credential to process the request with."]
    - ["BasicHeaderAuthenticator.java", "This is necessary because Jenkins accepts both real password as well as API tokens for the password."]
    - ["BasicHeaderApiTokenAuthenticator.java", "Checks if the password given in the BASIC header matches the user's API token."]
    - ["BasicHeaderApiTokenAuthenticator.java", "Note: if the token does not exist or does not match, we do not use {@link SecurityListener#fireFailedToAuthenticate(String)} because it will be done in the {@link BasicHeaderRealPasswordAuthenticator} in the case the password is not valid either"]
    - ["BasicHeaderApiTokenAuthenticator.java", "attempt to authenticate as API token"]
    - ["BasicHeaderApiTokenAuthenticator.java", "The token was valid, but the impersonation failed. This token is clearly not his real password, so there's no point in continuing the request processing. Report this error and abort."]
    - ["CrumbIssuer.java", "Get the name of the request parameter the crumb will be stored in. Exposed here for the remote API."]
    - ["CrumbIssuer.java", "Get a crumb value based on user specific information in the current request. Intended for use only by the remote API."]
    - ["CrumbIssuer.java", "Create a crumb value based on user specific information in the request. The crumb should be generated by building a cryptographic hash of: relevant information in the request that can uniquely identify the client, the salt value, an implementation specific guarded secret."]
    - ["CrumbIssuer.java", "Get a crumb from a request parameter and validate it against other data in the current request. The salt and request parameter that is used is defined by the current configuration."]
    - ["CrumbIssuer.java", "Get a crumb from multipart form data and validate it against other data in the current request. The salt and request parameter that is used is defined by the current configuration."]
    - ["CrumbIssuer.java", "Validate a previously created crumb against information in the current request."]
    - ["CrumbIssuer.java", "Access global configuration for the crumb issuer."]
    - ["CrumbIssuer.java", "Sets up Stapler to use our crumb issuer."]
    - ["GlobalSettingsProvider.java", "mailto:nicolas.deloof@gmail.com"]
    - ["GlobalSettingsProvider.java", "the path to the global settings.xml"]
    - ["GlobalSettingsProvider.java", "the filepath to the provided file"]
    - ["AuthenticationProcessingFilter2.java", "let HttpSessionContextIntegrationFilter2 to create sessions."]
    - ["AuthenticationProcessingFilter2.java", "HttpSessionContextIntegrationFilter stores the updated SecurityContext object into this session later"]
    - ["AuthenticationProcessingFilter2.java", "whereas the from URL is resolved against the top of the website, so adjust this."]
    - ["AuthenticationProcessingFilter2.java", "URL returned from determineTargetUrl() is resolved against the context path,"]
    - ["AuthenticationProcessingFilter2.java", "doFilter method."]
    - ["AuthenticationProcessingFilter2.java", "avoid open redirect"]
    - ["AuthenticationProcessingFilter2.java", "either when a redirect is issued, via its HttpResponseWrapper, or when the execution returns to its"]
    - ["AuthenticationProcessingFilter2.java", "we can pick up the hidden from form field defined in <tt>login.jelly</tt> to send the user back to where he came from, after a successful authentication."]
    - ["AuthenticationProcessingFilter2.java", "not sure when this happens, but apparently this happens in some case."]
    - ["AuthenticationProcessingFilter2.java", "make sure we have a session to store this successful authentication, given that we no longer"]
    - ["AuthenticationProcessingFilter2.java", "Leave the information about login failure."]
    - ["AuthenticationProcessingFilter2.java", "Otherwise it seems like Acegi doesn't really leave the detail of the failure anywhere."]
    - ["AuthenticationProcessingFilter2.java", "see #1274"]
    - ["ImpersonatingUserDetailsService.java", "this backend cannot tell if the user name exists or not. so substitute by what we know"]
    - ["ImpersonatingScheduledExecutorService.java", "authentication for example {@link ACL#SYSTEM}"]
    - ["ExceptionTranslationFilter.java", "URL and exception information in the HttpSession"]
    - ["ExceptionTranslationFilter.java", "Store the HTTP request itself. Used by AbstractProcessingFilter for redirection after successful authentication (SEC-29)"]
    - ["ExceptionTranslationFilter.java", "Clear the SecurityContextHolder's Authentication, as the existing Authentication is no longer considered valid"]
    - ["DefaultConfidentialStore.java", "The master key is also stored in this same directory."]
    - ["DefaultConfidentialStore.java", "The sole purpose of the master key is to encrypt individual keys on the disk. Because leaking this master key compromises all the individual keys, we must not let this master key used for any other purpose, hence the protected access."]
    - ["DefaultConfidentialStore.java", "protect this directory. but don't change the permission of the existing directory in case the administrator changed this."]
    - ["DefaultConfidentialStore.java", "we are only going to use small number of bits (since export control limits AES key length) but let's generate a long enough key anyway"]
    - ["BasicHeaderRealPasswordAuthenticator.java", "Checks if the password given in the BASIC header matches the user's actual password, as opposed to other pseudo-passwords like API tokens."]
    - ["BasicHeaderRealPasswordAuthenticator.java", "Authentication success"]
    - ["BasicHeaderRealPasswordAuthenticator.java", "Authentication failed"]
    - ["BasicHeaderRealPasswordAuthenticator.java", "Legacy property to disable the real password support. Now that this is an extension, {@link ExtensionFilter} is a better way to control this."]
    - ["ImpersonatingExecutorService.java", "authentication for example {@link ACL#SYSTEM}"]
    - ["ImpersonatingExecutorService.java", "Uses {@link ACL#impersonate(Authentication)} for all tasks."]
    - ["CustomClassFilter.java", "Example: {@code -Dhudson.remoting.ClassFilter=com.google.common.collect.LinkedListMultimap,!com.acme.illadvised.YoloReflectionFactory$Handle}"]
    - ["CustomClassFilter.java", "To use, add a resource {@code META-INF/hudson.remoting.ClassFilter} to your plugin."]
    - ["CustomClassFilter.java", "Enumeration<URL> resources = Jenkins.getInstance().getPluginManager().uberClassLoader.getResources(META-INF/hudson.remoting.ClassFilter);"]
    - ["BasicHeaderProcessor.java", "Takes username:password given in the <tt>Authorization</tt> HTTP header and authenticates the request."]
    - ["BasicHeaderProcessor.java", "Implementations of {@link BasicHeaderAuthenticator} includes one that accepts the real password, then one that checks the user's API token."]
    - ["BasicHeaderProcessor.java", "Only reauthenticate if username doesn't match SecurityContextHolder and user isn't authenticated"]
    - ["BasicHeaderProcessor.java", "Handle unusual condition where an AnonymousAuthenticationToken is already present"]
    - ["BasicHeaderProcessor.java", "together with a BASIC authentication request header should indicate reauthentication using the BASIC protocol is desirable."]
    - ["BasicHeaderProcessor.java", "both of which force re-authentication if the respective header is detected (and in doing so replace any existing AnonymousAuthenticationToken). See SEC-610."]
    - ["NotReallyRoleSensitiveCallable.java", "not meant to be used where this matters"]
    - ["ConfidentialKey.java", "Confidential information that gets stored as a singleton in Jenkins, mostly some random token value."]
    - ["ConfidentialKey.java", "The actual value is persisted via {@link ConfidentialStore}, but each use case that requires a secret like this should use a separate {@link ConfidentialKey} instance so that one compromised {@link ConfidentialKey} (say through incorrect usage and failure to protect it) shouldn't compromise all the others."]
    - ["ConfidentialKey.java", "{@link ConfidentialKey} is ultimately a sequence of bytes, but for convenience, a family of subclasses are provided to represent the secret in different formats. See {@link HexStringConfidentialKey} and {@link HMACConfidentialKey} for example. In addition to the programming ease, these use case specific subtypes make it harder for vulnerability to creep in by making it harder for the secret to leak."]
    - ["ConfidentialKey.java", "The {@link ConfidentialKey} subtypes are expected to be used as a singleton, like {@link JnlpSlaveAgentProtocol#SLAVE_SECRET}. For code that relies on XStream for persistence (such as {@link Builder}s, {@link SCM}s, and other fragment objects around builds and jobs), {@link Secret} provides more convenient way of storing secrets."]
    - ["ConfidentialKey.java", "Name of the key. This is used as the file name."]
    - ["NonSerializableSecurityContext.java", "Jenkins doesn't work with a clustering anyway, and so it's better to just not persist Authentication at all."]
    - ["NonSerializableSecurityContext.java", "See <a href=http://jenkins.361315.n4.nabble.com/ActiveDirectory-Plugin-ClassNotFoundException-while-loading-persisted-sessions-tp376451.html>the problem report</a>."]
    - ["QueueItemAuthenticator.java", "Need a fake (unscheduled) item. All the other calls assume a BuildableItem but probably it does not matter."]
    - ["ClassFilterImpl.java", "https://jenkins.io/redirect/class-filter/"]
    - ["ClassFilterImpl.java", "whitelisted-classes.txt"]
    - ["QueueItemAuthenticatorConfiguration.java", "Provides all user-configured authenticators."]
    - ["QueueItemAuthenticatorConfiguration.java", "Show the {@link QueueItemAuthenticator} configurations on the system config page."]
    - ["HexStringConfidentialKey.java", "ConfidentialKey"]
    - ["HexStringConfidentialKey.java", "Returns the persisted hex string value."]
    - ["HexStringConfidentialKey.java", "If the value isn't persisted, a new random value is created."]
    - ["HexStringConfidentialKey.java", "If the secret fails to load. Not throwing a checked exception is for the convenience of the caller."]
    - ["AdminCallableMonitor.java", "bind this to URL"]
    - ["HMACConfidentialKey.java", "hash(msg|secret)"]
    - ["HMACConfidentialKey.java", "http://rdist.root.org/2009/10/29/stop-using-unsafe-keyed-hashes-use-hmac/"]
    - ["HMACConfidentialKey.java", "never leaks the secret value to outside"]
    - ["HMACConfidentialKey.java", "protecting ourselves from our own stupidity"]
    - ["HMACConfidentialKey.java", "By default we use HMAC-SHA256, which produces 256bit (=32bytes) HMAC"]
    - ["HMACConfidentialKey.java", "string encoding causes the length to double"]
    - ["HMACConfidentialKey.java", "Javadoc says HmacSHA256 must be supported by every Java implementation"]
    - ["HMACConfidentialKey.java", "Failed to load the key"]
    - ["AdminCallableWhitelist.java", "Whitelists {@link Callable}s that are approved by the admins."]
    - ["AdminCallableWhitelist.java", "This impl should be used only for those {@link Callable}s that our program does not have any idea for."]
    - ["RSADigitalSignatureConfidentialKey.java", "RSA digital signature as {@link ConfidentialKey} to prevent accidental leak of private key."]
    - ["RSADigitalSignatureConfidentialKey.java", "Sign a message and base64 encode the signature."]
    - ["RSADigitalSignatureConfidentialKey.java", "UTF-8 is mandatory"]
    - ["CryptoConfidentialKey.java", "Due to the stupid US export restriction JDK only ships 128bit version."]
    - ["CryptoConfidentialKey.java", "Reset the internal secret key for testing."]
    - ["CryptoConfidentialKey.java", "Returns a {@link Cipher} object for encrypting with this key."]
    - ["CryptoConfidentialKey.java", "Returns a {@link Cipher} object for decrypting with this key using the provided initialization vector."]
    - ["CryptoConfidentialKey.java", "Generates a new Initialization Vector."]
    - ["CryptoConfidentialKey.java", "Generates a new Initialization Vector of default length."]
    - ["CryptoConfidentialKey.java", "Returns a {@link Cipher} object for decrypting with this key."]
    - ["CryptoConfidentialKey.java", "Returns a {@link Cipher} object for encrypting with this key using the provided initialization vector."]
    - ["CallableWhitelistConfig.java", "Set of fully-qualified {@link RoleSensitive} (mostly Callable) class names that are whitelisted by admin."]
    - ["LastGrantedAuthoritiesProperty.java", "user should have been created but may not have been saved for some realms"]
    - ["LastGrantedAuthoritiesProperty.java", "doing this means a malicious user can break the impersonation capability"]
    - ["LastGrantedAuthoritiesProperty.java", "just by failing to login. See ApiTokenFilter that does the following, which seems better:"]
    - ["LastGrantedAuthoritiesProperty.java", "Not/no longer a user; deny the API token. (But do not leak the information that this happened.)"]
    - ["LastGrantedAuthoritiesProperty.java", "LOGGER.log(Level.WARNING, Failed to record granted authorities,e);"]
    - ["CallableRejectionConfig.java", "already whitelisted"]
    - ["CallableRejectionConfig.java", "no longer present in the system?"]
    - ["CallableRejectionConfig.java", "Text file that lists whitelisted callables."]
    - ["ConfigFile.java", "Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);"]
    - ["RSAConfidentialKey.java", "going beyond 2048 requires crypto extension"]
    - ["RSAConfidentialKey.java", "Obtains the private key (lazily.)"]
    - ["RSAConfidentialKey.java", "This method is not publicly exposed as per the design principle of {@link ConfidentialKey}. Instead of exposing private key, define methods that use them in specific way, such as {@link RSADigitalSignatureConfidentialKey}."]
    - ["RSAConfidentialKey.java", "Gets base64-encoded public key."]
    - ["RSAConfidentialKey.java", "RSA public/private key pair as {@link ConfidentialKey}. As per the design principle of {@link ConfidentialKey}, not exposing {@link PrivateKey} directly. Define subtypes for different use cases."]
    - ["DefaultFilePathFilter.java", "Blocks agents from writing to files on the master by default (and also provide the kill switch.)"]
    - ["DefaultFilePathFilter.java", "Escape hatch to disable this check completely."]
    - ["DefaultFilePathFilter.java", "for the bypass switch to be effective, it should have a high priority"]
    - ["AdminFilePathFilter.java", "Local user preference should have higher priority than random FilePathFilters that plugins might provide."]
    - ["CallableWhitelist.java", "Returns true if given {@code subject} should be allowed to execute on the master even though it came over channel from other JVMs."]
    - ["CallableWhitelist.java", "Used on the master to selectively allow specific {@link Callable}s to execute on the master even when those {@link Callable}s do not have proper {@link Role} declarations from its {@link Callable#checkRoles(RoleChecker)} method."]
    - ["Roles.java", "Indicates that a callable runs on masters, requested by agents/CLI/maven/whatever."]
    - ["Roles.java", "Indicates that a callable is meant to run on agents."]
    - ["SecurityContextExecutorService.java", "SecurityContext"]
    - ["SlaveToMasterCallable.java", "Note that any serializable fields must either be defined in your plugin or included in the stock JEP-200 whitelist."]
    - ["UpdateSiteWarningsMonitor.java", "Redirects the user to the plugin manager or security configuration"]
    - ["SecureRequester.java", "A default implementation allows requests if a deprecated system property is set, or if Jenkins is unsecured anyway"]
    - ["SecureRequester.java", "Both JSONP and XPath with primitive result sets are considered unsafe due to CSRF attacks"]
    - ["SecureRequester.java", "Checks if a Jenkins object can be accessed by a given REST request. For instance, if the {@link StaplerRequest#getReferer} matches a given host, or anonymous read is allowed for the given object."]
    - ["BuildStep.java", "When this build step needs to make (direct or indirect) permission checks to {@link ACL} (for example, to locate other projects by name, build them, or access their artifacts) then it must be run under a specific {@link Authentication}. In such a case, the implementation should check whether {@link Jenkins#getAuthentication} is {@link ACL#SYSTEM}, and if so, replace it for the duration of this step with {@link Jenkins#ANONYMOUS}. (Either using {@link ACL#impersonate}, or by making explicit calls to {@link ACL#hasPermission(Authentication, Permission)}.) This would typically happen when no {@link QueueItemAuthenticator} was available, configured, and active."]
    - ["MasterKillSwitchConfiguration.java", "Exposes {@link AdminWhitelistRule#masterKillSwitch} to the admin."]
    - ["MasterKillSwitchConfiguration.java", "don't record on/off unless this becomes relevant, so that we can differentiate those who have disabled vs those who haven't cared."]
    - ["MasterKillSwitchConfiguration.java", "Returns true if the configuration of this subsystem becomes relevant. Unless this option is relevant, we don't let users choose this."]
    - ["RekeySecretAdminMonitor.java", "Warns the administrator to run {@link SecretRewriter}"]
    - ["RekeySecretAdminMonitor.java", "SECURITY-376: no longer used"]
    - ["RekeySecretAdminMonitor.java", "as early as possible, but this needs to be late enough that the ConfidentialStore is available"]
    - ["RekeySecretAdminMonitor.java", "since $JENKINS_HOME/config.xml can be saved later before the user has actually rewritten XML files."]
    - ["RekeySecretAdminMonitor.java", "block the boot until the rewrite process is complete"]
    - ["RekeySecretAdminMonitor.java", "don't let the failure in RekeyThread block Jenkins boot."]
    - ["RekeySecretAdminMonitor.java", "Rewrite log file."]
    - ["DefaultJnlpSlaveReceiver.java", "Disables strict verification of connections. Turn this on if you have plugins that incorrectly extend {@link ComputerLauncher} when then should have extended {@link DelegatingComputerLauncher}"]
    - ["DefaultJnlpSlaveReceiver.java", "TODO remove when all plugins are fixed"]
    - ["DefaultJnlpSlaveReceiver.java", "we think we are currently connected, but this request proves that it's from the party we are supposed to be communicating to. so let the current one get disconnected"]
    - ["JnlpSlaveAgentProtocol2.java", "per-client cookie"]
    - ["JnlpSlaveAgentProtocol2.java", "JnlpConnectionState.COOKIE_KEY"]
    - ["NioChannelSelector.java", "Escape hatch to disable use of NIO."]
    - ["JnlpAgentReceiver.java", "JnlpSlaveAgentProtocol.SLAVE_SECRET.mac(clientName)"]
    - ["LogRotator.java", "Creates a copy since we'll be deleting some entries from them."]
    - ["LogRotator.java", "Note that RunList.size is deprecated, and indeed here we are loading all the builds of the job."]
    - ["LogRotator.java", "If not -1, history is only kept up to this days."]
    - ["LogRotator.java", "If not -1, only this number of build logs are kept."]
    - ["LogRotator.java", "If not -1 nor null, artifacts are only kept up to this days."]
    - ["LogRotator.java", "If not -1 nor null, only this number of builds have their artifacts kept."]
    - ["LogRotator.java", "always keep the last successful and the last stable builds"]
    - ["UserDetailsCache.java", "Gets the cached UserDetails for the given username."]
    - ["UserDetailsCache.java", "Locates the user based on the username, by first looking in the cache and then delegate to {@link hudson.security.SecurityRealm#loadUserByUsername(String)}."]
    - ["UserDetailsCache.java", "Discards any cached value for key."]
    - ["UserDetailsCache.java", "Callable that performs the actual lookup if there is a cache miss."]
    - ["RemotingWorkDirSettings.java", "See <a href=https://github.com/jenkinsci/remoting/blob/master/docs/workDir.md>Remoting Work Dir Documentation</a>."]
    - ["RemotingVersionInfo.java", "TODO: Make the API public (JENKINS-48766)"]
    - ["RemotingVersionInfo.java", "Due to whatever reason, Maven does not nullify them"]
    - ["SlaveRestarter.java", "Objects are instantiated on the master, then transferred to an agent via serialization."]
    - ["CallableDirectionChecker.java", "Switch to disable all the defense mechanism completely."]
    - ["CallableDirectionChecker.java", "This is an escape hatch in case the fix breaks something critical, to allow the user to keep operation."]
    - ["CallableDirectionChecker.java", "if the big red emergency button is pressed, then we need to disable the defense mechanism, including enabling classloading."]
    - ["CallableDirectionChecker.java", "Whitelist rule based on system properties."]
    - ["CallableDirectionChecker.java", "For the bypass kill switch to be effective, it needs to have a high enough priority"]
    - ["SlaveToMasterFileCallable.java", "Note that any serializable fields must either be defined in your plugin or included in the stock JEP-200 whitelist."]
    - ["GlobalToolConfiguration.java", "if it doesn't have the property, the method returns invalid null object."]
    - ["SoloFilePathFilter.java", "https://jenkins.io/redirect/security-144"]
    - ["ApiTokenProperty.java", "We don't want an API key that's too long, so cut the length to 16 (which produces 32-letter MAC code in hexdump)"]
    - ["ApiTokenProperty.java", "String.equals isn't constant time, but this is"]
    - ["ApiTokenProperty.java", "We don't let the external code set the API token, but for the initial value of the token we need to compute the seed by ourselves."]
    - ["ApiTokenProperty.java", "if the current token is the initial value created by pre SECURITY-49 Jenkins, we can't use that."]
    - ["ApiTokenProperty.java", "Gets the API token. The method performs security checks since 1.638. Only the current user and SYSTEM may see it. Users with {@link Jenkins#ADMINISTER} may be allowed to do it using {@link #SHOW_TOKEN_TO_ADMINS}. @return API Token. Never null, but may be {@link Messages#ApiTokenProperty_ChangeToken_TokenIsHidden()} if the user has no appropriate permissions. @since 1.426, and since 1.638 the method performs security checks"]
    - ["ApiTokenProperty.java", "16x8=128bit worth of randomness, since we use md5 digest as the API token"]
    - ["ApiTokenProperty.java", "If enabled, shows API tokens to users with {@link Jenkins#ADMINISTER) permissions. Disabled by default due to the security reasons. If enabled, it restores the original Jenkins behavior (SECURITY-200). @since 1.638"]
    - ["ApiTokenProperty.java", "Administrators can do whatever they want"]
    - ["ApiTokenProperty.java", "SYSTEM user is always eligible to see tokens"]
    - ["ApiTokenProperty.java", "Remembers the API token for this user, that can be used like a password to login."]
    - ["ApiTokenProperty.java", "When we are creating a default {@link ApiTokenProperty} for User, we need to make sure it yields the same value for the same user, because there's no guarantee that the property is saved. But we also need to make sure that an attacker won't be able to guess the initial API token value. So we take the seed by hashing the secret + user ID."]
    - ["JnlpSlaveAgentProtocol3.java", "we only want to force the protocol off for users that have explicitly banned it via system property"]
    - ["JnlpSlaveAgentProtocol3.java", "everyone on the A/B test will just have the opt-in flag toggled"]
    - ["JnlpSlaveAgentProtocol3.java", "TODO strip all this out and hardcode OptIn==TRUE once JENKINS-36871 is merged"]
    - ["JnlpSlaveAgentProtocol3.java", "Flag to control the activation of JNLP3 protocol. Once this will be on by default, the flag and this field will disappear. The system property is an escape hatch for those who hit any issues and those who are trying this out."]
    - ["WorkspaceLocator.java", "ryan.campbell@gmail.com"]
    - ["JnlpSlaveAgentProtocol4.java", "prepare our keyStore so we can provide our authentication"]
    - ["JnlpSlaveAgentProtocol4.java", "prepare our local identity and certificate"]
    - ["JnlpSlaveAgentProtocol4.java", "prepare our keyManagers to provide to the SSLContext"]
    - ["JnlpSlaveAgentProtocol4.java", "prepare our trustManagers"]
    - ["JnlpSlaveAgentProtocol4.java", "prepare our SSLContext"]
    - ["JnlpSlaveAgentProtocol.java", "This secret value is used as a seed for agents."]
    - ["JnlpSlaveAgentProtocol.java", "We do this by computing HMAC of the agent name. This code is sent to the agent inside the <tt>.jnlp</tt> file (this file itself is protected by HTTP form-based authentication that we use everywhere else in Jenkins), and the agent sends this token back when it connects to the master. Unauthorized agents can't access the protected <tt>.jnlp</tt> file, so it can't impersonate a valid agent."]
    - ["JnlpSlaveAgentProtocol.java", "right now this secret master key is generated once and used forever, which makes this whole scheme less secure."]
    - ["UnixSlaveRestarter.java", "go through the whole motion to make sure all the relevant classes are loaded now"]
    - ["UnixSlaveRestarter.java", "exec to self"]
    - ["UnixSlaveRestarter.java", "close all files upon exec, except stdin, stdout, and stderr"]
    - ["UnixSlaveRestarter.java", "On Unix, restart via exec-ing to itself."]
    - ["UnixSlaveRestarter.java", "quick test to reject non-Unix without loading all the rest of the classes"]
    - ["AntWithFindResourceClassLoader.java", "try and load from this loader if the parent either didn't find it or wasn't consulted."]
    - ["FilePathRuleConfig.java", "do not canonicalize, so that JENKINS_HOME that spans across"]
    - ["FilePathRuleConfig.java", "config file is always /-separated even on Windows, so bring it back to -separation."]
    - ["FilePathRuleConfig.java", "This is done in the context of regex, so it has to be , which means in the source code it is "]
    - ["FilePathRuleConfig.java", "therefore I'm not throwing a SecurityException here"]
    - ["FilePathRuleConfig.java", "Windows accepts '/' as separator, but for rule matching we want to normalize for consistent comparison"]
    - ["FilePathRuleConfig.java", "exclusion rule is only to bypass later path rules within #filePathRules,"]
    - ["FilePathRuleConfig.java", "multiple volumes via symlinks can look logically like one unit."]
    - ["FilePathRuleConfig.java", "Config file that lists {@link FilePathRule} rules."]
    - ["SimpleBuildWrapper.java", "initialEnvironment"]
    - ["SimpleBuildWrapper.java", "makeSensitiveBuildVariables"]
    - ["SimpleBuildWrapper.java", "getSensitiveBuildVariables"]
    - ["SimpleBuildWrapper.java", "EnvVars itself recorded which keys had sensitive values"]
    - ["HttpSessionListener.java", "tom.fennelly@gmail.com"]
    - ["StandardOutputSwapper.java", "swap it into channel so that it'll use the new file descriptor"]
    - ["StandardOutputSwapper.java", "duplicate the OS file descriptor and create FileOutputStream around it"]
    - ["StandardOutputSwapper.java", "close fd=1 (stdout) and duplicate fd=2 (stderr) into fd=1 (stdout)"]
    - ["ReverseBuildTrigger.java", "Fails because of missing Item.READ but downstream user has Item.DISCOVER"]
    - ["ReverseBuildTrigger.java", "Fails because of missing Item.READ but upstream user has Item.DISCOVER"]
    - ["ReverseBuildTrigger.java", "This checks Item.READ also on parent folders; note we are checking as the upstream auth currently"]
    - ["ReverseBuildTrigger.java", "No need to check Item.BUILD on downstream, because the downstream project’s configurer has asked for this."]
    - ["AtmostOneTaskExecutor.java", "Guarded by synchronized(this)"]
    - ["FullDuplexHttpService.java", "do not require any permission to establish a CLI connection"]
    - ["FullDuplexHttpService.java", "the actual authentication for the connecting Channel is done by CLICommand"]
    - ["ErrorLoggingScheduledThreadPoolExecutor.java", "TODO is there anything in Guava for this?"]
    - ["ErrorLoggingScheduledThreadPoolExecutor.java", "TODO super Javadoc does not suggest this, but without it, we hang in FutureTask.awaitDone!"]
    - ["ErrorLoggingScheduledThreadPoolExecutor.java", "just to be on the safe side, do not wait"]
    - ["ErrorLoggingScheduledThreadPoolExecutor.java", "should not happen, right?"]
    - ["ErrorLoggingScheduledThreadPoolExecutor.java", "probably best to ignore this"]
    - ["ServerTcpPort.java", "Used in conjunction with /lib/form/serverTcpPort tag to parse the submitted JSON back into a port number."]
    - ["ConfidentialStore.java", "The actual storage for the data held by {@link ConfidentialKey}s, and the holder of the master secret."]
    - ["ConfidentialStore.java", "Persists the payload of {@link ConfidentialKey} to a persisted storage (such as disk.) The expectation is that the persisted form is secure."]
    - ["ConfidentialStore.java", "Reverse operation of {@link #store(ConfidentialKey, byte[])} @return null the data has not been previously persisted, or if the data was tampered."]
    - ["ConfidentialStore.java", "Works like {@link SecureRandom#nextBytes(byte[])}. This enables implementations to consult other entropy sources, if it's available."]
    - ["ConfidentialStore.java", "Testing only. Used for testing {@link ConfidentialKey} without {@link Jenkins}"]
    - ["EncryptedSlaveAgentJnlpFile.java", "Name of the agent, which is used to determine secret HMAC code if {@link #it} is not a {@link SlaveComputer}."]
    - ["EncryptedSlaveAgentJnlpFile.java", "The object that owns the Jelly view that renders JNLP file. This is typically a {@link SlaveComputer} and if so we'll use {@link SlaveComputer#getJnlpMac()} to determine the secret HMAC code."]
    - ["EncryptedSlaveAgentJnlpFile.java", "Permission that allows plain text access. Checked against {@link #it}."]
    - ["EncryptedSlaveAgentJnlpFile.java", "The client can request an encrypted payload (with JNLP MAC code as the key) or if the client has a suitable permission, it can request a plain text payload."]
    - ["EncryptedSlaveAgentJnlpFile.java", "export restrictions"]
    - ["AdminWhitelistRule.java", "while this file is not a secret, write access to this file is dangerous, so put this in the better-protected part of $JENKINS_HOME, which is in secrets/"]
    - ["AdminWhitelistRule.java", "overwrite 30-default.conf with what we think is the best from the core."]
    - ["AdminWhitelistRule.java", "this file shouldn't be touched by anyone. For local customization, use other files in the conf dir."]
    - ["AdminWhitelistRule.java", "0-byte file is used as a signal from the admin to prevent this overwriting"]
    - ["AdminWhitelistRule.java", "Reads the master kill switch. Instead of {@link FileBoolean}, we use a text file so that the admin can prevent Jenkins from writing this to file."]
    - ["AdminWhitelistRule.java", "we allow admins to create a read-only file here to block overwrite, so this can fail legitimately"]
    - ["AdminWhitelistRule.java", "master kill switch is on. subsystem deactivated"]
    - ["AdminWhitelistRule.java", "whitelisted by admin"]
    - ["AdminWhitelistRule.java", "otherwise record the problem and refuse to execute that"]
    - ["AdminWhitelistRule.java", "if the master kill switch is off, we allow everything"]
    - ["AdminWhitelistRule.java", "test first before writing a potentially broken rules"]
    - ["AdminWhitelistRule.java", "Approves all the currently rejected subjects"]
    - ["AdminWhitelistRule.java", "Approves specific callables by their names."]
    - ["AdminWhitelistRule.java", "treat the file as the canonical source of information in case write fails"]
    - ["AdminWhitelistRule.java", "Restricts the access to administrator."]
    - ["TreeString.java", "dedup at the end"]
    - ["VirtualFile.java", "TODO JENKINS-26838"]
    - ["SystemProperties.java", "TODO: Define a correct design of this engine later. Should be accessible in libs (remoting, stapler) and Jenkins modules too"]
    - ["SystemProperties.java", "this class implements ServletContextListener and is declared in WEB-INF/web.xml"]
    - ["FilteredFunctionContext.java", "Robert Sandell &lt;rsandell@cloudbees.com&gt;"]
    - ["WinswSlaveRestarter.java", "not under winsw"]
    - ["WinswSlaveRestarter.java", "winsw 1.16 supports this operation. this file gets updated via windows-slaves-plugin, so it's possible that we end up in the situation where jenkins-slave.exe doesn't support this command. If that is the case, there's nothing we can do about it."]
    - ["HistoryPageEntry.java", "tom.fennelly@gmail.com"]
    - ["TimeDuration.java", "This supports parameter injection, such as via {@link QueryParameter}."]
    - ["Maven.java", "Provides access to the settings.xml to be used for a build."]
    - ["Maven.java", "Provides access to the global settings.xml to be used for a build."]
    - ["Maven.java", "Skip injecting build variables as properties into maven process."]
    - ["Maven.java", "Looks for <tt>pom.xlm</tt> or <tt>project.xml</tt> to determine the maven executable name."]
    - ["Maven.java", "check for the -f option"]
    - ["Maven.java", "split targets into multiple invocations of maven separated by |"]
    - ["Maven.java", "Inject environment variables only if chosen to do so"]
    - ["Maven.java", "Add properties from builder configuration, AFTER the injected build variables."]
    - ["Maven.java", "Build up the environment variables toward the Maven launch."]
    - ["Maven.java", "if somebody has use M2_HOME they will get a classloading error"]
    - ["Maven.java", "The other solution would be to set M2_HOME if we are calling Maven2 and MAVEN_HOME for Maven1 (only of use for strange people that are calling Maven2 from Maven1)"]
    - ["Maven.java", "see http://maven.apache.org/continuum/faqs.html#how-does-continuum-detect-a-successful-build"]
    - ["Maven.java", "Checks if the MAVEN_HOME is valid."]
    - ["Maven.java", "FIXME using similar stuff as in the maven plugin could be better"]
    - ["Maven.java", "olamy : but will add a dependency on maven in core -> so not so good"]
    - ["Maven.java", "be defensive"]
    - ["Maven.java", "since Maven 3.3 .bat files are replaced with .cmd"]
    - ["Maven.java", "overriding them for backward compatibility."]
    - ["Maven.java", "newer code need not do this"]
    - ["Maven.java", "remote empty Maven installation :"]
    - ["Maven.java", "Automatic Maven installer from apache.org."]
    - ["BuildTimeTrend.java", "only for buildTimeTrend.jelly"]
    - ["ProgressiveRendering.java", "securityContext"]
    - ["ProgressiveRendering.java", "request.getRequestURI()"]
    - ["ProgressiveRendering.java", "BoundObjectTable#releaseMe"]
    - ["ProgressiveRendering.java", "DEBUG_SLEEP"]
    - ["ResourceBundleUtil.java", "tom.fennelly@gmail.com"]
    - ["ResourceBundleUtil.java", "Not in Jenkins core. Check the plugins."]
    - ["ResourceBundleUtil.java", "Jenkins.getInstance(); // will never return null"]
    - ["ViewOptionHandlerTest.java", "Hierarchy of views used as a shared fixture: $JENKINS_URL/view/outer/view/nested/view/inner/"]
    - ["BuildListTable.java", "only for buildListTable.jelly"]
    - ["XStreamDOM.java", "TODO: ideally we'd like to use the contextual HierarchicalStreamWriter to unescape, but this object isn't exposed to us"]
    - ["ChannelRule.java", "perhaps this exception is caused by earlier abnormal termination of the channel?"]
    - ["ChannelRule.java", "for the record, this is the failure."]
    - ["ListJobsCommandTest.java", "TODO enable when you figure out why ListJobsCommandTest$1Folder$EnhancerByMockitoWithCGLIB$f124784a calls ReturnsEmptyValues, or just use MockFolder and move to the test module with JenkinsRule"]
    - ["LauncherTest.java", "TODO .replace does not seem to work"]
    - ["UrlAnnotatorTest.java", "http://www.sun.com/"]
    - ["UrlAnnotatorTest.java", "http://www.kohsuke.org/"]
    - ["UrlAnnotatorTest.java", "http://www.oracle.com/"]
    - ["UrlAnnotatorTest.java", "http://url/"]
    - ["AutoCompleteSeederTest.java", "seed"]
    - ["BindAuthenticator2.java", "If we ever had a successful authentication"]
    - ["BuildStatusSummaryTest.java", "same if there is no previous build"]
    - ["BuildStatusSummaryTest.java", "from NOT_BUILD should also mean normal success and not 'back to normal'"]
    - ["BuildStatusSummaryTest.java", "same if previous one was aborted"]
    - ["BuildStatusSummaryTest.java", "same from unstable:"]
    - ["ComputerTest.java", "Slave log should be deleted"]
    - ["ComputerTest.java", "Slave log directory should be deleted"]
    - ["ComputerTest.java", "Slave log should be kept"]
    - ["ComputerTest.java", "userId"]
    - ["ComputerTest.java", "apiToken"]
    - ["MockItem.java", "tom.fennelly@gmail.com"]
    - ["ListViewTest.java", "Note: did not manage to reproduce CCE until I changed expand to use ‘for (TopLevelItem item : items)’ rather than ‘for (Item item : items)’; perhaps a compiler-specific issue?"]
    - ["FilePathTest.java", "Fine, error message talks about permission denied."]
    - ["FilePathTest.java", "Full permissions for owner and group plus sticky bit."]
    - ["FilePathTest.java", "Windows seems to have random failures when setting the timestamp on newly generated files. So test that:"]
    - ["FilePathTest.java", "As we moved the I/O handling to another thread, there's a race condition in {@link FilePath#copyTo(OutputStream)} &mdash; this method can return before all the writes are delivered to {@link OutputStream}."]
    - ["DisplayNameListenerTest.java", "make sure the displayname and the name are different at this point"]
    - ["DisplayNameListenerTest.java", "make sure the displayname is equals to the name as it should be null"]
    - ["DisplayNameListenerTest.java", "make sure displayname is still intact"]
    - ["FunctionsTest.java", "TODO . (in second ancestor) is what Stapler currently fails to do. Could edit test to use .. but set a different request path?"]
    - ["FunctionsTest.java", "Synthetic stack showing an exception made elsewhere, such as happens with hudson.remoting.Channel.attachCallSiteStackTrace."]
    - ["FunctionsTest.java", "Same but now using a cause on the remote side."]
    - ["FunctionsTest.java", "Suppressed exceptions: try {…} catch (Exception x) {throw new IllegalStateException(more info);}"]
    - ["ResourceListTest.java", "write count is two"]
    - ["ResourceListTest.java", "write count is three"]
    - ["RunParameterValueTest.java", "folder/job#57"]
    - ["FileParameterValueTest.java", "o.v.nenashev@gmail.com"]
    - ["FileParameterValueTest.java", "new File(ws_param1.txt)"]
    - ["FileParameterValueTest.java", "new File(ws_param2.txt)"]
    - ["FileParameterValueTest.java", "new File(null_param1.txt)"]
    - ["FileParameterValueTest.java", "new File(null_param2.txt)"]
    - ["StubJob.java", "Override save so that nothig happens when setDisplayName() is called"]
    - ["FilePath.java", "none entered yet, or something is seriously wrong"]
    - ["FilePath.java", "First try to download from the agent machine."]
    - ["FilePath.java", "this.channel==target.channel above"]
    - ["FilePath.java", "JENKINS-9540 in case the reading side failed, report that error first"]
    - ["FilePath.java", "the remote side completed successfully, so the error must be local"]
    - ["FilePath.java", "remote is hanging"]
    - ["FilePath.java", "Ant returns 0 if the archive doesn't record the access mode"]
    - ["FilePath.java", "without absolutization, getParentFile below seems to fail"]
    - ["FilePath.java", "TODO why does this not simply use ZipInputStream?"]
    - ["FilePath.java", "uses java.io.tmpdir"]
    - ["FilePath.java", "legacy agent.jar. Handle this gracefully"]
    - ["FilePath.java", "A pointless function to work around what appears to be a HotSpot problem. See JENKINS-5756 and bug 6933067 on BugParade for more details."]
    - ["FilePath.java", "it allows others to create new files, causing problems like JENKINS-10113"]
    - ["FilePath.java", "JENKINS-16846: if f.getName() is the same as one of the files/directories in f, then the rename op will fail"]
    - ["FilePath.java", "TODO: this might not be the most efficient way to do the copy."]
    - ["FilePath.java", "JENKINS-5253 - if we can get some match in case insensitive mode and user requested case sensitive match, notify the user"]
    - ["FilePath.java", "in 1.172 we introduced an incompatible change to stop using ' ' as the separator"]
    - ["FilePath.java", "a common mistake is to assume the wrong base dir, and there are two variations to this: (1) the user gave us aa/bb/cc/dd where cc/dd was correct and (2) the user gave us cc/dd where aa/bb/cc/dd was correct."]
    - ["FilePath.java", "check the (1) above first"]
    - ["FilePath.java", "check the (2) above next as this is more expensive."]
    - ["FilePath.java", "Try prepending '**/' to see if that results in a match"]
    - ["FilePath.java", "finally, see if we can identify any sub portion that's valid. Otherwise bail out"]
    - ["FilePath.java", "no more path component left to go back"]
    - ["FilePath.java", "this is not a very efficient/clever way to do it, but it's relatively simple"]
    - ["FilePath.java", "TODO: post release, re-unite two branches by introducing FileStreamCallable that resolves InputStream"]
    - ["MarkFindingOutputStream.java", "flush the portion up to MARK"]
    - ["MarkFindingOutputStream.java", "Position in {@link #MARK} if we are currently suspecting a match."]
    - ["MarkFindingOutputStream.java", "if a part of the partial match spans into the previous write, we need to fake that write."]
    - ["MarkFindingOutputStream.java", "having a new line in the end makes it work better with line-buffering transformation"]
    - ["MarkFindingOutputStream.java", "Filtering {@link OutputStream} that looks for {@link #MARK} in the output stream and notifies the callback."]
    - ["MarkFindingOutputStream.java", "The mark itself will be removed from the stream."]
    - ["MarkFindingOutputStream.java", "irrelevant byte."]
    - ["MarkFindingOutputStream.java", "only matched partially."]
    - ["MarkFindingOutputStream.java", "another byte matched. Good. Keep going..."]
    - ["MarkFindingOutputStream.java", "only matched partially. send the partial match that we held off down the pipe"]
    - ["MarkFindingOutputStream.java", "don't send MARK to the output, but instead notify the callback"]
    - ["MarkFindingOutputStream.java", "if we are partially matching, can't send that portion yet."]
    - ["MarkFindingOutputStream.java", "this b[i] might be a fast byte in MARK, so we'll retry"]
    - ["MarkFindingOutputStream.java", "this might match the first byte in MARK, so retry."]
    - ["UpdateCenterTest.java", "TODO this should not be in core at all; should be in repo built by a separate job somewhere"]
    - ["UpdateCenterTest.java", "make sure the certificate is valid for a while more"]
    - ["SUTester.java", "kohsuke"]
    - ["SUTester.java", "/tmp/x"]
    - ["ProxyConfigurationTest.java", "*.example.com|192.168.*"]
    - ["FingerprintTest.java", "TODO: Refactoring: Tests should be exchanged with FingerprinterTest somehow"]
    - ["FingerprintTest.java", "Ensure we can read the original from user account"]
    - ["FingerprintTest.java", "can access project1"]
    - ["FingerprintTest.java", "can access project2"]
    - ["FingerprintTest.java", "cannot access anything"]
    - ["FingerprintTest.java", "Project permissions"]
    - ["FingerprintTest.java", "Setup the environment"]
    - ["FingerprintTest.java", "Prevents the fallback to the folder ACL"]
    - ["FingerprintTest.java", "Init Users and security"]
    - ["FingerprintTest.java", "Security strategy, which prevents the permission inheritance from upper folders."]
    - ["FingerprintTest.java", "TODO: could be reworked to support multiple assignments"]
    - ["ParametersActionTest.java", "Prepare parameters Action"]
    - ["ParametersActionTest.java", "Non existent parameter"]
    - ["ParametersActionTest.java", "Interaction with build"]
    - ["ParametersActionTest.java", "Merges and overrides"]
    - ["CronTabDayOfWeekLocaleTest.java", "http://issues.hudson-ci.org/browse/HUDSON-8656"]
    - ["PluginWrapperTest.java", "Some value needed - tests will overwrite if necessary"]
    - ["PluginWrapperTest.java", "per test"]
    - ["Timer.java", "corePoolSize is set to 10, but will only be created if needed."]
    - ["Timer.java", "ScheduledThreadPoolExecutor acts as a fixed-sized pool using corePoolSize threads"]
    - ["Timer.java", "TODO consider also wrapping in ContextResettingExecutorService"]
    - ["DCOMSandbox.java", "bogus credential works with ServerAlive"]
    - ["DCOMSandbox.java", "HKLMSYSTEMCurrentControlSetControlLSAforceguest"]
    - ["DCOMSandbox.java", "rpc.security.username"]
    - ["DCOMSandbox.java", "rpc.security.password"]
    - ["DCOMSandbox.java", "rpc.ntlm.domain"]
    - ["CronTabEventualityTest.java", "Jan 11th 2012 22:33"]
    - ["CronTabEventualityTest.java", "If both day of month and day of week are specified:
        UNIX: triggered when either matches
        Jenkins: triggered when both match"]
    - ["HistoryPageFilter.java", "tom.fennelly@gmail.com"]
    - ["ArgumentListBuilderTest.java", "Try to hide password"]
    - ["CopyOnWriteListTest.java", "Verify that the serialization form of List and CopyOnWriteList are the same."]
    - ["CyclicGraphDetectorTest.java", "Performs a cycle check."]
    - ["XMLUtils.java", "defend against XXE"]
    - ["XMLUtils.java", "the above features should strip out entities - however the feature may not be supported depending on the xml implementation used and this is out of our control."]
    - ["XMLUtils.java", "So add a fallback plan if all else fails."]
    - ["XMLUtils.java", "for some reason we could not convert source"]
    - ["XMLUtils.java", "this applies to DOMSource and StAXSource - and possibly 3rd party implementations..."]
    - ["XMLUtils.java", "a DOMSource can already be compromised as it is parsed by the time it gets to us."]
    - ["XMLUtils.java", "Note - to turn off safety set the system property <code>disableXXEPrevention</code> to <code>true</code>."]
    - ["XMLUtils.java", "this allows us to use UTF-8 for storing data, plus it checks any well-formedness issue in the submitted data."]
    - ["XMLUtils.java", "Set parser features to prevent against XXE etc."]
    - ["XMLUtils.java", "Note: setting only the external entity features on DocumentBuilderFactory instance"]
    - ["XMLUtils.java", "(ala how safeTransform does it for SAXTransformerFactory) does seem to work (was still processing the entities - tried Oracle JDK 7 and 8 on OSX). Setting seems a bit extreme, but looks like there's no other choice."]
    - ["ViewTest.java", "create user"]
    - ["ViewTest.java", "wait until all configuration are reloaded"]
    - ["ViewTest.java", "did not work"]
    - ["ViewTest.java", "not on root or d2"]
    - ["FormValidationTest.java", "@Issue(JENKINS-7438)"]
    - ["JSONObjectResponseTest.java", "tom.fennelly@gmail.com"]
    - ["MockSecretRule.java", "temporary {@link Secret#SECRET} value"]
    - ["ChannelPingerTest.java", "System.setProperty(hudson.slaves.ChannelPinger.pingTimeoutSeconds, 42)"]
    - ["ChannelPingerTest.java", "System.setProperty(hudson.slaves.ChannelPinger.pingIntervalSeconds, 73)"]
    - ["ChannelPingerTest.java", "System.setProperty(hudson.slaves.ChannelPinger.pingInterval, 7)"]
    - ["MultipartFormDataParserTest.java", "tom.fennelly@gmail.com"]
    - ["JobTest.java", "Has Item.READ permission"]
    - ["JobTest.java", "Verify we can access both URLs:"]
    - ["JobTest.java", "Has CONFIGURE and EXTENDED_READ permission"]
    - ["JobTest.java", "Verify we can GET the config.xml:"]
    - ["JobTest.java", "This page is a simple form to POST to /job/testJob/config.xml"]
    - ["JobTest.java", "But it posts invalid data so we expect 500 if we have permission, 403 if not"]
    - ["JobTest.java", "Has only CONFIGURE permission (this should imply EXTENDED_READ)"]
    - ["JobTest.java", "Has only EXTENDED_READ permission"]
    - ["JobTest.java", "There was a bug where intermediate directories were counted,"]
    - ["JobTest.java", "A NPE was thrown if a job had a null (empty) description."]
    - ["JobTest.java", "we want the uninterrupted job to run for long time"]
    - ["JobTest.java", "set it back to the default naming strategy, otherwise all other tests would fail to create jobs!"]
    - ["RewindableRotatingFileOutputStreamTest.java", "JENKINS-16634"]
    - ["ConsistentHashTest.java", "what was the mapping before the mutation?"]
    - ["ConsistentHashTest.java", "verify that the mapping remains consistent"]
    - ["JSONSignatureValidator.java", "CertificateUtil.getDefaultRootCAs();"]
    - ["JSONSignatureValidator.java", "this is for computing a digest to check sanity"]
    - ["JSONSignatureValidator.java", "this is for computing a signature"]
    - ["JSONSignatureValidator.java", "until JENKINS-11110 fix, UC used to serve invalid digest (and therefore unverifiable signature)"]
    - ["JSONSignatureValidator.java", "that only covers the earlier portion of the file. This was caused by the lack of close() call in the canonical writing, which apparently leave some bytes somewhere that's not flushed to the digest output stream. This affects Jenkins [1.424,1,431]."]
    - ["JSONSignatureValidator.java", "Jenkins 1.432 shipped with the fix (1eb0c64abb3794edce29cbb1de50c93fa03a8229) that made it compute the correct digest, but it breaks all the existing UC json metadata out there. We then quickly discovered ourselves in the catch-22 situation. If we generate UC with the correct signature, it'll cut off [1.424,1.431] from the UC. But if we don't, we'll cut off [1.432,*)."]
    - ["JSONSignatureValidator.java", "In 1.433, we revisited 1eb0c64abb3794edce29cbb1de50c93fa03a8229 so that the original digest/signature pair continues to be generated in a buggy form, while correct_digest/correct_signature are generated correctly."]
    - ["JSONSignatureValidator.java", "Jenkins should ignore digest/signature pair. Accepting it creates a vulnerability that allows the attacker to inject a fragment at the end of the json."]
    - ["JSONSignatureValidator.java", "did the digest match? this is not a part of the signature validation, but if we have a bug in the c14n (which is more likely than someone tampering with update center), we can tell"]
    - ["JSONSignatureValidator.java", "if we trust default root CAs, we end up trusting anyone who has a valid certificate, which isn't useful at all"]
    - ["JSONSignatureValidator.java", "even if the certificate isn't valid yet, we'll proceed it anyway"]
    - ["JSONSignatureValidator.java", "load and verify certificates"]
    - ["JSONSignatureValidator.java", "our test for paths ending in / should prevent this from happening"]
    - ["AtomicFileWriterTest.java", "Provides access to the default permissions given to a new file. (i.e. indirect way to get umask settings)."]
    - ["AtomicFileWriterTest.java", "Check Posix calls are supported (to avoid running this test on Windows for instance)"]
    - ["AtomicFileWriterTest.java", "Verify the file we created exists"]
    - ["SecretUtilTest.java", "Secret.decrypt"]
    - ["QuotedStringTokenizerTest.java", "http://www.nabble.com/Error-parsing-%22-in-msbuild-task-to20535754.html"]
    - ["SubClassGeneratorTest.java", "12345"]
    - ["XmlFileTest.java", "KXml2Driver is able to parse XML 1.0 even if it has control characters which should be illegal. Ignoring this test until we switch to a more compliant driver"]
    - ["ItemsTest.java", "r.jenkins.setRawBuildsDir(tmp.getAbsolutePath()+/${ITEM_FULL_NAME});"]
    - ["ItemsTest.java", "r.jenkins.setSecurityRealm(r.createDummySecurityRealm());"]
    - ["ItemsTest.java", "r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(attacker).grant(Item.READ, Item.CONFIGURE, Item.CREATE, Item.DELETE).onPaths((?!known|secret).* ).to(attacker).grant(Item.DISCOVER).onPaths(known).to(attacker));"]
    - ["ItemsTest.java", "redirect perversely counts as a failure"]
    - ["ItemsTest.java", "Use the REST command to create an empty project (normally used only from the UI in the New Item dialog)."]
    - ["ItemsTest.java", "Use the REST command to copy an existing project (normally used from the UI in the New Item dialog)."]
    - ["ItemsTest.java", "Overwrite target using REST command to create a project from XML submission."]
    - ["ItemsTest.java", "Overwrite target using REST command to rename an existing project (normally used from the UI in the Configure screen)."]
    - ["ItemsTest.java", "Overwrite target using the CLI {@code create-job} command."]
    - ["ItemsTest.java", "Overwrite target using the CLI {@code copy-job} command."]
    - ["ItemsTest.java", "Overwrite target using a move function normally called from {@code cloudbees-folder} via a {@code move} action."]
    - ["AntClassLoader.java", "KK patch for JENKINS-21579"]
    - ["AntClassLoader.java", "URL"]
    - ["AntClassLoader.java", "Locator.decodeUri"]
    - ["AntClassLoader.java", "project.resolveFile"]
    - ["AntClassLoader.java", "project.getProperty"]
    - ["AntClassLoader.java", "LoaderUtils.getContextClassLoader"]
    - ["AntClassLoader.java", "LoaderUtils.setContextClassLoader"]
    - ["AntClassLoader.java", "project.log"]
    - ["AntClassLoader.java", "project.addBuildListener"]
    - ["AntClassLoader.java", "project.removeBuildListener"]
    - ["RunListTest.java", "Only r1"]
    - ["RunListTest.java", "Only r2"]
    - ["XStream2Test.java", "Currently not offering a public convenience API for this:"]
    - ["JDKNameTest.java", "DEFAULT_NAME took this value prior to 1.598."]
    - ["ClassicPluginStrategyTest.java", "Overriding so we can force loading of the detached plugins for testing"]
    - ["ClassicPluginStrategyTest.java", "names.addAll(loadPluginsFromWar(/WEB-INF/plugins));"]
    - ["ClassicPluginStrategyTest.java", "names.addAll(loadPluginsFromWar(/WEB-INF/detached-plugins));"]
    - ["ClassicPluginStrategyTest.java", "Test data has: foo3 depends on foo2,foo1; foo2 depends on foo1"]
    - ["ClassicPluginStrategyTest.java", "In the current impl, the dependencies are the parent ClassLoader so resources are found there before checking the plugin itself. Adjust the expected results below if this is ever changed to check the plugin first."]
    - ["ClassicPluginStrategyTest.java", "Check transitive dependency exclude disabled plugins"]
    - ["ClassicPluginStrategyTest.java", "foo1 plugin contains attribute of Mask-Classes: org.apache.http."]
    - ["TarArchiverTest.java", "Makes sure that permissions are properly stored in the tar file."]
    - ["TarArchiverTest.java", "perhaps restrict to x.message.contains(Cannot run program)? or error=2, No such file or directory?"]
    - ["TarArchiverTest.java", "Test backing up an open file"]
    - ["TarArchiverTest.java", "limit the max size, just in case."]
    - ["XStream2EncodingTest.java", "System.setProperty(file.encoding, ISO-8859-1)"]
    - ["EnvVarsTest.java", "overrides.put(PATH, append + Platform.current().pathSeparator + ${PATH});"]
    - ["EnvVarsTest.java", "overrides.put(B, ${A}Value2);"]
    - ["EnvVarsTest.java", "overrides.put(C, ${B}${D});"]
    - ["EnvVarsTest.java", "overrides.put(D, ${E});"]
    - ["EnvVarsTest.java", "overrides.put(E, Value3);"]
    - ["EnvVarsTest.java", "overrides.put(PATH+TEST, another);"]
    - ["EnvVarsTest.java", "overrides.put(B, Refer1${A});"]
    - ["EnvVarsTest.java", "overrides.put(C, Refer2${B});"]
    - ["EnvVarsTest.java", "overrides.put(D, Refer3${B}${Nosuch});"]
    - ["EnvVarsTest.java", "overrides.put(B, ${A});"]
    - ["EnvVarsTest.java", "overrides.put(C, ${B});"]
    - ["EnvVarsTest.java", "overrides.put(E, ${C});"]
    - ["EnvVarsTest.java", "overrides.put(C, ${A}${B});"]
    - ["EnvVarsTest.java", "overrides.put(PATH, some;${PATH});"]
    - ["EnvVarsTest.java", "overrides.put(A, ${B});"]
    - ["EnvVarsTest.java", "overrides.put(B, ${C});"]
    - ["EnvVarsTest.java", "overrides.put(C, ${A});"]
    - ["EnvVarsTest.java", "overrides.put(D, ${C}${E});"]
    - ["EnvVarsTest.java", "overrides.put(E, ${C}${D});"]
    - ["JenkinsLocationConfigurationTest.java", "Makes sure the use of localhost in the Hudson URL reports a warning."]
    - ["IdStrategyTest.java", "Should not return the same username due to case insensitivity"]
    - ["IdStrategyTest.java", ". and / are equivalent from an implementation standpoint, but both should return /"]
    - ["IdStrategyTest.java", " and / are equivalent from an implementation standpoint, but both should return /"]
    - ["JenkinsDescriptorTest.java", "TODO test literal absolute paths (e.g. /foo/$ITEM_FULL_NAME), ITEM_FULLNAME"]
    - ["FakeMapBuilder.java", "Adds a build record under the givn ID but make it unloadable, which will cause a failure when a load is attempted on this build ID."]
    - ["ComputerLauncherTest.java", "java version 1.7.0_05
Java(TM) SE Runtime Environment (build 1.7.0_05-b05)
Java HotSpot(TM) Server VM (build 23.1-b03, mixed mode)"]
    - ["ComputerLauncherTest.java", "openjdk version 1.7.0-internal
OpenJDK Runtime Environment (build 1.7.0-internal-pkgsrc_2010_01_03_06_54-b00)
OpenJDK 64-Bit Server VM (build 17.0-b04, mixed mode)"]
    - ["ComputerLauncherTest.java", "java version 1.6.0_33
Java(TM) SE Runtime Environment (build 1.6.0_33-b03)
Java HotSpot(TM) Server VM (build 20.8-b03, mixed mode)"]
    - ["ComputerLauncherTest.java", "java version 1.5.0_22
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03)
Java HotSpot(TM) Server VM (build 1.5.0_22-b03, mixed mode)"]
    - ["ComputerLauncherTest.java", "java version 1.4.2_19
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_19-b04)
Java HotSpot(TM) Client VM (build 1.4.2_19-b04, mixed mode)"]
    - ["ComputerLauncherTest.java", "java version 1.8.0_05
Java(TM) SE Runtime Environment (build 1.8.0_05-b05)
Java HotSpot(TM) Server VM (build 23.1-b03, mixed mode)"]
    - ["ComputerLauncherTest.java", "openjdk version 1.8.0-internal
OpenJDK Runtime Environment (build 1.8.0-internal-pkgsrc_2015_01_03_06_54-b00)
OpenJDK 64-Bit Server VM (build 17.0-b04, mixed mode)"]
    - ["ComputerLauncherTest.java", "java version 1.10.0_02
Java(TM) SE Runtime Environment (build 1.10.0_02-b01)
Java HotSpot(TM) Server VM (build 23.1-b03, mixed mode)"]
    - ["JenkinsGetRootUrlTest.java", "http://tomcat.apache.org/tomcat-5.5-doc/config/http.html#Proxy_Support"]
    - ["JenkinsGetRootUrlTest.java", "http://wiki.eclipse.org/Jetty/Howto/Configure_mod_proxy#Configuring_mod_proxy_as_a_Reverse_Proxy.5D"]
    - ["JenkinsGetRootUrlTest.java", "X-Forwarded-Port"]
    - ["JenkinsGetRootUrlTest.java", "X-Forwarded-Proto"]
    - ["ZipArchiverTest.java", "initialize temp directory"]
    - ["ZipArchiverTest.java", "create foo/bar/baz/Test.txt"]
    - ["ZipArchiverTest.java", "a file to store the zip archive in"]
    - ["ZipArchiverTest.java", "create zip from tmpDir"]
    - ["ZipArchiverTest.java", "examine zip contents and assert that none of the entry names (paths) have back-slashes ()"]
    - ["ZipArchiverTest.java", "Convenience method for failing with a cause."]
    - ["ZipArchiverTest.java", "Recursively deletes a directory and all of its children."]
    - ["RSAConfidentialKeyTest.java", "this second key of the same ID will cause it to load the key from the disk"]
    - ["CryptoConfidentialKeyTest.java", "this will cause the key to be loaded from the disk"]
    - ["SecretTest.java", "make sure we got some encryption going"]
    - ["SecretTest.java", "can we round trip?"]
    - ["SecretTest.java", "Two consecutive encryption requests of the same object should result in the same encrypted value - SECURITY-304"]
    - ["SecretTest.java", "Two consecutive encryption requests of different objects with the same value should not result in the same encrypted value - SECURITY-304"]
    - ["SecretTest.java", "println ${plaintext} → ${ciphertext}"]
    - ["SecretTest.java", "Not plain text"]
    - ["SecretTest.java", "legacy key"]
    - ["SecretTest.java", "Makes sure the serialization form is backward compatible with String."]
    - ["SecretTest.java", "Secret persisted with Jenkins.getSecretKey() should still decrypt OK."]
    - ["HMACConfidentialKeyTest.java", "this second key of the same ID will cause it to load the key from the disk"]
    - ["ConfidentialStoreRule.java", "Test rule that injects a temporary {@link DefaultConfidentialStore}"]
    - ["ClassFilterImplSanityTest.java", "More tests are available in the {@code test} module."]
    - ["PeepholePermalinkTest.java", "job/JOBNAME/lastStable and job/JOBNAME/lastSuccessful symlinks that we used to generate should still work"]
    - ["PeepholePermalinkTest.java", "assertTrue(Util.isSymlink(f))"]
    - ["HexStringConfidentialKeyTest.java", "this second key of the same ID will cause it to load the key from the disk"]
    - ["HexStringConfidentialKeyTest.java", "this causes the ke to be generated"]
    - ["RobustReflectionConverterTest.java", "called via REST / CLI with authentication"]
    - ["RobustReflectionConverterTest.java", "Reject invalid configuration via REST / CLI."]
    - ["RobustReflectionConverterTest.java", "Configure a bad keyword via REST."]
    - ["RobustReflectionConverterTest.java", "AcceptOnlySpecificKeyword with bad value is not instantiated for rejected with readResolve, but save to the disk."]
    - ["RobustReflectionConverterTest.java", "Configuration should not be updated for a failure of the critical field, rejected configuration is not saved"]
    - ["RobustReflectionConverterTest.java", "Configure a bad keyword via CLI."]
    - ["ResourceBundleUtilTest.java", "tom.fennelly@gmail.com"]
    - ["SecretRewriterTest.java", "to be rewritten, it needs to be between a tag"]
    - ["SecretRewriterTest.java", "assert after.replaceAll(System.getProperty(line.separator), n).trim()==f.text.replaceAll(System.getProperty(line.separator), n).trim()"]
    - ["SecretRewriterTest.java", "set up some directories with stuff"]
    - ["SecretRewriterTest.java", "stuff outside"]
    - ["SecretRewriterTest.java", "some recursions as well as valid symlinks"]
    - ["SecretRewriterTest.java", "t2 is only reachable by following a symlink. this should be covered, too"]
    - ["TimerTest.java", "Twice Timer pool size to ensure we end up creating at least one new thread"]
    - ["AbstractLazyLoadRunMapTest.java", "pretend referent expired"]
    - ["AbstractLazyLoadRunMapTest.java", "force index creation"]
    - ["AbstractLazyLoadRunMapTest.java", "now one of them is inside retrieve(…); the other is waiting for the lock"]
    - ["AbstractLazyLoadRunMapTest.java", "allow both to proceed"]
    - ["FakeMap.java", "new Exception(loading # + n).printStackTrace();"]
    - ["VirtualFileTest.java", "s3cr3t"]
    - ["SCMTriggerTest.java", "processing time for mock update"]
    - ["SCMTriggerTest.java", "Make build sleep a while so it blocks new builds"]
    - ["SCMTriggerTest.java", "Make sure that only one polling result shows up per build."]
    - ["SCMTriggerTest.java", "Make sure that SCMTrigger doesn't poll when there is a polling veto in place."]
    - ["SCMTriggerTest.java", "let mock build finish"]
    - ["SCMTriggerTest.java", "Make sure that SCMTrigger doesn't trigger another build when a build has just started, but not yet completed its SCM update."]
    - ["SCMTriggerTest.java", "Start one build to block others"]
    - ["SCMTriggerTest.java", "wait for the build to really start"]
    - ["SCMTriggerTest.java", "Wait for 2nd build to finish"]
    - ["SCMTriggerTest.java", "used to coordinate polling and check out"]
    - ["SCMTriggerTest.java", "Schedule a new build, and trigger it many ways while it sits in queue"]
    - ["RemotingJarSignatureTest.java", "File jar = new File(/home/kohsuke/.m2/repository/org/jenkins-ci/main/remoting/1.421/remoting-1.421.jar);"]
    - ["RemotingJarSignatureTest.java", "File jar = new File(/home/kohsuke/.m2/repository/org/jenkins-ci/main/remoting/2.0/remoting-2.0.jar);"]
    - ["DefaultConfidentialStoreTest.java", "let ConfidentialStore create a directory"]
    - ["DefaultConfidentialStoreTest.java", "the data shouldn't be a plain text, obviously"]
    - ["DefaultConfidentialStoreTest.java", "if the master key changes, we should gracefully fail to load the store"]
    - ["DefaultConfidentialStoreTest.java", "we should have a new key now"]
    - ["DefaultConfidentialStoreTest.java", "data storage should have some stuff"]
    - ["DefaultConfidentialStoreTest.java", "should be read only"]
    - ["XStreamDOMTest.java", "roundtrip via DOM"]
    - ["XStreamDOMTest.java", "Regardless of how we read XML into XStreamDOM, XStreamDOM should retain the raw XML infoset, which means escaped names."]
    - ["XMLUtilsTest.java", "if no exception then JAXP is swallowing these - so there should be no entity in the description."]
    - ["XMLUtilsTest.java", "make sure that normal entities are retained."]
    - ["CrontabParserTokenTypes.java", "$ANTLR 2.7.6 (2005-12-22): crontab.g -> CrontabParser.java$"]
    - ["MarkFindingOutputStreamTest.java", "at this point we should just see 'bar'"]
    - ["MarkFindingOutputStreamTest.java", "this needs to write what was held off during the first write"]
    - ["MarkFindingOutputStreamTest.java", "If a stream closes without completing a match, the partial match should be sent to the output."]
    - ["PluginManagerTagLib.java", "_api"]
    - ["LabelExpressionLexer.java", "found SKIP token"]
    - ["LabelExpressionLexer.java", "for char stream error handling"]
    - ["LabelExpressionLexer.java", "for lexical error handling"]
    - ["HistoryPageFilterTest.java", "tom.fennelly@gmail.com"]
    - ["HistoryPageFilterTest.java", "plainPassword"]
    - ["HistoryPageFilterTest.java", "password"]
    - ["HistoryPageFilterTest.java", "pass1plain"]
    - ["HistoryPageFilterTest.java", "pass1"]
    - ["TextFileTest.java", "add one more byte to force fastTail to read from one byte ahead"]
    - ["TextFileTest.java", "between this and the previous case, it should start parsing text incorrectly, until it hits NL"]
    - ["TextFileTest.java", "where it comes back in sync"]
    - ["DateConversionTest.java", "http://www.nabble.com/Date-conversion-problem-causes-IOException-reading-fingerprint-file.-td19201137.html"]
    - ["ClearQueueCommandTest.java", "user is missing the Overall/Administer permission"]
    - ["RunIdMigratorTest.java", "Ensures that legacy timestamps are interpreted in a predictable time zone."]
    - ["RunIdMigratorTest.java", "TODO could use LoggerRule only if it were extracted to an independent library"]
    - ["RunIdMigratorTest.java", "TODO test sane recovery from various error conditions"]
    - ["LoginRedirectTest.java", "Hudson first causes 403 FORBIDDEN error, then redirect the browser to the page"]
    - ["LoginRedirectTest.java", "Verifies that Hudson is sending 403 first. This is important for machine agents."]
    - ["LabelExpressionParserTokenTypes.java", "$ANTLR 2.7.6 (2005-12-22): labelExpr.g -> LabelExpressionLexer.java$"]
    - ["CreateJobCommandTest.java", "including alice"]
    - ["CLIRegistererTest.java", "--username, foo, --password, invalid"]
    - ["CLIRegistererTest.java", "--username, foo, --password, foo"]
    - ["HudsonPrivateSecurityRealmTagLib.java", "HudsonPrivateSecurityRealm"]
    - ["HudsonPrivateSecurityRealmTagLib.java", "addUser"]
    - ["HudsonPrivateSecurityRealmTagLib.java", "firstUser"]
    - ["HudsonPrivateSecurityRealmTagLib.java", "loginLink"]
    - ["HudsonPrivateSecurityRealmTagLib.java", "signup"]
    - ["HudsonPrivateSecurityRealmTagLib.java", "signupWithFederatedIdentity"]
    - ["JnlpAccessWithSecuredHudsonTest.java", "To watch it fail: secret = secret.replace('1', '2');"]
    - ["JnlpAccessWithSecuredHudsonTest.java", "this fresh WebClient doesn't have a login cookie and represent JNLP launcher"]
    - ["JnlpAccessWithSecuredHudsonTest.java", "now make sure that these URLs are unprotected"]
    - ["CreateNodeCommandTest.java", "Computer.class.getResourceAsStream(node.xml)"]
    - ["BuildCommandTest.java", "Create test parameter with Null default value"]
    - ["BuildCommandTest.java", "Give the job 5 seconds to be submitted"]
    - ["BuildCommandTest.java", "Check executors health after a timeout"]
    - ["BuildCommandTest.java", "Equals to super.getDefaultParameterValue();"]
    - ["CopyJobCommandTest.java", "alice has no real permissions. bob has READ on everything but no more. charlie has CREATE on d2 but not EXTENDED_READ on p. debbie has both."]
    - ["CopyJobCommandTest.java", "including alice"]
    - ["UtilTest.java", "id:cactusman"]
    - ["UtilTest.java", "http://hudson/job/Hudson Job"]
    - ["UtilTest.java", "http://hudson/job/Hudson%20Job"]
    - ["UtilTest.java", "http://foobar/"]
    - ["UtilTest.java", "mailto:kk@kohsuke.org"]
    - ["UtilTest.java", "d123://test/"]
    - ["UtilTest.java", "//google.com"]
    - ["GetNodeCommandTest.java", "ERROR: user is missing the Agent/ExtendedRead permission"]
    - ["GetNodeCommandTest.java", "<?xml version=1.1 encoding=UTF-8?>"]
    - ["GetNodeCommandTest.java", "<name>MySlave</name>"]
    - ["GetNodeCommandTest.java", "ERROR: No such node 'MySlave'"]
    - ["GetNodeCommandTest.java", "SECURITY-281"]
    - ["GetNodeCommandTest.java", "No such node '(master)'"]
    - ["GetViewCommandTest.java", "ERROR: user is missing the View/Read permission"]
    - ["GetViewCommandTest.java", "<?xml version=1.1 encoding=UTF-8?>"]
    - ["GetViewCommandTest.java", "<name>aView</name>"]
    - ["GetViewCommandTest.java", "ERROR: No view named never_created inside view Jenkins"]
    - ["RunRangeCommand2Test.java", "Wait until classProject is started (at least 1s)"]
    - ["RunRangeCommand2Test.java", "Wait for the first sleep"]
    - ["CLITest.java", "force HTTP connection"]
    - ["CLITest.java", "allow TCP connection"]
    - ["CLITest.java", "currently sends a 403"]
    - ["ReloadConfigurationCommandTest.java", "TODO https://github.com/jenkinsci/jenkins-test-harness/pull/53 use CLICommandInvoker.asUser"]
    - ["ReloadConfigurationCommandTest.java", "Until fixed JENKINS-8217"]
    - ["SetBuildDescriptionCommandTest.java", "TODO: determine if this should be pulled out into JenkinsRule or something"]
    - ["UpdateNodeCommandTest.java", "Computer.class.getResourceAsStream(node.xml)"]
    - ["OnlineNodeCommandTest.java", "ERROR: user is missing the Agent/Connect permission"]
    - ["OnlineNodeCommandTest.java", "ERROR: No such agent never_created exists."]
    - ["OnlineNodeCommandTest.java", "Waiting until going online is in progress..."]
    - ["OnlineNodeCommandTest.java", "Waiting until aNode1 going online is in progress..."]
    - ["OnlineNodeCommandTest.java", "Waiting until aNode2 going online is in progress..."]
    - ["OnlineNodeCommandTest.java", "Waiting until aNode3 going online is in progress..."]
    - ["OnlineNodeCommandTest.java", "Waiting until we are safe to interrupt"]
    - ["OnlineNodeCommandTest.java", "Go out if we should finish"]
    - ["OnlineNodeCommandTest.java", "Keep using the channel"]
    - ["GlobalConfiguration.java", "http://codepad.org/m1bbFRrH"]
    - ["AnnotatedLargeTextTest.java", "TODO assert that this is IOException: Refusing to deserialize unsigned note from an old log."]
    - ["AnnotatedLargeTextTest.java", "TODO assert that this is IOException: MAC mismatch"]
    - ["TarInputStream.java", "time@ice.com"]
    - ["TarInputStream.java", "Bugzilla: 40334"]
    - ["FingerprintFacet.java", "Backdoor for {@link Fingerprint} to set itself to its facets. Public only because this needs to be accessible to {@link Fingerprint}. Do not call this method directly."]
    - ["UpdateViewCommandTest.java", "user is missing the View/Configure permission"]
    - ["UpdateViewCommandTest.java", "Expecting view type: class hudson.model.TreeView but got: class hudson.model.ListView instead."]
    - ["UpdateViewCommandTest.java", "ERROR: No view named not_created inside view Jenkins"]
    - ["GlobalPluginConfiguration.java", "historically this was placed above general configuration from arbitrary descriptors"]
    - ["GlobalProjectNamingStrategyConfiguration.java", "for compatibility reasons, the actual value is stored in Jenkins"]
    - ["SetBuildParameterCommandTest.java", "TODO: determine if this should be pulled out into JenkinsRule or something"]
    - ["SetBuildParameterCommandTest.java", "Create a script based builder (either Shell or BatchFile) depending on platform"]
    - ["DeleteViewCommandTest.java", "ERROR: user is missing the View/Delete permission"]
    - ["DeleteViewCommandTest.java", "ERROR: user is missing the View/Read permission"]
    - ["DeleteViewCommandTest.java", "ERROR: No view named never_created inside view Jenkins"]
    - ["DeleteViewCommandTest.java", "ERROR: Jenkins does not allow to delete 'AllView.DEFAULT_VIEW_NAME' view"]
    - ["DeleteViewCommandTest.java", "ERROR: View name is empty"]
    - ["DeleteViewCommandTest.java", "ERROR: No view named   inside view Jenkins"]
    - ["DeleteViewCommandTest.java", "never_created: No view named never_created inside view Jenkins"]
    - ["DeleteViewCommandTest.java", "ERROR: CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT"]
    - ["DeleteViewCommandTest.java", "never_created1: No view named never_created1 inside view Jenkins"]
    - ["DeleteViewCommandTest.java", "never_created2: No view named never_created2 inside view Jenkins"]
    - ["DeleteViewCommandTest.java", "AllView.DEFAULT_VIEW_NAME: Jenkins does not allow to delete 'AllView.DEFAULT_VIEW_NAME' view"]
    - ["ExtensionListListenerTest.java", "tom.fennelly@gmail.com"]
    - ["CreateItemTest.java", "Tests the /createItem REST API."]
    - ["AbstractItem2Test.java", "does not work yet: p1"]
    - ["LogRecorderManagerTest.java", "http://d.hatena.ne.jp/ssogabe/20090101/1230744150"]
    - ["MarkupFormatterTest.java", "HudsonPrivateSecurityRealm"]
    - ["MarkupFormatterTest.java", "Unsecured"]
    - ["ItemCategory.java", "This field is restricted for the internal use only, because all other changes would cause binary compatibility issues."]
    - ["ItemCategory.java", "See <a href=https://jenkins-ci.org/issue/36593>JENKINS-36593</a> for more info."]
    - ["ApiTest.java", "client.goTo(api/xml?xpath=document( + f.getAbsolutePath() + ))"]
    - ["GroovyInitScriptTest.java", "TODO Jenkins.logRecords empty during a test, and adding a handler to root logger in JenkinsRule.before() does not work: assertTrue(log, log.contains(Nonexistent));"]
    - ["ViewManipulationTestBase.java", "ERROR: user is missing the View/Read permission"]
    - ["ViewManipulationTestBase.java", "ERROR: No such job 'aProject'"]
    - ["ViewManipulationTestBase.java", "ERROR: user is missing the View/Configure permission"]
    - ["ViewManipulationTestBase.java", "ERROR: 'All' view can not be modified directly"]
    - ["ViewManipulationTestBase.java", "ERROR: No such job 'never_created'"]
    - ["ViewManipulationTestBase.java", "ERROR: No such job 'aProject1'; perhaps you meant 'aProject'?"]
    - ["ViewManipulationTestBase.java", "ERROR: No such job ''"]
    - ["ViewManipulationTestBase.java", "ERROR: No such job 'never_created'; perhaps you meant 'aProject1'?"]
    - ["CauseTest.java", "j.interactiveBreak();"]
    - ["DescriptorVisibilityFilterTest.java", "DescriptorVisibilityFilterTest/Jenkins40545/index.jelly"]
    - ["AutoCompletionCandidatesTest.java", "relative path"]
    - ["ComputerSetTest.java", "IllegalArgumentException from NodeOptionHandler"]
    - ["AsynchPeopleTest.java", "TODO this still fails occasionally, for reasons TBD (I think because User.getAll sometimes is empty): assertNotNull(page.getElementById(person-bob));"]
    - ["DisplayNameTest.java", "My Job"]
    - ["DirectlyModifiableViewTest.java", "Query parameter 'name' is required"]
    - ["DirectlyModifiableViewTest.java", "Query parameter 'name' does not correspond to a known item"]
    - ["DirectlyModifiableViewTest.java", "Item is scoped to different ItemGroup"]
    - ["ExtensionListTest.java", "this is how legacy list like UserNameResolver.LIST gets created."]
    - ["ExtensionListTest.java", "imagine that this is a static instance, like it is in many LIST static field in Hudson."]
    - ["ExtensionListTest.java", "created in a legacy fashion without any tie to ExtensionList"]
    - ["AsynchronousExecution.java", "executorCell.jelly"]
    - ["AsynchronousExecution.java", "Jenkins#cleanUp"]
    - ["DownloadService2Test.java", "format used by most tools"]
    - ["DownloadService2Test.java", "anomalous format"]
    - ["DependencyGraphTest.java", "Alan.Harder@sun.com"]
    - ["DependencyGraphTest.java", "Rebuild dependency graph as anonymous user"]
    - ["DependencyGraphTest.java", "Switch to full access to check results"]
    - ["DependencyGraphTest.java", "Trigger for ODD build number"]
    - ["DependencyGraphTest.java", "hiddenUpstream"]
    - ["CrumbFilter.java", "compatibility for clients that hard-code the default crumb name up to Jenkins 1.TODO"]
    - ["CrumbFilter.java", "JENKINS-40344: Don't spam the log just because a session is expired"]
    - ["ComputerConfigDotXmlTest.java", "rule.jenkins.setSecurityRealm(rule.createDummySecurityRealm())"]
    - ["ComputerConfigDotXmlTest.java", "oldSecurityContext = ACL.impersonate(User.get(user).impersonate())"]
    - ["ComputerConfigDotXmlTest.java", "auth.add(Computer.EXTENDED_READ, user)"]
    - ["ComputerConfigDotXmlTest.java", "auth.add(Computer.CONFIGURE, user)"]
    - ["ComputerConfigDotXmlTest.java", "when(req.getInputStream()).thenReturn(xmlNode(node.xml))"]
    - ["ComputerConfigDotXmlTest.java", "auth.add(Computer.CONNECT, user)"]
    - ["DescriptorTest.java", "builder-a"]
    - ["DescriptorTest.java", "builder-b"]
    - ["DescriptorTest.java", "D1-id"]
    - ["DescriptorTest.java", "D2-id"]
    - ["DescriptorTest.java", "d3a"]
    - ["DescriptorTest.java", "d3b"]
    - ["ZFSInstaller.java", "This has to be done while we still have an interactive access with the user, since it involves the password."]
    - ["ZFSInstaller.java", "permission problem. ask the user to give us the root password"]
    - ["ZFSInstaller.java", "Creates a ZFS file system to migrate the data to."]
    - ["ZFSInstaller.java", "mark this file system as managed by Hudson"]
    - ["ZFSInstaller.java", "re-exec with the system property to indicate where to migrate the data to."]
    - ["ZFSInstaller.java", "Migrates $JENKINS_HOME to a new ZFS file system."]
    - ["ZFSInstaller.java", "TODO: do this in a separate JVM to elevate the privilege."]
    - ["ZFSInstaller.java", "mount temporarily to set the owner right"]
    - ["ZFSInstaller.java", "update the mount point"]
    - ["ZFSInstaller.java", "delete back up"]
    - ["ZFSInstaller.java", "Escape hatch in case JNI calls fatally crash, like in HUDSON-3733."]
    - ["GetEnvironmentOutsideBuildTest.java", "Disable tests"]
    - ["GetEnvironmentOutsideBuildTest.java", "It's unfortunately not working, yet, as whenJenkinsMasterHasNoExecutors is not working as expected"]
    - ["GetEnvironmentOutsideBuildTest.java", "and getEnvironment is called outside of build"]
    - ["GetEnvironmentOutsideBuildTest.java", "then it should still succeed - i.e. no NPE o.s.l.t."]
    - ["FreeStyleProjectTest.java", "Make sure it can be created without exceptions:"]
    - ["FreeStyleProjectTest.java", "emulate the user behavior"]
    - ["FreeStyleProjectTest.java", "Custom workspace and concurrent build had a bad interaction."]
    - ["FreeStyleProjectTest.java", "Custom workspace and variable expansion."]
    - ["FreeStyleProjectTest.java", "and round-tripped:"]
    - ["DirectoryBrowserSupportTest.java", "can we see it?"]
    - ["DirectoryBrowserSupportTest.java", "TODO: implement negative check to make sure we aren't serving unexpected directories."]
    - ["DirectoryBrowserSupportTest.java", "the following trivial attempt failed. Someone in between is normalizing."]
    - ["DirectoryBrowserSupportTest.java", "ZipException in case of JENKINS-19752"]
    - ["DirectoryBrowserSupportTest.java", "Kanji"]
    - ["LabelLoadStatisticsQueueLengthTest.java", "Node with this test's labels is required in order for the labels to be considered valid."]
    - ["DownloadServiceTest.java", "to bypass the URL restriction, we'll trigger downloadService.download ourselves"]
    - ["DownloadServiceTest.java", "we do not save with signature for toolInstallers"]
    - ["DownloadServiceTest.java", "neither we check it in the getData method"]
    - ["DownloadServiceTest.java", "could have been in core/src/test/ but update-center.json was already in test/src/test/ (used by UpdateSiteTest)"]
    - ["HudsonTest.java", "assertJDK(jdks.get(0),jdk1,/tmp)"]
    - ["HudsonTest.java", "assertJDK(jdks.get(1),jdk2,/tmp)"]
    - ["HudsonTest.java", "assertAnt(ants[0],ant1,/tmp)"]
    - ["HudsonTest.java", "assertAnt(ants[1],ant2,/tmp)"]
    - ["HudsonTest.java", "try to delete it by hitting the final URL directly"]
    - ["HudsonTest.java", "the master computer object should be still here"]
    - ["ItemListenerTest.java", "Alan.Harder@sun.com"]
    - ["RunIdMigrator.java", "$JENKINS_HOME"]
    - ["RunIdMigrator.java", "jenkinsHome root directory of Jenkins"]
    - ["RunIdMigrator.java", "Build record migration (https://jenkins.io/redirect/build-record-migration) is one-way. If you need to downgrade Jenkins, run: {0}"]
    - ["RunIdMigrator.java", "java -classpath %s %s %s"]
    - ["MyViewTest.java", "Set the name of the item"]
    - ["MyViewTest.java", "Select the item clicking on the first item type shown"]
    - ["Util.java", "turn secretKey into 256 bit hash"]
    - ["Util.java", "Due to the stupid US export restriction JDK only ships 128bit version."]
    - ["Util.java", "escape the dollar sign or get the key to resolve"]
    - ["Util.java", "We're not using Files.newBufferedReader() here because there is a difference in how an InputStreamReader constructed from a Charset and the reader returned by Files.newBufferedReader() handle malformed and unmappable byte sequences for the specified encoding; the latter is more picky and will throw a CharacterCodingException."]
    - ["Util.java", "As reported at https://issues.jenkins-ci.org/browse/JENKINS-49112"]
    - ["Util.java", "Run.getLog() calls loadFile() to fully read the generated log file."]
    - ["Util.java", "Until charset handling is resolved (e.g. by implementing https://issues.jenkins-ci.org/browse/JENKINS-48923 ), malformed bytes will need to be tolerated."]
    - ["Util.java", "on Unix both the file and the directory that contains it has to be writable for a file deletion to be successful. (Confirmed on Solaris 9)"]
    - ["Util.java", "I suspect other processes putting files in this directory"]
    - ["Util.java", "If the Jenkins process had the file open earlier, and it has not closed it then Windows won't let us delete it until the Java object with the open stream is Garbage Collected, which can result in builds failing due to file in use on Windows despite working perfectly well on other OSs."]
    - ["Util.java", "Windows Directory Junctions are effectively the same as Linux symlinks to directories. Unfortunately, the Java 7 NIO2 API function isSymbolicLink does not treat them as such. It thinks of them as normal directories. To use the NIO2 API & treat it like a symlink, you have to go through BasicFileAttributes and do the following check: isSymbolicLink() || isOther() The isOther() call will include Windows reparse points, of which a directory junction is. It also includes includes devices, but reading the attributes of a device with NIO fails or returns false for isOther(). (i.e. named pipes such as .pipeJenkinsTestPipe return false for isOther(), and drives such as .PhysicalDrive0 throw an exception when calling readAttributes."]
    - ["Util.java", "https://issues.jenkins-ci.org/browse/JENKINS-49060?focusedCommentId=325989&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-325989"]
    - ["Util.java", "https://issues.jenkins-ci.org/browse/JENKINS-49112"]
    - ["Util.java", "https://issues.jenkins-ci.org/browse/JENKINS-48923"]
    - ["Util.java", "https://java.net/projects/hudson/lists/users/archive/2008-05/message/357"]
    - ["ParametersDefinitionPropertyTest.java", "not @DataBoundConstructor"]
    - ["FreestyleJobPublisherTest.java", "transfer file to build dir"]
    - ["FreestyleJobPublisherTest.java", "log must not contain stacktrace"]
    - ["FreestyleJobPublisherTest.java", "log must contain exact error message"]
    - ["FreestyleJobPublisherTest.java", "log must contain stacktrace"]
    - ["FreestyleJobPublisherTest.java", "catch result to file"]
    - ["FreestyleJobPublisherTest.java", "fail with IOException"]
    - ["FreestyleJobPublisherTest.java", "FAIL build with AbortException"]
    - ["ExecutorTest.java", "make sure this information is recorded"]
    - ["ExecutorTest.java", "make sure it shows up in the log"]
    - ["ExecutorTest.java", "test the merge semantics"]
    - ["ExecutorTest.java", "Taking offline to break your build"]
    - ["ExecutorTest.java", "Start a project with an infinite build step"]
    - ["ExecutorTest.java", "wait until we are safe to interrupt"]
    - ["ExecutorTest.java", "we are safe to be interrupted"]
    - ["ExecutorTest.java", "Keep using the channel"]
    - ["RunActionTest.java", "oops, should have been transient and used RunAction2"]
    - ["ItemGroupMixInTest.java", "Remove half of the config.xml file to make invalid or fail to load"]
    - ["ItemGroupMixInTest.java", "Reload Jenkins."]
    - ["ItemGroupMixInTest.java", "if no exception then JAXP is swallowing these - so there should be no entity in the description."]
    - ["RunMapTest.java", "TODO https://github.com/jenkinsci/jenkins/pull/2438: @Rule public LoggerRule logs = new LoggerRule();"]
    - ["UpdateCenter2Test.java", "TODO randomly fails: SocketTimeoutException from goTo due to GET http://localhost:…/update-center.json?…"]
    - ["UpdateCenterConnectionStatusTest.java", "tom.fennelly@gmail.com"]
    - ["UpdateCenterConnectionStatusTest.java", "The following is equivalent to the above"]
    - ["UpdateCenterPluginInstallTest.java", "tom.fennelly@gmail.com"]
    - ["SimpleJobTest.java", "without assuming to know too much about the internal calculation"]
    - ["SimpleJobTest.java", "failed builds must not be used, if there are successfulBuilds available."]
    - ["NodeTest.java", "someone@somewhere.com"]
    - ["NodeTest.java", "root@localhost"]
    - ["NodeTest.java", "John Smith"]
    - ["NodeTest.java", "abcdef"]
    - ["RunParameterDefinitionTest.java", "We should still be able to retrieve non RunParameter environment variables for the parameterized build even when the selected RunParameter build has been deleted."]
    - ["MyViewsPropertyTest.java", "User.get(User)"]
    - ["MyViewsPropertyTest.java", "User.get(User2)"]
    - ["MyViewsPropertyTest.java", "rule.jenkins.setSecurityRealm(rule.createDummySecurityRealm())"]
    - ["MyViewsPropertyTest.java", "GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy()"]
    - ["MyViewsPropertyTest.java", "SecurityContextHolder.getContext().setAuthentication(user2.impersonate())"]
    - ["MyViewsPropertyTest.java", "SecurityContextHolder.getContext().setAuthentication(user.impersonate())"]
    - ["MyViewsPropertyTest.java", "auth.add(Jenkins.ADMINISTER, User2)"]
    - ["UpdateCenterCustomTest.java", "TODO: move to Jenkins Test Harness"]
    - ["UpdateSiteTest.java", "TODO the certificate is now expired, and downloading a fresh copy did not seem to help"]
    - ["ParametersAction2Test.java", "Local data contains a parameterized job with two parameters (FOO and BAR) and one build"]
    - ["ParametersAction2Test.java", "with pre-fix format (generated with 1.609.3) with FOO, BAR and UNDEF."]
    - ["ParametersAction2Test.java", "legacy behaviour expected (UNDEF returned by getParameters())"]
    - ["ParametersAction2Test.java", "A new build should work as expected (undef is not published to env)"]
    - ["ParametersAction2Test.java", "undef is still not listed even after being added to the job parameters definition"]
    - ["ParametersAction2Test.java", "remove bar and undef from parameters definition"]
    - ["ParametersAction2Test.java", "Test again after reload"]
    - ["HelpLinkTest.java", "Jenkins confirms that this test is now taking 45mins to complete."]
    - ["HelpLinkTest.java", "The problem appears to be the following. When a help link is clicked, the execution hangs at the following point: Executing negative(hudson.model.HelpLinkTest)@1 prio=5 tid=0x1 nid=NA waiting java.lang.Thread.State: WAITING at java.lang.Object.wait(Object.java:-1) at com.gargoylesoftware.htmlunit.javascript.background.JavaScriptJobManagerImpl.waitForJobs(JavaScriptJobManagerImpl.java:200) at com.gargoylesoftware.htmlunit.WebClient.waitForBackgroundJavaScript(WebClient.java:1843) at com.gargoylesoftware.htmlunit.WebClientUtil.waitForJSExec(WebClientUtil.java:57) at com.gargoylesoftware.htmlunit.WebClientUtil.waitForJSExec(WebClientUtil.java:46) at com.gargoylesoftware.htmlunit.html.HtmlElementUtil.click(HtmlElementUtil.java:61) at hudson.model.HelpLinkTest.clickAllHelpLinks(HelpLinkTest.java:70) at hudson.model.HelpLinkTest.clickAllHelpLinks(HelpLinkTest.java:61) at hudson.model.HelpLinkTest.negative(HelpLinkTest.java:106)"]
    - ["HelpLinkTest.java", "In debugger, I can see that JavaScriptJobManagerImpl.waitForJobs is looping through yet each time getJobCount()>0 because there's always some window.setTimeout activities that appear to be scheduled. Common ones are: window.setTimeout( function () { thisConfig.trackSectionVisibility(); }, 500) window.setTimeout( function () { return __method.apply(__method, args); }, 10) window.setTimeout( function () { oSelf._printBuffer(); }, 100) getJobCount() never appears to return 0, so the method blocks until the time out of 10 secs is reached. Multiply that by 50 or so help links to click and now you see why each test takes 10mins. Maybe this is related to the scrollspy changes?"]
    - ["UserRestartTest.java", "bob@nowhere.net"]
    - ["UserRestartTest.java", "do not inline: call User.get second"]
    - ["SystemConfigurationTestCase.java", "this_is_a_profile"]
    - ["PluginManagerUtil.java", "tom.fennelly@gmail.com"]
    - ["LabelExpressionTest.java", "first, make sure the w32 slave is occupied"]
    - ["LabelExpressionTest.java", "we schedule p2 build after w32 slave is occupied"]
    - ["LabelExpressionTest.java", "time window to ensure queue has tried to assign f2 build"]
    - ["LabelExpressionTest.java", "p3 is tied to 'win', so even though p1 is busy, this should still go ahead and complete"]
    - ["LabelExpressionTest.java", "once we confirm that p3 build is over, we let p1 proceed"]
    - ["LabelExpressionTest.java", "p1 should have been built on w32"]
    - ["LabelExpressionTest.java", "and so is p2"]
    - ["LabelExpressionTest.java", "Push the build around to different nodes via the assignment to make sure it gets where we need it to."]
    - ["LabelExpressionTest.java", "Make sure we can reset the label of an existing slave."]
    - ["LabelExpressionTest.java", "user-given parenthesis is preserved"]
    - ["LabelExpressionTest.java", "this should parse as an atom"]
    - ["LabelExpressionTest.java", "expression should be persisted, not the name"]
    - ["LabelExpressionTest.java", "but if the name is set, we'd still like to parse it"]
    - ["LabelExpressionTest.java", "The name should have parenthesis at the right place to preserve the tree structure."]
    - ["PluginManagerInstalledGUITest.java", "tom.fennelly@gmail.com"]
    - ["PluginManagerInstalledGUITest.java", "Jenkins URL"]
    - ["ProcTest.java", "TODO: what is the echo back command for Windows? cmd /C copy CON CON?"]
    - ["SlaveTest.java", "verify that it is XML"]
    - ["SlaveTest.java", "make sure it survives the roundtrip"]
    - ["SlaveTest.java", "Check that requests to other WEB-INF contents fail"]
    - ["SlaveTest.java", "Try various kinds of folder escaping (SECURITY-195)"]
    - ["SlaveTest.java", "Raw access to API"]
    - ["SlaveTest.java", "Access from a Web client"]
    - ["ViewPropertyTest.java", "make sure it renders as optionalBlock"]
    - ["ViewPropertyTest.java", "make sure it roundtrips correctly"]
    - ["ViewPropertyTest.java", "test the rendering (or the lack thereof) of an invisible property"]
    - ["ViewPropertyTest.java", "do the same but now with a configured instance"]
    - ["RelativePathTest.java", "TODO this is horrible, should change the property here and in @QueryParameter and in RelativePathTest/index.groovy to, say, personName"]
    - ["ProcStarterTest.java", "nenashev@synopsys.com"]
    - ["ProcStarterTest.java", "C:thispathdoesn'texist"]
    - ["PasswordParameterDefinitionTest.java", "ParametersDefinitionProperty/index.jelly sends a 405 but really it is OK"]
    - ["PasswordParameterDefinitionTest.java", "Control case: admin can use default value."]
    - ["PasswordParameterDefinitionTest.java", "Another control case: anyone can enter a different value."]
    - ["PasswordParameterDefinitionTest.java", "Test case: anyone can use default value."]
    - ["PasswordParameterDefinitionTest.java", "Another control case: blank values."]
    - ["UserPropertyTest.java", "first time it loads from FS into object"]
    - ["UserPropertyTest.java", "User property that need update User object reference for InnerUserClass."]
    - ["UserPropertyTest.java", "Class that should get setUser(User) object reference update."]
    - ["UserPropertyTest.java", "Should be initialised separately."]
    - ["WorkspaceCleanupThreadTest.java", "${s1.rootPath}/workspace/d/"]
    - ["WorkspaceCleanupThreadTest.java", "Latest - kept"]
    - ["WorkspaceCleanupThreadTest.java", "Not old enough - kept"]
    - ["WorkspaceCleanupThreadTest.java", "Old one - deleted"]
    - ["ScmTest.java", "don't really care about save"]
    - ["ACLTest.java", "should not have needed to check"]
    - ["PermissionGroupTest.java", "Overall permission group should be always the first."]
    - ["NodePropertyTest.java", "assertEquals(Duke,p.name);"]
    - ["NodePropertyTest.java", "p.name = Kohsuke;"]
    - ["ExtendedReadPermissionTest.java", "alice: Job/Configure+Read"]
    - ["ExtendedReadPermissionTest.java", "bob: Job/Read"]
    - ["ExtendedReadPermissionTest.java", "charlie: Job/ExtendedRead+Read"]
    - ["ExtendedReadPermissionTest.java", "TODO potential race condition since other test suites might be running concurrently"]
    - ["ExtendedReadPermissionTest.java", "TODO configureLink; viewConfigurationLink; matrixWithPermissionEnabled; matrixWithPermissionDisabled"]
    - ["ArtifactArchiverTest.java", "do not check that it .exists() since its target has not been archived"]
    - ["ArtifactArchiverTest.java", "No permission support"]
    - ["JNLPLauncherTest.java", "j.getURL() + computer/+c.getName()+/slave-agent.jnlp"]
    - ["BatchFileTest.java", "Creating unstable=0 produces unstable=null"]
    - ["BatchFileTest.java", "A FakeLauncher that just returns the specified error code"]
    - ["PluginTest.java", "collapsed somewhere before it winds up in restOfPath"]
    - ["PluginTest.java", "IAE from TokenList.<init>"]
    - ["PluginTest.java", "SECURITY-131"]
    - ["PluginTest.java", "just checking"]
    - ["PluginTest.java", "Path collapsed to simply `credentials.jpi` before entering"]
    - ["PluginTest.java", "SECURITY-705"]
    - ["PluginTest.java", "./ prepended anyway"]
    - ["PluginTest.java", "SECURITY-155"]
    - ["DefaultCrumbIssuerTest.java", "The crumb should no longer match if we remove the proxy info"]
    - ["DefaultCrumbIssuerTest.java", "The crumb should be the same even if the proxy IP changes"]
    - ["DefaultCrumbIssuerTest.java", "The crumb should still match if we remove the proxy info"]
    - ["DefaultCrumbIssuerTest.java", "37.5% chance that crumb ~ /[a-f].+/"]
    - ["DefaultCrumbIssuerTest.java", "ditto"]
    - ["DefaultCrumbIssuerTest.java", "perhaps interpretable as JS number"]
    - ["NodeCanTakeTaskTest.java", "Set master executor count to zero to force all jobs to slaves"]
    - ["NodeCanTakeTaskTest.java", "Add the build-blocker property and try again"]
    - ["NodeCanTakeTaskTest.java", "now try to reschedule"]
    - ["NodeCanTakeTaskTest.java", "consume the one executor"]
    - ["NodeCanTakeTaskTest.java", "First, attempt to run our project before adding the property"]
    - ["CliAuthenticationTest.java", "dummy security realm that authenticates when username==password"]
    - ["CliAuthenticationTest.java", "now we can run without an explicit credential"]
    - ["CliAuthenticationTest.java", "now we should run as anonymous"]
    - ["CliAuthenticationTest.java", "the CLI login command does not work as expected"]
    - ["CliAuthenticationTest.java", "in case of authentication that throw a DataAccessException (see impersonatingUserDetailsService)"]
    - ["CliAuthenticationTest.java", "Login failure shouldn't reveal information about the existence of user"]
    - ["LoginTest.java", "Requesting a loginError page directly should result in a redirect, on a non-secured Hudson."]
    - ["LoginTest.java", "in a secured Hudson, the error page should render."]
    - ["LoginTest.java", "but not once the user logs in."]
    - ["LoginTest.java", "Returns the 'remember me' cookie if set, otherwise return null. We don't care about the type, only whether it's null"]
    - ["LoginTest.java", "Test 'remember me' cookie"]
    - ["LoginTest.java", "Test that 'remember me' cookie will not be set if disabled even if requested by user. This models the case when the feature is disabled between another user loading and submitting the login page."]
    - ["EnvironmentVariableNodePropertyTest.java", "use a timeout so we don't wait infinitely in case of failure"]
    - ["EnvironmentVariableNodePropertyTest.java", "Both slave and master properties are available, but slave properties have priority"]
    - ["EnvironmentVariableNodePropertyTest.java", "Slave properties are available"]
    - ["EnvironmentVariableNodePropertyTest.java", "This class tests that environment variables from node properties are applied, and that the priority is maintained: parameters > slave node properties > master node properties"]
    - ["EnvironmentVariableNodePropertyTest.java", "Slave and master properties and parameters are available. Priority: parameters > slave > master"]
    - ["EnvironmentVariableNodePropertyTest.java", "Master properties are available"]
    - ["EnvironmentVariableNodePropertyTest.java", "Launches project on this node, waits for the result, and returns the environment that is used"]
    - ["PingThreadTest.java", "Simulate lost connection"]
    - ["PingThreadTest.java", "... do not wait for Ping Thread to notice"]
    - ["TokenBasedRememberMeServices2Test.java", "we should see a remember me cookie"]
    - ["TokenBasedRememberMeServices2Test.java", "start a new session and attempt to access Jenkins"]
    - ["TokenBasedRememberMeServices2Test.java", "which should cause autoLogin failures"]
    - ["TokenBasedRememberMeServices2Test.java", "even if SecurityRealm chokes, it shouldn't kill the page"]
    - ["TokenBasedRememberMeServices2Test.java", "make sure that the server recorded this failure"]
    - ["TokenBasedRememberMeServices2Test.java", "and the problematic cookie should have been removed"]
    - ["TokenBasedRememberMeServices2Test.java", "but we should have logged in"]
    - ["TokenBasedRememberMeServices2Test.java", "this will trigger remember me"]
    - ["TokenBasedRememberMeServices2Test.java", "make sure that our security realm failed to report the info correctly"]
    - ["UserAvatarResolverTest.java", "http://myown.image"]
    - ["UserAvatarResolverTest.java", "unique-user-not-used-in-anyother-test"]
    - ["ShellTest.java", "TODO: define a FakeLauncher implementation with easymock so that this kind of assertions can be simplified."]
    - ["ShellTest.java", "test the command line argument."]
    - ["ShellTest.java", "fake the execution"]
    - ["ShellTest.java", "Creating unstable=0 produces unstable=null"]
    - ["CloudTest.java", "Name introduced by JENKINS-37616"]
    - ["CloudTest.java", "index.jelly"]
    - ["CloudTest.java", "top.jelly"]
    - ["CloudTest.java", "main.jelly"]
    - ["CloudTest.java", "TaskCloudAction"]
    - ["CloudTest.java", "TaskCloudAction/box.jelly"]
    - ["CloudTest.java", "ReportingCloudAction/summary.jelly"]
    - ["CloudTest.java", "doIndex"]
    - ["CloudTest.java", "not task bar icon"]
    - ["CloudTest.java", "not URL space"]
    - ["InstallerTranslatorTest.java", "cf. JDK.buildEnvVars"]
    - ["InstallerTranslatorTest.java", "An installer is run for every build, and it is up to a CommandInstaller configuration to do any up-to-date check."]
    - ["MavenTest.java", "password"]
    - ["MavenTest.java", "/tmp/foo"]
    - ["MavenTest.java", "/tmp/settings.xml"]
    - ["MavenTest.java", "/tmp/global-settings.xml"]
    - ["ToolLocationTest.java", "HudsonTestCase adds a 'default' JDK"]
    - ["ToolLocationTest.java", "make sure it's really that we're seeing"]
    - ["TriggerTest.java", "Override Trigger#readResolve so this one is not called"]
    - ["JDKInstallerTest.java", "oracle.userName"]
    - ["JDKInstallerTest.java", "oracle.password"]
    - ["JDKInstallerTest.java", "username"]
    - ["JDKInstallerTest.java", "password"]
    - ["ToolLocationNodePropertyTest.java", "we don't want Maven, Ant, etc. to be discovered in the path for this test to work"]
    - ["ToolLocationNodePropertyTest.java", "so empty path breaks the test."]
    - ["FingerprinterTest.java", "Verify that owner entry in fingerprint record is changed after source project is renamed"]
    - ["FingerprinterTest.java", "Verify that usage entry in fingerprint record is changed after sink project is renamed"]
    - ["FingerprinterTest.java", "force build records to be reloaded"]
    - ["FingerprinterTest.java", "TODO randomly fails: for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>"]
    - ["FingerprinterTest.java", "file names shouldn't matter"]
    - ["FingerprinterTest.java", "records for p3 should have been deleted now"]
    - ["FingerprinterTest.java", "another garbage collection that gets rid of p2 records from the fingerprint"]
    - ["FingerprinterTest.java", "do a new build in p2 #2 that points to a separate fingerprints"]
    - ["AtomicFileWriterPerfTest.java", "Using Docker resource constraints, and setting in read&write to IOPS=40 and BPS=10m"]
    - ["ArgumentListBuilder2Test.java", "http://n4.nabble.com/Password-masking-when-running-commands-on-a-slave-tp1753033p1753033.html"]
    - ["RingBufferLogHandlerTest.java", "throws ArrayIndexOutOfBoundsException after int-overflow"]
    - ["XStream2Security383Test.java", "be extra sure there's no file already"]
    - ["UDPBroadcastThreadTest.java", "Old unicast based clients should still be able to receive some reply, as we haven't changed the port."]
    - ["UDPBroadcastThreadTest.java", "to prevent test hang"]
    - ["UDPBroadcastThreadTest.java", "we should at least get two replies since we run two broadcasts"]
    - ["UDPBroadcastThreadTest.java", "Multicast based clients should be able to receive multiple replies."]
    - ["UDPBroadcastThreadTest.java", "Reads a reply from the socket and makes sure its shape is in order."]
    - ["UDPBroadcastThreadTest.java", "make sure at least this XML parses"]
    - ["HudsonPrivateSecurityRealmTest.java", "make sure we can login with the same password as before"]
    - ["HudsonPrivateSecurityRealmTest.java", "verify the sanity that the password is really used"]
    - ["HudsonPrivateSecurityRealmTest.java", "this should fail"]
    - ["HudsonPrivateSecurityRealmTest.java", "resubmit the config and this should force the data store to be rewritten"]
    - ["HudsonPrivateSecurityRealmTest.java", "verify that we can still login"]
    - ["HudsonPrivateSecurityRealmTest.java", "Check both users can use their token"]
    - ["HudsonPrivateSecurityRealmTest.java", "check the tokens still work"]
    - ["HudsonPrivateSecurityRealmTest.java", "throws FailingHttpStatusCodeException on login failure"]
    - ["HudsonPrivateSecurityRealmTest.java", "belt and braces incase the failed login no longer throws exceptions."]
    - ["HudsonPrivateSecurityRealmTest.java", "wc1.setCredentialsProvider(new FixedCredentialsProvider(user1, u1Token));"]
    - ["HudsonPrivateSecurityRealmTest.java", "wc2.setCredentialsProvider(new FixedCredentialsProvider(user2, u1Token));"]
    - ["HudsonPrivateSecurityRealmTest.java", "user should not exist before"]
    - ["HudsonPrivateSecurityRealmTest.java", "no new event in such case"]
    - ["HudsonPrivateSecurityRealmTest.java", "We don't allow prohibited fullnames since this may encumber auditing."]
    - ["Jenkins19124Test.java", "@QueryParameter"]
    - ["I18nTest.java", "tom.fennelly@gmail.com"]
    - ["XMLFileTest.java", "verify that we did indeed load our test config.xml"]
    - ["XMLFileTest.java", "verify that the persisted top level config.xml is v1.1"]
    - ["ProcessTreeKillerTest.java", "this contains a maven project with a single test that sleeps 5s."]
    - ["ProcessTreeKillerTest.java", "build the project, wait until tests are running, then cancel."]
    - ["ProcessTreeKillerTest.java", "will fail (at least on windows) if test process is still running"]
    - ["ProcessTreeKillerTest.java", "on some platforms where we fail to list any processes, this test will"]
    - ["ProcessTreeKillerTest.java", "Means the process is still running"]
    - ["ProcessTreeKillerTest.java", "kick off a process we (shouldn't) kill"]
    - ["SecretCompatTest.java", "Keep this a secret"]
    - ["SecretCompatTest.java", "<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>"]
    - ["SecretCompatTest.java", "theSecret"]
    - ["InstallStateTest.java", "It also prevents occasional name duplications"]
    - ["LoadDetachedPluginsTest.java", "@LocalData has command-launcher 1.2 installed, which should not be downgraded to the detached version: 1.0."]
    - ["AgentProtocolTest.java", "TODO: Test is unstable on CI due to the race condition, needs to be reworked"]
    - ["Jenkins41511Test.java", "System.setProperty(Jenkins.class.getName()+.slaveAgentPort, 10000)"]
    - ["Jenkins41511Test.java", "System.setProperty(Jenkins.class.getName()+.slaveAgentPortEnforce, true)"]
    - ["BootFailureTest.java", "don't let Jenkins start automatically"]
    - ["BootFailureTest.java", "didn't boot"]
    - ["BootFailureTest.java", "creates a script"]
    - ["BootFailureTest.java", "first failed boot"]
    - ["BootFailureTest.java", "second failed boot"]
    - ["BootFailureTest.java", "make sure the script has actually run"]
    - ["BootFailureTest.java", "if it boots well, the failure record should be gone"]
    - ["BootFailureTest.java", "to be set by the script"]
    - ["EnvVarsInConfigTasksTest.java", "until we can switch to JenkinsRule and tmp becomes a @Rule itself"]
    - ["EnvVarsInConfigTasksTest.java", "Maven with a variable in its path"]
    - ["EnvVarsInConfigTasksTest.java", "Ant with a variable in its path"]
    - ["EnvVarsInConfigTasksTest.java", "create slaves"]
    - ["EnvVarsInConfigTasksTest.java", "set appropriate SCM to get the necessary build files"]
    - ["EnvVarsInConfigTasksTest.java", "test the regular slave - variable not expanded"]
    - ["EnvVarsInConfigTasksTest.java", "test the slave with prepared environment"]
    - ["EnvVarsInConfigTasksTest.java", "Check variable was expanded"]
    - ["EnvVarsInConfigTasksTest.java", "we need additional escapes because bash itself expanding"]
    - ["EnvVarsInConfigTasksTest.java", "it's  okay to use it in tests"]
    - ["SetupWizardTest.java", "Retrieve admin credentials"]
    - ["SetupWizardTest.java", "wc.setCredentialsProvider(adminCredentialsProvider);"]
    - ["SetupWizardTest.java", "wc.login(admin);"]
    - ["BuildTriggerTest.java", "do not clash with English messages!"]
    - ["BuildTriggerTest.java", "somehow maven-surefire-plugin-2.4.3.pom got corrupted on CI builders"]
    - ["BuildTriggerTest.java", "lib/hudson/project/config-publishers2.jelly"]
    - ["BuildTriggerTest.java", "Next build should trigger downstream job"]
    - ["BuildTriggerTest.java", "First build should not trigger downstream job"]
    - ["BuildTriggerTest.java", "Wait for downstream build"]
    - ["BuildTriggerTest.java", "If we can see them, but not build them, that is a warning (but this is in cleanUp so the build is still considered a success):"]
    - ["BuildTriggerTest.java", "Fail downstream build if upstream is not completed yet"]
    - ["BuildTriggerTest.java", "Unless we explicitly granted them:"]
    - ["BuildTriggerTest.java", "Finally, in legacy mode we run as SYSTEM:"]
    - ["BuildTriggerTest.java", "Downstream projects whose existence we are not aware of will silently not be triggered:"]
    - ["BuildTriggerTest.java", "otherwise do nothing which gets FAILURE"]
    - ["BuildTriggerTest.java", "Configure for SUCCESS"]
    - ["BuildTriggerTest.java", "Now if we have configured some QIA’s but they are not active on this job, we should normally fall back to running as anonymous. Which would normally have no permissions:"]
    - ["BuildTriggerTest.java", "similar behavior but different message if DescriptorImpl removed"]
    - ["BuildDiscarderPropertyTest.java", "now persist in the new format"]
    - ["BuildDiscarderPropertyTest.java", "make sure this new format roundtrips by itself"]
    - ["BuildDiscarderPropertyTest.java", "another sanity check"]
    - ["InstallUtilTest.java", "mailto:tom.fennelly@gmail.com"]
    - ["InstallUtilTest.java", "config.xml"]
    - ["InstallUtilTest.java", "http://omg.org"]
    - ["InstallUtilTest.java", "http://google.com"]
    - ["ParameterizedJobMixInTest.java", "project.getUrl() + build"]
    - ["ParameterizedJobMixInTest.java", "project.getUrl() + buildWithParameters"]
    - ["UpgradeWizardTest.java", "Disable the unit test flag."]
    - ["UpgradeWizardTest.java", "can't really test this because UC metadata is empty"]
    - ["UpgradeWizardTest.java", "If not upgraded, the upgrade should cause some side effect."]
    - ["UpgradeWizardTest.java", "If already upgraded, don't show anything"]
    - ["UpgradeWizardTest.java", "there are platform plugin updates"]
    - ["UpgradeWizardTest.java", "Fresh instance of {@link UpgradeWizard} to test its behavior."]
    - ["UpgradeWizardTest.java", "Write a version to the update file, update last modified to > 24h"]
    - ["ClassFilterImplTest.java", "Note that currently even M2S callables are rejected when using classes blacklisted in ClassFilter.STANDARD, such as JSONObject."]
    - ["MasterBuildConfigurationTest.java", "set our own label & mode"]
    - ["MasterBuildConfigurationTest.java", "call global config page"]
    - ["MasterBuildConfigurationTest.java", "make sure settings were not lost"]
    - ["CustomClassFilterTest.java", "As an aside, the following appear totally unused anyway!"]
    - ["FilePathSecureTest.java", "to see the difference: DefaultFilePathFilter.BYPASS = true;"]
    - ["JenkinsTest.java", "User.ALLOW_USER_CREATION_VIA_URL = true;"]
    - ["JenkinsTest.java", "Sources: https://github.com/Vlatombe/jenkins-47406"]
    - ["JenkinsTest.java", "no anonymous read access"]
    - ["JenkinsTest.java", "not 403 forbidden"]
    - ["JenkinsTest.java", "boot failure if the issue is not fixed."]
    - ["PluginWrapper.java", "A String error message, and a boolean indicating whether it's an original error (false) or downstream from an original one (true)"]
    - ["PluginWrapper.java", "Base URL for loading static resources from this plugin. Null if disabled. The static resources are mapped under <tt>CONTEXTPATH/plugin/SHORTNAME/</tt>."]
    - ["PluginWrapper.java", "Used to control enable/disable setting of the plugin. If this file exists, plugin will be disabled."]
    - ["PluginWrapper.java", "A .jpi file, an exploded plugin directory, or a .jpl file."]
    - ["PluginWrapper.java", "Short name of the plugin. The artifact Id of the plugin. This is also used in the URL within Jenkins, so it needs to remain stable even when the *.jpi file name is changed (like Maven does.)"]
    - ["PluginWrapper.java", "True if this plugin is activated for this session. The snapshot of <tt>disableFile.exists()</tt> as of the start up."]
    - ["PluginWrapper.java", "List of plugins that depend on this plugin."]
    - ["PluginWrapper.java", "The core can depend on a plugin if it is bundled. Sometimes it's the only thing that depends on the plugin e.g. UI support library bundle plugin."]
    - ["PluginWrapper.java", "Set the list of components that depend on this plugin. @param dependants The list of components that depend on this plugin."]
    - ["PluginWrapper.java", "Get the list of components that depend on this plugin. @return The list of components that depend on this plugin."]
    - ["PluginWrapper.java", "Does this plugin have anything that depends on it. @return {@code true} if something (Jenkins core, or another plugin) depends on this plugin, otherwise {@code false}."]
    - ["PluginWrapper.java", "Does this plugin depend on any other plugins. @return {@code true} if this plugin depends on other plugins, otherwise {@code false}."]
    - ["PluginWrapper.java", "A plugin won't be loaded unless his declared dependencies are present and match the required minimal version. This can be set to false to disable the version check (legacy behaviour)"]
    - ["PluginWrapper.java", "Returns the URL of the index page jelly script."]
    - ["PluginWrapper.java", "Returns the short name suitable for URL."]
    - ["PluginWrapper.java", "Gets the URL that shows more information about this plugin. @return null if this information is unavailable. @since 1.283"]
    - ["PluginWrapper.java", "Returns a one-line descriptive name of this plugin."]
    - ["PluginWrapper.java", "Does this plugin supports dynamic loading?"]
    - ["PluginWrapper.java", "Returns the version number of this plugin"]
    - ["PluginWrapper.java", "Returns the required Jenkins core version of this plugin. @return the required Jenkins core version of this plugin. @since 2.16"]
    - ["PluginWrapper.java", "Returns true if the version of this plugin is older than the given version."]
    - ["PluginWrapper.java", "Terminates the plugin."]
    - ["PluginWrapper.java", "Enables this plugin next time Jenkins runs."]
    - ["PluginWrapper.java", "Disables this plugin next time Jenkins runs."]
    - ["PluginWrapper.java", "Returns true if this plugin is enabled for this session."]
    - ["PluginWrapper.java", "If true, the plugin is going to be activated next time Jenkins runs."]
    - ["PluginWrapper.java", "Makes sure that all the dependencies exist, and then accept optional dependencies as real dependencies. @throws IOException thrown if one or several mandatory dependencies doesn't exists."]
    - ["PluginWrapper.java", "If the plugin has {@link #getUpdateInfo() an update}, returns the {@link hudson.model.UpdateSite.Plugin} object. @return This method may return null &mdash; for example, the user may have installed a plugin locally developed."]
    - ["PluginWrapper.java", "returns the {@link hudson.model.UpdateSite.Plugin} object, or null."]
    - ["PluginWrapper.java", "Returns true if this plugin has update in the update center. <p> This method is conservative in the sense that if the version number is incomprehensible, it always returns false."]
    - ["PluginWrapper.java", "Returns true if this plugin is deleted. The plugin continues to function in this session, but in the next session it'll disappear."]
    - ["PluginWrapper.java", "returns true if backup of previous version of plugin exists"]
    - ["PluginWrapper.java", "Where is the backup file?"]
    - ["PluginWrapper.java", "returns the version of the backed up plugin, or null if there's no back up."]
    - ["PluginWrapper.java", "Checks if this plugin is pinned and that's forcing us to use an older version than the bundled one."]
    - ["PluginWrapper.java", "Depending on whether the user said dismiss or correct, send him to the right place."]
    - ["PluginWrapper.java", "send back to plugin manager"]
    - ["PluginWrapper.java", "Name of the plugin manifest file (to help find where we parse them.)"]
    - ["ApiCrumbExclusionTest.java", "API Token"]
    - ["ApiCrumbExclusionTest.java", "even with crumbIssuer enabled, we are not required to send a CSRF token when using API token"]
    - ["ApiCrumbExclusionTest.java", "Basic auth using password"]
    - ["ApiCrumbExclusionTest.java", "Basic auth using password requires crumb"]
    - ["JenkinsReloadConfigurationTest.java", "users/some_user/config.xml"]
    - ["JenkinsReloadConfigurationTest.java", "jobs/a_project/config.xml"]
    - ["JenkinsReloadConfigurationTest.java", "config.xml"]
    - ["JenkinsReloadConfigurationTest.java", "hudson.tasks.Mailer.xml"]
    - ["LastGrantedAuthoritiesPropertyTest.java", "wc.login(alice, alice:development:us)"]
    - ["LastGrantedAuthoritiesPropertyTest.java", "wc.login(alice, alice:development:uk)"]
    - ["LastGrantedAuthoritiesPropertyTest.java", "wc.login(alice, alice:authenticated:development:uk)"]
    - ["AdminFilePathFilterTest.java", "WorkflowRun:"]
    - ["ExecBlockingSecurityManager.java", "throw a special exception to ensure we can detect exec() in the test"]
    - ["RekeySecretAdminMonitorTest.java", "superDuperSecretWasNotSoSecretAfterAll"]
    - ["RekeySecretAdminMonitorTest.java", "Invalid request submission: {json=[Ljava.lang.String;@2c46358e, .crumb=[Ljava.lang.String;@35661457}"]
    - ["UnlabeledLoadStatisticsTest.java", "Disable builds by default, create a slave to prevent assigning of master labels"]
    - ["UnlabeledLoadStatisticsTest.java", "Put unlabeled build into the queue"]
    - ["UnlabeledLoadStatisticsTest.java", "Put labeled build into the queue"]
    - ["UnlabeledLoadStatisticsTest.java", "Allow executions of unlabeled builds on master, all unlabeled builds should pass"]
    - ["JenkinsReverse.java", "CVE-2016-0788 exploit"]
    - ["JRMPListener.java", "Port number to open listener to"]
    - ["JRMPListener.java", "This test would make you potentially vulnerable"]
    - ["DefaultFilePathFilterTest.java", "rule.setMasterKillSwitch(false);"]
    - ["DefaultFilePathFilterTest.java", "FilePath forward = s.getRootPath().child(forward);"]
    - ["DefaultFilePathFilterTest.java", "FilePath reverse = new FilePath(new File(r.jenkins.root, reverse));"]
    - ["DefaultFilePathFilterTest.java", "DefaultFilePathFilter.BYPASS = true;"]
    - ["JRMPClassLoadingListener.java", "java.rmi.server.useCodebaseOnly=false"]
    - ["JRMPClassLoadingListener.java", "URLPermission"]
    - ["JRMPClassLoadingListener.java", "security manager bypass exploit"]
    - ["JenkinsCLI.java", "Jenkins unfortunately is still using a custom serialization based protocol for remote communications only protected by a blacklisting application level filter."]
    - ["JenkinsCLI.java", "This is a generic client delivering a gadget chain payload via that protocol."]
    - ["PayloadTest.java", "author mbechler"]
    - ["JenkinsListener.java", "CVE-2016-0788 exploit"]
    - ["JenkinsListener.java", "endpoint:[172.16.20.11:12345](local)"]
    - ["JenkinsListener.java", "objID:[de39d9c:15269e6d8bf:-7fc1"]
    - ["RMIRegistryExploit.java", "ensure payload doesn't detonate during construction or deserialization"]
    - ["RMIRegistryExploit.java", "Utility program for exploiting RMI registries running with required gadgets available in their ClassLoader. Attempts to exploit the registry itself, then enumerates registered endpoints and their interfaces. TODO: automatic exploitation of endpoints, potentially with automated download and use of jars containing remote interfaces. See http://www.findmaven.net/api/find/class/org.springframework.remoting.rmi.RmiInvocationHandler"]
    - ["BasicHeaderProcessorTest.java", "call without authentication"]
    - ["BasicHeaderProcessorTest.java", "call with invalid API token"]
    - ["BasicHeaderProcessorTest.java", "if the session cookie is valid, then basic header won't be needed"]
    - ["BasicHeaderProcessorTest.java", "call with API token"]
    - ["BasicHeaderProcessorTest.java", "but if the password is incorrect, it should fail, instead of silently logging in as the user indicated by session"]
    - ["BasicHeaderProcessorTest.java", "if the session cookie is valid, and basic header is set anyway login should not fail either"]
    - ["BasicHeaderProcessorTest.java", "call with incorrect password"]
    - ["BasicHeaderProcessorTest.java", "call with password"]
    - ["BasicHeaderProcessorTest.java", "Tests various ways to send the Basic auth."]
    - ["JRMPClient.java", "host:port to connect to, host only chooses random port (DOS if repeated many times)"]
    - ["JRMPClient.java", "an established JRMP connection to the endpoint (if reachable)"]
    - ["JRMPClient.java", "a connected RMI Registry proxy"]
    - ["JRMPClient.java", "one system thread per endpoint (DOS)"]
    - ["ApiTokenPropertyTest.java", "Make sure that user is able to get the token via the interface"]
    - ["ApiTokenPropertyTest.java", "Make sure the UI shows the token to the user"]
    - ["ApiTokenPropertyTest.java", "round-trip shouldn't change the API token"]
    - ["ApiTokenPropertyTest.java", "we won't accept historically used initial value as it may be compromised"]
    - ["ApiTokenPropertyTest.java", "Make sure that Admin can reset a token of another user"]
    - ["ApiTokenPropertyTest.java", "any other value is OK. those are changed values"]
    - ["ApiTokenPropertyTest.java", "Yes, we use the insecure call in the test stuff"]
    - ["ApiTokenPropertyTest.java", "Make sure the UI does not show the token to another user"]
    - ["ApiTokenPropertyTest.java", "test the authentication via Token"]
    - ["ApiTokenPropertyTest.java", "TODO This nicer alternative requires https://github.com/jenkinsci/jenkins/pull/2268 or similar to work"]
    - ["ApiTokenPropertyTest.java", "the replacement for the compromised value must be consistent and cannot be random"]
    - ["CommonsCollections3.java", "inert chain for setup"]
    - ["CommonsCollections3.java", "real chain for after setup"]
    - ["CommonsCollections3.java", "arm with actual transformer chain"]
    - ["CommonsCollections6.java", "Gadget chain"]
    - ["CommonsCollections4.java", "mock method name until armed"]
    - ["CommonsCollections4.java", "grab defensively copied arrays"]
    - ["CommonsCollections4.java", "create queue with numbers"]
    - ["CommonsCollections4.java", "swap in values to arm"]
    - ["CommonsCollections2.java", "Gadget chain"]
    - ["CommonsCollections2.java", "mock method name until armed"]
    - ["CommonsCollections2.java", "create queue with numbers and basic comparator"]
    - ["CommonsCollections2.java", "stub data for replacement later"]
    - ["CommonsCollections2.java", "switch method called by comparator"]
    - ["CommonsCollections2.java", "switch contents of queue"]
    - ["CommonsBeanutils1.java", "mock method name until armed"]
    - ["CommonsBeanutils1.java", "create queue with numbers and basic comparator"]
    - ["CommonsBeanutils1.java", "stub data for replacement later"]
    - ["CommonsBeanutils1.java", "switch method called by comparator"]
    - ["CommonsBeanutils1.java", "switch contents of queue"]
    - ["CommonsCollections1.java", "Gadget chain"]
    - ["CommonsCollections1.java", "Requires: commons-collections"]
    - ["CommonsCollections1.java", "arm with actual transformer chain"]
    - ["CommonsCollections1.java", "real chain for after setup"]
    - ["CommonsCollections1.java", "inert chain for setup"]
    - ["Jdk7u21.java", "See: https://gist.github.com/frohoff/24af7913611f8406eaf3"]
    - ["Jdk7u21.java", "swap in real object"]
    - ["Groovy1.java", "Gadget chain: ObjectInputStream.readObject() PriorityQueue.readObject() Comparator.compare() (Proxy) ConvertedClosure.invoke() MethodClosure.call() ... Method.invoke() Runtime.exec() Requires: groovy"]
    - ["JSF.java", "JSF view state exploit"]
    - ["JSF.java", "Delivers a gadget payload via JSF ViewState token."]
    - ["JSF.java", "This will only work if ViewState encryption/mac is disabled."]
    - ["JSF.java", "While it has been long known that client side state saving with encryption disabled leads to RCE via EL injection, this of course also works with deserialization gadgets."]
    - ["JSF.java", "Also, it turns out that MyFaces is vulnerable to this even when using server-side state saving (yes, please, let's (de-)serialize a String as an Object)."]
    - ["JsonLibSignedObject.java", "KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(DSA);"]
    - ["JSON1.java", "we need to make payload implement composite data"]
    - ["JSON1.java", "it's very likely that there are other proxy impls that could be used"]
    - ["Spring2.java", "test deps"]
    - ["PayloadRunner.java", "utility class for running exploits locally from command line"]
    - ["PayloadRunner.java", "ensure payload generation doesn't throw an exception"]
    - ["ExecCheckingSecurityManager.java", "restore sm"]
    - ["ExecCheckingSecurityManager.java", "save sm"]
    - ["ExecCheckingSecurityManager.java", "throw a special exception to ensure we can detect exec() in the test"]
    - ["FileUpload1.java", "writes data to an arbitrary file"]
    - ["FileUpload1.java", "otherwise the finalizer deletes the file"]
    - ["FileUpload1.java", "writes data to a random filename (update_<per JVM random UUID>_<COUNTER>.tmp)"]
    - ["FileUpload1.java", "if thresh < written length, delete outputFile after copying to repository temp file"]
    - ["FileUpload1.java", "otherwise write the contents to repository temp file"]
    - ["Spring1.java", "Gadget chain"]
    - ["Security380Test.java", "return 0rn"]
    - ["OldRemotingAgentTest.java", "EnvVars are ignored, simple Command Launcher does not offer this API in public"]
    - ["Security218Test.java", "To watch it fail: secret = secret.replace('1', '2');"]
    - ["Security218Test.java", "The attack scenario here is that a master sends a normal command to a slave and a slave inserts a malicious response."]
    - ["CommonsCollections5.java", "arm with actual transformer chain"]
    - ["CommonsCollections5.java", "real chain for after setup"]
    - ["CommonsCollections5.java", "Gadget chain: ObjectInputStream.readObject() AnnotationInvocationHandler.readObject() Map(Proxy).entrySet() AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() InvokerTransformer.transform() Method.invoke() Class.getMethod() InvokerTransformer.transform() Method.invoke() Runtime.getRuntime() InvokerTransformer.transform() Method.invoke() Runtime.exec()"]
    - ["FullDuplexHttpServiceTest.java", "see FullDuplexHttpStream.getInputStream"]
    - ["Security218BlackBoxTest.java", "TODO userContent inaccessible without authentication otherwise"]
    - ["Security218BlackBoxTest.java", "Hardcoding CLI protocol version 1 (CliProtocol) because it is easier to sniff."]
    - ["Security218BlackBoxTest.java", "An attack payload, as a Java serialized object ({@code xACED…})."]
    - ["Security218BlackBoxTest.java", "TODO find a Windows equivalent"]
    - ["UserDetailsCacheTest.java", "realm.createAccount(alice, veeerysecret)"]
    - ["SpySecurityListener.java", "TODO temporary solution, should be moved to Jenkins Test Harness project"]
    - ["SpySecurityListener.java", "Mean to be included in test classes to provide a way to spy on the SecurityListener events"]
    - ["SimpleBuildWrapperTest.java", "TODO why is /opt/jdk/bin added twice? In CommandInterpreter.perform, envVars right before Launcher.launch is correct, but this somehow sneaks in."]
    - ["HistoryPageFilterCaseSensitiveSearchTest.java", "Waiting for Java 8... - coming soon - April 2017?"]
    - ["Gadgets.java", "TODO: could also do fun things like injecting a pure-java rev/bind-shell to bypass naive protections"]
    - ["Gadgets.java", "sortarandom name to allow repeated exploitation (watch out for PermGen exhaustion)"]
    - ["Gadgets.java", "use template gadget class"]
    - ["Gadgets.java", "run command in static initializer"]
    - ["Gadgets.java", "inject class bytes into instance"]
    - ["Gadgets.java", "utility generator functions for common jdk-only gadgets"]
    - ["Gadgets.java", "required to make TemplatesImpl happy"]
    - ["SystemPropertiesTest.java", "Hack to set a web app initial parameter afterwards. Only works with Jetty."]
    - ["FormTest.java", "autocompleteOffByDefault"]
    - ["FormTest.java", "autocompleteOnWhenTrue"]
    - ["FormTest.java", "inputsCanSetAutocomplete"]
    - ["ApplyButtonTest.java", "HtmlUnit doesn't have JSON, so we need to emulate one"]
    - ["ComboBoxTest.java", "Used in testCompoundFieldDependentCombobox for Issue(JENKINS-16719)"]
    - ["ComboBoxTest.java", "Confirms that relative paths work when prefilling a combobox text field"]
    - ["ExpandableTextboxTest.java", "because attribute values are normalized, it's not very easy to encode multi-line string as @value. So let's use the system message here."]
    - ["ExpandableTextboxTest.java", "System.out.println(page.getWebResponse().getContentAsString());"]
    - ["Security232Test.java", "override CliProtocol.OPT_IN"]
    - ["Security232Test.java", "[endpoint:[172.16.20.11:12345](local),objID:[de39d9c:15269e6d8bf:-7fc1, -9046794842107247609]]"]
    - ["Security232Test.java", "Need to find Windows equivalent."]
    - ["TextAreaTest.java", "test for a textarea beginning with a empty line."]
    - ["TextAreaTest.java", "test for a textarea beginning with two empty lines."]
    - ["ValidateButtonTest.java", "if doValidateTest1() doesn't get invoked, we want to know."]
    - ["RowSetTest.java", "test/test1"]
    - ["RowSetTest.java", "config"]
    - ["RowSetTest.java", "test"]
    - ["RowVisibilityGroupTest.java", "now click inner, to reveal the field"]
    - ["RowVisibilityGroupTest.java", "reveal the text box"]
    - ["RowVisibilityGroupTest.java", "make sure we get what we expect"]
    - ["LayoutTest.java", "PresetData.DataSet.NO_ANONYMOUS_READACCESS"]
    - ["OptionTest.java", "this javascript simply replace the whole document by hacked and so the FLAG will not be present"]
    - ["OptionTest.java", "also check there is no <script> present in the answer"]
    - ["OptionTest.java", "those ones were vulnerable before the patch, you can test that by undoing the changes"]
    - ["RepeatableTest.java", "Alan.Harder@sun.com"]
    - ["RepeatableTest.java", "seeds"]
    - ["RepeatableTest.java", "hudson-behavior uniquifies radiobutton names so the browser properly handles each group, then converts back to original names when submitting form."]
    - ["RepeatableTest.java", "To see where such asynchronous activity is happening, set a breakpoint to {@link JavaScriptJobManagerImpl#addJob(JavaScriptJob, Page)} and look at the call stack. Also see {@link #jsDebugger} at that time to see the JavaScript callstack."]
    - ["SecurityContextExecutorServiceTest.java", "Create a system level context with ACL.SYSTEM"]
    - ["SecurityContextExecutorServiceTest.java", "Create a sample user context"]
    - ["SecurityContextExecutorServiceTest.java", "Create a null context"]
    - ["SecurityContextExecutorServiceTest.java", "Create a wrapped service"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the context inside the runnable thread was set to ACL.SYSTEM"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the context inside the runnable thread was set to the user's context"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the context inside the runnable thread was set to the null context"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the context inside the callable thread was set to ACL.SYSTEM"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the context inside the callable thread was set to the user's context"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the context inside the callable thread was set to the null context"]
    - ["SecurityContextExecutorServiceTest.java", "Assert each thread context was identical to the initial service context"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the current context is once again ACL.SYSTEM"]
    - ["SecurityContextExecutorServiceTest.java", "Assert the current context is once again the userContext"]
    - ["ReverseBuildTriggerTest.java", "do not clash with English messages!"]
    - ["ReverseBuildTriggerTest.java", "as in AbstractProject.submit"]
    - ["ReverseBuildTriggerTest.java", "as in AbstractProject.doConfigSubmit"]
    - ["ReverseBuildTriggerTest.java", "Legacy mode: alice has no read permission on upstream but it works anyway"]
    - ["ReverseBuildTriggerTest.java", "A QIA is configured but does not specify any authentication for downstream, so upstream should not trigger it:"]
    - ["ReverseBuildTriggerTest.java", "Auth for upstream is defined but cannot see downstream, so no message is printed about it:"]
    - ["ReverseBuildTriggerTest.java", "Alice can see upstream, so downstream gets built, but the upstream build cannot see downstream:"]
    - ["ReverseBuildTriggerTest.java", "Now if upstream build is permitted to report on downstream:"]
    - ["ReverseBuildTriggerTest.java", "Alice can only DISCOVER upstream, so downstream does not get built, but the upstream build cannot DISCOVER downstream"]
    - ["ReverseBuildTriggerTest.java", "A QIA is configured but does not specify any authentication for downstream, anonymous can only DISCOVER upstream"]
    - ["ReverseBuildTriggerTest.java", "so no message is printed about it, and no Exception neither (JENKINS-42707)"]
    - ["ReverseBuildTriggerTest.java", "job with trigger.job == null"]
    - ["ReverseBuildTriggerTest.java", "job with trigger.job != null"]
    - ["ReverseBuildTriggerTest.java", "The reported issue was with Pipeline jobs, which calculate their dependency graphs via"]
    - ["ReverseBuildTriggerTest.java", "ReverseBuildTrigger.RunListenerImpl, so an additional test may be needed downstream."]
    - ["PasswordTest.java", "final String plain_regex_match = .*{[A-Za-z0-9+/]+={0,2}}.*;"]
    - ["PasswordTest.java", "Just a quick verification on what could be on the page and that the regexp is correctly set up"]
    - ["PasswordTest.java", "String sEnc = s.getEncryptedValue();"]
    - ["PasswordTest.java", "Control case: an administrator can read and write configuration freely."]
    - ["PasswordTest.java", "CLICommandInvoker does not work here, as it sets up its own SecurityRealm + AuthorizationStrategy."]
    - ["PasswordTest.java", "Test case: another user with EXTENDED_READ but not CONFIGURE should not get access even to encrypted secrets."]
    - ["PasswordTest.java", "waitForBackgroundJavaScript does not work well"]
    - ["PasswordTest.java", "form validation of saved value"]
    - ["PasswordTest.java", "form validation of edited value"]
    - ["FormTagLib.java", "hudson.util.FormApply"]
    - ["CancelQuietDownCommandTest.java", "ERROR: user is missing the Overall/Administer permission"]
    - ["ConnectNodeCommandTest.java", "avoid a race condition in the test"]
    - ["CreateViewCommandTest.java", "user is missing the View/Create permission"]
    - ["CreateViewCommandTest.java", "View 'ViewFromXML' already exists"]
    - ["CreateViewCommandTest.java", "Invalid view name"]
    - ["ConsoleCommandTest.java", "TODO: do we really want to sleep for 10 seconds?"]
    - ["ConsoleCommandTest.java", "the ver >NUL is to reset ERRORLEVEL so we don't fail (ping causes the error)"]
    - ["DeleteBuildsCommandTest.java", "ERROR: user is missing the Run/Delete permission"]
    - ["DeleteBuildsCommandTest.java", "ERROR: No such job 'aProject'"]
    - ["DeleteBuildsCommandTest.java", "ERROR: No such job 'never_created'"]
    - ["DeleteBuildsCommandTest.java", "ERROR: No such job ''; perhaps you meant 'aProject'?"]
    - ["OfflineNodeCommandTest.java", "ERROR: user is missing the Agent/Disconnect permission"]
    - ["OfflineNodeCommandTest.java", "ERROR: No such agent never_created exists."]
    - ["OfflineNodeCommandTest.java", "ERROR: never_created: No such agent never_created exists. Did you mean aNode1?"]
    - ["ClientAuthenticationCacheTest.java", "assertCLI(0, null, jar, login, --username, dev, --password, dev);"]
    - ["ClientAuthenticationCacheTest.java", "assertCLI(0, null, jar, login, --username, admin, --password, admin);"]
    - ["ClientAuthenticationCacheTest.java", "if (s != null && s.getPlainText().equals(dev)) { val = Secret.fromString(admin).getEncryptedValue(); }"]
    - ["CronTab.java", "Optional timezone string for calendar"]
    - ["CronTab.java", "Used to schedule cron in a different timezone. Null to use the default system timezone"]
    - ["CronTab.java", "Returns the configured time zone, or null if none is configured"]
    - ["RunRangeCommandTest.java", "assertThat(result.stdout(), containsString(String.format(Builds: %s+System.lineSeparator(), String.valueOf(BUILDS))));"]
    - ["RunRangeCommandTest.java", "assertThat(result.stdout(), containsString(Builds: 1+System.lineSeparator()));"]
    - ["RunRangeCommandTest.java", "assertThat(result.stdout(), containsString(Builds: 10+System.lineSeparator()));"]
    - ["RunRangeCommandTest.java", "assertThat(result.stdout(), containsString(Builds: 1,2+System.lineSeparator()));"]
    - ["RunRangeCommandTest.java", "assertThat(result.stdout(), containsString(Builds: 1,2,3,4+System.lineSeparator()));"]
    - ["CLIActionTest.java", "authentication() can take a while on a loaded machine"]
    - ["CLIActionTest.java", "The behavior changed due to SECURITY-192. index page is no longer accessible to anonymous"]
    - ["CLIActionTest.java", "intentionally passing an unreifiable argument here; Remoting-based constructor intentional"]
    - ["CLIActionTest.java", "ClientAuthenticationCache also used too late"]
    - ["CLIActionTest.java", "does not work with API tokens"]
    - ["CLIActionTest.java", "but does under new protocol"]
    - ["CLIActionTest.java", "AccessDeniedException from CLIRegisterer?"]
    - ["CLIActionTest.java", "works from CliAuthenticator"]
    - ["CLIActionTest.java", "or from ClientAuthenticationCache"]
    - ["CLIActionTest.java", "AccessDeniedException from AbstractItem.writeConfigDotXml"]
    - ["CLIActionTest.java", "Show that API tokens do work in Remoting-over-HTTP mode (just not over the JNLP port)"]
    - ["CLIActionTest.java", "ADMIN = admin@mycorp.com"]
    - ["CLIActionTest.java", "not covering SSH keys in this test"]
    - ["CLIActionTest.java", "Try to get a thread dump of the client if it hangs."]
    - ["CLIActionTest.java", "cannot just search for, say, groovy:000>  since there are ANSI escapes there (cf. StringEscapeUtils.escapeJava)"]
    - ["CLIActionTest.java", "ditto not ===> 121"]
    - ["CLIActionTest.java", "aggravate org.eclipse.jetty.io.IdleTimeout (cf. AbstractConnector._idleTimeout)"]
    - ["AbstractItemSecurityTest.java", "if we didn't fail JAXP has thrown away the entity."]
    - ["AbstractItemSecurityTest.java", "the entity is transformed"]
    - ["AbstractLazyLoadRunMap.java", "Base directory for data. In effect this is treated as a final field, but can't mark it final because the compatibility requires that we make it settable in the first call after the constructor."]
    - ["AbstractLazyLoadRunMap.java", "Updates base directory location after directory changes. This method should be used on jobs renaming, etc."]
    - ["BuildReferenceMapAdapter.java", "TODO: to properly pass this onto core, we need to wrap o into BuildReference but also needs to figure out ID."]
    - ["BuildReferenceMapAdapter.java", "TODO this is wrong"]
    - ["BuildReferenceMapAdapter.java", "TODO should this be core.containsValue(wrap(value))?"]
    - ["LazyBuildMixIn.java", "JENKINS-27530: improper nextBuildNumber {0} detected in {1} with highest build number {2}; adjusting"]
    - ["LazyBuildMixIn.java", "JENKINS-20662: create connection to previous build"]
    - ["LazyBuildMixIn.java", "JENKINS-15156: builds accessed before onLoad or onCreatedFromScratch called"]
    - ["SetupWizard.java", "initialSetupAdminUserName"]
    - ["SetupWizard.java", "difficult password"]
    - ["SetupWizard.java", "create an admin user"]
    - ["SetupWizard.java", "write to a file in the jenkins home directory"]
    - ["SetupWizard.java", "most native packages of Jenkins creates a machine user account 'jenkins' to run Jenkins, and use group 'jenkins' for admins. So we allow groups to read this file"]
    - ["SetupWizard.java", "Disable jnlp by default, but honor system properties"]
    - ["SetupWizard.java", "Disable CLI over Remoting"]
    - ["SetupWizard.java", "Disable old Non-Encrypted protocols"]
    - ["SetupWizard.java", "require a crumb issuer"]
    - ["SetupWizard.java", "set master -> slave security"]
    - ["SetupWizard.java", "Not initial security setup if no transitional admin user / password found"]
    - ["SetupWizard.java", "Called during the initial setup to create an admin user"]
    - ["SetupWizard.java", "Success! Delete the temporary password file"]
    - ["SetupWizard.java", "recreate this initial user if something failed"]
    - ["SetupWizard.java", "File that captures the state of upgrade"]
    - ["SetupWizard.java", "This filter will validate that the security token is provided"]
    - ["SetupWizard.java", "Force root requests to the setup wizard"]
    - ["SetupWizard.java", "Sets up the Setup Wizard filter if the current state requires it"]
    - ["HudsonHomeDiskUsageMonitorTest.java", "manually activate this"]
    - ["HudsonHomeDiskUsageMonitorTest.java", "clicking yes should take us to somewhere"]
    - ["HudsonHomeDiskUsageMonitorTest.java", "now dismiss"]
    - ["HudsonHomeDiskUsageMonitorTest.java", "submit(getForm(mon),no); TODO: figure out why this test is fragile"]
    - ["HudsonHomeDiskUsageMonitorTest.java", "and make sure it's gone"]
    - ["HudsonHomeDiskUsageMonitorTest.java", "TODO: Use MockAuthorizationStrategy in later versions"]
    - ["InstanceIdentityProvider.java", "RSA keys."]
    - ["InstanceIdentityProvider.java", "DSA keys."]
    - ["InstanceIdentityProvider.java", "EC keys"]
    - ["InstanceIdentityProvider.java", "Gets the {@link KeyPair} that comprises the instance identity."]
    - ["InstanceIdentityProvider.java", "Shortcut to {@link KeyPair#getPublic()}."]
    - ["InstanceIdentityProvider.java", "Shortcut to {@link KeyPair#getPrivate()}."]
    - ["InstanceIdentityProvider.java", "Gets the self-signed {@link X509Certificate} that is associated with this identity. The certificate will must be currently valid. Repeated calls to this method may result in new certificates being generated."]
    - ["InstanceIdentityProvider.java", "The interface for the public key."]
    - ["InstanceIdentityProvider.java", "The interface for the private key."]
    - ["InstanceIdentityProvider.java", "Gets the provider of the required identity type."]
    - ["ParameterizedJobMixIn.java", "hudson.model.BuildAuthorizationToken.checkPermission(asJob(), asJob().getAuthToken(), req, rsp);"]
    - ["ParameterizedJobMixIn.java", "hudson.model.BuildAuthorizationToken.checkPermission((Job) this, getAuthToken(), req, rsp);"]
    - ["ParameterizedJobMixIn.java", "hudson.model.BuildAuthorizationToken authToken = job.getAuthToken();"]
    - ["ParameterizedJobMixIn.java", "hudson.model.BuildAuthorizationToken.checkPermission(CONFIGURE);"]
    - ["AbstractBuildTest.java", "signal that build #1 is in publisher"]
    - ["AbstractBuildTest.java", "at this point both builds are in the publisher, so we verify that"]
    - ["AbstractBuildTest.java", "the workspace are differently allocated"]
    - ["AbstractBuildTest.java", "force this to be initialized"]
    - ["AbstractBuildTest.java", "Job property, which always fails with an exception."]
    - ["AbstractBuildTest.java", "Makes sure that raw console output doesn't get affected by XML escapes."]
    - ["AbstractBuildTest.java", "Verify that we can get culprits while running."]
    - ["AbstractBuildTest.java", "1st build, successful, no culprits"]
    - ["AbstractBuildTest.java", "2nd build"]
    - ["AbstractBuildTest.java", "3rd build. bob continues to be in culprit"]
    - ["AbstractBuildTest.java", "4th build, unstable. culprit list should continue"]
    - ["AbstractBuildTest.java", "5th build, unstable. culprit list should continue"]
    - ["AbstractBuildTest.java", "6th build, success, accumulation continues up to this point"]
    - ["AbstractBuildTest.java", "7th build, back to empty culprits"]
    - ["AbstractProjectTest.java", "make sure that the action link is protected"]
    - ["AbstractProjectTest.java", "there shouldn't be any wipe out workspace link for anonymous user"]
    - ["AbstractProjectTest.java", "make sure that the deletion is protected in the same way"]
    - ["AbstractProjectTest.java", "release the polling"]
    - ["AbstractProjectTest.java", "symlinks may not be available"]
    - ["AbstractProjectTest.java", "Delete all builds should remove links"]
    - ["AbstractProjectTest.java", "Delete latest build should update links"]
    - ["AbstractProjectTest.java", "Archive artifacts that don't exist to create failure in post-build action"]
    - ["AbstractProjectTest.java", "Links should be updated after post-build actions when final build result is known"]
    - ["AbstractProjectTest.java", "prevent any builds to test the behaviour"]
    - ["AbstractProjectTest.java", "they should have used the same workspace."]
    - ["AbstractProjectTest.java", "Links should not be updated since build failed"]
    - ["AbstractProjectTest.java", "TODO too slow, seems capable of causing testWorkspaceLock to time out:"]
    - ["AbstractProjectTest.java", "this should fail with a type mismatch error"]
    - ["AbstractProjectTest.java", "request should fail"]
    - ["AbstractProjectTest.java", "the error message should report both what was submitted and what was expected"]
    - ["AbstractProjectTest.java", "control. this should work"]
    - ["AbstractProjectTest.java", "actually did work anyway"]
    - ["AbstractProjectTest.java", "did not work"]
    - ["SCM.java", "JENKINS-35098: discouraged"]
    - ["SCM.java", "Stores {@link AutoBrowserHolder}. Lazily created. @deprecated Unused by default."]
    - ["SCM.java", "don't let the SCM.compareRemoteRevisionWith(...) see SCMRevisionState that it didn't produce."]
    - ["SCM.java", "For backwards compatibility, call the one argument version of the method."]
    - ["SCM.java", "@deprecated since 1.382 Use/override {@link #getModuleRoot(FilePath, AbstractBuild)} instead."]
    - ["SCM.java", "TODO: we need to figure out a better way to communicate an error back, so that we won't keep retrying the same node (for example an agent might be down.)"]
    - ["SCM.java", "Permission to create new tags. @since 1.171"]
    - ["SCM.java", "Try to guess how a repository browser should be configured, based on URLs and the like. Used when {@link #getBrowser} has not been explicitly configured."]
    - ["QueueTest.java", "Make sure that the running build actually carries an credential."]
    - ["QueueTest.java", "ACL that allow anyone to do anything except Alice can't build."]
    - ["QueueTest.java", "Make sure the queue can be reconstructed from a List queue.xml."]
    - ["QueueTest.java", "loaded the legacy queue.xml from test LocalData located in resources/hudson/model/QueueTest/recover_from_legacy_list.zip"]
    - ["QueueTest.java", "System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), queue.xml)));"]
    - ["QueueTest.java", "System.out.println(xs.toXML(v.get(0)));"]
    - ["QueueTest.java", "System.out.println(new XmlFile(new File(build.getRootDir(), build.xml)).asString());"]
    - ["QueueTest.java", "Give the project an unknown-slave label, forcing it to stay in the queue after we schedule it, allowing us to query it."]
    - ["QueueTest.java", "Make build sleep a while so it blocks new builds"]
    - ["QueueTest.java", "Make sure that the slave assignment honors the permissions."]
    - ["QueueTest.java", "we force the project not to be executed so that it stays in the queue"]
    - ["QueueTest.java", "Make sure proper folding happened."]
    - ["QueueTest.java", "Make sure that the running build actually carries an credential."]
    - ["QueueTest.java", "Make sure the queue can be reconstructed from a List queue.xml."]
    - ["QueueTest.java", "loaded the legacy queue.xml from test LocalData located in resources/hudson/model/QueueTest/recover_from_legacy_list.zip"]
    - ["QueueTest.java", "System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), queue.xml)));"]
    - ["QueueTest.java", "System.out.println(xs.toXML(v.get(0)));"]
    - ["QueueTest.java", "System.out.println(new XmlFile(new File(build.getRootDir(), build.xml)).asString());"]
    - ["ProjectTest.java", "Logger.getLogger(...).getHandlers()[0].setFormatter(new MilliSecLogFormatter());"]
    - ["ProjectTest.java", "EnvironmentVariablesNodeProperty.Entry entry = new EnvironmentVariablesNodeProperty.Entry(jdk,some_java);"]
    - ["ProjectTest.java", "project.doCancelQueue(null, null);"]
    - ["ProjectTest.java", "project.doDoDelete(null, null);"]
    - ["ProjectTest.java", "project.doDoWipeOutWorkspace();"]
    - ["ProjectTest.java", "project.doDisable();"]
    - ["ProjectTest.java", "project.doEnable();"]
    - ["ProjectTest.java", "DummyCloudImpl2 c2 = new DummyCloudImpl2(j, 0);"]
    - ["ProjectTest.java", "c2.label = new LabelAtom(test-cloud-label);"]
    - ["ProjectTest.java", "private final int delay;"]
    - ["ProjectTest.java", "private final transient JenkinsRule caller;"]
    - ["ProjectTest.java", "private volatile Computer computer;"]
    - ["ProjectTest.java", "Thread.sleep(time);"]
    - ["ProjectTest.java", "DumbSlave slave = caller.createSlave(label);"]
    - ["ProjectTest.java", "computer.connect(false).get();"]
    - ["ProjectTest.java", "System.out.println(computer.getName()+ launch+(computer.isOnline()?ed successfully: failed));"]
    - ["ProjectTest.java", "System.out.println(computer.getLog());"]

