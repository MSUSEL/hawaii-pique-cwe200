{
  "201": [
    {
      "resultIndex": 2,
      "fileName": "SolonServletContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "user",
              "startLine": 55,
              "startColumn": 18,
              "endLine": 55,
              "endColumn": 22,
              "uri": "solon-3.3.0/__test/src/main/java/webapp/demo8_config/TestController.java",
              "type": "UserModel",
              "code": "\n    @Mapping(\"/demo8/user\")\n    public void user(Context c) throws Throwable{\n        c.render(user);\n    }\n}\n"
            },
            {
              "step": 1,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "UserModel",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 2,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "UserModel",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 3,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "UserModel",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 4,
              "variableName": "data",
              "startLine": 243,
              "startColumn": 27,
              "endLine": 243,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "UserModel",
              "code": "        Render render = resolveRander(ctx);\n\n        if (render != null) {\n            render.render(data, ctx);\n        } else {\n            //最后只有 def\n            //"
            },
            {
              "step": 5,
              "variableName": "Object data",
              "startLine": 91,
              "startColumn": 24,
              "endLine": 91,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "UserModel",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (SerializationConfig.isOutputMeta()) {\n            ctx.headerAdd(\"solon.serialization\", name());\n        }"
            },
            {
              "step": 6,
              "variableName": "data",
              "startLine": 101,
              "startColumn": 41,
              "endLine": 101,
              "endColumn": 45,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "UserModel",
              "code": "        if (typed) {\n            //序列化处理\n            //\n            text = serializer.serialize(data);\n        } else {\n            //非序列化处理\n            //"
            },
            {
              "step": 7,
              "variableName": "Object obj",
              "startLine": 152,
              "startColumn": 29,
              "endLine": 152,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization-jackson-xml/src/main/java/org/noear/solon/serialization/jackson/xml/JacksonXmlStringSerializer.java",
              "type": "UserModel",
              "code": "     * @param obj 对象\n     */\n    @Override\n    public String serialize(Object obj) throws IOException {\n        init();\n\n        return getConfig().writeValueAsString(obj);"
            },
            {
              "step": 8,
              "variableName": "getConfig().writeValueAsString(obj)",
              "startLine": 155,
              "startColumn": 16,
              "endLine": 155,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization-jackson-xml/src/main/java/org/noear/solon/serialization/jackson/xml/JacksonXmlStringSerializer.java",
              "type": "String",
              "code": "    public String serialize(Object obj) throws IOException {\n        init();\n\n        return getConfig().writeValueAsString(obj);\n    }\n\n    /**"
            },
            {
              "step": 9,
              "variableName": "serializer.serialize(data)",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "String",
              "code": "        if (typed) {\n            //序列化处理\n            //\n            text = serializer.serialize(data);\n        } else {\n            //非序列化处理\n            //"
            },
            {
              "step": 10,
              "variableName": "text",
              "startLine": 122,
              "startColumn": 27,
              "endLine": 122,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "String",
              "code": "\n        ctx.attrSet(\"output\", text);\n\n        output(ctx, data, text);\n    }\n\n    /**"
            },
            {
              "step": 11,
              "variableName": "String txt",
              "startLine": 29,
              "startColumn": 52,
              "endLine": 29,
              "endColumn": 62,
              "uri": "solon-3.3.0/__hatch/solon-serialization-avro/src/main/java/org/noear/solon/serialization/avro/AvroStringRender.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    protected void output(Context ctx, Object obj, String txt) {\n        ctx.output(txt);\n    }\n}"
            },
            {
              "step": 12,
              "variableName": "txt",
              "startLine": 30,
              "startColumn": 20,
              "endLine": 30,
              "endColumn": 23,
              "uri": "solon-3.3.0/__hatch/solon-serialization-avro/src/main/java/org/noear/solon/serialization/avro/AvroStringRender.java",
              "type": "String",
              "code": "\n    @Override\n    protected void output(Context ctx, Object obj, String txt) {\n        ctx.output(txt);\n    }\n}\n"
            },
            {
              "step": 13,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 14,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 15,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 16,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 17,
              "variableName": "bytes",
              "startLine": 285,
              "startColumn": 23,
              "endLine": 285,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 51,
              "startColumn": 27,
              "endLine": 51,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "        //客户端ip\n        String ip = ctx.header(\"X-Real-IP\");\n\n        if (Utils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n            //包含了客户端和各级代理ip的完整ip链路\n            ip = ctx.headerOrDefault(\"X-Forwarded-For\", \"\");\n            if (ip.contains(\",\")) {"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "            ip = ctx.remoteIp();\n        }\n\n        return ip;\n    }\n}\n"
            },
            {
              "step": 2,
              "variableName": "IpUtil.global().getRealIp(this)",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String realIp() {\n        if (realIp == null) {\n            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;"
            },
            {
              "step": 3,
              "variableName": "realIp",
              "startLine": 153,
              "startColumn": 16,
              "endLine": 153,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "ctx.realIp()",
              "startLine": 129,
              "startColumn": 25,
              "endLine": 129,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "        //\n        if (verifyIp) {\n            //验证登录情况\n            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));"
            },
            {
              "step": 5,
              "variableName": "ip",
              "startLine": 132,
              "startColumn": 58,
              "endLine": 132,
              "endColumn": 60,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "String note",
              "startLine": 58,
              "startColumn": 28,
              "endLine": 58,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     *\n     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "note + message",
              "startLine": 59,
              "startColumn": 37,
              "endLine": 59,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 8,
              "variableName": "String description",
              "startLine": 184,
              "startColumn": 51,
              "endLine": 184,
              "endColumn": 69,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     * 失败的结果\n     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "description",
              "startLine": 185,
              "startColumn": 35,
              "endLine": 185,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 10,
              "variableName": "String description",
              "startLine": 115,
              "startColumn": 29,
              "endLine": 115,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "        this.description = description;\n    }\n\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;"
            },
            {
              "step": 11,
              "variableName": "description",
              "startLine": 117,
              "startColumn": 28,
              "endLine": 117,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 117,
              "startColumn": 9,
              "endLine": 117,
              "endColumn": 13,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new Result<>(code, description, data)",
              "startLine": 185,
              "startColumn": 16,
              "endLine": 185,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 14,
              "variableName": "Result.failure(code, note + message, this)",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "Result [description] : String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 15,
              "variableName": "AuthStatus.OF_IP.toResult(ip)",
              "startLine": 132,
              "startColumn": 32,
              "endLine": 132,
              "endColumn": 61,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 16,
              "variableName": "Result r",
              "startLine": 203,
              "startColumn": 39,
              "endLine": 203,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        }\n    }\n\n    private void failureDo(Context c, Result r) throws Throwable {\n        c.setHandled(true);\n        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);"
            },
            {
              "step": 17,
              "variableName": "r",
              "startLine": 208,
              "startColumn": 55,
              "endLine": 208,
              "endColumn": 56,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);\n        } else {\n            AuthUtil.adapter().failure().onFailure(c, r);\n        }\n    }\n}"
            },
            {
              "step": 18,
              "variableName": "rst",
              "startLine": 38,
              "startColumn": 32,
              "endLine": 38,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(r -> r.include(\"**\").verifyIp().failure((c, t) -> c.output(\"你的IP不在白名单\"))) //添加规则\n                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }"
            },
            {
              "step": 19,
              "variableName": "rst",
              "startLine": 39,
              "startColumn": 32,
              "endLine": 39,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }\n}"
            },
            {
              "step": 20,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 21,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 23,
              "variableName": "data",
              "startLine": 247,
              "startColumn": 25,
              "endLine": 247,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "        } else {\n            //最后只有 def\n            //\n            _def.render(data, ctx);\n        }\n    }\n"
            },
            {
              "step": 24,
              "variableName": "d",
              "startLine": 43,
              "startColumn": 28,
              "endLine": 43,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "\n\n    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }"
            },
            {
              "step": 25,
              "variableName": "d",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 26,
              "variableName": "toString",
              "startLine": 122,
              "startColumn": 19,
              "endLine": 122,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    }\n\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +"
            },
            {
              "step": 27,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 28,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 29,
              "variableName": "\"{\" ",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +"
            },
            {
              "step": 30,
              "variableName": "d.toString()",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 31,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 32,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 33,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 34,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 35,
              "variableName": "bytes",
              "startLine": 285,
              "startColumn": 23,
              "endLine": 285,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 51,
              "startColumn": 61,
              "endLine": 51,
              "endColumn": 63,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "        //客户端ip\n        String ip = ctx.header(\"X-Real-IP\");\n\n        if (Utils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n            //包含了客户端和各级代理ip的完整ip链路\n            ip = ctx.headerOrDefault(\"X-Forwarded-For\", \"\");\n            if (ip.contains(\",\")) {"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "            ip = ctx.remoteIp();\n        }\n\n        return ip;\n    }\n}\n"
            },
            {
              "step": 2,
              "variableName": "IpUtil.global().getRealIp(this)",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String realIp() {\n        if (realIp == null) {\n            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;"
            },
            {
              "step": 3,
              "variableName": "realIp",
              "startLine": 153,
              "startColumn": 16,
              "endLine": 153,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "ctx.realIp()",
              "startLine": 129,
              "startColumn": 25,
              "endLine": 129,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "        //\n        if (verifyIp) {\n            //验证登录情况\n            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));"
            },
            {
              "step": 5,
              "variableName": "ip",
              "startLine": 132,
              "startColumn": 58,
              "endLine": 132,
              "endColumn": 60,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "String note",
              "startLine": 58,
              "startColumn": 28,
              "endLine": 58,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     *\n     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "note + message",
              "startLine": 59,
              "startColumn": 37,
              "endLine": 59,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 8,
              "variableName": "String description",
              "startLine": 184,
              "startColumn": 51,
              "endLine": 184,
              "endColumn": 69,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     * 失败的结果\n     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "description",
              "startLine": 185,
              "startColumn": 35,
              "endLine": 185,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 10,
              "variableName": "String description",
              "startLine": 115,
              "startColumn": 29,
              "endLine": 115,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "        this.description = description;\n    }\n\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;"
            },
            {
              "step": 11,
              "variableName": "description",
              "startLine": 117,
              "startColumn": 28,
              "endLine": 117,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 117,
              "startColumn": 9,
              "endLine": 117,
              "endColumn": 13,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new Result<>(code, description, data)",
              "startLine": 185,
              "startColumn": 16,
              "endLine": 185,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 14,
              "variableName": "Result.failure(code, note + message, this)",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "Result [description] : String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 15,
              "variableName": "AuthStatus.OF_IP.toResult(ip)",
              "startLine": 132,
              "startColumn": 32,
              "endLine": 132,
              "endColumn": 61,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 16,
              "variableName": "Result r",
              "startLine": 203,
              "startColumn": 39,
              "endLine": 203,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        }\n    }\n\n    private void failureDo(Context c, Result r) throws Throwable {\n        c.setHandled(true);\n        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);"
            },
            {
              "step": 17,
              "variableName": "r",
              "startLine": 208,
              "startColumn": 55,
              "endLine": 208,
              "endColumn": 56,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);\n        } else {\n            AuthUtil.adapter().failure().onFailure(c, r);\n        }\n    }\n}"
            },
            {
              "step": 18,
              "variableName": "rst",
              "startLine": 38,
              "startColumn": 32,
              "endLine": 38,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(r -> r.include(\"**\").verifyIp().failure((c, t) -> c.output(\"你的IP不在白名单\"))) //添加规则\n                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }"
            },
            {
              "step": 19,
              "variableName": "rst",
              "startLine": 39,
              "startColumn": 32,
              "endLine": 39,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }\n}"
            },
            {
              "step": 20,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 21,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 23,
              "variableName": "data",
              "startLine": 247,
              "startColumn": 25,
              "endLine": 247,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "        } else {\n            //最后只有 def\n            //\n            _def.render(data, ctx);\n        }\n    }\n"
            },
            {
              "step": 24,
              "variableName": "d",
              "startLine": 43,
              "startColumn": 28,
              "endLine": 43,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "\n\n    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }"
            },
            {
              "step": 25,
              "variableName": "d",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 26,
              "variableName": "toString",
              "startLine": 122,
              "startColumn": 19,
              "endLine": 122,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    }\n\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +"
            },
            {
              "step": 27,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 28,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 29,
              "variableName": "\"{\" ",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +"
            },
            {
              "step": 30,
              "variableName": "d.toString()",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 31,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 32,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 33,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 34,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 35,
              "variableName": "bytes",
              "startLine": 285,
              "startColumn": 23,
              "endLine": 285,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 54,
              "startColumn": 17,
              "endLine": 54,
              "endColumn": 19,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "        if (Utils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n            //包含了客户端和各级代理ip的完整ip链路\n            ip = ctx.headerOrDefault(\"X-Forwarded-For\", \"\");\n            if (ip.contains(\",\")) {\n                ip = ip.split(\",\")[0];\n            }\n        }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "            ip = ctx.remoteIp();\n        }\n\n        return ip;\n    }\n}\n"
            },
            {
              "step": 2,
              "variableName": "IpUtil.global().getRealIp(this)",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String realIp() {\n        if (realIp == null) {\n            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;"
            },
            {
              "step": 3,
              "variableName": "realIp",
              "startLine": 153,
              "startColumn": 16,
              "endLine": 153,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "ctx.realIp()",
              "startLine": 129,
              "startColumn": 25,
              "endLine": 129,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "        //\n        if (verifyIp) {\n            //验证登录情况\n            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));"
            },
            {
              "step": 5,
              "variableName": "ip",
              "startLine": 132,
              "startColumn": 58,
              "endLine": 132,
              "endColumn": 60,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "String note",
              "startLine": 58,
              "startColumn": 28,
              "endLine": 58,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     *\n     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "note + message",
              "startLine": 59,
              "startColumn": 37,
              "endLine": 59,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 8,
              "variableName": "String description",
              "startLine": 184,
              "startColumn": 51,
              "endLine": 184,
              "endColumn": 69,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     * 失败的结果\n     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "description",
              "startLine": 185,
              "startColumn": 35,
              "endLine": 185,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 10,
              "variableName": "String description",
              "startLine": 115,
              "startColumn": 29,
              "endLine": 115,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "        this.description = description;\n    }\n\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;"
            },
            {
              "step": 11,
              "variableName": "description",
              "startLine": 117,
              "startColumn": 28,
              "endLine": 117,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 117,
              "startColumn": 9,
              "endLine": 117,
              "endColumn": 13,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new Result<>(code, description, data)",
              "startLine": 185,
              "startColumn": 16,
              "endLine": 185,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 14,
              "variableName": "Result.failure(code, note + message, this)",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "Result [description] : String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 15,
              "variableName": "AuthStatus.OF_IP.toResult(ip)",
              "startLine": 132,
              "startColumn": 32,
              "endLine": 132,
              "endColumn": 61,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 16,
              "variableName": "Result r",
              "startLine": 203,
              "startColumn": 39,
              "endLine": 203,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        }\n    }\n\n    private void failureDo(Context c, Result r) throws Throwable {\n        c.setHandled(true);\n        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);"
            },
            {
              "step": 17,
              "variableName": "r",
              "startLine": 208,
              "startColumn": 55,
              "endLine": 208,
              "endColumn": 56,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);\n        } else {\n            AuthUtil.adapter().failure().onFailure(c, r);\n        }\n    }\n}"
            },
            {
              "step": 18,
              "variableName": "rst",
              "startLine": 38,
              "startColumn": 32,
              "endLine": 38,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(r -> r.include(\"**\").verifyIp().failure((c, t) -> c.output(\"你的IP不在白名单\"))) //添加规则\n                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }"
            },
            {
              "step": 19,
              "variableName": "rst",
              "startLine": 39,
              "startColumn": 32,
              "endLine": 39,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }\n}"
            },
            {
              "step": 20,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 21,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 23,
              "variableName": "data",
              "startLine": 247,
              "startColumn": 25,
              "endLine": 247,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "        } else {\n            //最后只有 def\n            //\n            _def.render(data, ctx);\n        }\n    }\n"
            },
            {
              "step": 24,
              "variableName": "d",
              "startLine": 43,
              "startColumn": 28,
              "endLine": 43,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "\n\n    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }"
            },
            {
              "step": 25,
              "variableName": "d",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 26,
              "variableName": "toString",
              "startLine": 122,
              "startColumn": 19,
              "endLine": 122,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    }\n\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +"
            },
            {
              "step": 27,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 28,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 29,
              "variableName": "\"{\" ",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +"
            },
            {
              "step": 30,
              "variableName": "d.toString()",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 31,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 32,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 33,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 34,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 35,
              "variableName": "bytes",
              "startLine": 285,
              "startColumn": 23,
              "endLine": 285,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "SolonServletContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "key",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 19,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/KeyValues.java",
              "type": "String",
              "code": "     * 获取键\n     */\n    public String getKey() {\n        return key;\n    }\n\n    /**"
            },
            {
              "step": 1,
              "variableName": "kv.getKey()",
              "startLine": 204,
              "startColumn": 47,
              "endLine": 204,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "                                }\n                            } else {\n                                //单个\n                                ctx.headerSet(kv.getKey(), kv.getFirstValue());\n                            }\n                        }\n                    }"
            },
            {
              "step": 2,
              "variableName": "String key",
              "startLine": 304,
              "startColumn": 27,
              "endLine": 304,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n"
            },
            {
              "step": 3,
              "variableName": "key",
              "startLine": 304,
              "startColumn": 29,
              "endLine": 304,
              "endColumn": 32,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n\n    @Override"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "key",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 19,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/KeyValues.java",
              "type": "String",
              "code": "     * 获取键\n     */\n    public String getKey() {\n        return key;\n    }\n\n    /**"
            },
            {
              "step": 1,
              "variableName": "kv.getKey()",
              "startLine": 204,
              "startColumn": 47,
              "endLine": 204,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "                                }\n                            } else {\n                                //单个\n                                ctx.headerSet(kv.getKey(), kv.getFirstValue());\n                            }\n                        }\n                    }"
            },
            {
              "step": 2,
              "variableName": "String key",
              "startLine": 303,
              "startColumn": 27,
              "endLine": 303,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n"
            },
            {
              "step": 3,
              "variableName": "key",
              "startLine": 304,
              "startColumn": 29,
              "endLine": 304,
              "endColumn": 32,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n\n    @Override"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "SolonServletContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "token",
              "startLine": 190,
              "startColumn": 34,
              "endLine": 190,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "\n            String token = sessionToken();\n\n            if (Utils.isNotEmpty(token)) {\n                jwtSet(token);\n            }\n        }"
            },
            {
              "step": 1,
              "variableName": "token",
              "startLine": 191,
              "startColumn": 24,
              "endLine": 191,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "            String token = sessionToken();\n\n            if (Utils.isNotEmpty(token)) {\n                jwtSet(token);\n            }\n        }\n    }"
            },
            {
              "step": 2,
              "variableName": "String token",
              "startLine": 241,
              "startColumn": 27,
              "endLine": 241,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "        }\n    }\n\n    protected void jwtSet(String token) {\n        if (JwtSessionProps.getInstance().allowUseHeader) {\n            ctx.headerSet(JwtSessionProps.getInstance().name, token);\n        } else {"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 243,
              "startColumn": 63,
              "endLine": 243,
              "endColumn": 68,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "\n    protected void jwtSet(String token) {\n        if (JwtSessionProps.getInstance().allowUseHeader) {\n            ctx.headerSet(JwtSessionProps.getInstance().name, token);\n        } else {\n            cookieSet(JwtSessionProps.getInstance().name, token);\n        }"
            },
            {
              "step": 4,
              "variableName": "String val",
              "startLine": 304,
              "startColumn": 39,
              "endLine": 304,
              "endColumn": 49,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n"
            },
            {
              "step": 5,
              "variableName": "val",
              "startLine": 304,
              "startColumn": 34,
              "endLine": 304,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n\n    @Override"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "token",
              "startLine": 191,
              "startColumn": 24,
              "endLine": 191,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "            String token = sessionToken();\n\n            if (Utils.isNotEmpty(token)) {\n                jwtSet(token);\n            }\n        }\n    }"
            },
            {
              "step": 1,
              "variableName": "String token",
              "startLine": 241,
              "startColumn": 27,
              "endLine": 241,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "        }\n    }\n\n    protected void jwtSet(String token) {\n        if (JwtSessionProps.getInstance().allowUseHeader) {\n            ctx.headerSet(JwtSessionProps.getInstance().name, token);\n        } else {"
            },
            {
              "step": 2,
              "variableName": "token",
              "startLine": 243,
              "startColumn": 63,
              "endLine": 243,
              "endColumn": 68,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "\n    protected void jwtSet(String token) {\n        if (JwtSessionProps.getInstance().allowUseHeader) {\n            ctx.headerSet(JwtSessionProps.getInstance().name, token);\n        } else {\n            cookieSet(JwtSessionProps.getInstance().name, token);\n        }"
            },
            {
              "step": 3,
              "variableName": "String val",
              "startLine": 304,
              "startColumn": 39,
              "endLine": 304,
              "endColumn": 49,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n"
            },
            {
              "step": 4,
              "variableName": "val",
              "startLine": 304,
              "startColumn": 34,
              "endLine": 304,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n\n    @Override"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "token",
              "startLine": 243,
              "startColumn": 63,
              "endLine": 243,
              "endColumn": 68,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-sessionstate-jwt/src/main/java/org/noear/solon/sessionstate/jwt/JwtSessionState.java",
              "type": "String",
              "code": "\n    protected void jwtSet(String token) {\n        if (JwtSessionProps.getInstance().allowUseHeader) {\n            ctx.headerSet(JwtSessionProps.getInstance().name, token);\n        } else {\n            cookieSet(JwtSessionProps.getInstance().name, token);\n        }"
            },
            {
              "step": 1,
              "variableName": "String val",
              "startLine": 304,
              "startColumn": 39,
              "endLine": 304,
              "endColumn": 49,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n"
            },
            {
              "step": 2,
              "variableName": "val",
              "startLine": 304,
              "startColumn": 34,
              "endLine": 304,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n\n    @Override"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "token",
              "startLine": 259,
              "startColumn": 47,
              "endLine": 259,
              "endColumn": 52,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-webdav/src/main/java/org/noear/solon/web/webdav/WebdavAbstractHandler.java",
              "type": "String",
              "code": "            String locktype = StrUtil.subBetween(XmlUtil.mapToXmlStr((Map) map.get(\"D:locktype\")), \"<xml>\", \"</xml>\");\n            String owner = StrUtil.subBetween(XmlUtil.mapToXmlStr((Map) map.get(\"D:owner\")), \"<xml>\", \"</xml>\");\n            String token = IdUtil.fastSimpleUUID();\n            ctx.headerSet(\"Lock-Token\", \"<\" + token + \">\");\n            ctx.output(StrUtil.format(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                            \"<D:prop xmlns:D=\\\"DAV:\\\"><D:lockdiscovery><D:activelock>\\n\" +\n                            \"\\t<D:locktype>{}</D:locktype>\\n\" +"
            },
            {
              "step": 1,
              "variableName": "\"<\" + token + \">\"",
              "startLine": 259,
              "startColumn": 41,
              "endLine": 259,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-webdav/src/main/java/org/noear/solon/web/webdav/WebdavAbstractHandler.java",
              "type": "String",
              "code": "            String locktype = StrUtil.subBetween(XmlUtil.mapToXmlStr((Map) map.get(\"D:locktype\")), \"<xml>\", \"</xml>\");\n            String owner = StrUtil.subBetween(XmlUtil.mapToXmlStr((Map) map.get(\"D:owner\")), \"<xml>\", \"</xml>\");\n            String token = IdUtil.fastSimpleUUID();\n            ctx.headerSet(\"Lock-Token\", \"<\" + token + \">\");\n            ctx.output(StrUtil.format(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                            \"<D:prop xmlns:D=\\\"DAV:\\\"><D:lockdiscovery><D:activelock>\\n\" +\n                            \"\\t<D:locktype>{}</D:locktype>\\n\" +"
            },
            {
              "step": 2,
              "variableName": "String val",
              "startLine": 304,
              "startColumn": 39,
              "endLine": 304,
              "endColumn": 49,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 304,
              "startColumn": 34,
              "endLine": 304,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "\n    @Override\n    public void headerSet(String key, String val) {\n        _response.setHeader(key, val);\n    }\n\n    @Override"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "SolonServletContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "user",
              "startLine": 55,
              "startColumn": 18,
              "endLine": 55,
              "endColumn": 22,
              "uri": "solon-3.3.0/__test/src/main/java/webapp/demo8_config/TestController.java",
              "type": "UserModel",
              "code": "\n    @Mapping(\"/demo8/user\")\n    public void user(Context c) throws Throwable{\n        c.render(user);\n    }\n}\n"
            },
            {
              "step": 1,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "UserModel",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 2,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "UserModel",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 3,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "UserModel",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 4,
              "variableName": "data",
              "startLine": 243,
              "startColumn": 27,
              "endLine": 243,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "UserModel",
              "code": "        Render render = resolveRander(ctx);\n\n        if (render != null) {\n            render.render(data, ctx);\n        } else {\n            //最后只有 def\n            //"
            },
            {
              "step": 5,
              "variableName": "Object data",
              "startLine": 91,
              "startColumn": 24,
              "endLine": 91,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "UserModel",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (SerializationConfig.isOutputMeta()) {\n            ctx.headerAdd(\"solon.serialization\", name());\n        }"
            },
            {
              "step": 6,
              "variableName": "data",
              "startLine": 101,
              "startColumn": 41,
              "endLine": 101,
              "endColumn": 45,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "UserModel",
              "code": "        if (typed) {\n            //序列化处理\n            //\n            text = serializer.serialize(data);\n        } else {\n            //非序列化处理\n            //"
            },
            {
              "step": 7,
              "variableName": "Object obj",
              "startLine": 152,
              "startColumn": 29,
              "endLine": 152,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization-jackson-xml/src/main/java/org/noear/solon/serialization/jackson/xml/JacksonXmlStringSerializer.java",
              "type": "UserModel",
              "code": "     * @param obj 对象\n     */\n    @Override\n    public String serialize(Object obj) throws IOException {\n        init();\n\n        return getConfig().writeValueAsString(obj);"
            },
            {
              "step": 8,
              "variableName": "getConfig().writeValueAsString(obj)",
              "startLine": 155,
              "startColumn": 16,
              "endLine": 155,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization-jackson-xml/src/main/java/org/noear/solon/serialization/jackson/xml/JacksonXmlStringSerializer.java",
              "type": "String",
              "code": "    public String serialize(Object obj) throws IOException {\n        init();\n\n        return getConfig().writeValueAsString(obj);\n    }\n\n    /**"
            },
            {
              "step": 9,
              "variableName": "serializer.serialize(data)",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "String",
              "code": "        if (typed) {\n            //序列化处理\n            //\n            text = serializer.serialize(data);\n        } else {\n            //非序列化处理\n            //"
            },
            {
              "step": 10,
              "variableName": "text",
              "startLine": 122,
              "startColumn": 27,
              "endLine": 122,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon-projects/solon-serialization/solon-serialization/src/main/java/org/noear/solon/serialization/StringSerializerRender.java",
              "type": "String",
              "code": "\n        ctx.attrSet(\"output\", text);\n\n        output(ctx, data, text);\n    }\n\n    /**"
            },
            {
              "step": 11,
              "variableName": "String txt",
              "startLine": 29,
              "startColumn": 52,
              "endLine": 29,
              "endColumn": 62,
              "uri": "solon-3.3.0/__hatch/solon-serialization-avro/src/main/java/org/noear/solon/serialization/avro/AvroStringRender.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    protected void output(Context ctx, Object obj, String txt) {\n        ctx.output(txt);\n    }\n}"
            },
            {
              "step": 12,
              "variableName": "txt",
              "startLine": 30,
              "startColumn": 20,
              "endLine": 30,
              "endColumn": 23,
              "uri": "solon-3.3.0/__hatch/solon-serialization-avro/src/main/java/org/noear/solon/serialization/avro/AvroStringRender.java",
              "type": "String",
              "code": "\n    @Override\n    protected void output(Context ctx, Object obj, String txt) {\n        ctx.output(txt);\n    }\n}\n"
            },
            {
              "step": 13,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 14,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 15,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 16,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 17,
              "variableName": "bytes",
              "startLine": 286,
              "startColumn": 23,
              "endLine": 286,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 51,
              "startColumn": 27,
              "endLine": 51,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "        //客户端ip\n        String ip = ctx.header(\"X-Real-IP\");\n\n        if (Utils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n            //包含了客户端和各级代理ip的完整ip链路\n            ip = ctx.headerOrDefault(\"X-Forwarded-For\", \"\");\n            if (ip.contains(\",\")) {"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "            ip = ctx.remoteIp();\n        }\n\n        return ip;\n    }\n}\n"
            },
            {
              "step": 2,
              "variableName": "IpUtil.global().getRealIp(this)",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String realIp() {\n        if (realIp == null) {\n            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;"
            },
            {
              "step": 3,
              "variableName": "realIp",
              "startLine": 153,
              "startColumn": 16,
              "endLine": 153,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "ctx.realIp()",
              "startLine": 129,
              "startColumn": 25,
              "endLine": 129,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "        //\n        if (verifyIp) {\n            //验证登录情况\n            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));"
            },
            {
              "step": 5,
              "variableName": "ip",
              "startLine": 132,
              "startColumn": 58,
              "endLine": 132,
              "endColumn": 60,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "String note",
              "startLine": 58,
              "startColumn": 28,
              "endLine": 58,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     *\n     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "note + message",
              "startLine": 59,
              "startColumn": 37,
              "endLine": 59,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 8,
              "variableName": "String description",
              "startLine": 184,
              "startColumn": 51,
              "endLine": 184,
              "endColumn": 69,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     * 失败的结果\n     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "description",
              "startLine": 185,
              "startColumn": 35,
              "endLine": 185,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 10,
              "variableName": "String description",
              "startLine": 115,
              "startColumn": 29,
              "endLine": 115,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "        this.description = description;\n    }\n\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;"
            },
            {
              "step": 11,
              "variableName": "description",
              "startLine": 117,
              "startColumn": 28,
              "endLine": 117,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 117,
              "startColumn": 9,
              "endLine": 117,
              "endColumn": 13,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new Result<>(code, description, data)",
              "startLine": 185,
              "startColumn": 16,
              "endLine": 185,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 14,
              "variableName": "Result.failure(code, note + message, this)",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "Result [description] : String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 15,
              "variableName": "AuthStatus.OF_IP.toResult(ip)",
              "startLine": 132,
              "startColumn": 32,
              "endLine": 132,
              "endColumn": 61,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 16,
              "variableName": "Result r",
              "startLine": 203,
              "startColumn": 39,
              "endLine": 203,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        }\n    }\n\n    private void failureDo(Context c, Result r) throws Throwable {\n        c.setHandled(true);\n        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);"
            },
            {
              "step": 17,
              "variableName": "r",
              "startLine": 208,
              "startColumn": 55,
              "endLine": 208,
              "endColumn": 56,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);\n        } else {\n            AuthUtil.adapter().failure().onFailure(c, r);\n        }\n    }\n}"
            },
            {
              "step": 18,
              "variableName": "rst",
              "startLine": 38,
              "startColumn": 32,
              "endLine": 38,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(r -> r.include(\"**\").verifyIp().failure((c, t) -> c.output(\"你的IP不在白名单\"))) //添加规则\n                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }"
            },
            {
              "step": 19,
              "variableName": "rst",
              "startLine": 39,
              "startColumn": 32,
              "endLine": 39,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }\n}"
            },
            {
              "step": 20,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 21,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 23,
              "variableName": "data",
              "startLine": 247,
              "startColumn": 25,
              "endLine": 247,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "        } else {\n            //最后只有 def\n            //\n            _def.render(data, ctx);\n        }\n    }\n"
            },
            {
              "step": 24,
              "variableName": "d",
              "startLine": 43,
              "startColumn": 28,
              "endLine": 43,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "\n\n    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }"
            },
            {
              "step": 25,
              "variableName": "d",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 26,
              "variableName": "toString",
              "startLine": 122,
              "startColumn": 19,
              "endLine": 122,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    }\n\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +"
            },
            {
              "step": 27,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 28,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 29,
              "variableName": "\"{\" ",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +"
            },
            {
              "step": 30,
              "variableName": "d.toString()",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 31,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 32,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 33,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 34,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 35,
              "variableName": "bytes",
              "startLine": 286,
              "startColumn": 23,
              "endLine": 286,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 51,
              "startColumn": 61,
              "endLine": 51,
              "endColumn": 63,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "        //客户端ip\n        String ip = ctx.header(\"X-Real-IP\");\n\n        if (Utils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n            //包含了客户端和各级代理ip的完整ip链路\n            ip = ctx.headerOrDefault(\"X-Forwarded-For\", \"\");\n            if (ip.contains(\",\")) {"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "            ip = ctx.remoteIp();\n        }\n\n        return ip;\n    }\n}\n"
            },
            {
              "step": 2,
              "variableName": "IpUtil.global().getRealIp(this)",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String realIp() {\n        if (realIp == null) {\n            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;"
            },
            {
              "step": 3,
              "variableName": "realIp",
              "startLine": 153,
              "startColumn": 16,
              "endLine": 153,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "ctx.realIp()",
              "startLine": 129,
              "startColumn": 25,
              "endLine": 129,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "        //\n        if (verifyIp) {\n            //验证登录情况\n            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));"
            },
            {
              "step": 5,
              "variableName": "ip",
              "startLine": 132,
              "startColumn": 58,
              "endLine": 132,
              "endColumn": 60,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "String note",
              "startLine": 58,
              "startColumn": 28,
              "endLine": 58,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     *\n     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "note + message",
              "startLine": 59,
              "startColumn": 37,
              "endLine": 59,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 8,
              "variableName": "String description",
              "startLine": 184,
              "startColumn": 51,
              "endLine": 184,
              "endColumn": 69,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     * 失败的结果\n     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "description",
              "startLine": 185,
              "startColumn": 35,
              "endLine": 185,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 10,
              "variableName": "String description",
              "startLine": 115,
              "startColumn": 29,
              "endLine": 115,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "        this.description = description;\n    }\n\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;"
            },
            {
              "step": 11,
              "variableName": "description",
              "startLine": 117,
              "startColumn": 28,
              "endLine": 117,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 117,
              "startColumn": 9,
              "endLine": 117,
              "endColumn": 13,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new Result<>(code, description, data)",
              "startLine": 185,
              "startColumn": 16,
              "endLine": 185,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 14,
              "variableName": "Result.failure(code, note + message, this)",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "Result [description] : String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 15,
              "variableName": "AuthStatus.OF_IP.toResult(ip)",
              "startLine": 132,
              "startColumn": 32,
              "endLine": 132,
              "endColumn": 61,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 16,
              "variableName": "Result r",
              "startLine": 203,
              "startColumn": 39,
              "endLine": 203,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        }\n    }\n\n    private void failureDo(Context c, Result r) throws Throwable {\n        c.setHandled(true);\n        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);"
            },
            {
              "step": 17,
              "variableName": "r",
              "startLine": 208,
              "startColumn": 55,
              "endLine": 208,
              "endColumn": 56,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);\n        } else {\n            AuthUtil.adapter().failure().onFailure(c, r);\n        }\n    }\n}"
            },
            {
              "step": 18,
              "variableName": "rst",
              "startLine": 38,
              "startColumn": 32,
              "endLine": 38,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(r -> r.include(\"**\").verifyIp().failure((c, t) -> c.output(\"你的IP不在白名单\"))) //添加规则\n                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }"
            },
            {
              "step": 19,
              "variableName": "rst",
              "startLine": 39,
              "startColumn": 32,
              "endLine": 39,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }\n}"
            },
            {
              "step": 20,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 21,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 23,
              "variableName": "data",
              "startLine": 247,
              "startColumn": 25,
              "endLine": 247,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "        } else {\n            //最后只有 def\n            //\n            _def.render(data, ctx);\n        }\n    }\n"
            },
            {
              "step": 24,
              "variableName": "d",
              "startLine": 43,
              "startColumn": 28,
              "endLine": 43,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "\n\n    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }"
            },
            {
              "step": 25,
              "variableName": "d",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 26,
              "variableName": "toString",
              "startLine": 122,
              "startColumn": 19,
              "endLine": 122,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    }\n\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +"
            },
            {
              "step": 27,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 28,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 29,
              "variableName": "\"{\" ",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +"
            },
            {
              "step": 30,
              "variableName": "d.toString()",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 31,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 32,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 33,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 34,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 35,
              "variableName": "bytes",
              "startLine": 286,
              "startColumn": 23,
              "endLine": 286,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 54,
              "startColumn": 17,
              "endLine": 54,
              "endColumn": 19,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "        if (Utils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n            //包含了客户端和各级代理ip的完整ip链路\n            ip = ctx.headerOrDefault(\"X-Forwarded-For\", \"\");\n            if (ip.contains(\",\")) {\n                ip = ip.split(\",\")[0];\n            }\n        }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IpUtil.java",
              "type": "String",
              "code": "            ip = ctx.remoteIp();\n        }\n\n        return ip;\n    }\n}\n"
            },
            {
              "step": 2,
              "variableName": "IpUtil.global().getRealIp(this)",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String realIp() {\n        if (realIp == null) {\n            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;"
            },
            {
              "step": 3,
              "variableName": "realIp",
              "startLine": 153,
              "startColumn": 16,
              "endLine": 153,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "            realIp = IpUtil.global().getRealIp(this);\n        }\n\n        return realIp;\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "ctx.realIp()",
              "startLine": 129,
              "startColumn": 25,
              "endLine": 129,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "        //\n        if (verifyIp) {\n            //验证登录情况\n            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));"
            },
            {
              "step": 5,
              "variableName": "ip",
              "startLine": 132,
              "startColumn": 58,
              "endLine": 132,
              "endColumn": 60,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "String note",
              "startLine": 58,
              "startColumn": 28,
              "endLine": 58,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     *\n     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "note + message",
              "startLine": 59,
              "startColumn": 37,
              "endLine": 59,
              "endColumn": 51,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 8,
              "variableName": "String description",
              "startLine": 184,
              "startColumn": 51,
              "endLine": 184,
              "endColumn": 69,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     * 失败的结果\n     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "description",
              "startLine": 185,
              "startColumn": 35,
              "endLine": 185,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 10,
              "variableName": "String description",
              "startLine": 115,
              "startColumn": 29,
              "endLine": 115,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "        this.description = description;\n    }\n\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;"
            },
            {
              "step": 11,
              "variableName": "description",
              "startLine": 117,
              "startColumn": 28,
              "endLine": 117,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 117,
              "startColumn": 9,
              "endLine": 117,
              "endColumn": 13,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "\n    public Result(int code, String description, T data) {\n        this.code = code;\n        this.description = description;\n        this.data = data;\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new Result<>(code, description, data)",
              "startLine": 185,
              "startColumn": 16,
              "endLine": 185,
              "endColumn": 53,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "     */\n    @Note(\"失败的结果\")\n    public static <T> Result<T> failure(int code, String description, T data) {\n        return new Result<>(code, description, data);\n    }\n\n    @Note(\"失败的结果\")"
            },
            {
              "step": 14,
              "variableName": "Result.failure(code, note + message, this)",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 58,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/AuthStatus.java",
              "type": "Result [description] : String",
              "code": "     * @param note 摘要\n     * */\n    public Result toResult(String note) {\n        return Result.failure(code, note + message, this);\n    }\n}\n"
            },
            {
              "step": 15,
              "variableName": "AuthStatus.OF_IP.toResult(ip)",
              "startLine": 132,
              "startColumn": 32,
              "endLine": 132,
              "endColumn": 61,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "            String ip = ctx.realIp();\n            if (AuthUtil.verifyIp(ip) == false) {\n                //验证失败的\n                failureDo(ctx, AuthStatus.OF_IP.toResult(ip));\n                return;\n            }\n        }"
            },
            {
              "step": 16,
              "variableName": "Result r",
              "startLine": 203,
              "startColumn": 39,
              "endLine": 203,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        }\n    }\n\n    private void failureDo(Context c, Result r) throws Throwable {\n        c.setHandled(true);\n        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);"
            },
            {
              "step": 17,
              "variableName": "r",
              "startLine": 208,
              "startColumn": 55,
              "endLine": 208,
              "endColumn": 56,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/main/java/org/noear/solon/auth/impl/AuthRuleImpl.java",
              "type": "Result [description] : String",
              "code": "        if (failureHandler != null) {\n            failureHandler.onFailure(c, r);\n        } else {\n            AuthUtil.adapter().failure().onFailure(c, r);\n        }\n    }\n}"
            },
            {
              "step": 18,
              "variableName": "rst",
              "startLine": 38,
              "startColumn": 32,
              "endLine": 38,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(r -> r.include(\"**\").verifyIp().failure((c, t) -> c.output(\"你的IP不在白名单\"))) //添加规则\n                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }"
            },
            {
              "step": 19,
              "variableName": "rst",
              "startLine": 39,
              "startColumn": 32,
              "endLine": 39,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon-projects/solon-security/solon-security-auth/src/test/java/demo/Config.java",
              "type": "Result [description] : String",
              "code": "                .addRule(b -> b.exclude(\"/login**\").exclude(\"/_run/**\").verifyPath()) //添加规则\n                .processor(new AuthProcessorImpl()) //设定认证处理器\n                .failure((ctx, rst) -> { //设定默认的验证失败处理\n                    ctx.render(rst);\n                });\n    }\n}"
            },
            {
              "step": 20,
              "variableName": "Object obj",
              "startLine": 1117,
              "startColumn": 30,
              "endLine": 1117,
              "endColumn": 40,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    /**\n     * 渲染数据（不能重写，避免死循环）\n     */\n    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);"
            },
            {
              "step": 21,
              "variableName": "obj",
              "startLine": 1120,
              "startColumn": 44,
              "endLine": 1120,
              "endColumn": 47,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Result [description] : String",
              "code": "    public final void render(Object obj) throws Throwable {\n        //ModelAndView or Data\n        setRendered(true); //用于后续做最多一次渲染的控制\n        Solon.app().renderManager().render(obj, this);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "Object data",
              "startLine": 179,
              "startColumn": 24,
              "endLine": 179,
              "endColumn": 35,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "     * @param ctx  上下文\n     */\n    @Override\n    public void render(Object data, Context ctx) throws Throwable {\n        if (data instanceof DataThrowable) {\n            return;\n        }"
            },
            {
              "step": 23,
              "variableName": "data",
              "startLine": 247,
              "startColumn": 25,
              "endLine": 247,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "        } else {\n            //最后只有 def\n            //\n            _def.render(data, ctx);\n        }\n    }\n"
            },
            {
              "step": 24,
              "variableName": "d",
              "startLine": 43,
              "startColumn": 28,
              "endLine": 43,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "\n\n    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }"
            },
            {
              "step": 25,
              "variableName": "d",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "Result [description] : String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 26,
              "variableName": "toString",
              "startLine": 122,
              "startColumn": 19,
              "endLine": 122,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    }\n\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +"
            },
            {
              "step": 27,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "Result [description] : String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 28,
              "variableName": "description",
              "startLine": 125,
              "startColumn": 37,
              "endLine": 125,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +\n                '}';\n    }"
            },
            {
              "step": 29,
              "variableName": "\"{\" ",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Result.java",
              "type": "String",
              "code": "\n    @Override\n    public String toString() {\n        return \"{\" +\n                \"code=\" + code +\n                \", description='\" + description + '\\'' +\n                \", data=\" + data +"
            },
            {
              "step": 30,
              "variableName": "d.toString()",
              "startLine": 45,
              "startColumn": 22,
              "endLine": 45,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/RenderManager.java",
              "type": "String",
              "code": "    //默认渲染器\n    private Render _def = (d, c) -> {\n        if (d != null) {\n            c.output(d.toString());\n        }\n    };\n"
            },
            {
              "step": 31,
              "variableName": "String str",
              "startLine": 889,
              "startColumn": 24,
              "endLine": 889,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 输出 字符串\n     */\n    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));"
            },
            {
              "step": 32,
              "variableName": "str",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 33,
              "variableName": "str.getBytes(charset)",
              "startLine": 892,
              "startColumn": 20,
              "endLine": 892,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "byte[]",
              "code": "    public void output(String str) {\n        if (str != null) {\n            attrSet(\"output\", str);\n            output(str.getBytes(charset));\n        }\n    }\n"
            },
            {
              "step": 34,
              "variableName": "byte[] bytes",
              "startLine": 282,
              "startColumn": 24,
              "endLine": 282,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "byte[]",
              "code": "    }\n\n    @Override\n    public void output(byte[] bytes) {\n        try {\n            OutputStream out = outputStream();\n"
            },
            {
              "step": 35,
              "variableName": "bytes",
              "startLine": 286,
              "startColumn": 23,
              "endLine": 286,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon-projects/solon-web/solon-web-servlet-jakarta/src/main/java/org/noear/solon/web/servlet/SolonServletContext.java",
              "type": "",
              "code": "        try {\n            OutputStream out = outputStream();\n\n            out.write(bytes);\n        } catch (Throwable ex) {\n            throw new RuntimeException(ex);\n        }"
            }
          ],
          "label": "No"
        }
      ]
    }
  ],
  "214": [
    {
      "resultIndex": 0,
      "fileName": "Gateway.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "destination",
              "startLine": 127,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon-projects/solon-net/solon-net-stomp/src/main/java/org/noear/solon/net/stomp/handle/StompContext.java",
              "type": "String",
              "code": "     */\n    @Override\n    public String path() {\n        return destination;\n    }\n\n    /**"
            },
            {
              "step": 1,
              "variableName": "path()",
              "startLine": 274,
              "startColumn": 20,
              "endLine": 274,
              "endColumn": 26,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String pathNew() {\n        if (pathNew == null) {\n            return path();\n        } else {\n            return pathNew;\n        }"
            },
            {
              "step": 2,
              "variableName": "c.pathNew()",
              "startLine": 204,
              "startColumn": 46,
              "endLine": 204,
              "endColumn": 57,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "String",
              "code": "        if (pathNewCached != null && pathNewCached.equals(c.pathNew())) {\n            return;\n        } else {\n            c.attrSet(\"tmp_path_new_cached\", c.pathNew());\n        }\n\n        //查找处理器，并预处理"
            },
            {
              "step": 3,
              "variableName": "Object val",
              "startLine": 1086,
              "startColumn": 38,
              "endLine": 1086,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n"
            },
            {
              "step": 4,
              "variableName": "val",
              "startLine": 1087,
              "startColumn": 29,
              "endLine": 1087,
              "endColumn": 32,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n\n    /**"
            },
            {
              "step": 5,
              "variableName": "V value",
              "startLine": 118,
              "startColumn": 30,
              "endLine": 118,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public V put(String key, V value) {\n        String oldKey = this._k.put(convertKey(key), key);\n        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);"
            },
            {
              "step": 6,
              "variableName": "value",
              "startLine": 123,
              "startColumn": 33,
              "endLine": 123,
              "endColumn": 38,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "String",
              "code": "        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);\n        }\n        return this._m.put(key, value);\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "this._m",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 123,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "LinkedHashMap [<map.value>] : String",
              "code": "        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);\n        }\n        return this._m.put(key, value);\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 123,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);\n        }\n        return this._m.put(key, value);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "attrMap()",
              "startLine": 1087,
              "startColumn": 9,
              "endLine": 1087,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n\n    /**"
            },
            {
              "step": 10,
              "variableName": "attrMap()",
              "startLine": 1087,
              "startColumn": 9,
              "endLine": 1087,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n\n    /**"
            },
            {
              "step": 11,
              "variableName": "c",
              "startLine": 204,
              "startColumn": 13,
              "endLine": 204,
              "endColumn": 14,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "        if (pathNewCached != null && pathNewCached.equals(c.pathNew())) {\n            return;\n        } else {\n            c.attrSet(\"tmp_path_new_cached\", c.pathNew());\n        }\n\n        //查找处理器，并预处理"
            },
            {
              "step": 12,
              "variableName": "c",
              "startLine": 231,
              "startColumn": 19,
              "endLine": 231,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     */\n    protected void mainDo(Context c) throws Throwable {\n        //预处理\n        prepareDo(c);\n\n        //获取主处理\n        Handler m = c.attr(Constants.ATTR_MAIN_HANDLER);"
            },
            {
              "step": 13,
              "variableName": "c",
              "startLine": 243,
              "startColumn": 26,
              "endLine": 243,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "                return;\n            }\n\n            Object obj = c.attr(Constants.ATTR_CONTROLLER);\n            boolean is_action = m instanceof Action;\n\n            mainExec(c, m, obj, is_action);"
            },
            {
              "step": 14,
              "variableName": "attr",
              "startLine": 1079,
              "startColumn": 28,
              "endLine": 1079,
              "endColumn": 32,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "    /**\n     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n"
            },
            {
              "step": 15,
              "variableName": "attrMap()",
              "startLine": 1080,
              "startColumn": 20,
              "endLine": 1080,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "attrMap",
              "startLine": 1053,
              "startColumn": 32,
              "endLine": 1053,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "    /**\n     * 获取自定义特性并转为Map\n     */\n    public Map<String, Object> attrMap() {//改为懒加载\n        if (attrMap == null) {\n            attrMap = new IgnoreCaseMap<>();\n        }"
            },
            {
              "step": 17,
              "variableName": "attrMap",
              "startLine": 1058,
              "startColumn": 16,
              "endLine": 1058,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "            attrMap = new IgnoreCaseMap<>();\n        }\n\n        return attrMap;\n    }\n\n"
            },
            {
              "step": 18,
              "variableName": "attrMap",
              "startLine": 1058,
              "startColumn": 16,
              "endLine": 1058,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "            attrMap = new IgnoreCaseMap<>();\n        }\n\n        return attrMap;\n    }\n\n"
            },
            {
              "step": 19,
              "variableName": "attrMap()",
              "startLine": 1080,
              "startColumn": 20,
              "endLine": 1080,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 20,
              "variableName": "get",
              "startLine": 96,
              "startColumn": 14,
              "endLine": 96,
              "endColumn": 17,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public V get(Object key) {\n        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {"
            },
            {
              "step": 21,
              "variableName": "this",
              "startLine": 100,
              "startColumn": 24,
              "endLine": 100,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {\n                return this._m.get(key2);\n            }\n        }\n        return null;"
            },
            {
              "step": 22,
              "variableName": "this._m",
              "startLine": 100,
              "startColumn": 24,
              "endLine": 100,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "LinkedHashMap [<map.value>] : String",
              "code": "        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {\n                return this._m.get(key2);\n            }\n        }\n        return null;"
            },
            {
              "step": 23,
              "variableName": "this._m.get(key2)",
              "startLine": 100,
              "startColumn": 24,
              "endLine": 100,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "String",
              "code": "        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {\n                return this._m.get(key2);\n            }\n        }\n        return null;"
            },
            {
              "step": 24,
              "variableName": "attrMap().get(name)",
              "startLine": 1080,
              "startColumn": 20,
              "endLine": 1080,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 25,
              "variableName": "(T) attrMap().get(name)",
              "startLine": 1080,
              "startColumn": 16,
              "endLine": 1080,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 26,
              "variableName": "c.attr(Constants.ATTR_CONTROLLER)",
              "startLine": 243,
              "startColumn": 26,
              "endLine": 243,
              "endColumn": 59,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "String",
              "code": "                return;\n            }\n\n            Object obj = c.attr(Constants.ATTR_CONTROLLER);\n            boolean is_action = m instanceof Action;\n\n            mainExec(c, m, obj, is_action);"
            },
            {
              "step": 27,
              "variableName": "obj",
              "startLine": 246,
              "startColumn": 28,
              "endLine": 246,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "",
              "code": "            Object obj = c.attr(Constants.ATTR_CONTROLLER);\n            boolean is_action = m instanceof Action;\n\n            mainExec(c, m, obj, is_action);\n        }\n    }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "destination",
              "startLine": 127,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon-projects/solon-net/solon-net-stomp/src/main/java/org/noear/solon/net/stomp/handle/StompContext.java",
              "type": "String",
              "code": "     */\n    @Override\n    public String path() {\n        return destination;\n    }\n\n    /**"
            },
            {
              "step": 1,
              "variableName": "path()",
              "startLine": 274,
              "startColumn": 20,
              "endLine": 274,
              "endColumn": 26,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String pathNew() {\n        if (pathNew == null) {\n            return path();\n        } else {\n            return pathNew;\n        }"
            },
            {
              "step": 2,
              "variableName": "c.pathNew()",
              "startLine": 204,
              "startColumn": 46,
              "endLine": 204,
              "endColumn": 57,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "String",
              "code": "        if (pathNewCached != null && pathNewCached.equals(c.pathNew())) {\n            return;\n        } else {\n            c.attrSet(\"tmp_path_new_cached\", c.pathNew());\n        }\n\n        //查找处理器，并预处理"
            },
            {
              "step": 3,
              "variableName": "Object val",
              "startLine": 1086,
              "startColumn": 38,
              "endLine": 1086,
              "endColumn": 48,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "    /**\n     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n"
            },
            {
              "step": 4,
              "variableName": "val",
              "startLine": 1087,
              "startColumn": 29,
              "endLine": 1087,
              "endColumn": 32,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n\n    /**"
            },
            {
              "step": 5,
              "variableName": "V value",
              "startLine": 118,
              "startColumn": 30,
              "endLine": 118,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public V put(String key, V value) {\n        String oldKey = this._k.put(convertKey(key), key);\n        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);"
            },
            {
              "step": 6,
              "variableName": "value",
              "startLine": 123,
              "startColumn": 33,
              "endLine": 123,
              "endColumn": 38,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "String",
              "code": "        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);\n        }\n        return this._m.put(key, value);\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "this._m",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 123,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "LinkedHashMap [<map.value>] : String",
              "code": "        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);\n        }\n        return this._m.put(key, value);\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 123,
              "startColumn": 16,
              "endLine": 123,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "        if (oldKey != null && !oldKey.equals(key)) {\n            this._m.remove(oldKey);\n        }\n        return this._m.put(key, value);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "attrMap()",
              "startLine": 1087,
              "startColumn": 9,
              "endLine": 1087,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n\n    /**"
            },
            {
              "step": 10,
              "variableName": "attrMap()",
              "startLine": 1087,
              "startColumn": 9,
              "endLine": 1087,
              "endColumn": 18,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     * 设置上下文特性\n     */\n    public void attrSet(String name, Object val) {\n        attrMap().put(name, val);\n    }\n\n    /**"
            },
            {
              "step": 11,
              "variableName": "c",
              "startLine": 204,
              "startColumn": 13,
              "endLine": 204,
              "endColumn": 14,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "        if (pathNewCached != null && pathNewCached.equals(c.pathNew())) {\n            return;\n        } else {\n            c.attrSet(\"tmp_path_new_cached\", c.pathNew());\n        }\n\n        //查找处理器，并预处理"
            },
            {
              "step": 12,
              "variableName": "c",
              "startLine": 189,
              "startColumn": 19,
              "endLine": 189,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     */\n    protected void handleDo(Context c) throws Throwable {\n        //预备\n        prepareDo(c);\n\n        //执行过滤与主处理\n        new FilterChainImpl(filters(), this::mainDo).doFilter(c);"
            },
            {
              "step": 13,
              "variableName": "c",
              "startLine": 192,
              "startColumn": 63,
              "endLine": 192,
              "endColumn": 64,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "        prepareDo(c);\n\n        //执行过滤与主处理\n        new FilterChainImpl(filters(), this::mainDo).doFilter(c);\n    }\n\n    /**"
            },
            {
              "step": 14,
              "variableName": "Context ctx",
              "startLine": 44,
              "startColumn": 26,
              "endLine": 44,
              "endColumn": 37,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/FilterChainImpl.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public void doFilter(Context ctx) throws Throwable {\n        if (lastHandler == null) {\n            filterList.get(index++).target.doFilter(ctx, this);\n        } else {"
            },
            {
              "step": 15,
              "variableName": "ctx",
              "startLine": 51,
              "startColumn": 36,
              "endLine": 51,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/FilterChainImpl.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "            if (index < filterList.size()) {\n                filterList.get(index++).target.doFilter(ctx, this);\n            } else {\n                lastHandler.handle(ctx);\n            }\n        }\n    }"
            },
            {
              "step": 16,
              "variableName": "this::mainDo",
              "startLine": 192,
              "startColumn": 40,
              "endLine": 192,
              "endColumn": 52,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "        prepareDo(c);\n\n        //执行过滤与主处理\n        new FilterChainImpl(filters(), this::mainDo).doFilter(c);\n    }\n\n    /**"
            },
            {
              "step": 17,
              "variableName": "this::mainDo",
              "startLine": 192,
              "startColumn": 40,
              "endLine": 192,
              "endColumn": 52,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "        prepareDo(c);\n\n        //执行过滤与主处理\n        new FilterChainImpl(filters(), this::mainDo).doFilter(c);\n    }\n\n    /**"
            },
            {
              "step": 18,
              "variableName": "Context c",
              "startLine": 229,
              "startColumn": 27,
              "endLine": 229,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "    /**\n     * 执行主处理\n     */\n    protected void mainDo(Context c) throws Throwable {\n        //预处理\n        prepareDo(c);\n"
            },
            {
              "step": 19,
              "variableName": "c",
              "startLine": 243,
              "startColumn": 26,
              "endLine": 243,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "                return;\n            }\n\n            Object obj = c.attr(Constants.ATTR_CONTROLLER);\n            boolean is_action = m instanceof Action;\n\n            mainExec(c, m, obj, is_action);"
            },
            {
              "step": 20,
              "variableName": "attr",
              "startLine": 1079,
              "startColumn": 28,
              "endLine": 1079,
              "endColumn": 32,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "    /**\n     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attrMap()",
              "startLine": 1080,
              "startColumn": 20,
              "endLine": 1080,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 22,
              "variableName": "attrMap",
              "startLine": 1053,
              "startColumn": 32,
              "endLine": 1053,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "    /**\n     * 获取自定义特性并转为Map\n     */\n    public Map<String, Object> attrMap() {//改为懒加载\n        if (attrMap == null) {\n            attrMap = new IgnoreCaseMap<>();\n        }"
            },
            {
              "step": 23,
              "variableName": "attrMap",
              "startLine": 1054,
              "startColumn": 13,
              "endLine": 1054,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "Context [attrMap, _m, <map.value>] : String",
              "code": "     * 获取自定义特性并转为Map\n     */\n    public Map<String, Object> attrMap() {//改为懒加载\n        if (attrMap == null) {\n            attrMap = new IgnoreCaseMap<>();\n        }\n"
            },
            {
              "step": 24,
              "variableName": "attrMap",
              "startLine": 1054,
              "startColumn": 13,
              "endLine": 1054,
              "endColumn": 20,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "     * 获取自定义特性并转为Map\n     */\n    public Map<String, Object> attrMap() {//改为懒加载\n        if (attrMap == null) {\n            attrMap = new IgnoreCaseMap<>();\n        }\n"
            },
            {
              "step": 25,
              "variableName": "attrMap",
              "startLine": 1058,
              "startColumn": 16,
              "endLine": 1058,
              "endColumn": 23,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "            attrMap = new IgnoreCaseMap<>();\n        }\n\n        return attrMap;\n    }\n\n"
            },
            {
              "step": 26,
              "variableName": "attrMap()",
              "startLine": 1080,
              "startColumn": 20,
              "endLine": 1080,
              "endColumn": 29,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 27,
              "variableName": "get",
              "startLine": 96,
              "startColumn": 14,
              "endLine": 96,
              "endColumn": 17,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public V get(Object key) {\n        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {"
            },
            {
              "step": 28,
              "variableName": "this",
              "startLine": 100,
              "startColumn": 24,
              "endLine": 100,
              "endColumn": 28,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "IgnoreCaseMap [_m, <map.value>] : String",
              "code": "        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {\n                return this._m.get(key2);\n            }\n        }\n        return null;"
            },
            {
              "step": 29,
              "variableName": "this._m",
              "startLine": 100,
              "startColumn": 24,
              "endLine": 100,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "LinkedHashMap [<map.value>] : String",
              "code": "        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {\n                return this._m.get(key2);\n            }\n        }\n        return null;"
            },
            {
              "step": 30,
              "variableName": "this._m.get(key2)",
              "startLine": 100,
              "startColumn": 24,
              "endLine": 100,
              "endColumn": 41,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/util/IgnoreCaseMap.java",
              "type": "String",
              "code": "        if (key instanceof String) {\n            String key2 = this._k.get(convertKey((String) key));\n            if (key2 != null) {\n                return this._m.get(key2);\n            }\n        }\n        return null;"
            },
            {
              "step": 31,
              "variableName": "attrMap().get(name)",
              "startLine": 1080,
              "startColumn": 20,
              "endLine": 1080,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "(T) attrMap().get(name)",
              "startLine": 1080,
              "startColumn": 16,
              "endLine": 1080,
              "endColumn": 39,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     * 获取上下文特性\n     */\n    public @Nullable <T> T attr(String name) {\n        return (T) attrMap().get(name);\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "c.attr(Constants.ATTR_CONTROLLER)",
              "startLine": 243,
              "startColumn": 26,
              "endLine": 243,
              "endColumn": 59,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "String",
              "code": "                return;\n            }\n\n            Object obj = c.attr(Constants.ATTR_CONTROLLER);\n            boolean is_action = m instanceof Action;\n\n            mainExec(c, m, obj, is_action);"
            },
            {
              "step": 34,
              "variableName": "obj",
              "startLine": 246,
              "startColumn": 28,
              "endLine": 246,
              "endColumn": 31,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Gateway.java",
              "type": "",
              "code": "            Object obj = c.attr(Constants.ATTR_CONTROLLER);\n            boolean is_action = m instanceof Action;\n\n            mainExec(c, m, obj, is_action);\n        }\n    }\n"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "LuffyHandler.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "destination",
              "startLine": 127,
              "startColumn": 16,
              "endLine": 127,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon-projects/solon-net/solon-net-stomp/src/main/java/org/noear/solon/net/stomp/handle/StompContext.java",
              "type": "String",
              "code": "     */\n    @Override\n    public String path() {\n        return destination;\n    }\n\n    /**"
            },
            {
              "step": 1,
              "variableName": "path()",
              "startLine": 274,
              "startColumn": 20,
              "endLine": 274,
              "endColumn": 26,
              "uri": "solon-3.3.0/solon/src/main/java/org/noear/solon/core/handle/Context.java",
              "type": "String",
              "code": "     */\n    public String pathNew() {\n        if (pathNew == null) {\n            return path();\n        } else {\n            return pathNew;\n        }"
            },
            {
              "step": 2,
              "variableName": "ctx.pathNew()",
              "startLine": 34,
              "startColumn": 23,
              "endLine": 34,
              "endColumn": 36,
              "uri": "solon-3.3.0/solon-projects/solon-faas/solon-faas-luffy/src/main/java/org/noear/solon/luffy/LuffyHandler.java",
              "type": "String",
              "code": "\n    @Override\n    public void handle(Context ctx) throws Exception {\n        String path = ctx.pathNew();\n\n        if (Solon.cfg().isDebugMode()) {\n            String name = path.replace(\"/\", \"__\");"
            },
            {
              "step": 3,
              "variableName": "path",
              "startLine": 41,
              "startColumn": 18,
              "endLine": 41,
              "endColumn": 22,
              "uri": "solon-3.3.0/solon-projects/solon-faas/solon-faas-luffy/src/main/java/org/noear/solon/luffy/LuffyHandler.java",
              "type": "String",
              "code": "            ExecutorFactory.del(name);\n        }\n\n        handleDo(path, ctx, Solon.cfg().isDebugMode());\n    }\n\n    private void handleDo(String path, Context ctx, boolean debug) throws Exception {"
            },
            {
              "step": 4,
              "variableName": "String path",
              "startLine": 44,
              "startColumn": 27,
              "endLine": 44,
              "endColumn": 38,
              "uri": "solon-3.3.0/solon-projects/solon-faas/solon-faas-luffy/src/main/java/org/noear/solon/luffy/LuffyHandler.java",
              "type": "String",
              "code": "        handleDo(path, ctx, Solon.cfg().isDebugMode());\n    }\n\n    private void handleDo(String path, Context ctx, boolean debug) throws Exception {\n\n        AFileModel file = JtRun.fileGet(path);\n"
            },
            {
              "step": 5,
              "variableName": "path",
              "startLine": 77,
              "startColumn": 23,
              "endLine": 77,
              "endColumn": 27,
              "uri": "solon-3.3.0/solon-projects/solon-faas/solon-faas-luffy/src/main/java/org/noear/solon/luffy/LuffyHandler.java",
              "type": "String",
              "code": "        ctx.attrSet(\"file\", file);\n\n\n        String name = path.replace(\"/\", \"__\");\n        ExecutorFactory.exec(name, file, ctx);\n    }\n}"
            },
            {
              "step": 6,
              "variableName": "path.replace(\"/\", \"__\")",
              "startLine": 77,
              "startColumn": 23,
              "endLine": 77,
              "endColumn": 46,
              "uri": "solon-3.3.0/solon-projects/solon-faas/solon-faas-luffy/src/main/java/org/noear/solon/luffy/LuffyHandler.java",
              "type": "String",
              "code": "        ctx.attrSet(\"file\", file);\n\n\n        String name = path.replace(\"/\", \"__\");\n        ExecutorFactory.exec(name, file, ctx);\n    }\n}"
            },
            {
              "step": 7,
              "variableName": "name",
              "startLine": 78,
              "startColumn": 30,
              "endLine": 78,
              "endColumn": 34,
              "uri": "solon-3.3.0/solon-projects/solon-faas/solon-faas-luffy/src/main/java/org/noear/solon/luffy/LuffyHandler.java",
              "type": "",
              "code": "\n\n        String name = path.replace(\"/\", \"__\");\n        ExecutorFactory.exec(name, file, ctx);\n    }\n}\n"
            }
          ],
          "label": "No"
        }
      ]
    }
  ]
}