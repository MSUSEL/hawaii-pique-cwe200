{
  "214": [
    {
      "resultIndex": 0,
      "fileName": "ImageConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\tpublic static void setOmHome(File home) {\n\t\tomHome = home;\n\t\tfinal String dataDir = System.getProperty(\"DATA_DIR\");\n\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);"
            },
            {
              "step": 1,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 4,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 5,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 6,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getUploadDir(), FILES_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 12,
              "variableName": "getUploadFilesDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 13,
              "variableName": "new File(getUploadFilesDir(), getHash())",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 14,
              "variableName": "d",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 15,
              "variableName": "new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG))",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 16,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 17,
              "variableName": "f.getFile(EXTENSION_PNG)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t}\n\n\tpublic ProcessResultList convertImage(BaseFileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tFile png = f.getFile(EXTENSION_PNG);\n\t\tif (!sf.isPng()) {\n\t\t\tFile img = f.getFile(sf.getExt());\n"
            },
            {
              "step": 18,
              "variableName": "png",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\tFile img = f.getFile(sf.getExt());\n\n\t\t\tlog.debug(\"##### convertImage destinationFile: {}\", png);\n\t\t\tlogs.add(convertSinglePng(img, png));\n\t\t} else if (!png.exists()){\n\t\t\tcopyFile(f.getFile(sf.getExt()), png);\n\t\t}"
            },
            {
              "step": 19,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @throws IOException - if any Io exception occurs while processing\n\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);"
            },
            {
              "step": 20,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 21,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 22,
              "variableName": "List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 23,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 1,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 4,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 5,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 6,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 7,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 10,
              "variableName": "getDir(getUploadDir(), FILES_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 11,
              "variableName": "getUploadFilesDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 12,
              "variableName": "new File(getUploadFilesDir(), getHash())",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 13,
              "variableName": "d",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 14,
              "variableName": "new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG))",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 15,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 16,
              "variableName": "f.getFile(EXTENSION_PNG)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t}\n\n\tpublic ProcessResultList convertImage(BaseFileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tFile png = f.getFile(EXTENSION_PNG);\n\t\tif (!sf.isPng()) {\n\t\t\tFile img = f.getFile(sf.getExt());\n"
            },
            {
              "step": 17,
              "variableName": "png",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\tFile img = f.getFile(sf.getExt());\n\n\t\t\tlog.debug(\"##### convertImage destinationFile: {}\", png);\n\t\t\tlogs.add(convertSinglePng(img, png));\n\t\t} else if (!png.exists()){\n\t\t\tcopyFile(f.getFile(sf.getExt()), png);\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @throws IOException - if any Io exception occurs while processing\n\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);"
            },
            {
              "step": 19,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 20,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 21,
              "variableName": "List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 22,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 1,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 2,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 3,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 4,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 7,
              "variableName": "getDir(getUploadDir(), FILES_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 8,
              "variableName": "getUploadFilesDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 9,
              "variableName": "new File(getUploadFilesDir(), getHash())",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 10,
              "variableName": "d",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 11,
              "variableName": "new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG))",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 13,
              "variableName": "f.getFile(EXTENSION_PNG)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t}\n\n\tpublic ProcessResultList convertImage(BaseFileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tFile png = f.getFile(EXTENSION_PNG);\n\t\tif (!sf.isPng()) {\n\t\t\tFile img = f.getFile(sf.getExt());\n"
            },
            {
              "step": 14,
              "variableName": "png",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\tFile img = f.getFile(sf.getExt());\n\n\t\t\tlog.debug(\"##### convertImage destinationFile: {}\", png);\n\t\t\tlogs.add(convertSinglePng(img, png));\n\t\t} else if (!png.exists()){\n\t\t\tcopyFile(f.getFile(sf.getExt()), png);\n\t\t}"
            },
            {
              "step": 15,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @throws IOException - if any Io exception occurs while processing\n\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);"
            },
            {
              "step": 16,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 17,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 18,
              "variableName": "List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 19,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 1,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 2,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 3,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 4,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 5,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 6,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsHibernateDir() {\n\t\treturn getDir(getStreamsDir(), HIBERNATE);\n\t}\n\n\tpublic static File getRecording(String name) {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getStreamsDir(), HIBERNATE)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsHibernateDir() {\n\t\treturn getDir(getStreamsDir(), HIBERNATE);\n\t}\n\n\tpublic static File getRecording(String name) {"
            },
            {
              "step": 12,
              "variableName": "getStreamsHibernateDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase RECORDING:\n\t\t\t\t\tf = getFileSafe(getStreamsHibernateDir(), getHash(), ext, EXTENSION_MP4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase VIDEO:\n\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_MP4);"
            },
            {
              "step": 13,
              "variableName": "File inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn new File(parent, name + suffix + ext);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String inExt, String defaultExt) {\n\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n"
            },
            {
              "step": 14,
              "variableName": "inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String inExt, String defaultExt) {\n\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String ext) {"
            },
            {
              "step": 15,
              "variableName": "File inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String ext) {\n\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();"
            },
            {
              "step": 16,
              "variableName": "inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();\n\t\treturn file.startsWith(base) ? file.toFile() : new File(inDir, inName);\n\t}\n\n\tpublic static File getNewFile(File dir, String name, String ext) throws IOException {"
            },
            {
              "step": 17,
              "variableName": "new File(inDir, inName)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();\n\t\treturn file.startsWith(base) ? file.toFile() : new File(inDir, inName);\n\t}\n\n\tpublic static File getNewFile(File dir, String name, String ext) throws IOException {"
            },
            {
              "step": 18,
              "variableName": "file.startsWith(base) ? file.toFile() : new File(inDir, inName)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "... : File",
              "code": "\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();\n\t\treturn file.startsWith(base) ? file.toFile() : new File(inDir, inName);\n\t}\n\n\tpublic static File getNewFile(File dir, String name, String ext) throws IOException {"
            },
            {
              "step": 19,
              "variableName": "getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String inExt, String defaultExt) {\n\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String ext) {"
            },
            {
              "step": 20,
              "variableName": "getFileSafe(getStreamsHibernateDir(), getHash(), ext, EXTENSION_MP4)",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase RECORDING:\n\t\t\t\t\tf = getFileSafe(getStreamsHibernateDir(), getHash(), ext, EXTENSION_MP4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase VIDEO:\n\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_MP4);"
            },
            {
              "step": 21,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 22,
              "variableName": "f.getFile(EXTENSION_PNG)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t}\n\n\tpublic ProcessResultList convertImage(BaseFileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tFile png = f.getFile(EXTENSION_PNG);\n\t\tif (!sf.isPng()) {\n\t\t\tFile img = f.getFile(sf.getExt());\n"
            },
            {
              "step": 23,
              "variableName": "png",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\tFile img = f.getFile(sf.getExt());\n\n\t\t\tlog.debug(\"##### convertImage destinationFile: {}\", png);\n\t\t\tlogs.add(convertSinglePng(img, png));\n\t\t} else if (!png.exists()){\n\t\t\tcopyFile(f.getFile(sf.getExt()), png);\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @throws IOException - if any Io exception occurs while processing\n\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);"
            },
            {
              "step": 25,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 26,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 27,
              "variableName": "List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t *\n\t */\n\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}"
            },
            {
              "step": 28,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\tprivate ProcessResult convertSinglePng(File in, File out) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert(), in.getCanonicalPath(), out.getCanonicalPath());\n\n\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "ImageConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t}\n\n\t\tFile destinationFile = OmFileHelper.getNewFile(getUploadProfilesUserDir(userId), PROFILE_FILE_NAME, EXTENSION_PNG);\n\t\treturnMap.add(resize(file, destinationFile, 250, 250, true));\n\n\t\t// Delete old one\n\t\tFiles.deleteIfExists(file.toPath());"
            },
            {
              "step": 1,
              "variableName": "File in",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());"
            },
            {
              "step": 2,
              "variableName": "in",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 3,
              "variableName": "in.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 4,
              "variableName": "List.of(getPathToConvert()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);"
            },
            {
              "step": 5,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n\n\t/**"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "destinationFile",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t}\n\n\t\tFile destinationFile = OmFileHelper.getNewFile(getUploadProfilesUserDir(userId), PROFILE_FILE_NAME, EXTENSION_PNG);\n\t\treturnMap.add(resize(file, destinationFile, 250, 250, true));\n\n\t\t// Delete old one\n\t\tFiles.deleteIfExists(file.toPath());"
            },
            {
              "step": 1,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());"
            },
            {
              "step": 2,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 3,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 4,
              "variableName": "List.of(getPathToConvert()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);"
            },
            {
              "step": 5,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n\n\t/**"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\tpublic static void setOmHome(File home) {\n\t\tomHome = home;\n\t\tfinal String dataDir = System.getProperty(\"DATA_DIR\");\n\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);"
            },
            {
              "step": 1,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 4,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 5,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 6,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogoDir() {\n\t\treturn getDir(getUploadDir(), GROUP_LOGO_DIR);\n\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getUploadDir(), GROUP_LOGO_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogoDir() {\n\t\treturn getDir(getUploadDir(), GROUP_LOGO_DIR);\n\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {"
            },
            {
              "step": 12,
              "variableName": "getGroupLogoDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {\n\t\tFile logo = new File(getGroupLogoDir(), String.format(\"%s%s.png\", GROUP_LOGO_PREFIX, groupId));\n\t\tif (groupId == null || (check && !logo.exists())) {\n\t\t\tlogo = new File(getImagesDir(), \"blank.png\");\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "new File(getGroupLogoDir(), String.format(\"%s%s.png\", GROUP_LOGO_PREFIX, groupId))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {\n\t\tFile logo = new File(getGroupLogoDir(), String.format(\"%s%s.png\", GROUP_LOGO_PREFIX, groupId));\n\t\tif (groupId == null || (check && !logo.exists())) {\n\t\t\tlogo = new File(getImagesDir(), \"blank.png\");\n\t\t}"
            },
            {
              "step": 14,
              "variableName": "logo",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (groupId == null || (check && !logo.exists())) {\n\t\t\tlogo = new File(getImagesDir(), \"blank.png\");\n\t\t}\n\t\treturn logo;\n\t}\n\n\tpublic static File getGroupCss(Long groupId, boolean check) {"
            },
            {
              "step": 15,
              "variableName": "getGroupLogo(GroupForm.this.getModelObject().getId(), false)",
              "uri": "openmeetings-8.0.0/openmeetings-web/src/main/java/org/apache/openmeetings/web/admin/groups/GroupForm.java",
              "type": "File",
              "code": "\n\t\t@Override\n\t\tprotected void processImage(StoredFile sf, File f) throws Exception {\n\t\t\timageConverter.resize(f, getGroupLogo(GroupForm.this.getModelObject().getId(), false), null, 28, true);\n\t\t}\n\n\t\t@Override"
            },
            {
              "step": 16,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());"
            },
            {
              "step": 17,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 18,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "List.of(getPathToConvert()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);"
            },
            {
              "step": 20,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n\n\t/**"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 1,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 4,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 5,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogoDir() {\n\t\treturn getDir(getUploadDir(), GROUP_LOGO_DIR);\n\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {"
            },
            {
              "step": 6,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 7,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 10,
              "variableName": "getDir(getUploadDir(), GROUP_LOGO_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogoDir() {\n\t\treturn getDir(getUploadDir(), GROUP_LOGO_DIR);\n\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {"
            },
            {
              "step": 11,
              "variableName": "getGroupLogoDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {\n\t\tFile logo = new File(getGroupLogoDir(), String.format(\"%s%s.png\", GROUP_LOGO_PREFIX, groupId));\n\t\tif (groupId == null || (check && !logo.exists())) {\n\t\t\tlogo = new File(getImagesDir(), \"blank.png\");\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "new File(getGroupLogoDir(), String.format(\"%s%s.png\", GROUP_LOGO_PREFIX, groupId))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getGroupLogo(Long groupId, boolean check) {\n\t\tFile logo = new File(getGroupLogoDir(), String.format(\"%s%s.png\", GROUP_LOGO_PREFIX, groupId));\n\t\tif (groupId == null || (check && !logo.exists())) {\n\t\t\tlogo = new File(getImagesDir(), \"blank.png\");\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "logo",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (groupId == null || (check && !logo.exists())) {\n\t\t\tlogo = new File(getImagesDir(), \"blank.png\");\n\t\t}\n\t\treturn logo;\n\t}\n\n\tpublic static File getGroupCss(Long groupId, boolean check) {"
            },
            {
              "step": 14,
              "variableName": "getGroupLogo(GroupForm.this.getModelObject().getId(), false)",
              "uri": "openmeetings-8.0.0/openmeetings-web/src/main/java/org/apache/openmeetings/web/admin/groups/GroupForm.java",
              "type": "File",
              "code": "\n\t\t@Override\n\t\tprotected void processImage(StoredFile sf, File f) throws Exception {\n\t\t\timageConverter.resize(f, getGroupLogo(GroupForm.this.getModelObject().getId(), false), null, 28, true);\n\t\t}\n\n\t\t@Override"
            },
            {
              "step": 15,
              "variableName": "File out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());"
            },
            {
              "step": 16,
              "variableName": "out",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 17,
              "variableName": "out.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 18,
              "variableName": "List.of(getPathToConvert()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);"
            },
            {
              "step": 19,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n\n\t/**"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "ImageConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tlog.debug(\"fullProcessing: {}\", fullProcessing);\n\t\tif (fullProcessing) {\n\t\t\tlog.debug(\"-- running JOD --\");\n\t\t\tlogs.add(doJodConvert(original, pdf));\n\t\t} else if (!EXTENSION_PDF.equals(sf.getExt())) {\n\t\t\tcopyFile(original, pdf);\n\t\t}"
            },
            {
              "step": 1,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 2,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 3,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\t\tlog.debug(\"-- running JOD --\");\n\t\t\tlogs.add(doJodConvert(original, pdf));\n\t\t} else if (!EXTENSION_PDF.equals(sf.getExt())) {\n\t\t\tcopyFile(original, pdf);\n\t\t}\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n"
            },
            {
              "step": 1,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 2,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 3,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 1,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 2,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 3,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 1,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 2,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 3,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 4,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "InterviewConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\tpublic static void setOmHome(File home) {\n\t\tomHome = home;\n\t\tfinal String dataDir = System.getProperty(\"DATA_DIR\");\n\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);"
            },
            {
              "step": 1,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 4,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 5,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 6,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 9,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 10,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 11,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 12,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 14,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 15,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 16,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 17,
              "variableName": "getStreamsSubDir(recording.getRoomId())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java",
              "type": "File",
              "code": "\t}\n\n\tprotected File getStreamFolder(Recording recording) {\n\t\treturn getStreamsSubDir(recording.getRoomId());\n\t}\n\n\tprotected long diff(Date from, Date to) {"
            },
            {
              "step": 18,
              "variableName": "getStreamFolder(r)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\tr.setStatus(Recording.Status.CONVERTING);\n\t\t\tr = recordingDao.update(r);\n\n\t\t\tFile streamFolder = getStreamFolder(r);\n\t\t\tList<RecordingChunk> chunks = chunkDao.getByRecording(r.getId());\n\n\t\t\tFile wav = new File(streamFolder, String.format(\"INTERVIEW_%s_FINAL_WAVE.wav\", r.getId()));"
            },
            {
              "step": 19,
              "variableName": "streamFolder",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 20,
              "variableName": "new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4))",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 21,
              "variableName": "new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 22,
              "variableName": "podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n\n\t\t\t\t\tcreatePod(podX, interviewCam, podIdx, parts, logs);\n\t\t\t\t\tpods.add(podX);\n\t\t\t\t}\n\t\t\t}"
            },
            {
              "step": 23,
              "variableName": "String podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t}\n\t}\n\n\tprivate void createPod(String podX, String image, int podIdx, List<PodPart> parts, ProcessResultList logs) throws ConversionException {\n\t\t/* create continuous pod\n\t\t * ffmpeg \\\n\t\t *\t-loop 1 -framerate 24 -t 10 -i image1.jpg \\"
            },
            {
              "step": 24,
              "variableName": "podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\targs.add(\"-filter_complex\");\n\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {"
            },
            {
              "step": 25,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\targs.add(\"-filter_complex\");\n\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {"
            },
            {
              "step": 26,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {\n\t\t\tthrow new ConversionException(\"Fail to create pod\");"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\tpublic static void setOmHome(File home) {\n\t\tomHome = home;\n\t\tfinal String dataDir = System.getProperty(\"DATA_DIR\");\n\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);"
            },
            {
              "step": 1,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 4,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 5,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 6,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 9,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 10,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 11,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 12,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 14,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 15,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 16,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 17,
              "variableName": "getStreamsSubDir(roomId)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 18,
              "variableName": "new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 19,
              "variableName": "getRecordingChunk(roomId, chunk.getStreamName())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\n\tprivate Date processParts(Long roomId, List<RecordingChunk> chunks, ProcessResultList logs, int numPods, List<PodPart> parts, Date pStart) throws IOException {\n\t\tfor (RecordingChunk chunk : chunks) {\n\t\t\tFile chunkStream = getRecordingChunk(roomId, chunk.getStreamName());\n\t\t\tif (!chunkStream.exists()) {\n\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;"
            },
            {
              "step": 20,
              "variableName": "chunkStream",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 21,
              "variableName": "chunkStream.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 22,
              "variableName": "path",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tlong diff = diff(chunk.isAudioOnly() ? chunk.getEnd() : chunk.getStart(), pStart);\n\t\t\t\tPodPart.add(parts, diff);\n\t\t\t\tif (!chunk.isAudioOnly()) {\n\t\t\t\t\tparts.add(new PodPart(path, diff(chunk.getEnd(), chunk.getStart())));\n\t\t\t\t}\n\t\t\t\tpStart = chunk.getEnd();\n\t\t\t}"
            },
            {
              "step": 23,
              "variableName": "String file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\tfinal String file;\n\t\tfinal long duration;\n\n\t\tpublic PodPart(String file, long duration) {\n\t\t\tthis.file = file;\n\t\t\tthis.duration = duration;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\tfinal long duration;\n\n\t\tpublic PodPart(String file, long duration) {\n\t\t\tthis.file = file;\n\t\t\tthis.duration = duration;\n\t\t}\n"
            },
            {
              "step": 25,
              "variableName": "this",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\tfinal long duration;\n\n\t\tpublic PodPart(String file, long duration) {\n\t\t\tthis.file = file;\n\t\t\tthis.duration = duration;\n\t\t}\n"
            },
            {
              "step": 26,
              "variableName": "PodPart",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\tfinal String file;\n\t\tfinal long duration;\n\n\t\tpublic PodPart(String file, long duration) {\n\t\t\tthis.file = file;\n\t\t\tthis.duration = duration;\n\t\t}"
            },
            {
              "step": 27,
              "variableName": "new PodPart(path, diff(chunk.getEnd(), chunk.getStart()))",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\t\t\tlong diff = diff(chunk.isAudioOnly() ? chunk.getEnd() : chunk.getStart(), pStart);\n\t\t\t\tPodPart.add(parts, diff);\n\t\t\t\tif (!chunk.isAudioOnly()) {\n\t\t\t\t\tparts.add(new PodPart(path, diff(chunk.getEnd(), chunk.getStart())));\n\t\t\t\t}\n\t\t\t\tpStart = chunk.getEnd();\n\t\t\t}"
            },
            {
              "step": 28,
              "variableName": "parts",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>, file] : String",
              "code": "\t\t\t\tlong diff = diff(chunk.isAudioOnly() ? chunk.getEnd() : chunk.getStart(), pStart);\n\t\t\t\tPodPart.add(parts, diff);\n\t\t\t\tif (!chunk.isAudioOnly()) {\n\t\t\t\t\tparts.add(new PodPart(path, diff(chunk.getEnd(), chunk.getStart())));\n\t\t\t\t}\n\t\t\t\tpStart = chunk.getEnd();\n\t\t\t}"
            },
            {
              "step": 29,
              "variableName": "List<PodPart> parts",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>, file] : String",
              "code": "\t\t}\n\t}\n\n\tprivate Date processParts(Long roomId, List<RecordingChunk> chunks, ProcessResultList logs, int numPods, List<PodPart> parts, Date pStart) throws IOException {\n\t\tfor (RecordingChunk chunk : chunks) {\n\t\t\tFile chunkStream = getRecordingChunk(roomId, chunk.getStreamName());\n\t\t\tif (!chunkStream.exists()) {"
            },
            {
              "step": 30,
              "variableName": "parts",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>, file] : String",
              "code": "\t\t\t\tint podIdx = pods.size();\n\t\t\t\tDate pStart = r.getRecordStart();\n\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);"
            },
            {
              "step": 31,
              "variableName": "parts",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>, file] : String",
              "code": "\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n\n\t\t\t\t\tcreatePod(podX, interviewCam, podIdx, parts, logs);\n\t\t\t\t\tpods.add(podX);\n\t\t\t\t}\n\t\t\t}"
            },
            {
              "step": 32,
              "variableName": "List<PodPart> parts",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>, file] : String",
              "code": "\t\t}\n\t}\n\n\tprivate void createPod(String podX, String image, int podIdx, List<PodPart> parts, ProcessResultList logs) throws ConversionException {\n\t\t/* create continuous pod\n\t\t * ffmpeg \\\n\t\t *\t-loop 1 -framerate 24 -t 10 -i image1.jpg \\"
            },
            {
              "step": 33,
              "variableName": "parts",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>, file] : String",
              "code": "\t\tStringBuilder videos = new StringBuilder();\n\t\tStringBuilder concat = new StringBuilder();\n\t\tfor (int i = 0; i < parts.size(); ++i) {\n\t\t\tPodPart p = parts.get(i);\n\t\t\tif (p.getFile() == null) {\n\t\t\t\targs.add(\"-loop\");\n\t\t\t\targs.add(\"1\");"
            },
            {
              "step": 34,
              "variableName": "parts.get(i)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\tStringBuilder videos = new StringBuilder();\n\t\tStringBuilder concat = new StringBuilder();\n\t\tfor (int i = 0; i < parts.size(); ++i) {\n\t\t\tPodPart p = parts.get(i);\n\t\t\tif (p.getFile() == null) {\n\t\t\t\targs.add(\"-loop\");\n\t\t\t\targs.add(\"1\");"
            },
            {
              "step": 35,
              "variableName": "p",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\t\t\targs.add(\"-t\");\n\t\t\t\targs.add(formatMillis(p.getDuration()));\n\t\t\t\targs.add(\"-i\");\n\t\t\t\targs.add(p.getFile());\n\t\t\t}\n\t\t\tvideos.append('[').append(i).append(']')\n\t\t\t\t.append(\"scale=\").append(WIDTH).append(':').append(HEIGHT).append(\",setsar=1:1\")"
            },
            {
              "step": 36,
              "variableName": "getFile",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\t\tthis(null, duration);\n\t\t}\n\n\t\tpublic String getFile() {\n\t\t\treturn file;\n\t\t}\n"
            },
            {
              "step": 37,
              "variableName": "file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "PodPart [file] : String",
              "code": "\t\t}\n\n\t\tpublic String getFile() {\n\t\t\treturn file;\n\t\t}\n\n\t\tpublic long getDuration() {"
            },
            {
              "step": 38,
              "variableName": "file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t}\n\n\t\tpublic String getFile() {\n\t\t\treturn file;\n\t\t}\n\n\t\tpublic long getDuration() {"
            },
            {
              "step": 39,
              "variableName": "p.getFile()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\targs.add(\"-t\");\n\t\t\t\targs.add(formatMillis(p.getDuration()));\n\t\t\t\targs.add(\"-i\");\n\t\t\t\targs.add(p.getFile());\n\t\t\t}\n\t\t\tvideos.append('[').append(i).append(']')\n\t\t\t\t.append(\"scale=\").append(WIDTH).append(':').append(HEIGHT).append(\",setsar=1:1\")"
            },
            {
              "step": 40,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\targs.add(\"-t\");\n\t\t\t\targs.add(formatMillis(p.getDuration()));\n\t\t\t\targs.add(\"-i\");\n\t\t\t\targs.add(p.getFile());\n\t\t\t}\n\t\t\tvideos.append('[').append(i).append(']')\n\t\t\t\t.append(\"scale=\").append(WIDTH).append(':').append(HEIGHT).append(\",setsar=1:1\")"
            },
            {
              "step": 41,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {\n\t\t\tthrow new ConversionException(\"Fail to create pod\");"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 1,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 4,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 5,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 8,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 9,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 10,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 11,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 14,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 15,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 16,
              "variableName": "getStreamsSubDir(recording.getRoomId())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java",
              "type": "File",
              "code": "\t}\n\n\tprotected File getStreamFolder(Recording recording) {\n\t\treturn getStreamsSubDir(recording.getRoomId());\n\t}\n\n\tprotected long diff(Date from, Date to) {"
            },
            {
              "step": 17,
              "variableName": "getStreamFolder(r)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\tr.setStatus(Recording.Status.CONVERTING);\n\t\t\tr = recordingDao.update(r);\n\n\t\t\tFile streamFolder = getStreamFolder(r);\n\t\t\tList<RecordingChunk> chunks = chunkDao.getByRecording(r.getId());\n\n\t\t\tFile wav = new File(streamFolder, String.format(\"INTERVIEW_%s_FINAL_WAVE.wav\", r.getId()));"
            },
            {
              "step": 18,
              "variableName": "streamFolder",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 19,
              "variableName": "new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4))",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 20,
              "variableName": "new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 21,
              "variableName": "podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n\n\t\t\t\t\tcreatePod(podX, interviewCam, podIdx, parts, logs);\n\t\t\t\t\tpods.add(podX);\n\t\t\t\t}\n\t\t\t}"
            },
            {
              "step": 22,
              "variableName": "String podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t}\n\t}\n\n\tprivate void createPod(String podX, String image, int podIdx, List<PodPart> parts, ProcessResultList logs) throws ConversionException {\n\t\t/* create continuous pod\n\t\t * ffmpeg \\\n\t\t *\t-loop 1 -framerate 24 -t 10 -i image1.jpg \\"
            },
            {
              "step": 23,
              "variableName": "podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\targs.add(\"-filter_complex\");\n\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {"
            },
            {
              "step": 24,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\targs.add(\"-filter_complex\");\n\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {"
            },
            {
              "step": 25,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {\n\t\t\tthrow new ConversionException(\"Fail to create pod\");"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 1,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 2,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 3,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 4,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 5,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 6,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 12,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 13,
              "variableName": "getStreamsSubDir(recording.getRoomId())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java",
              "type": "File",
              "code": "\t}\n\n\tprotected File getStreamFolder(Recording recording) {\n\t\treturn getStreamsSubDir(recording.getRoomId());\n\t}\n\n\tprotected long diff(Date from, Date to) {"
            },
            {
              "step": 14,
              "variableName": "getStreamFolder(r)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\tr.setStatus(Recording.Status.CONVERTING);\n\t\t\tr = recordingDao.update(r);\n\n\t\t\tFile streamFolder = getStreamFolder(r);\n\t\t\tList<RecordingChunk> chunks = chunkDao.getByRecording(r.getId());\n\n\t\t\tFile wav = new File(streamFolder, String.format(\"INTERVIEW_%s_FINAL_WAVE.wav\", r.getId()));"
            },
            {
              "step": 15,
              "variableName": "streamFolder",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 16,
              "variableName": "new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4))",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 17,
              "variableName": "new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tList<PodPart> parts = new ArrayList<>();\n\t\t\t\tpStart = processParts(r.getRoomId(), e.getValue(), logs, podIdx, parts, pStart);\n\t\t\t\tif (!parts.isEmpty()) {\n\t\t\t\t\tString podX = new File(streamFolder, String.format(\"rec_%s_pod_%s.%s\", r.getId(), podIdx, EXTENSION_MP4)).getCanonicalPath();\n\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n"
            },
            {
              "step": 18,
              "variableName": "podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\t\tlong diff = diff(r.getRecordEnd(), pStart);\n\t\t\t\t\tPodPart.add(parts, diff);\n\n\t\t\t\t\tcreatePod(podX, interviewCam, podIdx, parts, logs);\n\t\t\t\t\tpods.add(podX);\n\t\t\t\t}\n\t\t\t}"
            },
            {
              "step": 19,
              "variableName": "String podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t}\n\t}\n\n\tprivate void createPod(String podX, String image, int podIdx, List<PodPart> parts, ProcessResultList logs) throws ConversionException {\n\t\t/* create continuous pod\n\t\t * ffmpeg \\\n\t\t *\t-loop 1 -framerate 24 -t 10 -i image1.jpg \\"
            },
            {
              "step": 20,
              "variableName": "podX",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\targs.add(\"-filter_complex\");\n\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {"
            },
            {
              "step": 21,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\targs.add(\"-filter_complex\");\n\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {"
            },
            {
              "step": 22,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\targs.add(concat.insert(0, videos).append(\"concat=n=\").append(parts.size()).append(\":v=1:a=0\").toString());\n\t\targs.add(\"-an\");\n\t\targs.add(podX);\n\t\tProcessResult res = ProcessHelper.exec(\"Full video pod_\" + podIdx, args, true);\n\t\tlogs.add(res);\n\t\tif (res.isWarn()) {\n\t\t\tthrow new ConversionException(\"Fail to create pod\");"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "InterviewConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\tpublic static void setOmHome(File home) {\n\t\tomHome = home;\n\t\tfinal String dataDir = System.getProperty(\"DATA_DIR\");\n\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);"
            },
            {
              "step": 1,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 4,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 5,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 6,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 9,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 10,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 11,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 12,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 14,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 15,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 16,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 17,
              "variableName": "getStreamsSubDir(roomId)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 18,
              "variableName": "new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 19,
              "variableName": "getRecordingChunk(roomId, chunk.getStreamName())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\n\tprivate Date processParts(Long roomId, List<RecordingChunk> chunks, ProcessResultList logs, int numPods, List<PodPart> parts, Date pStart) throws IOException {\n\t\tfor (RecordingChunk chunk : chunks) {\n\t\t\tFile chunkStream = getRecordingChunk(roomId, chunk.getStreamName());\n\t\t\tif (!chunkStream.exists()) {\n\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;"
            },
            {
              "step": 20,
              "variableName": "chunkStream",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 21,
              "variableName": "chunkStream.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 22,
              "variableName": "path",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */\n\t\t\tList<String> args = List.of(getPathToFFMPEG(), \"-y\"\n\t\t\t\t\t, \"-i\", path\n\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\"\n\t\t\t\t\t, \"file.null\");"
            },
            {
              "step": 23,
              "variableName": "of(...) : List [<element>] : String",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */\n\t\t\tList<String> args = List.of(getPathToFFMPEG(), \"-y\"\n\t\t\t\t\t, \"-i\", path\n\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\""
            },
            {
              "step": 24,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\"\n\t\t\t\t\t, \"file.null\");\n\t\t\tProcessResult res = ProcessHelper.exec(String.format(\"Check chunk pod video_%s_%s\", numPods, parts.size()), args, true);\n\t\t\tlogs.add(res);\n\t\t\tif (!res.isWarn()) {\n\t\t\t\tlong diff = diff(chunk.isAudioOnly() ? chunk.getEnd() : chunk.getStart(), pStart);"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 1,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 4,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 5,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 8,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 9,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 10,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 11,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 14,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 15,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 16,
              "variableName": "getStreamsSubDir(roomId)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 17,
              "variableName": "new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 18,
              "variableName": "getRecordingChunk(roomId, chunk.getStreamName())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\n\tprivate Date processParts(Long roomId, List<RecordingChunk> chunks, ProcessResultList logs, int numPods, List<PodPart> parts, Date pStart) throws IOException {\n\t\tfor (RecordingChunk chunk : chunks) {\n\t\t\tFile chunkStream = getRecordingChunk(roomId, chunk.getStreamName());\n\t\t\tif (!chunkStream.exists()) {\n\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;"
            },
            {
              "step": 19,
              "variableName": "chunkStream",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 20,
              "variableName": "chunkStream.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 21,
              "variableName": "path",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */\n\t\t\tList<String> args = List.of(getPathToFFMPEG(), \"-y\"\n\t\t\t\t\t, \"-i\", path\n\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\"\n\t\t\t\t\t, \"file.null\");"
            },
            {
              "step": 22,
              "variableName": "of(...) : List [<element>] : String",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */\n\t\t\tList<String> args = List.of(getPathToFFMPEG(), \"-y\"\n\t\t\t\t\t, \"-i\", path\n\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\""
            },
            {
              "step": 23,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\"\n\t\t\t\t\t, \"file.null\");\n\t\t\tProcessResult res = ProcessHelper.exec(String.format(\"Check chunk pod video_%s_%s\", numPods, parts.size()), args, true);\n\t\t\tlogs.add(res);\n\t\t\tif (!res.isWarn()) {\n\t\t\t\tlong diff = diff(chunk.isAudioOnly() ? chunk.getEnd() : chunk.getStart(), pStart);"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 1,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 2,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 3,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 4,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 5,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 6,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getStreamsDir(), name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(String name) {\n\t\treturn getDir(getStreamsDir(), name);\n\t}\n\n\tpublic static String getRecUri(File f) {"
            },
            {
              "step": 12,
              "variableName": "getStreamsSubDir(String.valueOf(id))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsSubDir(Long id) {\n\t\treturn getStreamsSubDir(String.valueOf(id));\n\t}\n\n\tpublic static File getStreamsSubDir(String name) {"
            },
            {
              "step": 13,
              "variableName": "getStreamsSubDir(roomId)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 14,
              "variableName": "new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM))",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getRecordingChunk(Long roomId, String name) {\n\t\treturn new File(getStreamsSubDir(roomId), getName(name, EXTENSION_WEBM));\n\t}\n\n\tpublic static File getLanguagesDir() {"
            },
            {
              "step": 15,
              "variableName": "getRecordingChunk(roomId, chunk.getStreamName())",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\n\tprivate Date processParts(Long roomId, List<RecordingChunk> chunks, ProcessResultList logs, int numPods, List<PodPart> parts, Date pStart) throws IOException {\n\t\tfor (RecordingChunk chunk : chunks) {\n\t\t\tFile chunkStream = getRecordingChunk(roomId, chunk.getStreamName());\n\t\t\tif (!chunkStream.exists()) {\n\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;"
            },
            {
              "step": 16,
              "variableName": "chunkStream",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "File",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 17,
              "variableName": "chunkStream.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t\tlog.debug(\"Chunk stream doesn't exist: {}\", chunkStream);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tString path = chunkStream.getCanonicalPath();\n\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */"
            },
            {
              "step": 18,
              "variableName": "path",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "String",
              "code": "\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */\n\t\t\tList<String> args = List.of(getPathToFFMPEG(), \"-y\"\n\t\t\t\t\t, \"-i\", path\n\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\"\n\t\t\t\t\t, \"file.null\");"
            },
            {
              "step": 19,
              "variableName": "of(...) : List [<element>] : String",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t/* CHECK FILE:\n\t\t\t * ffmpeg -i rec_316_stream_567_2013_08_28_11_51_45.webm -v error -f null file.null\n\t\t\t */\n\t\t\tList<String> args = List.of(getPathToFFMPEG(), \"-y\"\n\t\t\t\t\t, \"-i\", path\n\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\""
            },
            {
              "step": 20,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/InterviewConverter.java",
              "type": "",
              "code": "\t\t\t\t\t, \"-v\", \"error\"\n\t\t\t\t\t, \"-f\", \"null\"\n\t\t\t\t\t, \"file.null\");\n\t\t\tProcessResult res = ProcessHelper.exec(String.format(\"Check chunk pod video_%s_%s\", numPods, parts.size()), args, true);\n\t\t\tlogs.add(res);\n\t\t\tif (!res.isWarn()) {\n\t\t\t\tlong diff = diff(chunk.isAudioOnly() ? chunk.getEnd() : chunk.getStart(), pStart);"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "VideoConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\tpublic static void setOmHome(File home) {\n\t\tomHome = home;\n\t\tfinal String dataDir = System.getProperty(\"DATA_DIR\");\n\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);"
            },
            {
              "step": 1,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 4,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 5,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 6,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getUploadDir(), FILES_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 12,
              "variableName": "getUploadFilesDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 13,
              "variableName": "new File(getUploadFilesDir(), getHash())",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 14,
              "variableName": "d",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 15,
              "variableName": "new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG))",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 16,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 17,
              "variableName": "f.getFile(EXTENSION_MP4)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\n\tpublic void convertVideo(FileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) {\n\t\ttry {\n\t\t\tfinal File mp4 = f.getFile(EXTENSION_MP4);\n\t\t\tf.setType(Type.VIDEO);\n\t\t\tfinal String ext = sf.getExt();\n\t\t\tString input = f.getFile(ext).getCanonicalPath();"
            },
            {
              "step": 18,
              "variableName": "mp4",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 19,
              "variableName": "mp4.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 20,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 21,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "",
              "code": "\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));\n\t\t\tif (sameExt && tmp != null) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "dataDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "String",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 1,
              "variableName": "new File(dataDir)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (Strings.isEmpty(dataDir)) {\n\t\t\tdataHome = new File(omHome, DATA_DIR);\n\t\t} else {\n\t\t\tdataHome = new File(dataDir);\n\t\t}\n\t\tlog.info(\"Using file locations - omHome: {} DATA_DIR: {}\", omHome, dataHome);\n\t}"
            },
            {
              "step": 2,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\tpublic static final String SIP_PICTURE_URI = \"phone.png\";\n\n\tprivate static File omHome = null;\n\tprivate static File dataHome = null;\n\n\tprivate OmFileHelper() {}\n"
            },
            {
              "step": 3,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 4,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 5,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 6,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 7,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 10,
              "variableName": "getDir(getUploadDir(), FILES_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 11,
              "variableName": "getUploadFilesDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 12,
              "variableName": "new File(getUploadFilesDir(), getHash())",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 13,
              "variableName": "d",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 14,
              "variableName": "new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG))",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 15,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 16,
              "variableName": "f.getFile(EXTENSION_MP4)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\n\tpublic void convertVideo(FileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) {\n\t\ttry {\n\t\t\tfinal File mp4 = f.getFile(EXTENSION_MP4);\n\t\t\tf.setType(Type.VIDEO);\n\t\t\tfinal String ext = sf.getExt();\n\t\t\tString input = f.getFile(ext).getCanonicalPath();"
            },
            {
              "step": 17,
              "variableName": "mp4",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 18,
              "variableName": "mp4.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 19,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 20,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "",
              "code": "\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));\n\t\t\tif (sameExt && tmp != null) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 1,
              "variableName": "new File(dataHome, UPLOAD_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadDir() {\n\t\treturn new File(dataHome, UPLOAD_DIR);\n\t}\n\n\tpublic static File getUploadFilesDir() {"
            },
            {
              "step": 2,
              "variableName": "getUploadDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 3,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 4,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 7,
              "variableName": "getDir(getUploadDir(), FILES_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getUploadFilesDir() {\n\t\treturn getDir(getUploadDir(), FILES_DIR);\n\t}\n\n\tpublic static File getUploadProfilesDir() {"
            },
            {
              "step": 8,
              "variableName": "getUploadFilesDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 9,
              "variableName": "new File(getUploadFilesDir(), getHash())",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\tpublic final File getFile(String ext) {\n\t\tFile f = null;\n\t\tif (!isDeleted() && getHash() != null) {\n\t\t\tFile d = new File(getUploadFilesDir(), getHash());\n\t\t\tswitch (getType()) {\n\t\t\t\tcase WML_FILE:\n\t\t\t\t\tf = getFileSafe(getUploadWmlDir(), getHash(), ext, EXTENSION_WML);"
            },
            {
              "step": 10,
              "variableName": "d",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 11,
              "variableName": "new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG))",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tcase PRESENTATION:\n\t\t\t\t\tint slide = ext == null ? 0 : toInt(ext, -1);\n\t\t\t\t\tif (slide > -1) {\n\t\t\t\t\t\tf = new File(d, String.format(\"%1$s-%2$04d.%3$s\", DOC_PAGE_PREFIX, slide, EXTENSION_PNG));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_PDF);\n\t\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 13,
              "variableName": "f.getFile(EXTENSION_MP4)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\n\tpublic void convertVideo(FileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) {\n\t\ttry {\n\t\t\tfinal File mp4 = f.getFile(EXTENSION_MP4);\n\t\t\tf.setType(Type.VIDEO);\n\t\t\tfinal String ext = sf.getExt();\n\t\t\tString input = f.getFile(ext).getCanonicalPath();"
            },
            {
              "step": 14,
              "variableName": "mp4",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 15,
              "variableName": "mp4.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 16,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 17,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "",
              "code": "\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));\n\t\t\tif (sameExt && tmp != null) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "dataHome",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 1,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 2,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 3,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 4,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 5,
              "variableName": "getDir(dataHome, STREAMS_DIR)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsDir() {\n\t\treturn getDir(dataHome, STREAMS_DIR);\n\t}\n\n\tpublic static File getStreamsHibernateDir() {"
            },
            {
              "step": 6,
              "variableName": "getStreamsDir()",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsHibernateDir() {\n\t\treturn getDir(getStreamsDir(), HIBERNATE);\n\t}\n\n\tpublic static File getRecording(String name) {"
            },
            {
              "step": 7,
              "variableName": "File parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn omHome;\n\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();"
            },
            {
              "step": 8,
              "variableName": "parent",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 9,
              "variableName": "new File(parent, name)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tprivate static File getDir(File parent, String name) {\n\t\tFile f = new File(parent, name);\n\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}"
            },
            {
              "step": 10,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tif (!f.exists()) {\n\t\t\tf.mkdirs();\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic static File getUploadDir() {"
            },
            {
              "step": 11,
              "variableName": "getDir(getStreamsDir(), HIBERNATE)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getStreamsHibernateDir() {\n\t\treturn getDir(getStreamsDir(), HIBERNATE);\n\t}\n\n\tpublic static File getRecording(String name) {"
            },
            {
              "step": 12,
              "variableName": "getStreamsHibernateDir()",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase RECORDING:\n\t\t\t\t\tf = getFileSafe(getStreamsHibernateDir(), getHash(), ext, EXTENSION_MP4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase VIDEO:\n\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_MP4);"
            },
            {
              "step": 13,
              "variableName": "File inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn new File(parent, name + suffix + ext);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String inExt, String defaultExt) {\n\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n"
            },
            {
              "step": 14,
              "variableName": "inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String inExt, String defaultExt) {\n\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String ext) {"
            },
            {
              "step": 15,
              "variableName": "File inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String ext) {\n\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();"
            },
            {
              "step": 16,
              "variableName": "inDir",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();\n\t\treturn file.startsWith(base) ? file.toFile() : new File(inDir, inName);\n\t}\n\n\tpublic static File getNewFile(File dir, String name, String ext) throws IOException {"
            },
            {
              "step": 17,
              "variableName": "new File(inDir, inName)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();\n\t\treturn file.startsWith(base) ? file.toFile() : new File(inDir, inName);\n\t}\n\n\tpublic static File getNewFile(File dir, String name, String ext) throws IOException {"
            },
            {
              "step": 18,
              "variableName": "file.startsWith(base) ? file.toFile() : new File(inDir, inName)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "... : File",
              "code": "\t\tfinal String name = getName(inName, ext);\n\t\tPath base = inDir.toPath();\n\t\tPath file  = base.resolve(name).normalize();\n\t\treturn file.startsWith(base) ? file.toFile() : new File(inDir, inName);\n\t}\n\n\tpublic static File getNewFile(File dir, String name, String ext) throws IOException {"
            },
            {
              "step": 19,
              "variableName": "getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt)",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java",
              "type": "File",
              "code": "\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String inExt, String defaultExt) {\n\t\treturn getFileSafe(inDir, inName, inExt == null ? defaultExt : inExt);\n\t}\n\n\tpublic static File getFileSafe(File inDir, String inName, String ext) {"
            },
            {
              "step": 20,
              "variableName": "getFileSafe(getStreamsHibernateDir(), getHash(), ext, EXTENSION_MP4)",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase RECORDING:\n\t\t\t\t\tf = getFileSafe(getStreamsHibernateDir(), getHash(), ext, EXTENSION_MP4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase VIDEO:\n\t\t\t\t\tf = getFileSafe(d, getHash(), ext, EXTENSION_MP4);"
            },
            {
              "step": 21,
              "variableName": "f",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/file/BaseFileItem.java",
              "type": "File",
              "code": "\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic final File getOriginal() {"
            },
            {
              "step": 22,
              "variableName": "f.getFile(EXTENSION_MP4)",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\n\tpublic void convertVideo(FileItem f, StoredFile sf, ProcessResultList logs, Optional<DoubleConsumer> progress) {\n\t\ttry {\n\t\t\tfinal File mp4 = f.getFile(EXTENSION_MP4);\n\t\t\tf.setType(Type.VIDEO);\n\t\t\tfinal String ext = sf.getExt();\n\t\t\tString input = f.getFile(ext).getCanonicalPath();"
            },
            {
              "step": 23,
              "variableName": "mp4",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "File",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 24,
              "variableName": "mp4.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 25,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\tif (sf.isAudio()) {\n\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));"
            },
            {
              "step": 26,
              "variableName": "args",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/VideoConverter.java",
              "type": "",
              "code": "\t\t\t\targs.add(\"-shortest\");\n\t\t\t}\n\t\t\targs.add(mp4.getCanonicalPath());\n\t\t\tProcessResult res = ProcessHelper.exec(\"convert to MP4 :: \" + f.getHash(), args);\n\t\t\tlogs.add(res);\n\t\t\tprogress.ifPresent(theProgress -> theProgress.accept(STEP));\n\t\t\tif (sameExt && tmp != null) {"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "ProcessHelper.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tlog.debug(\"fullProcessing: {}\", fullProcessing);\n\t\tif (fullProcessing) {\n\t\t\tlog.debug(\"-- running JOD --\");\n\t\t\tlogs.add(doJodConvert(original, pdf));\n\t\t} else if (!EXTENSION_PDF.equals(sf.getExt())) {\n\t\t\tcopyFile(original, pdf);\n\t\t}"
            },
            {
              "step": 1,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 2,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 3,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            },
            {
              "step": 8,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\t\tlog.debug(\"-- running JOD --\");\n\t\t\tlogs.add(doJodConvert(original, pdf));\n\t\t} else if (!EXTENSION_PDF.equals(sf.getExt())) {\n\t\t\tcopyFile(original, pdf);\n\t\t}\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n"
            },
            {
              "step": 1,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 2,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 3,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            },
            {
              "step": 8,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 1,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 2,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 3,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            },
            {
              "step": 7,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 8,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t}\n\n\t\tFile destinationFile = OmFileHelper.getNewFile(getUploadProfilesUserDir(userId), PROFILE_FILE_NAME, EXTENSION_PNG);\n\t\treturnMap.add(resize(file, destinationFile, 250, 250, true));\n\n\t\t// Delete old one\n\t\tFiles.deleteIfExists(file.toPath());"
            },
            {
              "step": 1,
              "variableName": "File in",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());"
            },
            {
              "step": 2,
              "variableName": "in",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 3,
              "variableName": "in.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 4,
              "variableName": "List.of(getPathToConvert()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);"
            },
            {
              "step": 5,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n\n\t/**"
            },
            {
              "step": 6,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 7,
      "fileName": "ProcessHelper.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tlog.debug(\"fullProcessing: {}\", fullProcessing);\n\t\tif (fullProcessing) {\n\t\t\tlog.debug(\"-- running JOD --\");\n\t\t\tlogs.add(doJodConvert(original, pdf));\n\t\t} else if (!EXTENSION_PDF.equals(sf.getExt())) {\n\t\t\tcopyFile(original, pdf);\n\t\t}"
            },
            {
              "step": 1,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 2,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 3,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            },
            {
              "step": 8,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            },
            {
              "step": 10,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n"
            },
            {
              "step": 11,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n\n\tprivate static ProcessResult exec(String process, List<String> argv, Map<String, String> env, boolean optional) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\t\tlog.debug(\"-- running JOD --\");\n\t\t\tlogs.add(doJodConvert(original, pdf));\n\t\t} else if (!EXTENSION_PDF.equals(sf.getExt())) {\n\t\t\tcopyFile(original, pdf);\n\t\t}\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n"
            },
            {
              "step": 1,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 2,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 3,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            },
            {
              "step": 8,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            },
            {
              "step": 10,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n"
            },
            {
              "step": 11,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n\n\tprivate static ProcessResult exec(String process, List<String> argv, Map<String, String> env, boolean optional) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/DocumentConverter.java",
              "type": "File",
              "code": "\t\tprogress.ifPresent(theProgress -> theProgress.accept(HALF_STEP));\n\n\t\tlog.debug(\"-- generate page images --\");\n\t\treturn imageConverter.convertDocument(f, pdf, logs, progress);\n\t}\n\n\tpublic static void createOfficeManager(String officePath, Function<OfficeManager, ConversionJob> job) throws OfficeException {"
            },
            {
              "step": 1,
              "variableName": "File pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t * @return - result of conversion\n\t * @throws IOException in case IO exception occurred\n\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()"
            },
            {
              "step": 2,
              "variableName": "pdf",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 3,
              "variableName": "pdf.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\"\n\t\t\t\t, pdf.getCanonicalPath()\n\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());"
            },
            {
              "step": 4,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "Object[] [[]] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 5,
              "variableName": "List.of(",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t */\n\tpublic ProcessResultList convertDocument(FileItem f, File pdf, ProcessResultList logs, Optional<DoubleConsumer> progress) throws IOException {\n\t\tlog.debug(\"convertDocument\");\n\t\tList<String> argv = List.of(\n\t\t\t\tgetPathToConvert()\n\t\t\t\t, \"-density\", getDpi()\n\t\t\t\t, \"-define\", \"pdf:use-cropbox=true\""
            },
            {
              "step": 6,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\t\t\t, \"+profile\", \"'*'\"\n\t\t\t\t, \"-quality\", getQuality()\n\t\t\t\t, new File(pdf.getParentFile(), PAGE_TMPLT).getCanonicalPath());\n\t\tProcessResult res = ProcessHelper.exec(\"convert PDF to images\", argv);\n\t\tlogs.add(res);\n\t\tprogress.ifPresent(theProgress -> theProgress.accept(1. / 4));\n\t\tif (res.isOk()) {"
            },
            {
              "step": 7,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 8,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            },
            {
              "step": 9,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n\n\tprivate static ProcessResult exec(String process, List<String> argv, Map<String, String> env, boolean optional) {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\t}\n\n\t\tFile destinationFile = OmFileHelper.getNewFile(getUploadProfilesUserDir(userId), PROFILE_FILE_NAME, EXTENSION_PNG);\n\t\treturnMap.add(resize(file, destinationFile, 250, 250, true));\n\n\t\t// Delete old one\n\t\tFiles.deleteIfExists(file.toPath());"
            },
            {
              "step": 1,
              "variableName": "File in",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\t\treturn ProcessHelper.exec(\"convertSinglePng\", argv);\n\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());"
            },
            {
              "step": 2,
              "variableName": "in",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "File",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 3,
              "variableName": "in.getCanonicalPath()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "String",
              "code": "\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n"
            },
            {
              "step": 4,
              "variableName": "List.of(getPathToConvert()",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic ProcessResult resize(File in, File out, Integer width, Integer height, boolean max) throws IOException {\n\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);"
            },
            {
              "step": 5,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/ImageConverter.java",
              "type": "List [<element>] : String",
              "code": "\t\tList<String> argv = List.of(getPathToConvert()\n\t\t\t\t, \"-resize\", (width == null ? \"\" : width) + (height == null ? \"\" : \"x\" + height) + (max ? \">\" : \"\")\n\t\t\t\t, in.getCanonicalPath(), out.getCanonicalPath());\n\t\treturn ProcessHelper.exec(\"resize\", argv);\n\t}\n\n\t/**"
            },
            {
              "step": 6,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\t}\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n"
            },
            {
              "step": 7,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv) {\n\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {"
            },
            {
              "step": 8,
              "variableName": "List<String> argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "List [<element>] : String",
              "code": "\t\treturn exec(process, argv, false);\n\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "argv",
              "uri": "openmeetings-8.0.0/openmeetings-util/src/main/java/org/apache/openmeetings/util/process/ProcessHelper.java",
              "type": "",
              "code": "\t}\n\n\tpublic static ProcessResult exec(String process, List<String> argv, boolean optional) {\n\t\treturn exec(process, argv, Map.of(), optional);\n\t}\n\n\tprivate static ProcessResult exec(String process, List<String> argv, Map<String, String> env, boolean optional) {"
            }
          ],
          "label": "No"
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 8,
      "fileName": "UserWebService.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "uri": "openmeetings-8.0.0/openmeetings-db/src/main/java/org/apache/openmeetings/db/dto/user/UserDTO.java",
              "type": "String",
              "code": "\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {"
            },
            {
              "step": 1,
              "variableName": "user.getPassword()",
              "uri": "openmeetings-8.0.0/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/UserWebService.java",
              "type": "",
              "code": "\t\t\t\tfor (IValidationError err : passVal.getErrors()) {\n\t\t\t\t\tsb.append(((ValidationError)err).getMessage()).append(System.lineSeparator());\n\t\t\t\t}\n\t\t\t\tlog.debug(\"addNewUser::weak password '{}', msg: {}\", user.getPassword(), sb);\n\t\t\t\tthrow new InternalServiceException(sb.toString());\n\t\t\t}\n\t\t\tObject ouser;"
            }
          ],
          "label": "Yes"
        }
      ]
    }
  ]
}