{
  "209": [
    {
      "resultIndex": 0,
      "fileName": "Migrater.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 234,
              "startColumn": 9,
              "endLine": 234,
              "endColumn": 13,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "    public static SecurityDynamicConfiguration<RoleMappingsV7> migrateRoleMappings(SecurityDynamicConfiguration<RoleMappingsV6> r6rms)\n        throws MigrationException {\n        final SecurityDynamicConfiguration<RoleMappingsV7> rms7 = SecurityDynamicConfiguration.empty(CType.ROLESMAPPING);\n        rms7.set_meta(new Meta());\n        rms7.get_meta().setConfig_version(2);\n        rms7.get_meta().setType(\"rolesmapping\");\n"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "File file",
              "startLine": 164,
              "startColumn": 43,
              "endLine": 164,
              "endColumn": 52,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 6,
              "variableName": "file",
              "startLine": 140,
              "startColumn": 39,
              "endLine": 140,
              "endColumn": 43,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 7,
              "variableName": "\"Can not migrate \" + file + \" due to \" + e",
              "startLine": 158,
              "startColumn": 32,
              "endLine": 158,
              "endColumn": 74,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "                return backupAndWrite(file, val, backup);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Can not migrate \" + file + \" due to \" + e);\n        }\n\n        return false;"
            }
          ],
          "label": "No",
          "probability": 0.3575373888015747
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 235,
              "startColumn": 9,
              "endLine": 235,
              "endColumn": 13,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        throws MigrationException {\n        final SecurityDynamicConfiguration<RoleMappingsV7> rms7 = SecurityDynamicConfiguration.empty(CType.ROLESMAPPING);\n        rms7.set_meta(new Meta());\n        rms7.get_meta().setConfig_version(2);\n        rms7.get_meta().setType(\"rolesmapping\");\n\n        for (final Entry<String, RoleMappingsV6> r6m : r6rms.getCEntries().entrySet()) {"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "File file",
              "startLine": 164,
              "startColumn": 43,
              "endLine": 164,
              "endColumn": 52,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 6,
              "variableName": "file",
              "startLine": 140,
              "startColumn": 39,
              "endLine": 140,
              "endColumn": 43,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 7,
              "variableName": "\"Can not migrate \" + file + \" due to \" + e",
              "startLine": 158,
              "startColumn": 32,
              "endLine": 158,
              "endColumn": 74,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "                return backupAndWrite(file, val, backup);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Can not migrate \" + file + \" due to \" + e);\n        }\n\n        return false;"
            }
          ],
          "label": "No",
          "probability": 0.3957916498184204
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 236,
              "startColumn": 9,
              "endLine": 236,
              "endColumn": 13,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        final SecurityDynamicConfiguration<RoleMappingsV7> rms7 = SecurityDynamicConfiguration.empty(CType.ROLESMAPPING);\n        rms7.set_meta(new Meta());\n        rms7.get_meta().setConfig_version(2);\n        rms7.get_meta().setType(\"rolesmapping\");\n\n        for (final Entry<String, RoleMappingsV6> r6m : r6rms.getCEntries().entrySet()) {\n            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "File file",
              "startLine": 164,
              "startColumn": 43,
              "endLine": 164,
              "endColumn": 52,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 6,
              "variableName": "file",
              "startLine": 140,
              "startColumn": 39,
              "endLine": 140,
              "endColumn": 43,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 7,
              "variableName": "\"Can not migrate \" + file + \" due to \" + e",
              "startLine": 158,
              "startColumn": 32,
              "endLine": 158,
              "endColumn": 74,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "                return backupAndWrite(file, val, backup);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Can not migrate \" + file + \" due to \" + e);\n        }\n\n        return false;"
            }
          ],
          "label": "No",
          "probability": 0.3120531737804413
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 239,
              "startColumn": 13,
              "endLine": 239,
              "endColumn": 17,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        rms7.get_meta().setType(\"rolesmapping\");\n\n        for (final Entry<String, RoleMappingsV6> r6m : r6rms.getCEntries().entrySet()) {\n            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "File file",
              "startLine": 164,
              "startColumn": 43,
              "endLine": 164,
              "endColumn": 52,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 6,
              "variableName": "file",
              "startLine": 140,
              "startColumn": 39,
              "endLine": 140,
              "endColumn": 43,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 7,
              "variableName": "\"Can not migrate \" + file + \" due to \" + e",
              "startLine": 158,
              "startColumn": 32,
              "endLine": 158,
              "endColumn": 74,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "                return backupAndWrite(file, val, backup);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Can not migrate \" + file + \" due to \" + e);\n        }\n\n        return false;"
            }
          ],
          "label": "No",
          "probability": 0.24779261648654938
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "Migrater.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 234,
              "startColumn": 9,
              "endLine": 234,
              "endColumn": 13,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "    public static SecurityDynamicConfiguration<RoleMappingsV7> migrateRoleMappings(SecurityDynamicConfiguration<RoleMappingsV6> r6rms)\n        throws MigrationException {\n        final SecurityDynamicConfiguration<RoleMappingsV7> rms7 = SecurityDynamicConfiguration.empty(CType.ROLESMAPPING);\n        rms7.set_meta(new Meta());\n        rms7.get_meta().setConfig_version(2);\n        rms7.get_meta().setType(\"rolesmapping\");\n"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "file",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 57,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 6,
              "variableName": "file.getAbsolutePath()",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 75,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "String",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 7,
              "variableName": "\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\"",
              "startLine": 177,
              "startColumn": 32,
              "endLine": 177,
              "endColumn": 129,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            }
          ],
          "label": "No",
          "probability": 0.3575373888015747
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 235,
              "startColumn": 9,
              "endLine": 235,
              "endColumn": 13,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        throws MigrationException {\n        final SecurityDynamicConfiguration<RoleMappingsV7> rms7 = SecurityDynamicConfiguration.empty(CType.ROLESMAPPING);\n        rms7.set_meta(new Meta());\n        rms7.get_meta().setConfig_version(2);\n        rms7.get_meta().setType(\"rolesmapping\");\n\n        for (final Entry<String, RoleMappingsV6> r6m : r6rms.getCEntries().entrySet()) {"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "file",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 57,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 6,
              "variableName": "file.getAbsolutePath()",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 75,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "String",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 7,
              "variableName": "\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\"",
              "startLine": 177,
              "startColumn": 32,
              "endLine": 177,
              "endColumn": 129,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            }
          ],
          "label": "No",
          "probability": 0.3957916498184204
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 236,
              "startColumn": 9,
              "endLine": 236,
              "endColumn": 13,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        final SecurityDynamicConfiguration<RoleMappingsV7> rms7 = SecurityDynamicConfiguration.empty(CType.ROLESMAPPING);\n        rms7.set_meta(new Meta());\n        rms7.get_meta().setConfig_version(2);\n        rms7.get_meta().setType(\"rolesmapping\");\n\n        for (final Entry<String, RoleMappingsV6> r6m : r6rms.getCEntries().entrySet()) {\n            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "file",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 57,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 6,
              "variableName": "file.getAbsolutePath()",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 75,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "String",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 7,
              "variableName": "\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\"",
              "startLine": 177,
              "startColumn": 32,
              "endLine": 177,
              "endColumn": 129,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            }
          ],
          "label": "No",
          "probability": 0.3120531737804413
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "rms7",
              "startLine": 239,
              "startColumn": 13,
              "endLine": 239,
              "endColumn": 17,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        rms7.get_meta().setType(\"rolesmapping\");\n\n        for (final Entry<String, RoleMappingsV6> r6m : r6rms.getCEntries().entrySet()) {\n            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;"
            },
            {
              "step": 1,
              "variableName": "rms7",
              "startLine": 242,
              "startColumn": 16,
              "endLine": 242,
              "endColumn": 20,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/securityconf/Migration.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            rms7.putCEntry(r6m.getKey(), new RoleMappingsV7(r6m.getValue()));\n        }\n\n        return rms7;\n    }\n\n    public static SecurityDynamicConfiguration<AuditConfig> migrateAudit(SecurityDynamicConfiguration<AuditConfig> audit) {"
            },
            {
              "step": 2,
              "variableName": "Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class))",
              "startLine": 139,
              "startColumn": 55,
              "endLine": 139,
              "endColumn": 132,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "            }\n\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n"
            },
            {
              "step": 3,
              "variableName": "val",
              "startLine": 140,
              "startColumn": 45,
              "endLine": 140,
              "endColumn": 48,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "\n            if (cType == CType.ROLESMAPPING) {\n                SecurityDynamicConfiguration<?> val = Migration.migrateRoleMappings(Migration.readYaml(file, RoleMappingsV6.class));\n                return backupAndWrite(file, val, backup);\n            }\n\n            if (cType == CType.INTERNALUSERS) {"
            },
            {
              "step": 4,
              "variableName": "SecurityDynamicConfiguration<?> val",
              "startLine": 164,
              "startColumn": 54,
              "endLine": 164,
              "endColumn": 89,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "SecurityDynamicConfiguration",
              "code": "        return false;\n    }\n\n    private static boolean backupAndWrite(File file, SecurityDynamicConfiguration<?> val, boolean backup) {\n        try {\n            if (val == null) {\n                System.out.println(\"NULL object for \" + file.getAbsolutePath());"
            },
            {
              "step": 5,
              "variableName": "file",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 57,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "File",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 6,
              "variableName": "file.getAbsolutePath()",
              "startLine": 177,
              "startColumn": 53,
              "endLine": 177,
              "endColumn": 75,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "String",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            },
            {
              "step": 7,
              "variableName": "\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\"",
              "startLine": 177,
              "startColumn": 32,
              "endLine": 177,
              "endColumn": 129,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/Migrater.java",
              "type": "",
              "code": "            System.out.println(\"Migrated (as \" + val.getCType() + \") \" + file.getAbsolutePath());\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"Unable to write \" + file.getAbsolutePath() + \". This is unexpected and we will abort migration.\");\n            System.out.println(\"    Details: \" + e.getMessage());\n        }\n"
            }
          ],
          "label": "No",
          "probability": 0.24779261648654938
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "SecurityAdmin.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 519,
              "startColumn": 64,
              "endLine": 519,
              "endColumn": 68,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "Number",
              "code": "            return retVal ? 0 : -1;\n        }\n\n        System.out.print(\"Will connect to \" + hostname + \":\" + port);\n        Socket socket = new Socket();\n\n        try {"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\"",
              "startLine": 528,
              "startColumn": 32,
              "endLine": 528,
              "endColumn": 120,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "\n        } catch (java.net.ConnectException ex) {\n            System.out.println();\n            System.out.println(\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\");\n            return (-1);\n        } finally {\n            try {"
            }
          ],
          "label": "No",
          "probability": 0.4032977819442749
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 524,
              "startColumn": 60,
              "endLine": 524,
              "endColumn": 64,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "Number",
              "code": "\n        try {\n\n            socket.connect(new InetSocketAddress(hostname, port));\n\n        } catch (java.net.ConnectException ex) {\n            System.out.println();"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\"",
              "startLine": 528,
              "startColumn": 32,
              "endLine": 528,
              "endColumn": 120,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "\n        } catch (java.net.ConnectException ex) {\n            System.out.println();\n            System.out.println(\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\");\n            return (-1);\n        } finally {\n            try {"
            }
          ],
          "label": "No",
          "probability": 0.5063258409500122
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 528,
              "startColumn": 99,
              "endLine": 528,
              "endColumn": 103,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "Number",
              "code": "\n        } catch (java.net.ConnectException ex) {\n            System.out.println();\n            System.out.println(\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\");\n            return (-1);\n        } finally {\n            try {"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\"",
              "startLine": 528,
              "startColumn": 32,
              "endLine": 528,
              "endColumn": 120,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "\n        } catch (java.net.ConnectException ex) {\n            System.out.println();\n            System.out.println(\"ERR: Seems there is no OpenSearch running on \" + hostname + \":\" + port + \" - Will exit\");\n            return (-1);\n        } finally {\n            try {"
            }
          ],
          "label": "No",
          "probability": 0.5800288915634155
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "SecurityAdmin.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 947,
              "startColumn": 17,
              "endLine": 947,
              "endColumn": 21,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n            System.out.println(\"Populate config from \" + (isCdAbs ? cd : new File(\".\", cd).getCanonicalPath()));\n\n            if (file != null) {\n                if (type != null) {\n                    System.out.println(\"Force type: \" + type);\n                } else {"
            },
            {
              "step": 1,
              "variableName": "file",
              "startLine": 963,
              "startColumn": 67,
              "endLine": 963,
              "endColumn": 71,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                    return (-1);\n                }\n\n                boolean success = uploadFile(restHighLevelClient, file, index, type, legacy, resolveEnvVars);\n\n                if (!success) {\n                    System.out.println(\"ERR: cannot upload configuration, see errors above\");"
            },
            {
              "step": 2,
              "variableName": "final String filepath",
              "startLine": 1050,
              "startColumn": 9,
              "endLine": 1050,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 3,
              "variableName": "filepath",
              "startLine": 1056,
              "startColumn": 48,
              "endLine": 1056,
              "endColumn": 56,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        final boolean legacy,\n        boolean resolveEnvVars\n    ) {\n        return uploadFile(restHighLevelClient, filepath, index, _id, legacy, resolveEnvVars, false);\n    }\n\n    private static boolean uploadFile("
            },
            {
              "step": 4,
              "variableName": "final String filepath",
              "startLine": 1061,
              "startColumn": 9,
              "endLine": 1061,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 5,
              "variableName": "\"ERR: Seems \" + filepath + \" is not in legacy format: \" + e",
              "startLine": 1077,
              "startColumn": 36,
              "endLine": 1077,
              "endColumn": 95,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            try {\n                ConfigHelper.fromYamlFile(filepath, CType.fromString(_id), 2, 0, 0);\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + filepath + \" is not in legacy format: \" + e);\n                return false;\n            }\n"
            }
          ],
          "label": "No",
          "probability": 0.6308269500732422
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 963,
              "startColumn": 67,
              "endLine": 963,
              "endColumn": 71,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                    return (-1);\n                }\n\n                boolean success = uploadFile(restHighLevelClient, file, index, type, legacy, resolveEnvVars);\n\n                if (!success) {\n                    System.out.println(\"ERR: cannot upload configuration, see errors above\");"
            },
            {
              "step": 1,
              "variableName": "final String filepath",
              "startLine": 1050,
              "startColumn": 9,
              "endLine": 1050,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 2,
              "variableName": "filepath",
              "startLine": 1056,
              "startColumn": 48,
              "endLine": 1056,
              "endColumn": 56,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        final boolean legacy,\n        boolean resolveEnvVars\n    ) {\n        return uploadFile(restHighLevelClient, filepath, index, _id, legacy, resolveEnvVars, false);\n    }\n\n    private static boolean uploadFile("
            },
            {
              "step": 3,
              "variableName": "final String filepath",
              "startLine": 1061,
              "startColumn": 9,
              "endLine": 1061,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 4,
              "variableName": "\"ERR: Seems \" + filepath + \" is not in legacy format: \" + e",
              "startLine": 1077,
              "startColumn": 36,
              "endLine": 1077,
              "endColumn": 95,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            try {\n                ConfigHelper.fromYamlFile(filepath, CType.fromString(_id), 2, 0, 0);\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + filepath + \" is not in legacy format: \" + e);\n                return false;\n            }\n"
            }
          ],
          "label": "No",
          "probability": 0.6633334159851074
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 951,
              "startColumn": 54,
              "endLine": 951,
              "endColumn": 58,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                if (type != null) {\n                    System.out.println(\"Force type: \" + type);\n                } else {\n                    type = readTypeFromFile(new File(file));\n                    if (type == null) {\n                        System.out.println(\"ERR: Unable to read type from file\");\n                        return (-1);"
            },
            {
              "step": 1,
              "variableName": "file",
              "startLine": 963,
              "startColumn": 67,
              "endLine": 963,
              "endColumn": 71,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                    return (-1);\n                }\n\n                boolean success = uploadFile(restHighLevelClient, file, index, type, legacy, resolveEnvVars);\n\n                if (!success) {\n                    System.out.println(\"ERR: cannot upload configuration, see errors above\");"
            },
            {
              "step": 2,
              "variableName": "final String filepath",
              "startLine": 1050,
              "startColumn": 9,
              "endLine": 1050,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 3,
              "variableName": "filepath",
              "startLine": 1056,
              "startColumn": 48,
              "endLine": 1056,
              "endColumn": 56,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        final boolean legacy,\n        boolean resolveEnvVars\n    ) {\n        return uploadFile(restHighLevelClient, filepath, index, _id, legacy, resolveEnvVars, false);\n    }\n\n    private static boolean uploadFile("
            },
            {
              "step": 4,
              "variableName": "final String filepath",
              "startLine": 1061,
              "startColumn": 9,
              "endLine": 1061,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 5,
              "variableName": "\"ERR: Seems \" + filepath + \" is not in legacy format: \" + e",
              "startLine": 1077,
              "startColumn": 36,
              "endLine": 1077,
              "endColumn": 95,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            try {\n                ConfigHelper.fromYamlFile(filepath, CType.fromString(_id), 2, 0, 0);\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + filepath + \" is not in legacy format: \" + e);\n                return false;\n            }\n"
            }
          ],
          "label": "No",
          "probability": 0.595755934715271
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "SecurityAdmin.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 947,
              "startColumn": 17,
              "endLine": 947,
              "endColumn": 21,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n            System.out.println(\"Populate config from \" + (isCdAbs ? cd : new File(\".\", cd).getCanonicalPath()));\n\n            if (file != null) {\n                if (type != null) {\n                    System.out.println(\"Force type: \" + type);\n                } else {"
            },
            {
              "step": 1,
              "variableName": "file",
              "startLine": 963,
              "startColumn": 67,
              "endLine": 963,
              "endColumn": 71,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                    return (-1);\n                }\n\n                boolean success = uploadFile(restHighLevelClient, file, index, type, legacy, resolveEnvVars);\n\n                if (!success) {\n                    System.out.println(\"ERR: cannot upload configuration, see errors above\");"
            },
            {
              "step": 2,
              "variableName": "final String filepath",
              "startLine": 1050,
              "startColumn": 9,
              "endLine": 1050,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 3,
              "variableName": "filepath",
              "startLine": 1056,
              "startColumn": 48,
              "endLine": 1056,
              "endColumn": 56,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        final boolean legacy,\n        boolean resolveEnvVars\n    ) {\n        return uploadFile(restHighLevelClient, filepath, index, _id, legacy, resolveEnvVars, false);\n    }\n\n    private static boolean uploadFile("
            },
            {
              "step": 4,
              "variableName": "final String filepath",
              "startLine": 1061,
              "startColumn": 9,
              "endLine": 1061,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 5,
              "variableName": "\"ERR: Seems \" + filepath + \" is not in OpenSearch Security 7 format: \" + e",
              "startLine": 1085,
              "startColumn": 36,
              "endLine": 1085,
              "endColumn": 110,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            try {\n                ConfigHelper.fromYamlFile(filepath, CType.fromString(_id), 2, 0, 0);\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + filepath + \" is not in OpenSearch Security 7 format: \" + e);\n                return false;\n            }\n        }"
            }
          ],
          "label": "No",
          "probability": 0.6308269500732422
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 963,
              "startColumn": 67,
              "endLine": 963,
              "endColumn": 71,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                    return (-1);\n                }\n\n                boolean success = uploadFile(restHighLevelClient, file, index, type, legacy, resolveEnvVars);\n\n                if (!success) {\n                    System.out.println(\"ERR: cannot upload configuration, see errors above\");"
            },
            {
              "step": 1,
              "variableName": "final String filepath",
              "startLine": 1050,
              "startColumn": 9,
              "endLine": 1050,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 2,
              "variableName": "filepath",
              "startLine": 1056,
              "startColumn": 48,
              "endLine": 1056,
              "endColumn": 56,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        final boolean legacy,\n        boolean resolveEnvVars\n    ) {\n        return uploadFile(restHighLevelClient, filepath, index, _id, legacy, resolveEnvVars, false);\n    }\n\n    private static boolean uploadFile("
            },
            {
              "step": 3,
              "variableName": "final String filepath",
              "startLine": 1061,
              "startColumn": 9,
              "endLine": 1061,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 4,
              "variableName": "\"ERR: Seems \" + filepath + \" is not in OpenSearch Security 7 format: \" + e",
              "startLine": 1085,
              "startColumn": 36,
              "endLine": 1085,
              "endColumn": 110,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            try {\n                ConfigHelper.fromYamlFile(filepath, CType.fromString(_id), 2, 0, 0);\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + filepath + \" is not in OpenSearch Security 7 format: \" + e);\n                return false;\n            }\n        }"
            }
          ],
          "label": "No",
          "probability": 0.6633334159851074
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 951,
              "startColumn": 54,
              "endLine": 951,
              "endColumn": 58,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                if (type != null) {\n                    System.out.println(\"Force type: \" + type);\n                } else {\n                    type = readTypeFromFile(new File(file));\n                    if (type == null) {\n                        System.out.println(\"ERR: Unable to read type from file\");\n                        return (-1);"
            },
            {
              "step": 1,
              "variableName": "file",
              "startLine": 963,
              "startColumn": 67,
              "endLine": 963,
              "endColumn": 71,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                    return (-1);\n                }\n\n                boolean success = uploadFile(restHighLevelClient, file, index, type, legacy, resolveEnvVars);\n\n                if (!success) {\n                    System.out.println(\"ERR: cannot upload configuration, see errors above\");"
            },
            {
              "step": 2,
              "variableName": "final String filepath",
              "startLine": 1050,
              "startColumn": 9,
              "endLine": 1050,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 3,
              "variableName": "filepath",
              "startLine": 1056,
              "startColumn": 48,
              "endLine": 1056,
              "endColumn": 56,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        final boolean legacy,\n        boolean resolveEnvVars\n    ) {\n        return uploadFile(restHighLevelClient, filepath, index, _id, legacy, resolveEnvVars, false);\n    }\n\n    private static boolean uploadFile("
            },
            {
              "step": 4,
              "variableName": "final String filepath",
              "startLine": 1061,
              "startColumn": 9,
              "endLine": 1061,
              "endColumn": 30,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean uploadFile(\n        final RestHighLevelClient restHighLevelClient,\n        final String filepath,\n        final String index,\n        final String _id,\n        final boolean legacy,"
            },
            {
              "step": 5,
              "variableName": "\"ERR: Seems \" + filepath + \" is not in OpenSearch Security 7 format: \" + e",
              "startLine": 1085,
              "startColumn": 36,
              "endLine": 1085,
              "endColumn": 110,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            try {\n                ConfigHelper.fromYamlFile(filepath, CType.fromString(_id), 2, 0, 0);\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + filepath + \" is not in OpenSearch Security 7 format: \" + e);\n                return false;\n            }\n        }"
            }
          ],
          "label": "No",
          "probability": 0.595755934715271
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "SecurityAdmin.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 510,
              "startColumn": 39,
              "endLine": 510,
              "endColumn": 43,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n        if (validateConfig != null) {\n            System.out.println(\"Validate configuration for Version \" + validateConfig.intValue());\n            return validateConfig(cd, file, type, validateConfig.intValue());\n        }\n\n        if (migrateOffline != null) {"
            },
            {
              "step": 1,
              "variableName": "String file",
              "startLine": 1625,
              "startColumn": 50,
              "endLine": 1625,
              "endColumn": 61,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "        return new SecurityJsonNode(jsonNode).get(\"_meta\").get(\"type\").asString();\n    }\n\n    private static int validateConfig(String cd, String file, String type, int version) {\n        if (file != null) {\n            try {\n"
            },
            {
              "step": 2,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1641,
              "startColumn": 36,
              "endLine": 1641,
              "endColumn": 100,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "                ConfigHelper.fromYamlFile(file, CType.fromString(type), version == 7 ? 2 : 1, 0, 0);\n                return 0;\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n                return -1;\n            }\n        } else if (cd != null) {"
            }
          ],
          "label": "No",
          "probability": 0.5435998439788818
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 1626,
              "startColumn": 13,
              "endLine": 1626,
              "endColumn": 17,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "    }\n\n    private static int validateConfig(String cd, String file, String type, int version) {\n        if (file != null) {\n            try {\n\n                if (type == null) {"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1641,
              "startColumn": 36,
              "endLine": 1641,
              "endColumn": 100,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "                ConfigHelper.fromYamlFile(file, CType.fromString(type), version == 7 ? 2 : 1, 0, 0);\n                return 0;\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n                return -1;\n            }\n        } else if (cd != null) {"
            }
          ],
          "label": "No",
          "probability": 0.6005046963691711
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 1630,
              "startColumn": 54,
              "endLine": 1630,
              "endColumn": 58,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "            try {\n\n                if (type == null) {\n                    type = readTypeFromFile(new File(file));\n                }\n\n                if (type == null) {"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1641,
              "startColumn": 36,
              "endLine": 1641,
              "endColumn": 100,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "                ConfigHelper.fromYamlFile(file, CType.fromString(type), version == 7 ? 2 : 1, 0, 0);\n                return 0;\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n                return -1;\n            }\n        } else if (cd != null) {"
            }
          ],
          "label": "No",
          "probability": 0.7129430770874023
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 1634,
              "startColumn": 75,
              "endLine": 1634,
              "endColumn": 79,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "                }\n\n                if (type == null) {\n                    System.out.println(\"ERR: Unable to read type from \" + file);\n                    return -1;\n                }\n"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1641,
              "startColumn": 36,
              "endLine": 1641,
              "endColumn": 100,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "                ConfigHelper.fromYamlFile(file, CType.fromString(type), version == 7 ? 2 : 1, 0, 0);\n                return 0;\n            } catch (Exception e) {\n                System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n                return -1;\n            }\n        } else if (cd != null) {"
            }
          ],
          "label": "No",
          "probability": 0.7124651670455933
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "SecurityAdmin.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 1667,
              "startColumn": 39,
              "endLine": 1667,
              "endColumn": 43,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "\n    private static boolean validateConfigFile(String file, CType<?> cType, int version) {\n        try {\n            ConfigHelper.fromYamlFile(file, cType, version == 7 ? 2 : 1, 0, 0);\n            System.out.println(file + \" OK\");\n            return true;\n        } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1671,
              "startColumn": 32,
              "endLine": 1671,
              "endColumn": 96,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            System.out.println(file + \" OK\");\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n            return false;\n        }\n    }"
            }
          ],
          "label": "No",
          "probability": 0.6665115356445312
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 1668,
              "startColumn": 32,
              "endLine": 1668,
              "endColumn": 36,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "    private static boolean validateConfigFile(String file, CType<?> cType, int version) {\n        try {\n            ConfigHelper.fromYamlFile(file, cType, version == 7 ? 2 : 1, 0, 0);\n            System.out.println(file + \" OK\");\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1671,
              "startColumn": 32,
              "endLine": 1671,
              "endColumn": 96,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            System.out.println(file + \" OK\");\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n            return false;\n        }\n    }"
            }
          ],
          "label": "No",
          "probability": 0.6289998292922974
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "file",
              "startLine": 1671,
              "startColumn": 48,
              "endLine": 1671,
              "endColumn": 52,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "String",
              "code": "            System.out.println(file + \" OK\");\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n            return false;\n        }\n    }"
            },
            {
              "step": 1,
              "variableName": "\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e",
              "startLine": 1671,
              "startColumn": 32,
              "endLine": 1671,
              "endColumn": 96,
              "uri": "security-2.19.1.0/src/main/java/org/opensearch/security/tools/SecurityAdmin.java",
              "type": "",
              "code": "            System.out.println(file + \" OK\");\n            return true;\n        } catch (Exception e) {\n            System.out.println(\"ERR: Seems \" + file + \" is not in \" + version + \" format: \" + e);\n            return false;\n        }\n    }"
            }
          ],
          "label": "No",
          "probability": 0.6920654773712158
        }
      ]
    }
  ]
}