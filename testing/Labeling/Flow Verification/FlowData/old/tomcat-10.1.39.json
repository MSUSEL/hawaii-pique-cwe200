{
  "209": [
    {
      "resultIndex": 0,
      "fileName": "RealmBase.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "passwordFile",
              "startLine": 1455,
              "startColumn": 13,
              "endLine": 1455,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "String",
              "code": "        if (keyLength > 0) {\n            IntrospectionUtils.setProperty(handler, \"keyLength\", Integer.toString(keyLength));\n        }\n        if (passwordFile != null) {\n            // If the file name is used, then don't parse the trailing arguments\n            argIndex = args.length;\n"
            },
            {
              "step": 1,
              "variableName": "\"cannot stat '\" + passwordFile + \"': No such file or directory\"",
              "startLine": 1471,
              "startColumn": 40,
              "endLine": 1471,
              "endColumn": 103,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "",
              "code": "                // A FileNotFound is the likely exception here and self-explanatory. Softly\n                // reporting it and exit 1 so that you can tell it failed from the command line.\n                if (e instanceof java.io.FileNotFoundException) {\n                    System.err.println(\"cannot stat '\" + passwordFile + \"': No such file or directory\");\n                    // Not sure if using an exit here is OK, but I wanted to return a code that\n                    // showed failure.\n                    System.exit(1);"
            }
          ],
          "label": "Yes",
          "probability": 0.2617133855819702
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "passwordFile",
              "startLine": 1460,
              "startColumn": 38,
              "endLine": 1460,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "String",
              "code": "            argIndex = args.length;\n\n            // Special case, allow for - filename to refer to stdin\n            try (BufferedReader br = passwordFile.equals(\"-\") ? new BufferedReader(new InputStreamReader(System.in)) :\n                    new BufferedReader(new FileReader(passwordFile))) {\n                String line;\n                while ((line = br.readLine()) != null) {"
            },
            {
              "step": 1,
              "variableName": "\"cannot stat '\" + passwordFile + \"': No such file or directory\"",
              "startLine": 1471,
              "startColumn": 40,
              "endLine": 1471,
              "endColumn": 103,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "",
              "code": "                // A FileNotFound is the likely exception here and self-explanatory. Softly\n                // reporting it and exit 1 so that you can tell it failed from the command line.\n                if (e instanceof java.io.FileNotFoundException) {\n                    System.err.println(\"cannot stat '\" + passwordFile + \"': No such file or directory\");\n                    // Not sure if using an exit here is OK, but I wanted to return a code that\n                    // showed failure.\n                    System.exit(1);"
            }
          ],
          "label": "Yes",
          "probability": 0.4090038239955902
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "passwordFile",
              "startLine": 1461,
              "startColumn": 55,
              "endLine": 1461,
              "endColumn": 67,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "String",
              "code": "\n            // Special case, allow for - filename to refer to stdin\n            try (BufferedReader br = passwordFile.equals(\"-\") ? new BufferedReader(new InputStreamReader(System.in)) :\n                    new BufferedReader(new FileReader(passwordFile))) {\n                String line;\n                while ((line = br.readLine()) != null) {\n                    // Mutate each line in the file, or stdin"
            },
            {
              "step": 1,
              "variableName": "\"cannot stat '\" + passwordFile + \"': No such file or directory\"",
              "startLine": 1471,
              "startColumn": 40,
              "endLine": 1471,
              "endColumn": 103,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "",
              "code": "                // A FileNotFound is the likely exception here and self-explanatory. Softly\n                // reporting it and exit 1 so that you can tell it failed from the command line.\n                if (e instanceof java.io.FileNotFoundException) {\n                    System.err.println(\"cannot stat '\" + passwordFile + \"': No such file or directory\");\n                    // Not sure if using an exit here is OK, but I wanted to return a code that\n                    // showed failure.\n                    System.exit(1);"
            }
          ],
          "label": "Yes",
          "probability": 0.3669063448905945
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "passwordFile",
              "startLine": 1471,
              "startColumn": 58,
              "endLine": 1471,
              "endColumn": 70,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "String",
              "code": "                // A FileNotFound is the likely exception here and self-explanatory. Softly\n                // reporting it and exit 1 so that you can tell it failed from the command line.\n                if (e instanceof java.io.FileNotFoundException) {\n                    System.err.println(\"cannot stat '\" + passwordFile + \"': No such file or directory\");\n                    // Not sure if using an exit here is OK, but I wanted to return a code that\n                    // showed failure.\n                    System.exit(1);"
            },
            {
              "step": 1,
              "variableName": "\"cannot stat '\" + passwordFile + \"': No such file or directory\"",
              "startLine": 1471,
              "startColumn": 40,
              "endLine": 1471,
              "endColumn": 103,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/RealmBase.java",
              "type": "",
              "code": "                // A FileNotFound is the likely exception here and self-explanatory. Softly\n                // reporting it and exit 1 so that you can tell it failed from the command line.\n                if (e instanceof java.io.FileNotFoundException) {\n                    System.err.println(\"cannot stat '\" + passwordFile + \"': No such file or directory\");\n                    // Not sure if using an exit here is OK, but I wanted to return a code that\n                    // showed failure.\n                    System.exit(1);"
            }
          ],
          "label": "Yes",
          "probability": 0.3849943280220032
        }
      ]
    }
  ],
  "214": [
    {
      "resultIndex": 1,
      "fileName": "SSIExec.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "remotePort",
              "startLine": 1203,
              "startColumn": 13,
              "endLine": 1203,
              "endColumn": 23,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "Number",
              "code": "\n    @Override\n    public int getRemotePort() {\n        if (remotePort == -1) {\n            coyoteRequest.action(ActionCode.REQ_REMOTEPORT_ATTRIBUTE, coyoteRequest);\n            remotePort = coyoteRequest.getRemotePort();\n        }"
            },
            {
              "step": 1,
              "variableName": "remotePort",
              "startLine": 1207,
              "startColumn": 16,
              "endLine": 1207,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "Number",
              "code": "            coyoteRequest.action(ActionCode.REQ_REMOTEPORT_ATTRIBUTE, coyoteRequest);\n            remotePort = coyoteRequest.getRemotePort();\n        }\n        return remotePort;\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "req.getRemotePort()",
              "startLine": 280,
              "startColumn": 43,
              "endLine": 280,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "Number",
              "code": "            } else if (nameParts[1].equals(\"IDENT\")) {\n                // Not implemented\n            } else if (nameParts[1].equals(\"PORT\")) {\n                retVal = Integer.toString(req.getRemotePort());\n            } else if (nameParts[1].equals(\"USER\")) {\n                retVal = req.getRemoteUser();\n            }"
            },
            {
              "step": 3,
              "variableName": "retVal",
              "startLine": 327,
              "startColumn": 16,
              "endLine": 327,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (requiredParts != nameParts.length) {\n            return null;\n        }\n        return retVal;\n    }\n\n    @Override"
            },
            {
              "step": 4,
              "variableName": "getCGIVariable(name)",
              "startLine": 149,
              "startColumn": 22,
              "endLine": 149,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (object != null) {\n            retVal = object.toString();\n        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }"
            },
            {
              "step": 5,
              "variableName": "retVal",
              "startLine": 151,
              "startColumn": 16,
              "endLine": 151,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }\n\n"
            },
            {
              "step": 6,
              "variableName": "ssiExternalResolver.getVariableValue(variableName)",
              "startLine": 168,
              "startColumn": 29,
              "endLine": 168,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "        String variableValue = null;\n        if (!isNameReserved(lowerCaseVariableName)) {\n            // Try getting it externally first, if it fails, try getting the 'built-in' value\n            variableValue = ssiExternalResolver.getVariableValue(variableName);\n            if (variableValue == null) {\n                variableName = variableName.toUpperCase(Locale.ENGLISH);\n                variableValue = ssiExternalResolver.getVariableValue(className + \".\" + variableName);"
            },
            {
              "step": 7,
              "variableName": "variableValue",
              "startLine": 177,
              "startColumn": 16,
              "endLine": 177,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                variableValue = encode(variableValue, encoding);\n            }\n        }\n        return variableValue;\n    }\n\n"
            },
            {
              "step": 8,
              "variableName": "getVariableValue(variableName, ENCODING_NONE)",
              "startLine": 152,
              "startColumn": 16,
              "endLine": 152,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "\n\n    public String getVariableValue(String variableName) {\n        return getVariableValue(variableName, ENCODING_NONE);\n    }\n\n"
            },
            {
              "step": 9,
              "variableName": "getVariableValue(varName)",
              "startLine": 254,
              "startColumn": 28,
              "endLine": 254,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            }\n            // We should now have enough to extract the var name\n            String varName = sb.substring(nameStart, nameEnd);\n            String value = getVariableValue(varName);\n            if (value == null) {\n                value = \"\";\n            }"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 259,
              "startColumn": 36,
              "endLine": 259,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 11,
              "variableName": "sb",
              "startLine": 259,
              "startColumn": 13,
              "endLine": 259,
              "endColumn": 15,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 12,
              "variableName": "sb",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 18,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 13,
              "variableName": "sb.toString()",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 14,
              "variableName": "ssiMediator.substituteVariables(paramValue)",
              "startLine": 50,
              "startColumn": 35,
              "endLine": 50,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "        String configErrMsg = ssiMediator.getConfigErrMsg();\n        String paramName = paramNames[0];\n        String paramValue = paramValues[0];\n        String substitutedValue = ssiMediator.substituteVariables(paramValue);\n        if (paramName.equalsIgnoreCase(\"cgi\")) {\n            lastModified = ssiInclude.process(ssiMediator, \"include\", new String[] { \"virtual\" },\n                    new String[] { substitutedValue }, writer);"
            },
            {
              "step": 15,
              "variableName": "substitutedValue",
              "startLine": 58,
              "startColumn": 58,
              "endLine": 58,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 16,
              "variableName": "new StringTokenizer(substitutedValue)",
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 17,
              "variableName": "st",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 18,
              "variableName": "st.nextToken()",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 19,
              "variableName": "cmdArray",
              "startLine": 61,
              "startColumn": 21,
              "endLine": 61,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String[] [[]] : String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 20,
              "variableName": "cmdArray",
              "startLine": 63,
              "startColumn": 40,
              "endLine": 63,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "",
              "code": "                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;\n                char[] buf = new char[BUFFER_SIZE];\n                try (BufferedReader stdOutReader = new BufferedReader(new InputStreamReader(proc.getInputStream()));"
            }
          ],
          "label": "No",
          "probability": 0.34870681166648865
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "remotePort",
              "startLine": 1207,
              "startColumn": 16,
              "endLine": 1207,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "Number",
              "code": "            coyoteRequest.action(ActionCode.REQ_REMOTEPORT_ATTRIBUTE, coyoteRequest);\n            remotePort = coyoteRequest.getRemotePort();\n        }\n        return remotePort;\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "req.getRemotePort()",
              "startLine": 280,
              "startColumn": 43,
              "endLine": 280,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "Number",
              "code": "            } else if (nameParts[1].equals(\"IDENT\")) {\n                // Not implemented\n            } else if (nameParts[1].equals(\"PORT\")) {\n                retVal = Integer.toString(req.getRemotePort());\n            } else if (nameParts[1].equals(\"USER\")) {\n                retVal = req.getRemoteUser();\n            }"
            },
            {
              "step": 2,
              "variableName": "retVal",
              "startLine": 327,
              "startColumn": 16,
              "endLine": 327,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (requiredParts != nameParts.length) {\n            return null;\n        }\n        return retVal;\n    }\n\n    @Override"
            },
            {
              "step": 3,
              "variableName": "getCGIVariable(name)",
              "startLine": 149,
              "startColumn": 22,
              "endLine": 149,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (object != null) {\n            retVal = object.toString();\n        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }"
            },
            {
              "step": 4,
              "variableName": "retVal",
              "startLine": 151,
              "startColumn": 16,
              "endLine": 151,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }\n\n"
            },
            {
              "step": 5,
              "variableName": "ssiExternalResolver.getVariableValue(variableName)",
              "startLine": 168,
              "startColumn": 29,
              "endLine": 168,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "        String variableValue = null;\n        if (!isNameReserved(lowerCaseVariableName)) {\n            // Try getting it externally first, if it fails, try getting the 'built-in' value\n            variableValue = ssiExternalResolver.getVariableValue(variableName);\n            if (variableValue == null) {\n                variableName = variableName.toUpperCase(Locale.ENGLISH);\n                variableValue = ssiExternalResolver.getVariableValue(className + \".\" + variableName);"
            },
            {
              "step": 6,
              "variableName": "variableValue",
              "startLine": 177,
              "startColumn": 16,
              "endLine": 177,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                variableValue = encode(variableValue, encoding);\n            }\n        }\n        return variableValue;\n    }\n\n"
            },
            {
              "step": 7,
              "variableName": "getVariableValue(variableName, ENCODING_NONE)",
              "startLine": 152,
              "startColumn": 16,
              "endLine": 152,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "\n\n    public String getVariableValue(String variableName) {\n        return getVariableValue(variableName, ENCODING_NONE);\n    }\n\n"
            },
            {
              "step": 8,
              "variableName": "getVariableValue(varName)",
              "startLine": 254,
              "startColumn": 28,
              "endLine": 254,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            }\n            // We should now have enough to extract the var name\n            String varName = sb.substring(nameStart, nameEnd);\n            String value = getVariableValue(varName);\n            if (value == null) {\n                value = \"\";\n            }"
            },
            {
              "step": 9,
              "variableName": "value",
              "startLine": 259,
              "startColumn": 36,
              "endLine": 259,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 10,
              "variableName": "sb",
              "startLine": 259,
              "startColumn": 13,
              "endLine": 259,
              "endColumn": 15,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 11,
              "variableName": "sb",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 18,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 12,
              "variableName": "sb.toString()",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 13,
              "variableName": "ssiMediator.substituteVariables(paramValue)",
              "startLine": 50,
              "startColumn": 35,
              "endLine": 50,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "        String configErrMsg = ssiMediator.getConfigErrMsg();\n        String paramName = paramNames[0];\n        String paramValue = paramValues[0];\n        String substitutedValue = ssiMediator.substituteVariables(paramValue);\n        if (paramName.equalsIgnoreCase(\"cgi\")) {\n            lastModified = ssiInclude.process(ssiMediator, \"include\", new String[] { \"virtual\" },\n                    new String[] { substitutedValue }, writer);"
            },
            {
              "step": 14,
              "variableName": "substitutedValue",
              "startLine": 58,
              "startColumn": 58,
              "endLine": 58,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 15,
              "variableName": "new StringTokenizer(substitutedValue)",
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 16,
              "variableName": "st",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 17,
              "variableName": "st.nextToken()",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 18,
              "variableName": "cmdArray",
              "startLine": 61,
              "startColumn": 21,
              "endLine": 61,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String[] [[]] : String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 19,
              "variableName": "cmdArray",
              "startLine": 63,
              "startColumn": 40,
              "endLine": 63,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "",
              "code": "                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;\n                char[] buf = new char[BUFFER_SIZE];\n                try (BufferedReader stdOutReader = new BufferedReader(new InputStreamReader(proc.getInputStream()));"
            }
          ],
          "label": "No",
          "probability": 0.4282521903514862
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.remoteAddr",
              "startLine": 567,
              "startColumn": 20,
              "endLine": 567,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/filters/RemoteIpFilter.java",
              "type": "String",
              "code": "\n        @Override\n        public String getRemoteAddr() {\n            return this.remoteAddr;\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "req.getRemoteAddr()",
              "startLine": 274,
              "startColumn": 26,
              "endLine": 274,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "            }\n        } else if (nameParts[0].equals(\"REMOTE\")) {\n            if (nameParts[1].equals(\"ADDR\")) {\n                retVal = req.getRemoteAddr();\n            } else if (nameParts[1].equals(\"HOST\")) {\n                retVal = req.getRemoteHost();\n            } else if (nameParts[1].equals(\"IDENT\")) {"
            },
            {
              "step": 2,
              "variableName": "retVal",
              "startLine": 327,
              "startColumn": 16,
              "endLine": 327,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (requiredParts != nameParts.length) {\n            return null;\n        }\n        return retVal;\n    }\n\n    @Override"
            },
            {
              "step": 3,
              "variableName": "getCGIVariable(name)",
              "startLine": 149,
              "startColumn": 22,
              "endLine": 149,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (object != null) {\n            retVal = object.toString();\n        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }"
            },
            {
              "step": 4,
              "variableName": "retVal",
              "startLine": 151,
              "startColumn": 16,
              "endLine": 151,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }\n\n"
            },
            {
              "step": 5,
              "variableName": "ssiExternalResolver.getVariableValue(variableName)",
              "startLine": 168,
              "startColumn": 29,
              "endLine": 168,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "        String variableValue = null;\n        if (!isNameReserved(lowerCaseVariableName)) {\n            // Try getting it externally first, if it fails, try getting the 'built-in' value\n            variableValue = ssiExternalResolver.getVariableValue(variableName);\n            if (variableValue == null) {\n                variableName = variableName.toUpperCase(Locale.ENGLISH);\n                variableValue = ssiExternalResolver.getVariableValue(className + \".\" + variableName);"
            },
            {
              "step": 6,
              "variableName": "variableValue",
              "startLine": 177,
              "startColumn": 16,
              "endLine": 177,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                variableValue = encode(variableValue, encoding);\n            }\n        }\n        return variableValue;\n    }\n\n"
            },
            {
              "step": 7,
              "variableName": "getVariableValue(variableName, ENCODING_NONE)",
              "startLine": 152,
              "startColumn": 16,
              "endLine": 152,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "\n\n    public String getVariableValue(String variableName) {\n        return getVariableValue(variableName, ENCODING_NONE);\n    }\n\n"
            },
            {
              "step": 8,
              "variableName": "getVariableValue(varName)",
              "startLine": 254,
              "startColumn": 28,
              "endLine": 254,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            }\n            // We should now have enough to extract the var name\n            String varName = sb.substring(nameStart, nameEnd);\n            String value = getVariableValue(varName);\n            if (value == null) {\n                value = \"\";\n            }"
            },
            {
              "step": 9,
              "variableName": "value",
              "startLine": 259,
              "startColumn": 36,
              "endLine": 259,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 10,
              "variableName": "sb",
              "startLine": 259,
              "startColumn": 13,
              "endLine": 259,
              "endColumn": 15,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 11,
              "variableName": "sb",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 18,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 12,
              "variableName": "sb.toString()",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 13,
              "variableName": "ssiMediator.substituteVariables(paramValue)",
              "startLine": 50,
              "startColumn": 35,
              "endLine": 50,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "        String configErrMsg = ssiMediator.getConfigErrMsg();\n        String paramName = paramNames[0];\n        String paramValue = paramValues[0];\n        String substitutedValue = ssiMediator.substituteVariables(paramValue);\n        if (paramName.equalsIgnoreCase(\"cgi\")) {\n            lastModified = ssiInclude.process(ssiMediator, \"include\", new String[] { \"virtual\" },\n                    new String[] { substitutedValue }, writer);"
            },
            {
              "step": 14,
              "variableName": "substitutedValue",
              "startLine": 58,
              "startColumn": 58,
              "endLine": 58,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 15,
              "variableName": "new StringTokenizer(substitutedValue)",
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 16,
              "variableName": "st",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 17,
              "variableName": "st.nextToken()",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 18,
              "variableName": "cmdArray",
              "startLine": 61,
              "startColumn": 21,
              "endLine": 61,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String[] [[]] : String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 19,
              "variableName": "cmdArray",
              "startLine": 63,
              "startColumn": 40,
              "endLine": 63,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "",
              "code": "                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;\n                char[] buf = new char[BUFFER_SIZE];\n                try (BufferedReader stdOutReader = new BufferedReader(new InputStreamReader(proc.getInputStream()));"
            }
          ],
          "label": "No",
          "probability": 0.49610522389411926
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.remoteHost",
              "startLine": 572,
              "startColumn": 20,
              "endLine": 572,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/filters/RemoteIpFilter.java",
              "type": "String",
              "code": "\n        @Override\n        public String getRemoteHost() {\n            return this.remoteHost;\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "req.getRemoteHost()",
              "startLine": 276,
              "startColumn": 26,
              "endLine": 276,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "            if (nameParts[1].equals(\"ADDR\")) {\n                retVal = req.getRemoteAddr();\n            } else if (nameParts[1].equals(\"HOST\")) {\n                retVal = req.getRemoteHost();\n            } else if (nameParts[1].equals(\"IDENT\")) {\n                // Not implemented\n            } else if (nameParts[1].equals(\"PORT\")) {"
            },
            {
              "step": 2,
              "variableName": "retVal",
              "startLine": 327,
              "startColumn": 16,
              "endLine": 327,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (requiredParts != nameParts.length) {\n            return null;\n        }\n        return retVal;\n    }\n\n    @Override"
            },
            {
              "step": 3,
              "variableName": "getCGIVariable(name)",
              "startLine": 149,
              "startColumn": 22,
              "endLine": 149,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        if (object != null) {\n            retVal = object.toString();\n        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }"
            },
            {
              "step": 4,
              "variableName": "retVal",
              "startLine": 151,
              "startColumn": 16,
              "endLine": 151,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIServletExternalResolver.java",
              "type": "String",
              "code": "        } else {\n            retVal = getCGIVariable(name);\n        }\n        return retVal;\n    }\n\n"
            },
            {
              "step": 5,
              "variableName": "ssiExternalResolver.getVariableValue(variableName)",
              "startLine": 168,
              "startColumn": 29,
              "endLine": 168,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "        String variableValue = null;\n        if (!isNameReserved(lowerCaseVariableName)) {\n            // Try getting it externally first, if it fails, try getting the 'built-in' value\n            variableValue = ssiExternalResolver.getVariableValue(variableName);\n            if (variableValue == null) {\n                variableName = variableName.toUpperCase(Locale.ENGLISH);\n                variableValue = ssiExternalResolver.getVariableValue(className + \".\" + variableName);"
            },
            {
              "step": 6,
              "variableName": "variableValue",
              "startLine": 177,
              "startColumn": 16,
              "endLine": 177,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                variableValue = encode(variableValue, encoding);\n            }\n        }\n        return variableValue;\n    }\n\n"
            },
            {
              "step": 7,
              "variableName": "getVariableValue(variableName, ENCODING_NONE)",
              "startLine": 152,
              "startColumn": 16,
              "endLine": 152,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "\n\n    public String getVariableValue(String variableName) {\n        return getVariableValue(variableName, ENCODING_NONE);\n    }\n\n"
            },
            {
              "step": 8,
              "variableName": "getVariableValue(varName)",
              "startLine": 254,
              "startColumn": 28,
              "endLine": 254,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            }\n            // We should now have enough to extract the var name\n            String varName = sb.substring(nameStart, nameEnd);\n            String value = getVariableValue(varName);\n            if (value == null) {\n                value = \"\";\n            }"
            },
            {
              "step": 9,
              "variableName": "value",
              "startLine": 259,
              "startColumn": 36,
              "endLine": 259,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 10,
              "variableName": "sb",
              "startLine": 259,
              "startColumn": 13,
              "endLine": 259,
              "endColumn": 15,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "                value = \"\";\n            }\n            // Replace the var name with its value\n            sb.replace(start, end, value);\n            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }"
            },
            {
              "step": 11,
              "variableName": "sb",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 18,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "StringBuilder",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 12,
              "variableName": "sb.toString()",
              "startLine": 263,
              "startColumn": 16,
              "endLine": 263,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIMediator.java",
              "type": "String",
              "code": "            // Start searching for the next $ after the value that was just substituted.\n            i = start + value.length();\n        }\n        return sb.toString();\n    }\n\n"
            },
            {
              "step": 13,
              "variableName": "ssiMediator.substituteVariables(paramValue)",
              "startLine": 50,
              "startColumn": 35,
              "endLine": 50,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "        String configErrMsg = ssiMediator.getConfigErrMsg();\n        String paramName = paramNames[0];\n        String paramValue = paramValues[0];\n        String substitutedValue = ssiMediator.substituteVariables(paramValue);\n        if (paramName.equalsIgnoreCase(\"cgi\")) {\n            lastModified = ssiInclude.process(ssiMediator, \"include\", new String[] { \"virtual\" },\n                    new String[] { substitutedValue }, writer);"
            },
            {
              "step": 14,
              "variableName": "substitutedValue",
              "startLine": 58,
              "startColumn": 58,
              "endLine": 58,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 15,
              "variableName": "new StringTokenizer(substitutedValue)",
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "            boolean foundProgram = false;\n            try {\n                Runtime rt = Runtime.getRuntime();\n                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();"
            },
            {
              "step": 16,
              "variableName": "st",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "StringTokenizer",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 17,
              "variableName": "st.nextToken()",
              "startLine": 61,
              "startColumn": 35,
              "endLine": 61,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 18,
              "variableName": "cmdArray",
              "startLine": 61,
              "startColumn": 21,
              "endLine": 61,
              "endColumn": 29,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "String[] [[]] : String",
              "code": "                StringTokenizer st = new StringTokenizer(substitutedValue);\n                String[] cmdArray = new String[st.countTokens()];\n                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;"
            },
            {
              "step": 19,
              "variableName": "cmdArray",
              "startLine": 63,
              "startColumn": 40,
              "endLine": 63,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ssi/SSIExec.java",
              "type": "",
              "code": "                for (int i = 0; i < cmdArray.length; i++) {\n                    cmdArray[i] = st.nextToken();\n                }\n                Process proc = rt.exec(cmdArray);\n                foundProgram = true;\n                char[] buf = new char[BUFFER_SIZE];\n                try (BufferedReader stdOutReader = new BufferedReader(new InputStreamReader(proc.getInputStream()));"
            }
          ],
          "label": "No",
          "probability": 0.5863516330718994
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 2,
      "fileName": "ApplicationContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 6,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 7,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 8,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 9,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 11,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 13,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 14,
              "variableName": "event.getName()",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 15,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 16,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 17,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            },
            {
              "step": 18,
              "variableName": "String message",
              "startLine": 569,
              "startColumn": 21,
              "endLine": 569,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n"
            },
            {
              "step": 19,
              "variableName": "message",
              "startLine": 570,
              "startColumn": 34,
              "endLine": 570,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "",
              "code": "\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n\n"
            }
          ],
          "label": "No",
          "probability": 0.13996097445487976
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 164,
              "startColumn": 34,
              "endLine": 164,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 176,
              "startColumn": 36,
              "endLine": 176,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 9,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 11,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 13,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 14,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 15,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "event.getName()",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 17,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 18,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 19,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            },
            {
              "step": 20,
              "variableName": "String msg",
              "startLine": 231,
              "startColumn": 21,
              "endLine": 231,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String msg) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {"
            },
            {
              "step": 21,
              "variableName": "msg",
              "startLine": 235,
              "startColumn": 25,
              "endLine": 235,
              "endColumn": 28,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "String",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {\n            context.log(msg);\n        }\n    }\n"
            },
            {
              "step": 22,
              "variableName": "String message",
              "startLine": 569,
              "startColumn": 21,
              "endLine": 569,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n"
            },
            {
              "step": 23,
              "variableName": "message",
              "startLine": 570,
              "startColumn": 34,
              "endLine": 570,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "",
              "code": "\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n\n"
            }
          ],
          "label": "No",
          "probability": 0.13996097445487976
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 27,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 34,
              "variableName": "String message",
              "startLine": 151,
              "startColumn": 22,
              "endLine": 151,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "     * @param message\n     *            Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);"
            },
            {
              "step": 35,
              "variableName": "\"SessionListener: \" + message",
              "startLine": 154,
              "startColumn": 25,
              "endLine": 154,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);\n        } else {\n            System.out.println(\"SessionListener: \" + message);\n        }"
            },
            {
              "step": 36,
              "variableName": "String message",
              "startLine": 569,
              "startColumn": 21,
              "endLine": 569,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n"
            },
            {
              "step": 37,
              "variableName": "message",
              "startLine": 570,
              "startColumn": 34,
              "endLine": 570,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "",
              "code": "\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n\n"
            }
          ],
          "label": "No",
          "probability": 0.4565611183643341
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 24,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 25,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 31,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 32,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 33,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 34,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 36,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "event.getValue()",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 40,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 41,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 42,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            },
            {
              "step": 43,
              "variableName": "String message",
              "startLine": 569,
              "startColumn": 21,
              "endLine": 569,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n"
            },
            {
              "step": 44,
              "variableName": "message",
              "startLine": 570,
              "startColumn": 34,
              "endLine": 570,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "",
              "code": "\n    @Override\n    public void log(String message) {\n        context.getLogger().info(message);\n    }\n\n"
            }
          ],
          "label": "No",
          "probability": 0.4565611183643341
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "ApplicationContextFacade.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 6,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 7,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 8,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 9,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 11,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 13,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 14,
              "variableName": "event.getName()",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 15,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 16,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 17,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            },
            {
              "step": 18,
              "variableName": "String msg",
              "startLine": 231,
              "startColumn": 21,
              "endLine": 231,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String msg) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {"
            },
            {
              "step": 19,
              "variableName": "msg",
              "startLine": 235,
              "startColumn": 25,
              "endLine": 235,
              "endColumn": 28,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {\n            context.log(msg);\n        }\n    }\n"
            }
          ],
          "label": "No",
          "probability": 0.12028362601995468
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 164,
              "startColumn": 34,
              "endLine": 164,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 176,
              "startColumn": 36,
              "endLine": 176,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 9,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 11,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 13,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 14,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 15,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "event.getName()",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 17,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 18,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 19,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            },
            {
              "step": 20,
              "variableName": "String msg",
              "startLine": 231,
              "startColumn": 21,
              "endLine": 231,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String msg) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {"
            },
            {
              "step": 21,
              "variableName": "msg",
              "startLine": 235,
              "startColumn": 25,
              "endLine": 235,
              "endColumn": 28,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {\n            context.log(msg);\n        }\n    }\n"
            }
          ],
          "label": "No",
          "probability": 0.12028362601995468
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 27,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 34,
              "variableName": "String message",
              "startLine": 151,
              "startColumn": 22,
              "endLine": 151,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "     * @param message\n     *            Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);"
            },
            {
              "step": 35,
              "variableName": "\"SessionListener: \" + message",
              "startLine": 154,
              "startColumn": 25,
              "endLine": 154,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);\n        } else {\n            System.out.println(\"SessionListener: \" + message);\n        }"
            },
            {
              "step": 36,
              "variableName": "String msg",
              "startLine": 231,
              "startColumn": 21,
              "endLine": 231,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String msg) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {"
            },
            {
              "step": 37,
              "variableName": "msg",
              "startLine": 235,
              "startColumn": 25,
              "endLine": 235,
              "endColumn": 28,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {\n            context.log(msg);\n        }\n    }\n"
            }
          ],
          "label": "No",
          "probability": 0.28258195519447327
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 24,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 25,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 31,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 32,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 33,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 34,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 36,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "event.getValue()",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 40,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 41,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 42,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            },
            {
              "step": 43,
              "variableName": "String msg",
              "startLine": 231,
              "startColumn": 21,
              "endLine": 231,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void log(String msg) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {"
            },
            {
              "step": 44,
              "variableName": "msg",
              "startLine": 235,
              "startColumn": 25,
              "endLine": 235,
              "endColumn": 28,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"log\", new Object[] { msg });\n        } else {\n            context.log(msg);\n        }\n    }\n"
            }
          ],
          "label": "No",
          "probability": 0.28258195519447327
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "ConnectionFactoryFactory.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Constants.KEY_PASSWORD",
              "startLine": 57,
              "startColumn": 92,
              "endLine": 57,
              "endColumn": 114,
              "uri": "tomcat-10.1.39/java/org/apache/tomcat/dbcp/dbcp2/ConnectionFactoryFactory.java",
              "type": "String",
              "code": "        if (pwd != null) {\n            connectionProperties.put(Constants.KEY_PASSWORD, pwd);\n        } else {\n            basicDataSource.log(String.format(\"DBCP DataSource configured without a '%s'\", Constants.KEY_PASSWORD));\n        }\n        final String connectionFactoryClassName = basicDataSource.getConnectionFactoryClassName();\n        if (connectionFactoryClassName != null) {"
            },
            {
              "step": 1,
              "variableName": "String.format(\"DBCP DataSource configured without a '%s'\", Constants.KEY_PASSWORD)",
              "startLine": 57,
              "startColumn": 33,
              "endLine": 57,
              "endColumn": 115,
              "uri": "tomcat-10.1.39/java/org/apache/tomcat/dbcp/dbcp2/ConnectionFactoryFactory.java",
              "type": "Object[] [[]] : String",
              "code": "        if (pwd != null) {\n            connectionProperties.put(Constants.KEY_PASSWORD, pwd);\n        } else {\n            basicDataSource.log(String.format(\"DBCP DataSource configured without a '%s'\", Constants.KEY_PASSWORD));\n        }\n        final String connectionFactoryClassName = basicDataSource.getConnectionFactoryClassName();\n        if (connectionFactoryClassName != null) {"
            },
            {
              "step": 2,
              "variableName": "String.format(\"DBCP DataSource configured without a '%s'\", Constants.KEY_PASSWORD)",
              "startLine": 57,
              "startColumn": 33,
              "endLine": 57,
              "endColumn": 115,
              "uri": "tomcat-10.1.39/java/org/apache/tomcat/dbcp/dbcp2/ConnectionFactoryFactory.java",
              "type": "",
              "code": "        if (pwd != null) {\n            connectionProperties.put(Constants.KEY_PASSWORD, pwd);\n        } else {\n            basicDataSource.log(String.format(\"DBCP DataSource configured without a '%s'\", Constants.KEY_PASSWORD));\n        }\n        final String connectionFactoryClassName = basicDataSource.getConnectionFactoryClassName();\n        if (connectionFactoryClassName != null) {"
            }
          ],
          "label": "No",
          "probability": 0.21276672184467316
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "ContextListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 6,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 7,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 8,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 9,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 11,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 13,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 14,
              "variableName": "event.getName()",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 15,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 164,
              "startColumn": 34,
              "endLine": 164,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 176,
              "startColumn": 36,
              "endLine": 176,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 9,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 11,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 13,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 14,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 15,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "event.getName()",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 17,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 17,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 18,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 27,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 60,
              "startColumn": 17,
              "endLine": 60,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 60,
              "startColumn": 17,
              "endLine": 60,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.49060752987861633
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 24,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 25,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 164,
              "startColumn": 47,
              "endLine": 164,
              "endColumn": 59,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "GSSCredential",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 176,
              "startColumn": 42,
              "endLine": 176,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "GSSCredential",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 30,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 34,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 36,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 37,
              "variableName": "event",
              "startLine": 60,
              "startColumn": 17,
              "endLine": 60,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 38,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 41,
              "variableName": "event.getValue()",
              "startLine": 60,
              "startColumn": 17,
              "endLine": 60,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 42,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.49060752987861633
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "ContextListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 628,
              "startColumn": 29,
              "endLine": 628,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n        // Null value is the same as removeAttribute()\n        if (value == null) {\n            removeAttribute(name);\n            return;\n        }\n"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 581,
              "startColumn": 33,
              "endLine": 581,
              "endColumn": 44,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void removeAttribute(String name) {\n\n        Object value = null;\n"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 600,
              "startColumn": 108,
              "endLine": 600,
              "endColumn": 112,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        if (listeners == null || listeners.length == 0) {\n            return;\n        }\n        ServletContextAttributeEvent event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        for (Object obj : listeners) {\n            if (!(obj instanceof ServletContextAttributeListener)) {\n                continue;"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 9,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 600,
              "startColumn": 46,
              "endLine": 600,
              "endColumn": 120,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        if (listeners == null || listeners.length == 0) {\n            return;\n        }\n        ServletContextAttributeEvent event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        for (Object obj : listeners) {\n            if (!(obj instanceof ServletContextAttributeListener)) {\n                continue;"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 608,
              "startColumn": 43,
              "endLine": 608,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            ServletContextAttributeListener listener = (ServletContextAttributeListener) obj;\n            try {\n                context.fireContainerEvent(\"beforeContextAttributeRemoved\", listener);\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterContextAttributeRemoved\", listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);"
            },
            {
              "step": 11,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 71,
              "startColumn": 34,
              "endLine": 71,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 73,
              "startColumn": 36,
              "endLine": 73,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 13,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 14,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 15,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "event.getName()",
              "startLine": 73,
              "startColumn": 36,
              "endLine": 73,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 17,
              "variableName": "\"attributeRemoved('\" + even",
              "startLine": 73,
              "startColumn": 13,
              "endLine": 74,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 164,
              "startColumn": 34,
              "endLine": 164,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 169,
              "startColumn": 33,
              "endLine": 169,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }\n            if (value == null) {\n                removeAttribute(name);\n                return;\n            }\n            if ((!getParent().getState().isAvailable()) ||"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 157,
              "startColumn": 37,
              "endLine": 157,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void removeAttribute(String name) {\n            tomcatAttributes.remove(name);\n            // do nothing\n            super.removeAttribute(name);"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 160,
              "startColumn": 35,
              "endLine": 160,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        public void removeAttribute(String name) {\n            tomcatAttributes.remove(name);\n            // do nothing\n            super.removeAttribute(name);\n        }\n\n        @Override"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 581,
              "startColumn": 33,
              "endLine": 581,
              "endColumn": 44,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void removeAttribute(String name) {\n\n        Object value = null;\n"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 600,
              "startColumn": 108,
              "endLine": 600,
              "endColumn": 112,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        if (listeners == null || listeners.length == 0) {\n            return;\n        }\n        ServletContextAttributeEvent event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        for (Object obj : listeners) {\n            if (!(obj instanceof ServletContextAttributeListener)) {\n                continue;"
            },
            {
              "step": 7,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 8,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 9,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 10,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 11,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 600,
              "startColumn": 46,
              "endLine": 600,
              "endColumn": 120,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        if (listeners == null || listeners.length == 0) {\n            return;\n        }\n        ServletContextAttributeEvent event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        for (Object obj : listeners) {\n            if (!(obj instanceof ServletContextAttributeListener)) {\n                continue;"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 608,
              "startColumn": 43,
              "endLine": 608,
              "endColumn": 48,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            ServletContextAttributeListener listener = (ServletContextAttributeListener) obj;\n            try {\n                context.fireContainerEvent(\"beforeContextAttributeRemoved\", listener);\n                listener.attributeRemoved(event);\n                context.fireContainerEvent(\"afterContextAttributeRemoved\", listener);\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);"
            },
            {
              "step": 13,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 71,
              "startColumn": 34,
              "endLine": 71,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 14,
              "variableName": "event",
              "startLine": 73,
              "startColumn": 36,
              "endLine": 73,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 15,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 16,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 17,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 18,
              "variableName": "event.getName()",
              "startLine": 73,
              "startColumn": 36,
              "endLine": 73,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 19,
              "variableName": "\"attributeRemoved('\" + even",
              "startLine": 73,
              "startColumn": 13,
              "endLine": 74,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeRemoved(ServletContextAttributeEvent event) {\n\n        log(\"attributeRemoved('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        }
      ]
    },
    {
      "resultIndex": 7,
      "fileName": "ContextListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 6,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 7,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 8,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 9,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 11,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 13,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 14,
              "variableName": "event.getName()",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 15,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 164,
              "startColumn": 34,
              "endLine": 164,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 176,
              "startColumn": 36,
              "endLine": 176,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 9,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 11,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 13,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 14,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 15,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "event.getName()",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 17,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 17,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 18,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 27,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.49060752987861633
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 24,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 25,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 164,
              "startColumn": 47,
              "endLine": 164,
              "endColumn": 59,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "GSSCredential",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 176,
              "startColumn": 42,
              "endLine": 176,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "GSSCredential",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 30,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 34,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 36,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 37,
              "variableName": "event",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 38,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 41,
              "variableName": "event.getValue()",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 42,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.49060752987861633
        }
      ]
    },
    {
      "resultIndex": 8,
      "fileName": "ContextListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 6,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 7,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 8,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 9,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 11,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 13,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 14,
              "variableName": "event.getName()",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 15,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 16,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 17,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "Globals.CREDENTIAL_HANDLER",
              "startLine": 4379,
              "startColumn": 42,
              "endLine": 4379,
              "endColumn": 68,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/StandardContext.java",
              "type": "String",
              "code": "                            return getRealmInternal().getCredentialHandler().mutate(inputCredentials);\n                        }\n                    };\n                    context.setAttribute(Globals.CREDENTIAL_HANDLER, safeHandler);\n                }\n\n                // Notify our interested LifecycleListeners"
            },
            {
              "step": 1,
              "variableName": "String name",
              "startLine": 164,
              "startColumn": 34,
              "endLine": 164,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 176,
              "startColumn": 36,
              "endLine": 176,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "String",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 620,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 648,
              "startColumn": 83,
              "endLine": 648,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 47,
              "startColumn": 64,
              "endLine": 47,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 49,
              "startColumn": 21,
              "endLine": 49,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 9,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, oldValue)",
              "startLine": 648,
              "startColumn": 21,
              "endLine": 648,
              "endColumn": 98,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "        }\n        ServletContextAttributeEvent event = null;\n        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }"
            },
            {
              "step": 10,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 11,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 12,
              "variableName": "event",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 13,
              "variableName": "getName",
              "startLine": 58,
              "startColumn": 19,
              "endLine": 58,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     *\n     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n"
            },
            {
              "step": 14,
              "variableName": "this",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [name] : String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 15,
              "variableName": "this.name",
              "startLine": 59,
              "startColumn": 16,
              "endLine": 59,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "String",
              "code": "     * @return The name of the attribute that changed\n     */\n    public String getName() {\n        return this.name;\n    }\n\n    /**"
            },
            {
              "step": 16,
              "variableName": "event.getName()",
              "startLine": 59,
              "startColumn": 34,
              "endLine": 59,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 17,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 18,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 19,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.1446448713541031
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 17,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 18,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 661,
              "startColumn": 48,
              "endLine": 661,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "            try {\n                if (replaced) {\n                    context.fireContainerEvent(\"beforeContextAttributeReplaced\", listener);\n                    listener.attributeReplaced(event);\n                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);"
            },
            {
              "step": 27,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 85,
              "startColumn": 35,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeReplaced('\" + eve",
              "startLine": 87,
              "startColumn": 13,
              "endLine": 88,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(ServletContextAttributeEvent event) {\n\n        log(\"attributeReplaced('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 34,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 35,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.49060752987861633
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 266,
              "startColumn": 44,
              "endLine": 266,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                break;\n\n            case APPLICATION_SCOPE:\n                context.setAttribute(name, o);\n                break;\n\n            default:"
            },
            {
              "step": 24,
              "variableName": "Object object",
              "startLine": 313,
              "startColumn": 43,
              "endLine": 313,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object object) {\n        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {"
            },
            {
              "step": 25,
              "variableName": "object",
              "startLine": 317,
              "startColumn": 40,
              "endLine": 317,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContextFacade.java",
              "type": "GSSCredential",
              "code": "        if (SecurityUtil.isPackageProtectionEnabled()) {\n            doPrivileged(\"setAttribute\", new Object[] { name, object });\n        } else {\n            context.setAttribute(name, object);\n        }\n    }\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 164,
              "startColumn": 47,
              "endLine": 164,
              "endColumn": 59,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "GSSCredential",
              "code": "        }\n\n        @Override\n        public void setAttribute(String name, Object value) {\n            if (name == null) {\n                throw new IllegalArgumentException(sm.getString(\"applicationContext.setAttribute.namenull\"));\n            }"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 176,
              "startColumn": 42,
              "endLine": 176,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/context/ReplicatedContext.java",
              "type": "GSSCredential",
              "code": "                    \"org.apache.jasper.runtime.JspApplicationContextImpl\".equals(name)) {\n                tomcatAttributes.put(name, value);\n            } else {\n                super.setAttribute(name, value);\n            }\n        }\n"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 620,
              "startColumn": 43,
              "endLine": 620,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        // Name cannot be null\n        if (name == null) {\n            throw new NullPointerException(sm.getString(\"applicationContext.setAttribute.namenull\"));"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 650,
              "startColumn": 89,
              "endLine": 650,
              "endColumn": 94,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 30,
              "variableName": "Object value",
              "startLine": 47,
              "startColumn": 77,
              "endLine": 47,
              "endColumn": 89,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "value",
              "startLine": 50,
              "startColumn": 22,
              "endLine": 50,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "this",
              "startLine": 50,
              "startColumn": 9,
              "endLine": 50,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "ServletContextAttributeEvent",
              "startLine": 47,
              "startColumn": 12,
              "endLine": 47,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param name   The name of the servlet context attribute\n     * @param value  The value of the servlet context attribute\n     */\n    public ServletContextAttributeEvent(ServletContext source, String name, Object value) {\n        super(source);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 34,
              "variableName": "new ServletContextAttributeEvent(context.getServletContext(), name, value)",
              "startLine": 650,
              "startColumn": 21,
              "endLine": 650,
              "endColumn": 95,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "        if (replaced) {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, oldValue);\n        } else {\n            event = new ServletContextAttributeEvent(context.getServletContext(), name, value);\n        }\n\n        for (Object obj : listeners) {"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 665,
              "startColumn": 45,
              "endLine": 665,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/core/ApplicationContext.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "                    context.fireContainerEvent(\"afterContextAttributeReplaced\", listener);\n                } else {\n                    context.fireContainerEvent(\"beforeContextAttributeAdded\", listener);\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterContextAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 36,
              "variableName": "ServletContextAttributeEvent event",
              "startLine": 57,
              "startColumn": 32,
              "endLine": 57,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     * @param event The servlet context attribute event\n     */\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");"
            },
            {
              "step": 37,
              "variableName": "event",
              "startLine": 60,
              "startColumn": 17,
              "endLine": 60,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 38,
              "variableName": "getValue",
              "startLine": 69,
              "startColumn": 19,
              "endLine": 69,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             value of the removed attribute. If the attribute was replaced, this is the old value of the\n     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "this",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "ServletContextAttributeEvent [value] : GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "this.value",
              "startLine": 70,
              "startColumn": 16,
              "endLine": 70,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletContextAttributeEvent.java",
              "type": "GSSCredential",
              "code": "     *             attribute.\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 41,
              "variableName": "event.getValue()",
              "startLine": 60,
              "startColumn": 17,
              "endLine": 60,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 42,
              "variableName": "\"attributeAdded('\" + event.",
              "startLine": 59,
              "startColumn": 13,
              "endLine": 60,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(ServletContextAttributeEvent event) {\n\n        log(\"attributeAdded('\" + event.getName() + \"', '\" +\n                event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 43,
              "variableName": "String message",
              "startLine": 129,
              "startColumn": 22,
              "endLine": 129,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "String",
              "code": "     *\n     * @param message Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);"
            },
            {
              "step": 44,
              "variableName": "\"ContextListener: \" + message",
              "startLine": 132,
              "startColumn": 25,
              "endLine": 132,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/ContextListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"ContextListener: \" + message);\n        } else {\n            System.out.println(\"ContextListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.49060752987861633
        }
      ]
    },
    {
      "resultIndex": 9,
      "fileName": "SessionListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 1072,
              "startColumn": 45,
              "endLine": 1072,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 27,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 54,
              "startColumn": 32,
              "endLine": 54,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeAdded('\" + event.getSession().getId() + \"', '\"",
              "startLine": 56,
              "startColumn": 13,
              "endLine": 57,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 24,
              "variableName": "Object value",
              "startLine": 626,
              "startColumn": 43,
              "endLine": 626,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true, true);\n    }\n"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 627,
              "startColumn": 28,
              "endLine": 627,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true, true);\n    }\n\n    public void setAttribute(String name, Object value, boolean notify, boolean addDeltaRequest) {"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 630,
              "startColumn": 43,
              "endLine": 630,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "        setAttribute(name, value, true, true);\n    }\n\n    public void setAttribute(String name, Object value, boolean notify, boolean addDeltaRequest) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 645,
              "startColumn": 38,
              "endLine": 645,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "\n        lockInternal();\n        try {\n            super.setAttribute(name, value, notify);\n            if (addDeltaRequest && !exclude(name, value)) {\n                deltaRequest.setAttribute(name, value);\n            }"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 1070,
              "startColumn": 81,
              "endLine": 1070,
              "endColumn": 86,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 30,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 34,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1070,
              "startColumn": 33,
              "endLine": 1070,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 1072,
              "startColumn": 45,
              "endLine": 1072,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 36,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 54,
              "startColumn": 32,
              "endLine": 54,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 37,
              "variableName": "event",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 38,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 41,
              "variableName": "event.getValue()",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 42,
              "variableName": "\"attributeAdded('\" + event.getSession().getId() + \"', '\"",
              "startLine": 56,
              "startColumn": 13,
              "endLine": 57,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return attributes.get(name);\n\n        case REQUEST_SCOPE:\n            return request.getAttribute(name);\n\n        case SESSION_SCOPE:\n            if (session == null) {"
            },
            {
              "step": 4,
              "variableName": "rootJspCtxt.getAttribute(name, REQUEST_SCOPE)",
              "startLine": 201,
              "startColumn": 17,
              "endLine": 201,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "\n        Object o = pageAttributes.get(name);\n        if (o == null) {\n            o = rootJspCtxt.getAttribute(name, REQUEST_SCOPE);\n            if (o == null) {\n                if (getSession() != null) {\n                    try {"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 217,
              "startColumn": 16,
              "endLine": 217,
              "endColumn": 17,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return o;\n    }\n\n    @Override"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "resolver.getValue(ctx, base, suffix)",
              "startLine": 161,
              "startColumn": 24,
              "endLine": 161,
              "endColumn": 60,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "                }\n\n                ctx.setPropertyResolved(false);\n                base = resolver.getValue(ctx, base, suffix);\n                i++;\n            }\n        }"
            },
            {
              "step": 9,
              "variableName": "base",
              "startLine": 168,
              "startColumn": 16,
              "endLine": 168,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", base, suffix));\n        }\n        return base;\n    }\n\n"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 14,
              "variableName": "Object value",
              "startLine": 154,
              "startColumn": 75,
              "endLine": 154,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        context.setPropertyResolved(false);\n        int sz = this.resolversSize;\n        for (int i = 0; i < sz; i++) {"
            },
            {
              "step": 15,
              "variableName": "value",
              "startLine": 158,
              "startColumn": 65,
              "endLine": 158,
              "endColumn": 70,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        context.setPropertyResolved(false);\n        int sz = this.resolversSize;\n        for (int i = 0; i < sz; i++) {\n            this.resolvers[i].setValue(context, base, property, value);\n            if (context.isPropertyResolved()) {\n                return;\n            }"
            },
            {
              "step": 16,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 17,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 173,
              "startColumn": 43,
              "endLine": 173,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(String name, Object value, int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 187,
              "startColumn": 44,
              "endLine": 187,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "                removeAttribute(name, PAGE_SCOPE);\n            }\n        } else {\n            rootJspCtxt.setAttribute(name, value, scope);\n        }\n    }\n"
            },
            {
              "step": 20,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 21,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 22,
              "variableName": "Object value",
              "startLine": 102,
              "startColumn": 43,
              "endLine": 102,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSessionFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        session.setAttribute(name, value);\n    }\n"
            },
            {
              "step": 23,
              "variableName": "value",
              "startLine": 103,
              "startColumn": 36,
              "endLine": 103,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSessionFacade.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        session.setAttribute(name, value);\n    }\n\n"
            },
            {
              "step": 24,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 31,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 32,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 33,
              "variableName": "event",
              "startLine": 1072,
              "startColumn": 45,
              "endLine": 1072,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 34,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 54,
              "startColumn": 32,
              "endLine": 54,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 36,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "event.getValue()",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 40,
              "variableName": "\"attributeAdded('\" + event.getSession().getId() + \"', '\"",
              "startLine": 56,
              "startColumn": 13,
              "endLine": 57,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 246,
              "startColumn": 16,
              "endLine": 246,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/RequestFacade.java",
              "type": "GSSCredential",
              "code": "    @Override\n    public Object getAttribute(String name) {\n        checkFacade();\n        return request.getAttribute(name);\n    }\n\n"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return attributes.get(name);\n\n        case REQUEST_SCOPE:\n            return request.getAttribute(name);\n\n        case SESSION_SCOPE:\n            if (session == null) {"
            },
            {
              "step": 5,
              "variableName": "rootJspCtxt.getAttribute(name, SESSION_SCOPE)",
              "startLine": 205,
              "startColumn": 29,
              "endLine": 205,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            if (o == null) {\n                if (getSession() != null) {\n                    try {\n                        o = rootJspCtxt.getAttribute(name, SESSION_SCOPE);\n                    } catch (IllegalStateException ise) {\n                        // Session has been invalidated.\n                        // Ignore and fall through to application scope."
            },
            {
              "step": 6,
              "variableName": "o",
              "startLine": 217,
              "startColumn": 16,
              "endLine": 217,
              "endColumn": 17,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return o;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 8,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "resolvers[i].getValue(context, base, property)",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        context.setPropertyResolved(false);\n        int sz = resolversSize;\n        for (int i = 0; i < sz; i++) {\n            Object result = resolvers[i].getValue(context, base, property);\n            if (context.isPropertyResolved()) {\n                return result;\n            }"
            },
            {
              "step": 10,
              "variableName": "result",
              "startLine": 111,
              "startColumn": 24,
              "endLine": 111,
              "endColumn": 30,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        for (int i = 0; i < sz; i++) {\n            Object result = resolvers[i].getValue(context, base, property);\n            if (context.isPropertyResolved()) {\n                return result;\n            }\n        }\n        return null;"
            },
            {
              "step": 11,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 12,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 13,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 15,
              "variableName": "Object value",
              "startLine": 53,
              "startColumn": 49,
              "endLine": 53,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstDeferredExpression.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        this.children[0].setValue(ctx, value);\n    }\n}"
            },
            {
              "step": 16,
              "variableName": "value",
              "startLine": 54,
              "startColumn": 40,
              "endLine": 54,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstDeferredExpression.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        this.children[0].setValue(ctx, value);\n    }\n}\n"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 21,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 22,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 23,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 24,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 25,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 26,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 27,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 28,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 29,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 32,
              "variableName": "event",
              "startLine": 1072,
              "startColumn": 45,
              "endLine": 1072,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 33,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 54,
              "startColumn": 32,
              "endLine": 54,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 34,
              "variableName": "event",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 35,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 36,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 37,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "event.getValue()",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 39,
              "variableName": "\"attributeAdded('\" + event.getSession().getId() + \"', '\"",
              "startLine": 56,
              "startColumn": 13,
              "endLine": 57,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        }
      ]
    },
    {
      "resultIndex": 10,
      "fileName": "SessionListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 27,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 24,
              "variableName": "Object value",
              "startLine": 626,
              "startColumn": 43,
              "endLine": 626,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true, true);\n    }\n"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 627,
              "startColumn": 28,
              "endLine": 627,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true, true);\n    }\n\n    public void setAttribute(String name, Object value, boolean notify, boolean addDeltaRequest) {"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 630,
              "startColumn": 43,
              "endLine": 630,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "        setAttribute(name, value, true, true);\n    }\n\n    public void setAttribute(String name, Object value, boolean notify, boolean addDeltaRequest) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 645,
              "startColumn": 38,
              "endLine": 645,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "\n        lockInternal();\n        try {\n            super.setAttribute(name, value, notify);\n            if (addDeltaRequest && !exclude(name, value)) {\n                deltaRequest.setAttribute(name, value);\n            }"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 1070,
              "startColumn": 81,
              "endLine": 1070,
              "endColumn": 86,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 30,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 34,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1070,
              "startColumn": 33,
              "endLine": 1070,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 36,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 37,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 38,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 41,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 42,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return attributes.get(name);\n\n        case REQUEST_SCOPE:\n            return request.getAttribute(name);\n\n        case SESSION_SCOPE:\n            if (session == null) {"
            },
            {
              "step": 4,
              "variableName": "rootJspCtxt.getAttribute(name, REQUEST_SCOPE)",
              "startLine": 201,
              "startColumn": 17,
              "endLine": 201,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "\n        Object o = pageAttributes.get(name);\n        if (o == null) {\n            o = rootJspCtxt.getAttribute(name, REQUEST_SCOPE);\n            if (o == null) {\n                if (getSession() != null) {\n                    try {"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 217,
              "startColumn": 16,
              "endLine": 217,
              "endColumn": 17,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return o;\n    }\n\n    @Override"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "resolver.getValue(ctx, base, suffix)",
              "startLine": 161,
              "startColumn": 24,
              "endLine": 161,
              "endColumn": 60,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "                }\n\n                ctx.setPropertyResolved(false);\n                base = resolver.getValue(ctx, base, suffix);\n                i++;\n            }\n        }"
            },
            {
              "step": 9,
              "variableName": "base",
              "startLine": 168,
              "startColumn": 16,
              "endLine": 168,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", base, suffix));\n        }\n        return base;\n    }\n\n"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 14,
              "variableName": "Object value",
              "startLine": 154,
              "startColumn": 75,
              "endLine": 154,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        context.setPropertyResolved(false);\n        int sz = this.resolversSize;\n        for (int i = 0; i < sz; i++) {"
            },
            {
              "step": 15,
              "variableName": "value",
              "startLine": 158,
              "startColumn": 65,
              "endLine": 158,
              "endColumn": 70,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        context.setPropertyResolved(false);\n        int sz = this.resolversSize;\n        for (int i = 0; i < sz; i++) {\n            this.resolvers[i].setValue(context, base, property, value);\n            if (context.isPropertyResolved()) {\n                return;\n            }"
            },
            {
              "step": 16,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 17,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 173,
              "startColumn": 43,
              "endLine": 173,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(String name, Object value, int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 187,
              "startColumn": 44,
              "endLine": 187,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "                removeAttribute(name, PAGE_SCOPE);\n            }\n        } else {\n            rootJspCtxt.setAttribute(name, value, scope);\n        }\n    }\n"
            },
            {
              "step": 20,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 21,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 22,
              "variableName": "Object value",
              "startLine": 102,
              "startColumn": 43,
              "endLine": 102,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSessionFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        session.setAttribute(name, value);\n    }\n"
            },
            {
              "step": 23,
              "variableName": "value",
              "startLine": 103,
              "startColumn": 36,
              "endLine": 103,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSessionFacade.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        session.setAttribute(name, value);\n    }\n\n"
            },
            {
              "step": 24,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 31,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 32,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 33,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 34,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 36,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 40,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 246,
              "startColumn": 16,
              "endLine": 246,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/RequestFacade.java",
              "type": "GSSCredential",
              "code": "    @Override\n    public Object getAttribute(String name) {\n        checkFacade();\n        return request.getAttribute(name);\n    }\n\n"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return attributes.get(name);\n\n        case REQUEST_SCOPE:\n            return request.getAttribute(name);\n\n        case SESSION_SCOPE:\n            if (session == null) {"
            },
            {
              "step": 5,
              "variableName": "rootJspCtxt.getAttribute(name, SESSION_SCOPE)",
              "startLine": 205,
              "startColumn": 29,
              "endLine": 205,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            if (o == null) {\n                if (getSession() != null) {\n                    try {\n                        o = rootJspCtxt.getAttribute(name, SESSION_SCOPE);\n                    } catch (IllegalStateException ise) {\n                        // Session has been invalidated.\n                        // Ignore and fall through to application scope."
            },
            {
              "step": 6,
              "variableName": "o",
              "startLine": 217,
              "startColumn": 16,
              "endLine": 217,
              "endColumn": 17,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return o;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 8,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "resolvers[i].getValue(context, base, property)",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        context.setPropertyResolved(false);\n        int sz = resolversSize;\n        for (int i = 0; i < sz; i++) {\n            Object result = resolvers[i].getValue(context, base, property);\n            if (context.isPropertyResolved()) {\n                return result;\n            }"
            },
            {
              "step": 10,
              "variableName": "result",
              "startLine": 111,
              "startColumn": 24,
              "endLine": 111,
              "endColumn": 30,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        for (int i = 0; i < sz; i++) {\n            Object result = resolvers[i].getValue(context, base, property);\n            if (context.isPropertyResolved()) {\n                return result;\n            }\n        }\n        return null;"
            },
            {
              "step": 11,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 12,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 13,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 15,
              "variableName": "Object value",
              "startLine": 53,
              "startColumn": 49,
              "endLine": 53,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstDeferredExpression.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        this.children[0].setValue(ctx, value);\n    }\n}"
            },
            {
              "step": 16,
              "variableName": "value",
              "startLine": 54,
              "startColumn": 40,
              "endLine": 54,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstDeferredExpression.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        this.children[0].setValue(ctx, value);\n    }\n}\n"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 21,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 22,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 23,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 24,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 25,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 26,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 27,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 28,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 29,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 32,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 33,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 34,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 35,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 36,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 37,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 39,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        }
      ]
    },
    {
      "resultIndex": 11,
      "fileName": "SessionListener.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 4,
              "variableName": "o",
              "startLine": 353,
              "startColumn": 20,
              "endLine": 353,
              "endColumn": 21,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }\n\n        if (session != null) {"
            },
            {
              "step": 5,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 8,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 9,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 33,
              "startColumn": 24,
              "endLine": 33,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 10,
              "variableName": "value",
              "startLine": 35,
              "startColumn": 35,
              "endLine": 35,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Object getValue(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return value;\n    }"
            },
            {
              "step": 11,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 12,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 13,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 15,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 16,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 21,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 22,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 25,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 26,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 27,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 28,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 29,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 32,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 33,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 34,
              "variableName": "String message",
              "startLine": 151,
              "startColumn": 22,
              "endLine": 151,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "     * @param message\n     *            Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);"
            },
            {
              "step": 35,
              "variableName": "\"SessionListener: \" + message",
              "startLine": 154,
              "startColumn": 25,
              "endLine": 154,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);\n        } else {\n            System.out.println(\"SessionListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "this.request.getAttribute(name)",
              "startLine": 83,
              "startColumn": 16,
              "endLine": 83,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/ServletRequestWrapper.java",
              "type": "GSSCredential",
              "code": "     */\n    @Override\n    public Object getAttribute(String name) {\n        return this.request.getAttribute(name);\n    }\n\n    /**"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 351,
              "startColumn": 13,
              "endLine": 351,
              "endColumn": 39,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return o;\n        }\n\n        o = request.getAttribute(name);\n        if (o != null) {\n            return o;\n        }"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 364,
              "startColumn": 24,
              "endLine": 364,
              "endColumn": 25,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                // Ignore and fall through to application scope.\n            }\n            if (o != null) {\n                return o;\n            }\n        }\n"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.image)",
              "startLine": 94,
              "startColumn": 22,
              "endLine": 94,
              "endColumn": 73,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            ctx.putContext(this.getClass(), Boolean.TRUE);\n        }\n        try {\n            result = ctx.getELResolver().getValue(ctx, null, this.image);\n        } finally {\n            // Always reset the flag to false so the optimisation is not applied\n            // inappropriately"
            },
            {
              "step": 9,
              "variableName": "result",
              "startLine": 102,
              "startColumn": 20,
              "endLine": 102,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "        }\n\n        if (ctx.isPropertyResolved()) {\n            return result;\n        }\n\n        // Import"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 185,
              "startColumn": 49,
              "endLine": 185,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        Target t = getTarget(ctx);\n        ctx.setPropertyResolved(false);\n        ELResolver resolver = ctx.getELResolver();"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 192,
              "startColumn": 80,
              "endLine": 192,
              "endColumn": 85,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 14,
              "variableName": "final Object obj",
              "startLine": 492,
              "startColumn": 65,
              "endLine": 492,
              "endColumn": 81,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        }\n    }\n\n    public static final <T> T coerceToType(final ELContext ctx, final Object obj, final Class<T> type)\n            throws ELException {\n\n        if (ctx != null) {"
            },
            {
              "step": 15,
              "variableName": "(T) obj",
              "startLine": 509,
              "startColumn": 24,
              "endLine": 509,
              "endColumn": 31,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "\n        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n"
            },
            {
              "step": 16,
              "variableName": "result",
              "startLine": 510,
              "startColumn": 20,
              "endLine": 510,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/org/apache/el/lang/ELSupport.java",
              "type": "GSSCredential",
              "code": "        if (type == null || Object.class.equals(type) || (obj != null && type.isAssignableFrom(obj.getClass()))) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T) obj;\n            return result;\n        }\n\n        if (!COERCE_TO_ZERO) {"
            },
            {
              "step": 17,
              "variableName": "ELSupport.coerceToType(ctx, value, targetClass)",
              "startLine": 192,
              "startColumn": 52,
              "endLine": 192,
              "endColumn": 99,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "\n        // coerce to the expected type\n        Class<?> targetClass = resolver.getType(ctx, t.base, t.property);\n        resolver.setValue(ctx, t.base, t.property, ELSupport.coerceToType(ctx, value, targetClass));\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", t.base, t.property));\n        }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 91,
              "startColumn": 44,
              "endLine": 91,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }\n            }\n        }"
            },
            {
              "step": 20,
              "variableName": "final Object attribute",
              "startLine": 234,
              "startColumn": 49,
              "endLine": 234,
              "endColumn": 71,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n"
            },
            {
              "step": 21,
              "variableName": "attribute",
              "startLine": 235,
              "startColumn": 28,
              "endLine": 235,
              "endColumn": 37,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(final String name, final Object attribute) {\n        setAttribute(name, attribute, PAGE_SCOPE);\n    }\n\n    @Override"
            },
            {
              "step": 22,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 23,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 24,
              "variableName": "Object value",
              "startLine": 626,
              "startColumn": 43,
              "endLine": 626,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true, true);\n    }\n"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 627,
              "startColumn": 28,
              "endLine": 627,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true, true);\n    }\n\n    public void setAttribute(String name, Object value, boolean notify, boolean addDeltaRequest) {"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 630,
              "startColumn": 43,
              "endLine": 630,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "        setAttribute(name, value, true, true);\n    }\n\n    public void setAttribute(String name, Object value, boolean notify, boolean addDeltaRequest) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 645,
              "startColumn": 38,
              "endLine": 645,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ha/session/DeltaSession.java",
              "type": "GSSCredential",
              "code": "\n        lockInternal();\n        try {\n            super.setAttribute(name, value, notify);\n            if (addDeltaRequest && !exclude(name, value)) {\n                deltaRequest.setAttribute(name, value);\n            }"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 1070,
              "startColumn": 81,
              "endLine": 1070,
              "endColumn": 86,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 30,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 32,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 33,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 34,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1070,
              "startColumn": 33,
              "endLine": 1070,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 1072,
              "startColumn": 45,
              "endLine": 1072,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 36,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 54,
              "startColumn": 32,
              "endLine": 54,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 37,
              "variableName": "event",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 38,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 41,
              "variableName": "event.getValue()",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 42,
              "variableName": "\"attributeAdded('\" + event.getSession().getId() + \"', '\"",
              "startLine": 56,
              "startColumn": 13,
              "endLine": 57,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 43,
              "variableName": "String message",
              "startLine": 151,
              "startColumn": 22,
              "endLine": 151,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "     * @param message\n     *            Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);"
            },
            {
              "step": 44,
              "variableName": "\"SessionListener: \" + message",
              "startLine": 154,
              "startColumn": 25,
              "endLine": 154,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);\n        } else {\n            System.out.println(\"SessionListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return attributes.get(name);\n\n        case REQUEST_SCOPE:\n            return request.getAttribute(name);\n\n        case SESSION_SCOPE:\n            if (session == null) {"
            },
            {
              "step": 4,
              "variableName": "rootJspCtxt.getAttribute(name, REQUEST_SCOPE)",
              "startLine": 201,
              "startColumn": 17,
              "endLine": 201,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "\n        Object o = pageAttributes.get(name);\n        if (o == null) {\n            o = rootJspCtxt.getAttribute(name, REQUEST_SCOPE);\n            if (o == null) {\n                if (getSession() != null) {\n                    try {"
            },
            {
              "step": 5,
              "variableName": "o",
              "startLine": 217,
              "startColumn": 16,
              "endLine": 217,
              "endColumn": 17,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return o;\n    }\n\n    @Override"
            },
            {
              "step": 6,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 7,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 8,
              "variableName": "resolver.getValue(ctx, base, suffix)",
              "startLine": 161,
              "startColumn": 24,
              "endLine": 161,
              "endColumn": 60,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "                }\n\n                ctx.setPropertyResolved(false);\n                base = resolver.getValue(ctx, base, suffix);\n                i++;\n            }\n        }"
            },
            {
              "step": 9,
              "variableName": "base",
              "startLine": 168,
              "startColumn": 16,
              "endLine": 168,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstValue.java",
              "type": "GSSCredential",
              "code": "        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled\", base, suffix));\n        }\n        return base;\n    }\n\n"
            },
            {
              "step": 10,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 11,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 12,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 13,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 14,
              "variableName": "Object value",
              "startLine": 154,
              "startColumn": 75,
              "endLine": 154,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        context.setPropertyResolved(false);\n        int sz = this.resolversSize;\n        for (int i = 0; i < sz; i++) {"
            },
            {
              "step": 15,
              "variableName": "value",
              "startLine": 158,
              "startColumn": 65,
              "endLine": 158,
              "endColumn": 70,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        context.setPropertyResolved(false);\n        int sz = this.resolversSize;\n        for (int i = 0; i < sz; i++) {\n            this.resolvers[i].setValue(context, base, property, value);\n            if (context.isPropertyResolved()) {\n                return;\n            }"
            },
            {
              "step": 16,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 17,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 173,
              "startColumn": 43,
              "endLine": 173,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(String name, Object value, int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 187,
              "startColumn": 44,
              "endLine": 187,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "                removeAttribute(name, PAGE_SCOPE);\n            }\n        } else {\n            rootJspCtxt.setAttribute(name, value, scope);\n        }\n    }\n"
            },
            {
              "step": 20,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 21,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 22,
              "variableName": "Object value",
              "startLine": 102,
              "startColumn": 43,
              "endLine": 102,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSessionFacade.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        session.setAttribute(name, value);\n    }\n"
            },
            {
              "step": 23,
              "variableName": "value",
              "startLine": 103,
              "startColumn": 36,
              "endLine": 103,
              "endColumn": 41,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSessionFacade.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        session.setAttribute(name, value);\n    }\n\n"
            },
            {
              "step": 24,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 26,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 1016,
              "startColumn": 73,
              "endLine": 1016,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 28,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 29,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 31,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 32,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1016,
              "startColumn": 25,
              "endLine": 1016,
              "endColumn": 79,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "            // unless configured to do so\n            Object oldValue = attributes.get(name);\n            if (value != oldValue || manager.getNotifyBindingListenerOnUnchangedValue()) {\n                event = new HttpSessionBindingEvent(getSession(), name, value);\n                try {\n                    ((HttpSessionBindingListener) value).valueBound(event);\n                } catch (Throwable t) {"
            },
            {
              "step": 33,
              "variableName": "event",
              "startLine": 1072,
              "startColumn": 45,
              "endLine": 1072,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);\n                }\n            } catch (Throwable t) {"
            },
            {
              "step": 34,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 54,
              "startColumn": 32,
              "endLine": 54,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 35,
              "variableName": "event",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 36,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "event.getValue()",
              "startLine": 57,
              "startColumn": 46,
              "endLine": 57,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 40,
              "variableName": "\"attributeAdded('\" + event.getSession().getId() + \"', '\"",
              "startLine": 56,
              "startColumn": 13,
              "endLine": 57,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeAdded(HttpSessionBindingEvent event) {\n\n        log(\"attributeAdded('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 41,
              "variableName": "String message",
              "startLine": 151,
              "startColumn": 22,
              "endLine": 151,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "     * @param message\n     *            Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);"
            },
            {
              "step": 42,
              "variableName": "\"SessionListener: \" + message",
              "startLine": 154,
              "startColumn": 25,
              "endLine": 154,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);\n        } else {\n            System.out.println(\"SessionListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.gssCredential",
              "startLine": 245,
              "startColumn": 16,
              "endLine": 245,
              "endColumn": 34,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/realm/GenericPrincipal.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public GSSCredential getGssCredential() {\n        return this.gssCredential;\n    }\n\n    protected void setGssCredential(GSSCredential gssCredential) {"
            },
            {
              "step": 1,
              "variableName": "((TomcatPrincipal) request.userPrincipal).getGssCredential()",
              "startLine": 3183,
              "startColumn": 28,
              "endLine": 3183,
              "endColumn": 88,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "            @Override\n            public Object get(Request request, String name) {\n                if (request.userPrincipal instanceof TomcatPrincipal) {\n                    return ((TomcatPrincipal) request.userPrincipal).getGssCredential();\n                }\n                return null;\n            }"
            },
            {
              "step": 2,
              "variableName": "adapter.get(this, name)",
              "startLine": 838,
              "startColumn": 20,
              "endLine": 838,
              "endColumn": 43,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/Request.java",
              "type": "GSSCredential",
              "code": "        // Special attributes\n        SpecialAttributeAdapter adapter = specialAttributes.get(name);\n        if (adapter != null) {\n            return adapter.get(this, name);\n        }\n\n        Object attr = attributes.get(name);"
            },
            {
              "step": 3,
              "variableName": "request.getAttribute(name)",
              "startLine": 246,
              "startColumn": 16,
              "endLine": 246,
              "endColumn": 42,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/connector/RequestFacade.java",
              "type": "GSSCredential",
              "code": "    @Override\n    public Object getAttribute(String name) {\n        checkFacade();\n        return request.getAttribute(name);\n    }\n\n"
            },
            {
              "step": 4,
              "variableName": "request.getAttribute(name)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 46,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "            return attributes.get(name);\n\n        case REQUEST_SCOPE:\n            return request.getAttribute(name);\n\n        case SESSION_SCOPE:\n            if (session == null) {"
            },
            {
              "step": 5,
              "variableName": "rootJspCtxt.getAttribute(name, SESSION_SCOPE)",
              "startLine": 205,
              "startColumn": 29,
              "endLine": 205,
              "endColumn": 74,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            if (o == null) {\n                if (getSession() != null) {\n                    try {\n                        o = rootJspCtxt.getAttribute(name, SESSION_SCOPE);\n                    } catch (IllegalStateException ise) {\n                        // Session has been invalidated.\n                        // Ignore and fall through to application scope."
            },
            {
              "step": 6,
              "variableName": "o",
              "startLine": 217,
              "startColumn": 16,
              "endLine": 217,
              "endColumn": 17,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/JspContextWrapper.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return o;\n    }\n\n    @Override"
            },
            {
              "step": 7,
              "variableName": "page.findAttribute(key)",
              "startLine": 55,
              "startColumn": 26,
              "endLine": 55,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            if (property != null) {\n                String key = property.toString();\n                PageContext page = (PageContext) context.getContext(JspContext.class);\n                result = page.findAttribute(key);\n\n                if (result != null) {\n                    context.setPropertyResolved(base, property);"
            },
            {
              "step": 8,
              "variableName": "result",
              "startLine": 63,
              "startColumn": 16,
              "endLine": 63,
              "endColumn": 22,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n\n        return result;\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "resolvers[i].getValue(context, base, property)",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 75,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        context.setPropertyResolved(false);\n        int sz = resolversSize;\n        for (int i = 0; i < sz; i++) {\n            Object result = resolvers[i].getValue(context, base, property);\n            if (context.isPropertyResolved()) {\n                return result;\n            }"
            },
            {
              "step": 10,
              "variableName": "result",
              "startLine": 111,
              "startColumn": 24,
              "endLine": 111,
              "endColumn": 30,
              "uri": "tomcat-10.1.39/java/jakarta/el/CompositeELResolver.java",
              "type": "GSSCredential",
              "code": "        for (int i = 0; i < sz; i++) {\n            Object result = resolvers[i].getValue(context, base, property);\n            if (context.isPropertyResolved()) {\n                return result;\n            }\n        }\n        return null;"
            },
            {
              "step": 11,
              "variableName": "ctx.getELResolver().getValue(ctx, null, this.localName)",
              "startLine": 115,
              "startColumn": 23,
              "endLine": 115,
              "endColumn": 78,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                }\n            }\n            if (obj == null) {\n                obj = ctx.getELResolver().getValue(ctx, null, this.localName);\n            }\n            if (obj instanceof LambdaExpression) {\n                // Build arguments"
            },
            {
              "step": 12,
              "variableName": "obj",
              "startLine": 130,
              "startColumn": 24,
              "endLine": 130,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstFunction.java",
              "type": "GSSCredential",
              "code": "                    // there were too many sets of parameters\n                    throw new ELException(MessageFactory.get(\"error.lambda.tooManyMethodParameterSets\"));\n                }\n                return obj;\n            }\n\n            // Call to a constructor or a static method"
            },
            {
              "step": 13,
              "variableName": "children[1].getValue(ctx)",
              "startLine": 43,
              "startColumn": 24,
              "endLine": 43,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n"
            },
            {
              "step": 14,
              "variableName": "value",
              "startLine": 45,
              "startColumn": 35,
              "endLine": 45,
              "endColumn": 40,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstAssign.java",
              "type": "GSSCredential",
              "code": "    public Class<?> getType(EvaluationContext ctx) throws ELException {\n        Object value = children[1].getValue(ctx);\n\n        children[0].setValue(ctx, value);\n\n        return children[1].getType(ctx);\n    }"
            },
            {
              "step": 15,
              "variableName": "Object value",
              "startLine": 53,
              "startColumn": 49,
              "endLine": 53,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstDeferredExpression.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        this.children[0].setValue(ctx, value);\n    }\n}"
            },
            {
              "step": 16,
              "variableName": "value",
              "startLine": 54,
              "startColumn": 40,
              "endLine": 54,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstDeferredExpression.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        this.children[0].setValue(ctx, value);\n    }\n}\n"
            },
            {
              "step": 17,
              "variableName": "Object value",
              "startLine": 142,
              "startColumn": 49,
              "endLine": 142,
              "endColumn": 61,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setValue(EvaluationContext ctx, Object value) throws ELException {\n        VariableMapper varMapper = ctx.getVariableMapper();\n        if (varMapper != null) {\n            ValueExpression expr = varMapper.resolveVariable(this.image);"
            },
            {
              "step": 18,
              "variableName": "value",
              "startLine": 152,
              "startColumn": 61,
              "endLine": 152,
              "endColumn": 66,
              "uri": "tomcat-10.1.39/java/org/apache/el/parser/AstIdentifier.java",
              "type": "GSSCredential",
              "code": "            }\n        }\n        ctx.setPropertyResolved(false);\n        ctx.getELResolver().setValue(ctx, null, this.image, value);\n        if (!ctx.isPropertyResolved()) {\n            throw new PropertyNotFoundException(MessageFactory.get(\"error.resolver.unhandled.null\", this.image));\n        }"
            },
            {
              "step": 19,
              "variableName": "Object value",
              "startLine": 79,
              "startColumn": 75,
              "endLine": 79,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setValue(ELContext context, Object base, Object property, Object value) {\n        Objects.requireNonNull(context);\n\n        if (base == null) {"
            },
            {
              "step": 20,
              "variableName": "value",
              "startLine": 89,
              "startColumn": 44,
              "endLine": 89,
              "endColumn": 49,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java",
              "type": "GSSCredential",
              "code": "                PageContext page = (PageContext) context.getContext(JspContext.class);\n                int scope = page.getAttributesScope(key);\n                if (scope != 0) {\n                    page.setAttribute(key, value, scope);\n                } else {\n                    page.setAttribute(key, value);\n                }"
            },
            {
              "step": 21,
              "variableName": "final Object o",
              "startLine": 239,
              "startColumn": 49,
              "endLine": 239,
              "endColumn": 63,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "    }\n\n    @Override\n    public void setAttribute(final String name, final Object o, final int scope) {\n\n        if (name == null) {\n            throw new NullPointerException(Localizer.getMessage(\"jsp.error.attribute.null_name\"));"
            },
            {
              "step": 22,
              "variableName": "o",
              "startLine": 262,
              "startColumn": 44,
              "endLine": 262,
              "endColumn": 45,
              "uri": "tomcat-10.1.39/java/org/apache/jasper/runtime/PageContextImpl.java",
              "type": "GSSCredential",
              "code": "                    throw new IllegalStateException(Localizer\n                            .getMessage(\"jsp.error.page.noSession\"));\n                }\n                session.setAttribute(name, o);\n                break;\n\n            case APPLICATION_SCOPE:"
            },
            {
              "step": 23,
              "variableName": "Object value",
              "startLine": 964,
              "startColumn": 43,
              "endLine": 964,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n"
            },
            {
              "step": 24,
              "variableName": "value",
              "startLine": 965,
              "startColumn": 28,
              "endLine": 965,
              "endColumn": 33,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "\n    @Override\n    public void setAttribute(String name, Object value) {\n        setAttribute(name, value, true);\n    }\n\n"
            },
            {
              "step": 25,
              "variableName": "Object value",
              "startLine": 984,
              "startColumn": 43,
              "endLine": 984,
              "endColumn": 55,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "     *                                         marked distributable.\n     * @exception IllegalStateException    if this method is called on an invalidated session\n     */\n    public void setAttribute(String name, Object value, boolean notify) {\n\n        // Name cannot be null\n        if (name == null) {"
            },
            {
              "step": 26,
              "variableName": "value",
              "startLine": 1070,
              "startColumn": 81,
              "endLine": 1070,
              "endColumn": 86,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 27,
              "variableName": "Object value",
              "startLine": 73,
              "startColumn": 70,
              "endLine": 73,
              "endColumn": 82,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 28,
              "variableName": "value",
              "startLine": 76,
              "startColumn": 22,
              "endLine": 76,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 29,
              "variableName": "this",
              "startLine": 76,
              "startColumn": 9,
              "endLine": 76,
              "endColumn": 13,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;\n    }\n\n    /**"
            },
            {
              "step": 30,
              "variableName": "HttpSessionBindingEvent",
              "startLine": 73,
              "startColumn": 12,
              "endLine": 73,
              "endColumn": 35,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @see #getSession()\n     * @see #getValue()\n     */\n    public HttpSessionBindingEvent(HttpSession session, String name, Object value) {\n        super(session);\n        this.name = name;\n        this.value = value;"
            },
            {
              "step": 31,
              "variableName": "new HttpSessionBindingEvent(getSession(), name, value)",
              "startLine": 1070,
              "startColumn": 33,
              "endLine": 1070,
              "endColumn": 87,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                } else {\n                    context.fireContainerEvent(\"beforeSessionAttributeAdded\", listener);\n                    if (event == null) {\n                        event = new HttpSessionBindingEvent(getSession(), name, value);\n                    }\n                    listener.attributeAdded(event);\n                    context.fireContainerEvent(\"afterSessionAttributeAdded\", listener);"
            },
            {
              "step": 32,
              "variableName": "event",
              "startLine": 1064,
              "startColumn": 52,
              "endLine": 1064,
              "endColumn": 57,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/session/StandardSession.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "                        if (event == null) {\n                            event = new HttpSessionBindingEvent(getSession(), name, unbound);\n                        }\n                        listener.attributeReplaced(event);\n                        context.fireContainerEvent(\"afterSessionAttributeReplaced\", listener);\n                    }\n                } else {"
            },
            {
              "step": 33,
              "variableName": "HttpSessionBindingEvent event",
              "startLine": 82,
              "startColumn": 35,
              "endLine": 82,
              "endColumn": 64,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *            The session attribute event\n     */\n    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");"
            },
            {
              "step": 34,
              "variableName": "event",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 35,
              "variableName": "getValue",
              "startLine": 107,
              "startColumn": 19,
              "endLine": 107,
              "endColumn": 27,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     *\n     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}"
            },
            {
              "step": 36,
              "variableName": "this",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 20,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "HttpSessionBindingEvent [value] : GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 37,
              "variableName": "this.value",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "tomcat-10.1.39/java/jakarta/servlet/http/HttpSessionBindingEvent.java",
              "type": "GSSCredential",
              "code": "     * @since Servlet 2.3\n     */\n    public Object getValue() {\n        return this.value;\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "event.getValue()",
              "startLine": 85,
              "startColumn": 46,
              "endLine": 85,
              "endColumn": 62,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "GSSCredential",
              "code": "    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }\n"
            },
            {
              "step": 39,
              "variableName": "\"attributeReplaced('\" + event.getSession().getId() + \"',",
              "startLine": 84,
              "startColumn": 13,
              "endLine": 85,
              "endColumn": 69,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "    @Override\n    public void attributeReplaced(HttpSessionBindingEvent event) {\n\n        log(\"attributeReplaced('\" + event.getSession().getId() + \"', '\"\n                + event.getName() + \"', '\" + event.getValue() + \"')\");\n\n    }"
            },
            {
              "step": 40,
              "variableName": "String message",
              "startLine": 151,
              "startColumn": 22,
              "endLine": 151,
              "endColumn": 36,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "String",
              "code": "     * @param message\n     *            Message to be logged\n     */\n    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);"
            },
            {
              "step": 41,
              "variableName": "\"SessionListener: \" + message",
              "startLine": 154,
              "startColumn": 25,
              "endLine": 154,
              "endColumn": 54,
              "uri": "tomcat-10.1.39/webapps/examples/WEB-INF/classes/listeners/SessionListener.java",
              "type": "",
              "code": "    private void log(String message) {\n\n        if (context != null) {\n            context.log(\"SessionListener: \" + message);\n        } else {\n            System.out.println(\"SessionListener: \" + message);\n        }"
            }
          ],
          "label": "No",
          "probability": 0.3958199620246887
        }
      ]
    }
  ],
  "537": [
    {
      "resultIndex": 12,
      "fileName": "BaseRedirectorHelperTask.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "qry",
              "startLine": 108,
              "startColumn": 67,
              "endLine": 108,
              "endColumn": 70,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java",
              "type": "String",
              "code": "        Set<ObjectName> names = null;\n        String resultproperty = getResultproperty();\n        try {\n            names = jmxServerConnection.queryNames(new ObjectName(qry), null);\n            if (resultproperty != null) {\n                setProperty(resultproperty + \".Length\", Integer.toString(names.size()));\n            }"
            },
            {
              "step": 1,
              "variableName": "\"Can't query mbeans \" + qry",
              "startLine": 116,
              "startColumn": 20,
              "endLine": 116,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java",
              "type": "String",
              "code": "            if (isEcho()) {\n                handleErrorOutput(e.getMessage());\n            }\n            return \"Can't query mbeans \" + qry;\n        }\n\n        if (resultproperty != null) {"
            },
            {
              "step": 2,
              "variableName": "jmxQuery(jmxServerConnection, getName())",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java",
              "type": "String",
              "code": "        if (getName() == null) {\n            throw new BuildException(\"Must specify a 'name'\");\n        }\n        return jmxQuery(jmxServerConnection, getName());\n\n    }\n"
            },
            {
              "step": 3,
              "variableName": "jmxExecute(jmxServerConnection)",
              "startLine": 314,
              "startColumn": 25,
              "endLine": 314,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "String",
              "code": "                String error = null;\n\n                MBeanServerConnection jmxServerConnection = getJMXConnection();\n                error = jmxExecute(jmxServerConnection);\n                if (error != null && isFailOnError()) {\n                    // exception should be thrown only if failOnError == true\n                    // or error line will be logged twice"
            },
            {
              "step": 4,
              "variableName": "error",
              "startLine": 318,
              "startColumn": 46,
              "endLine": 318,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "String",
              "code": "                if (error != null && isFailOnError()) {\n                    // exception should be thrown only if failOnError == true\n                    // or error line will be logged twice\n                    throw new BuildException(error);\n                }\n            } catch (Exception e) {\n                if (isFailOnError()) {"
            },
            {
              "step": 5,
              "variableName": "new BuildException(error)",
              "startLine": 318,
              "startColumn": 27,
              "endLine": 318,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "BuildException",
              "code": "                if (error != null && isFailOnError()) {\n                    // exception should be thrown only if failOnError == true\n                    // or error line will be logged twice\n                    throw new BuildException(error);\n                }\n            } catch (Exception e) {\n                if (isFailOnError()) {"
            },
            {
              "step": 6,
              "variableName": "e.getMessage()",
              "startLine": 324,
              "startColumn": 39,
              "endLine": 324,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "String",
              "code": "                if (isFailOnError()) {\n                    throw new BuildException(e);\n                } else {\n                    handleErrorOutput(e.getMessage());\n                }\n            } finally {\n                closeRedirector();"
            },
            {
              "step": 7,
              "variableName": "String output",
              "startLine": 308,
              "startColumn": 38,
              "endLine": 308,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java",
              "type": "String",
              "code": "     * @param output The error output to log. Should not be <code>null</code>.\n     */\n    @Override\n    protected void handleErrorOutput(String output) {\n        if (redirectOutput) {\n            if (redirectErrPrintStream == null) {\n                openRedirector();"
            },
            {
              "step": 8,
              "variableName": "output",
              "startLine": 313,
              "startColumn": 44,
              "endLine": 313,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java",
              "type": "",
              "code": "            if (redirectErrPrintStream == null) {\n                openRedirector();\n            }\n            redirectErrPrintStream.println(output);\n            if (alwaysLog) {\n                log(output, Project.MSG_ERR);\n            }"
            }
          ],
          "label": "No",
          "probability": 0.11030611395835876
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "qry",
              "startLine": 116,
              "startColumn": 44,
              "endLine": 116,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java",
              "type": "String",
              "code": "            if (isEcho()) {\n                handleErrorOutput(e.getMessage());\n            }\n            return \"Can't query mbeans \" + qry;\n        }\n\n        if (resultproperty != null) {"
            },
            {
              "step": 1,
              "variableName": "\"Can't query mbeans \" + qry",
              "startLine": 116,
              "startColumn": 20,
              "endLine": 116,
              "endColumn": 47,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java",
              "type": "String",
              "code": "            if (isEcho()) {\n                handleErrorOutput(e.getMessage());\n            }\n            return \"Can't query mbeans \" + qry;\n        }\n\n        if (resultproperty != null) {"
            },
            {
              "step": 2,
              "variableName": "jmxQuery(jmxServerConnection, getName())",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java",
              "type": "String",
              "code": "        if (getName() == null) {\n            throw new BuildException(\"Must specify a 'name'\");\n        }\n        return jmxQuery(jmxServerConnection, getName());\n\n    }\n"
            },
            {
              "step": 3,
              "variableName": "jmxExecute(jmxServerConnection)",
              "startLine": 314,
              "startColumn": 25,
              "endLine": 314,
              "endColumn": 56,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "String",
              "code": "                String error = null;\n\n                MBeanServerConnection jmxServerConnection = getJMXConnection();\n                error = jmxExecute(jmxServerConnection);\n                if (error != null && isFailOnError()) {\n                    // exception should be thrown only if failOnError == true\n                    // or error line will be logged twice"
            },
            {
              "step": 4,
              "variableName": "error",
              "startLine": 318,
              "startColumn": 46,
              "endLine": 318,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "String",
              "code": "                if (error != null && isFailOnError()) {\n                    // exception should be thrown only if failOnError == true\n                    // or error line will be logged twice\n                    throw new BuildException(error);\n                }\n            } catch (Exception e) {\n                if (isFailOnError()) {"
            },
            {
              "step": 5,
              "variableName": "new BuildException(error)",
              "startLine": 318,
              "startColumn": 27,
              "endLine": 318,
              "endColumn": 52,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "BuildException",
              "code": "                if (error != null && isFailOnError()) {\n                    // exception should be thrown only if failOnError == true\n                    // or error line will be logged twice\n                    throw new BuildException(error);\n                }\n            } catch (Exception e) {\n                if (isFailOnError()) {"
            },
            {
              "step": 6,
              "variableName": "e.getMessage()",
              "startLine": 324,
              "startColumn": 39,
              "endLine": 324,
              "endColumn": 53,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java",
              "type": "String",
              "code": "                if (isFailOnError()) {\n                    throw new BuildException(e);\n                } else {\n                    handleErrorOutput(e.getMessage());\n                }\n            } finally {\n                closeRedirector();"
            },
            {
              "step": 7,
              "variableName": "String output",
              "startLine": 308,
              "startColumn": 38,
              "endLine": 308,
              "endColumn": 51,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java",
              "type": "String",
              "code": "     * @param output The error output to log. Should not be <code>null</code>.\n     */\n    @Override\n    protected void handleErrorOutput(String output) {\n        if (redirectOutput) {\n            if (redirectErrPrintStream == null) {\n                openRedirector();"
            },
            {
              "step": 8,
              "variableName": "output",
              "startLine": 313,
              "startColumn": 44,
              "endLine": 313,
              "endColumn": 50,
              "uri": "tomcat-10.1.39/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java",
              "type": "",
              "code": "            if (redirectErrPrintStream == null) {\n                openRedirector();\n            }\n            redirectErrPrintStream.println(output);\n            if (alwaysLog) {\n                log(output, Project.MSG_ERR);\n            }"
            }
          ],
          "label": "No",
          "probability": 0.13110417127609253
        }
      ]
    }
  ]
}