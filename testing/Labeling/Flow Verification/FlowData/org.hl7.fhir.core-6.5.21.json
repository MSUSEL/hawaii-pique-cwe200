{
  "209": [
    {
      "resultIndex": 0,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 267,
              "startColumn": 24,
              "endLine": 267,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader,\n      PackageVersion pi) throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 267,
              "startColumn": 24,
              "endLine": 267,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader,\n      PackageVersion pi) throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 269,
              "startColumn": 32,
              "endLine": 269,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \" + name + \": \" + e.getMessage()",
              "startLine": 271,
              "startColumn": 28,
              "endLine": 271,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 34,
              "startColumn": 9,
              "endLine": 34,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "HashMap",
              "code": "  private List<String> formatCommentsPost;\n\n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 67,
              "startColumn": 17,
              "endLine": 67,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 71,
              "startColumn": 14,
              "endLine": 71,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "p.getUserString(\"path\")",
              "startLine": 136,
              "startColumn": 17,
              "endLine": 136,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        if (p == null)\r\n          p = getContext().getWorker().fetchResource(StructureDefinition.class, link);\r\n        if (p != null) {\r\n          url = p.getUserString(\"path\");\r\n          if (url == null)\r\n            url = p.getUserString(\"filename\");\r\n        } else\r"
            },
            {
              "step": 6,
              "variableName": "text",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 7,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 8,
              "variableName": "link",
              "startLine": 134,
              "startColumn": 81,
              "endLine": 134,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchResource(StructureDefinition.class, link);\r\n        if (p != null) {\r\n          url = p.getUserString(\"path\");\r\n          if (url == null)\r"
            },
            {
              "step": 9,
              "variableName": "String uri",
              "startLine": 765,
              "startColumn": 64,
              "endLine": 765,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 10,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 773,
              "startColumn": 28,
              "endLine": 773,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 34,
              "startColumn": 9,
              "endLine": 34,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "HashMap",
              "code": "  private List<String> formatCommentsPost;\n\n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 67,
              "startColumn": 17,
              "endLine": 67,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 71,
              "startColumn": 14,
              "endLine": 71,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "p.getUserString(\"filename\")",
              "startLine": 138,
              "startColumn": 19,
              "endLine": 138,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        if (p != null) {\r\n          url = p.getUserString(\"path\");\r\n          if (url == null)\r\n            url = p.getUserString(\"filename\");\r\n        } else\r\n          throw new DefinitionException(\"Unable to resolve markdown link \" + link);\r\n\r"
            },
            {
              "step": 6,
              "variableName": "text",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 7,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 8,
              "variableName": "link",
              "startLine": 129,
              "startColumn": 26,
              "endLine": 129,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r\n        StructureDefinition p = getContext().getWorker().fetchResource(StructureDefinition.class, parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r"
            },
            {
              "step": 9,
              "variableName": "link.split(\"\\\\#\")",
              "startLine": 129,
              "startColumn": 26,
              "endLine": 129,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String[]",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r\n        StructureDefinition p = getContext().getWorker().fetchResource(StructureDefinition.class, parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r"
            },
            {
              "step": 10,
              "variableName": "parts[0]",
              "startLine": 130,
              "startColumn": 99,
              "endLine": 130,
              "endColumn": 107,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r\n        StructureDefinition p = getContext().getWorker().fetchResource(StructureDefinition.class, parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r\n        if (p == null)\r"
            },
            {
              "step": 11,
              "variableName": "String uri",
              "startLine": 765,
              "startColumn": 64,
              "endLine": 765,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 12,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 773,
              "startColumn": 28,
              "endLine": 773,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 67,
              "startColumn": 17,
              "endLine": 67,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 71,
              "startColumn": 14,
              "endLine": 71,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "p.getUserString(\"path\")",
              "startLine": 136,
              "startColumn": 17,
              "endLine": 136,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        if (p == null)\r\n          p = getContext().getWorker().fetchResource(StructureDefinition.class, link);\r\n        if (p != null) {\r\n          url = p.getUserString(\"path\");\r\n          if (url == null)\r\n            url = p.getUserString(\"filename\");\r\n        } else\r"
            },
            {
              "step": 5,
              "variableName": "text",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 6,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 7,
              "variableName": "link",
              "startLine": 134,
              "startColumn": 81,
              "endLine": 134,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchResource(StructureDefinition.class, link);\r\n        if (p != null) {\r\n          url = p.getUserString(\"path\");\r\n          if (url == null)\r"
            },
            {
              "step": 8,
              "variableName": "String uri",
              "startLine": 765,
              "startColumn": 64,
              "endLine": 765,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 9,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 773,
              "startColumn": 28,
              "endLine": 773,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 36,
              "startColumn": 12,
              "endLine": 36,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 67,
              "startColumn": 17,
              "endLine": 67,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 71,
              "startColumn": 14,
              "endLine": 71,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "p.getUserString(\"filename\")",
              "startLine": 138,
              "startColumn": 19,
              "endLine": 138,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        if (p != null) {\r\n          url = p.getUserString(\"path\");\r\n          if (url == null)\r\n            url = p.getUserString(\"filename\");\r\n        } else\r\n          throw new DefinitionException(\"Unable to resolve markdown link \" + link);\r\n\r"
            },
            {
              "step": 5,
              "variableName": "text",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 6,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 126,
              "startColumn": 23,
              "endLine": 126,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\r\n      while (text.contains(\"[[[\")) {\r\n        String left = text.substring(0, text.indexOf(\"[[[\"));\r\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r"
            },
            {
              "step": 7,
              "variableName": "link",
              "startLine": 129,
              "startColumn": 26,
              "endLine": 129,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r\n        StructureDefinition p = getContext().getWorker().fetchResource(StructureDefinition.class, parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r"
            },
            {
              "step": 8,
              "variableName": "link.split(\"\\\\#\")",
              "startLine": 129,
              "startColumn": 26,
              "endLine": 129,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String[]",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\r\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r\n        StructureDefinition p = getContext().getWorker().fetchResource(StructureDefinition.class, parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r"
            },
            {
              "step": 9,
              "variableName": "parts[0]",
              "startLine": 130,
              "startColumn": 99,
              "endLine": 130,
              "endColumn": 107,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/renderers/DataRenderer.java",
              "type": "String",
              "code": "        String right = text.substring(text.indexOf(\"]]]\") + 3);\r\n        String url = link;\r\n        String[] parts = link.split(\"\\\\#\");\r\n        StructureDefinition p = getContext().getWorker().fetchResource(StructureDefinition.class, parts[0]);\r\n        if (p == null)\r\n          p = getContext().getWorker().fetchTypeDefinition(parts[0]);\r\n        if (p == null)\r"
            },
            {
              "step": 10,
              "variableName": "String uri",
              "startLine": 765,
              "startColumn": 64,
              "endLine": 765,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 11,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 773,
              "startColumn": 28,
              "endLine": 773,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "TerminologyCacheManager.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 85,
              "startColumn": 67,
              "endLine": 85,
              "endColumn": 73,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
              "type": "String",
              "code": "    try {\r\n      System.out.println(\"Initialise terminology cache from \" + source);\r\n\r\n      HTTPResult res = ManagedWebAccess.get(Arrays.asList(\"web\"), source + \"?nocache=\" + System.currentTimeMillis());\r\n      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r"
            },
            {
              "step": 1,
              "variableName": "\"No - can't initialise cache from \" + source + \": \" + e.getMessage()",
              "startLine": 89,
              "startColumn": 26,
              "endLine": 89,
              "endColumn": 94,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
              "type": "",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \" + source + \": \" + e.getMessage());\r\n    }\r\n  }\r\n\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 83,
              "startColumn": 65,
              "endLine": 83,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
              "type": "String",
              "code": "\r\n  private void fillCache(String source) throws IOException {\r\n    try {\r\n      System.out.println(\"Initialise terminology cache from \" + source);\r\n\r\n      HTTPResult res = ManagedWebAccess.get(Arrays.asList(\"web\"), source + \"?nocache=\" + System.currentTimeMillis());\r\n      res.checkThrowException();\r"
            },
            {
              "step": 1,
              "variableName": "\"No - can't initialise cache from \" + source + \": \" + e.getMessage()",
              "startLine": 89,
              "startColumn": 26,
              "endLine": 89,
              "endColumn": 94,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
              "type": "",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \" + source + \": \" + e.getMessage());\r\n    }\r\n  }\r\n\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 89,
              "startColumn": 64,
              "endLine": 89,
              "endColumn": 70,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
              "type": "String",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \" + source + \": \" + e.getMessage());\r\n    }\r\n  }\r\n\r"
            },
            {
              "step": 1,
              "variableName": "\"No - can't initialise cache from \" + source + \": \" + e.getMessage()",
              "startLine": 89,
              "startColumn": 26,
              "endLine": 89,
              "endColumn": 94,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java",
              "type": "",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \" + source + \": \" + e.getMessage());\r\n    }\r\n  }\r\n\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 365,
              "startColumn": 38,
              "endLine": 365,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 367,
              "startColumn": 30,
              "endLine": 367,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 430,
              "startColumn": 34,
              "endLine": 430,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "\n    public ValidationEngine fromSource(String src) throws IOException, URISyntaxException {\n      ValidationEngine engine = new ValidationEngine();\n      engine.loadCoreDefinitions(src, false, terminologyCachePath, userAgent, timeTracker, loggingService);\n      engine.getContext().setCanRunWithoutTerminology(canRunWithoutTerminologyServer);\n      engine.getContext().setPackageTracker(engine);    \n      if (txServer != null) {"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 500,
              "startColumn": 36,
              "endLine": 500,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   *\n   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 512,
              "startColumn": 64,
              "endLine": 512,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 3,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 4,
              "variableName": "src",
              "startLine": 307,
              "startColumn": 45,
              "endLine": 307,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 482,
              "startColumn": 38,
              "endLine": 482,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/FileUtilities.java",
              "type": "String",
              "code": "  \n  }\n\n  public static String changeFileExt(String name, String ext) {\n    if (name.lastIndexOf('.') > -1)\n      return name.substring(0, name.lastIndexOf('.')) + ext;\n    else"
            },
            {
              "step": 6,
              "variableName": "name + ext",
              "startLine": 486,
              "startColumn": 14,
              "endLine": 486,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/FileUtilities.java",
              "type": "String",
              "code": "    if (name.lastIndexOf('.') > -1)\n      return name.substring(0, name.lastIndexOf('.')) + ext;\n    else\n      return name + ext;\n  }\n\n  public static boolean isIgnorableFile(File file) {"
            },
            {
              "step": 7,
              "variableName": "FileUtilities.changeFileExt(src, \".\" + fmt.getExtension())",
              "startLine": 307,
              "startColumn": 17,
              "endLine": 307,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 307,
              "startColumn": 9,
              "endLine": 307,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 9,
              "variableName": "res",
              "startLine": 308,
              "startColumn": 16,
              "endLine": 308,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);"
            },
            {
              "step": 10,
              "variableName": "igLoader.loadIgSource(src, recursive, true)",
              "startLine": 512,
              "startColumn": 42,
              "endLine": 512,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 11,
              "variableName": "source",
              "startLine": 522,
              "startColumn": 48,
              "endLine": 522,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 12,
              "variableName": "Map<String, ByteProvider> source",
              "startLine": 361,
              "startColumn": 48,
              "endLine": 361,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      return build(context);\n    }\n\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {"
            },
            {
              "step": 13,
              "variableName": "source",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 14,
              "variableName": "source.keySet()",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : String",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 15,
              "variableName": "name",
              "startLine": 365,
              "startColumn": 38,
              "endLine": 365,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 16,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 367,
              "startColumn": 30,
              "endLine": 367,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 501,
              "startColumn": 43,
              "endLine": 501,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();\n      SimpleWorkerContext.SimpleWorkerContextBuilder contextBuilder = new SimpleWorkerContext.SimpleWorkerContextBuilder().withLoggingService(loggingService);"
            },
            {
              "step": 1,
              "variableName": "src",
              "startLine": 512,
              "startColumn": 64,
              "endLine": 512,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 2,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 3,
              "variableName": "src",
              "startLine": 307,
              "startColumn": 45,
              "endLine": 307,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 4,
              "variableName": "String name",
              "startLine": 482,
              "startColumn": 38,
              "endLine": 482,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/FileUtilities.java",
              "type": "String",
              "code": "  \n  }\n\n  public static String changeFileExt(String name, String ext) {\n    if (name.lastIndexOf('.') > -1)\n      return name.substring(0, name.lastIndexOf('.')) + ext;\n    else"
            },
            {
              "step": 5,
              "variableName": "name + ext",
              "startLine": 486,
              "startColumn": 14,
              "endLine": 486,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/FileUtilities.java",
              "type": "String",
              "code": "    if (name.lastIndexOf('.') > -1)\n      return name.substring(0, name.lastIndexOf('.')) + ext;\n    else\n      return name + ext;\n  }\n\n  public static boolean isIgnorableFile(File file) {"
            },
            {
              "step": 6,
              "variableName": "FileUtilities.changeFileExt(src, \".\" + fmt.getExtension())",
              "startLine": 307,
              "startColumn": 17,
              "endLine": 307,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 307,
              "startColumn": 9,
              "endLine": 307,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 308,
              "startColumn": 16,
              "endLine": 308,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);"
            },
            {
              "step": 9,
              "variableName": "igLoader.loadIgSource(src, recursive, true)",
              "startLine": 512,
              "startColumn": 42,
              "endLine": 512,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 10,
              "variableName": "source",
              "startLine": 522,
              "startColumn": 48,
              "endLine": 522,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 11,
              "variableName": "Map<String, ByteProvider> source",
              "startLine": 361,
              "startColumn": 48,
              "endLine": 361,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      return build(context);\n    }\n\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {"
            },
            {
              "step": 12,
              "variableName": "source",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 13,
              "variableName": "source.keySet()",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : String",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 14,
              "variableName": "name",
              "startLine": 365,
              "startColumn": 38,
              "endLine": 365,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 15,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 367,
              "startColumn": 30,
              "endLine": 367,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 512,
              "startColumn": 64,
              "endLine": 512,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 307,
              "startColumn": 45,
              "endLine": 307,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 482,
              "startColumn": 38,
              "endLine": 482,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/FileUtilities.java",
              "type": "String",
              "code": "  \n  }\n\n  public static String changeFileExt(String name, String ext) {\n    if (name.lastIndexOf('.') > -1)\n      return name.substring(0, name.lastIndexOf('.')) + ext;\n    else"
            },
            {
              "step": 4,
              "variableName": "name + ext",
              "startLine": 486,
              "startColumn": 14,
              "endLine": 486,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/FileUtilities.java",
              "type": "String",
              "code": "    if (name.lastIndexOf('.') > -1)\n      return name.substring(0, name.lastIndexOf('.')) + ext;\n    else\n      return name + ext;\n  }\n\n  public static boolean isIgnorableFile(File file) {"
            },
            {
              "step": 5,
              "variableName": "FileUtilities.changeFileExt(src, \".\" + fmt.getExtension())",
              "startLine": 307,
              "startColumn": 17,
              "endLine": 307,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 6,
              "variableName": "res",
              "startLine": 307,
              "startColumn": 9,
              "endLine": 307,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      Manager.FhirFormat fmt = ResourceChecker.checkIsResource(getContext(), isDebug(), FileUtilities.fileToBytes(f), src, true);\n      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 308,
              "startColumn": 16,
              "endLine": 308,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      if (fmt != null) {\n        Map<String, ByteProvider> res = new HashMap<String, ByteProvider>();\n        res.put(FileUtilities.changeFileExt(src, \".\" + fmt.getExtension()), ByteProvider.forFile(src));\n        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);"
            },
            {
              "step": 8,
              "variableName": "igLoader.loadIgSource(src, recursive, true)",
              "startLine": 512,
              "startColumn": 42,
              "endLine": 512,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 9,
              "variableName": "source",
              "startLine": 522,
              "startColumn": 48,
              "endLine": 522,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 10,
              "variableName": "Map<String, ByteProvider> source",
              "startLine": 361,
              "startColumn": 48,
              "endLine": 361,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "HashMap [<map.key>] : String",
              "code": "      return build(context);\n    }\n\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {"
            },
            {
              "step": 11,
              "variableName": "source",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 12,
              "variableName": "source.keySet()",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : String",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 13,
              "variableName": "name",
              "startLine": 365,
              "startColumn": 38,
              "endLine": 365,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 14,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 367,
              "startColumn": 30,
              "endLine": 367,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 156,
              "startColumn": 9,
              "endLine": 156,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "   \n  \n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 190,
              "startColumn": 17,
              "endLine": 190,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  }\n\n\tpublic String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 194,
              "startColumn": 14,
              "endLine": 194,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "p.getUserString(UserDataNames.render_filename)",
              "startLine": 153,
              "startColumn": 19,
              "endLine": 153,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "          } \r\n          url = p.getWebPath(); \r\n          if (url == null) { \r\n            url = p.getUserString(UserDataNames.render_filename); \r\n          } \r\n        } else { \r\n          throw new DefinitionException(context.formatPhrase(RenderingContext.DATA_REND_MKDWN_LNK, link) + \" \"); \r"
            },
            {
              "step": 6,
              "variableName": "text",
              "startLine": 124,
              "startColumn": 23,
              "endLine": 124,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions \r\n      while (text.contains(\"[[[\")) { \r\n        String left = text.substring(0, text.indexOf(\"[[[\")); \r\n        String link = text.substring(text.indexOf(\"[[[\")+3, text.indexOf(\"]]]\")); \r\n        String right = text.substring(text.indexOf(\"]]]\")+3); \r\n        String path = null; \r\n        String url = link; \r"
            },
            {
              "step": 7,
              "variableName": "text.substring(text.indexOf(\"[[[\")+3, text.indexOf(\"]]]\"))",
              "startLine": 124,
              "startColumn": 23,
              "endLine": 124,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions \r\n      while (text.contains(\"[[[\")) { \r\n        String left = text.substring(0, text.indexOf(\"[[[\")); \r\n        String link = text.substring(text.indexOf(\"[[[\")+3, text.indexOf(\"]]]\")); \r\n        String right = text.substring(text.indexOf(\"]]]\")+3); \r\n        String path = null; \r\n        String url = link; \r"
            },
            {
              "step": 8,
              "variableName": "link",
              "startLine": 141,
              "startColumn": 81,
              "endLine": 141,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "          p = getContext().getWorker().fetchTypeDefinition(context.getTypeMap().get(parts[0]));           \r\n        } \r\n        if (p == null) { \r\n          p = getContext().getWorker().fetchResource(StructureDefinition.class, link); \r\n        } \r\n        if (p != null) { \r\n          if (\"Extension\".equals(p.getType())) { \r"
            },
            {
              "step": 9,
              "variableName": "String uri",
              "startLine": 824,
              "startColumn": 64,
              "endLine": 824,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition)r;"
            },
            {
              "step": 10,
              "variableName": "\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage()",
              "startLine": 832,
              "startColumn": 28,
              "endLine": 832,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        new ContextUtilities(this).generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage());\n        if (logger.isDebugLogging()) {\n          e.printStackTrace();\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 156,
              "startColumn": 9,
              "endLine": 156,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "   \n  \n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 190,
              "startColumn": 17,
              "endLine": 190,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  }\n\n\tpublic String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 194,
              "startColumn": 14,
              "endLine": 194,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "source.getUserString(kn)",
              "startLine": 1384,
              "startColumn": 14,
              "endLine": 1384,
              "endColumn": 38,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "String",
              "code": "    String type = base.fhirType();\n    String kn = \"type^\" + type;\n    if (source.hasUserData(kn))\n      return source.getUserString(kn);\n\n    ResolvedGroup res = new ResolvedGroup(null, null);\n    for (StructureMapGroupComponent grp : map.getGroup()) {"
            },
            {
              "step": 6,
              "variableName": "determineTypeFromSourceType(map, group, vars.get(VariableMode.INPUT, srcVar), types)",
              "startLine": 1780,
              "startColumn": 20,
              "endLine": 1780,
              "endColumn": 104,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "String",
              "code": "            if (types.length == 1 && !\"*\".equals(types[0]) && !types[0].equals(\"Resource\"))\n              tn = types[0];\n            else if (srcVar != null) {\n              tn = determineTypeFromSourceType(map, group, vars.get(VariableMode.INPUT, srcVar), types);\n            } else\n              throw new FHIRException(\"Cannot determine type implicitly because there is no single input variable\");\n          } else {"
            },
            {
              "step": 7,
              "variableName": "tn",
              "startLine": 1793,
              "startColumn": 83,
              "endLine": 1793,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "String",
              "code": "              }\n            }\n          }\n          Base res = services != null ? services.createType(context.getAppInfo(), tn, profileUtilities) : typeFactory(tn);\n          if (res.isResource() && !res.fhirType().equals(\"Parameters\")) {\n//\t        res.setIdBase(tgt.getParameter().size() > 1 ? getParamString(vars, tgt.getParameter().get(0)) : UUID.randomUUID().toString().toLowerCase());\n            if (services != null)"
            },
            {
              "step": 8,
              "variableName": "String name",
              "startLine": 38,
              "startColumn": 42,
              "endLine": 38,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/TransformSupportServices.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public Base createType(Object appInfo, String name, ProfileUtilities profileUtilities) throws FHIRException {\n    StructureDefinition sd = context.fetchResource(StructureDefinition.class, name);\n    return Manager.build(context, sd, profileUtilities);\n  }"
            },
            {
              "step": 9,
              "variableName": "name",
              "startLine": 39,
              "startColumn": 79,
              "endLine": 39,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/TransformSupportServices.java",
              "type": "String",
              "code": "\n  @Override\n  public Base createType(Object appInfo, String name, ProfileUtilities profileUtilities) throws FHIRException {\n    StructureDefinition sd = context.fetchResource(StructureDefinition.class, name);\n    return Manager.build(context, sd, profileUtilities);\n  }\n"
            },
            {
              "step": 10,
              "variableName": "String uri",
              "startLine": 824,
              "startColumn": 64,
              "endLine": 824,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition)r;"
            },
            {
              "step": 11,
              "variableName": "\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage()",
              "startLine": 832,
              "startColumn": 28,
              "endLine": 832,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        new ContextUtilities(this).generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage());\n        if (logger.isDebugLogging()) {\n          e.printStackTrace();\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 190,
              "startColumn": 17,
              "endLine": 190,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  }\n\n\tpublic String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 194,
              "startColumn": 14,
              "endLine": 194,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "p.getUserString(UserDataNames.render_filename)",
              "startLine": 153,
              "startColumn": 19,
              "endLine": 153,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "          } \r\n          url = p.getWebPath(); \r\n          if (url == null) { \r\n            url = p.getUserString(UserDataNames.render_filename); \r\n          } \r\n        } else { \r\n          throw new DefinitionException(context.formatPhrase(RenderingContext.DATA_REND_MKDWN_LNK, link) + \" \"); \r"
            },
            {
              "step": 5,
              "variableName": "text",
              "startLine": 124,
              "startColumn": 23,
              "endLine": 124,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions \r\n      while (text.contains(\"[[[\")) { \r\n        String left = text.substring(0, text.indexOf(\"[[[\")); \r\n        String link = text.substring(text.indexOf(\"[[[\")+3, text.indexOf(\"]]]\")); \r\n        String right = text.substring(text.indexOf(\"]]]\")+3); \r\n        String path = null; \r\n        String url = link; \r"
            },
            {
              "step": 6,
              "variableName": "text.substring(text.indexOf(\"[[[\")+3, text.indexOf(\"]]]\"))",
              "startLine": 124,
              "startColumn": 23,
              "endLine": 124,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions \r\n      while (text.contains(\"[[[\")) { \r\n        String left = text.substring(0, text.indexOf(\"[[[\")); \r\n        String link = text.substring(text.indexOf(\"[[[\")+3, text.indexOf(\"]]]\")); \r\n        String right = text.substring(text.indexOf(\"]]]\")+3); \r\n        String path = null; \r\n        String url = link; \r"
            },
            {
              "step": 7,
              "variableName": "link",
              "startLine": 141,
              "startColumn": 81,
              "endLine": 141,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/renderers/DataRenderer.java",
              "type": "String",
              "code": "          p = getContext().getWorker().fetchTypeDefinition(context.getTypeMap().get(parts[0]));           \r\n        } \r\n        if (p == null) { \r\n          p = getContext().getWorker().fetchResource(StructureDefinition.class, link); \r\n        } \r\n        if (p != null) { \r\n          if (\"Extension\".equals(p.getType())) { \r"
            },
            {
              "step": 8,
              "variableName": "String uri",
              "startLine": 824,
              "startColumn": 64,
              "endLine": 824,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition)r;"
            },
            {
              "step": 9,
              "variableName": "\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage()",
              "startLine": 832,
              "startColumn": 28,
              "endLine": 832,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        new ContextUtilities(this).generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage());\n        if (logger.isDebugLogging()) {\n          e.printStackTrace();\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 190,
              "startColumn": 17,
              "endLine": 190,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  }\n\n\tpublic String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 194,
              "startColumn": 14,
              "endLine": 194,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "source.getUserString(kn)",
              "startLine": 1384,
              "startColumn": 14,
              "endLine": 1384,
              "endColumn": 38,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "String",
              "code": "    String type = base.fhirType();\n    String kn = \"type^\" + type;\n    if (source.hasUserData(kn))\n      return source.getUserString(kn);\n\n    ResolvedGroup res = new ResolvedGroup(null, null);\n    for (StructureMapGroupComponent grp : map.getGroup()) {"
            },
            {
              "step": 5,
              "variableName": "determineTypeFromSourceType(map, group, vars.get(VariableMode.INPUT, srcVar), types)",
              "startLine": 1780,
              "startColumn": 20,
              "endLine": 1780,
              "endColumn": 104,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "String",
              "code": "            if (types.length == 1 && !\"*\".equals(types[0]) && !types[0].equals(\"Resource\"))\n              tn = types[0];\n            else if (srcVar != null) {\n              tn = determineTypeFromSourceType(map, group, vars.get(VariableMode.INPUT, srcVar), types);\n            } else\n              throw new FHIRException(\"Cannot determine type implicitly because there is no single input variable\");\n          } else {"
            },
            {
              "step": 6,
              "variableName": "tn",
              "startLine": 1793,
              "startColumn": 83,
              "endLine": 1793,
              "endColumn": 85,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "String",
              "code": "              }\n            }\n          }\n          Base res = services != null ? services.createType(context.getAppInfo(), tn, profileUtilities) : typeFactory(tn);\n          if (res.isResource() && !res.fhirType().equals(\"Parameters\")) {\n//\t        res.setIdBase(tgt.getParameter().size() > 1 ? getParamString(vars, tgt.getParameter().get(0)) : UUID.randomUUID().toString().toLowerCase());\n            if (services != null)"
            },
            {
              "step": 7,
              "variableName": "String name",
              "startLine": 38,
              "startColumn": 42,
              "endLine": 38,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/TransformSupportServices.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public Base createType(Object appInfo, String name, ProfileUtilities profileUtilities) throws FHIRException {\n    StructureDefinition sd = context.fetchResource(StructureDefinition.class, name);\n    return Manager.build(context, sd, profileUtilities);\n  }"
            },
            {
              "step": 8,
              "variableName": "name",
              "startLine": 39,
              "startColumn": 79,
              "endLine": 39,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/TransformSupportServices.java",
              "type": "String",
              "code": "\n  @Override\n  public Base createType(Object appInfo, String name, ProfileUtilities profileUtilities) throws FHIRException {\n    StructureDefinition sd = context.fetchResource(StructureDefinition.class, name);\n    return Manager.build(context, sd, profileUtilities);\n  }\n"
            },
            {
              "step": 9,
              "variableName": "String uri",
              "startLine": 824,
              "startColumn": 64,
              "endLine": 824,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition)r;"
            },
            {
              "step": 10,
              "variableName": "\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage()",
              "startLine": 832,
              "startColumn": 28,
              "endLine": 832,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        new ContextUtilities(this).generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot @3 for \"+uri+\": \"+e.getMessage());\n        if (logger.isDebugLogging()) {\n          e.printStackTrace();\n        }"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "TerminologyCacheManager.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 84,
              "startColumn": 67,
              "endLine": 84,
              "endColumn": 73,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
              "type": "String",
              "code": "    try {\r\n      System.out.println(\"Initialise terminology cache from \"+source);\r\n\r\n      HTTPResult res = ManagedWebAccess.get(Arrays.asList(\"web\"), source+\"?nocache=\" + System.currentTimeMillis());\r\n      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r"
            },
            {
              "step": 1,
              "variableName": "\"No - can't initialise cache from \"+source+\": \"+e.getMessage()",
              "startLine": 88,
              "startColumn": 26,
              "endLine": 88,
              "endColumn": 88,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
              "type": "",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \"+source+\": \"+e.getMessage());\r\n    }\r\n  }\r\n\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 82,
              "startColumn": 63,
              "endLine": 82,
              "endColumn": 69,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
              "type": "String",
              "code": "\r\n  private void fillCache(String source) throws IOException {\r\n    try {\r\n      System.out.println(\"Initialise terminology cache from \"+source);\r\n\r\n      HTTPResult res = ManagedWebAccess.get(Arrays.asList(\"web\"), source+\"?nocache=\" + System.currentTimeMillis());\r\n      res.checkThrowException();\r"
            },
            {
              "step": 1,
              "variableName": "\"No - can't initialise cache from \"+source+\": \"+e.getMessage()",
              "startLine": 88,
              "startColumn": 26,
              "endLine": 88,
              "endColumn": 88,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
              "type": "",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \"+source+\": \"+e.getMessage());\r\n    }\r\n  }\r\n\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 88,
              "startColumn": 62,
              "endLine": 88,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
              "type": "String",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \"+source+\": \"+e.getMessage());\r\n    }\r\n  }\r\n\r"
            },
            {
              "step": 1,
              "variableName": "\"No - can't initialise cache from \"+source+\": \"+e.getMessage()",
              "startLine": 88,
              "startColumn": 26,
              "endLine": 88,
              "endColumn": 88,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java",
              "type": "",
              "code": "      res.checkThrowException();\r\n      unzip(new ByteArrayInputStream(res.getContent()), cacheFolder);\r\n    } catch (Exception e) {\r\n      System.out.println(\"No - can't initialise cache from \"+source+\": \"+e.getMessage());\r\n    }\r\n  }\r\n\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "JsonResourceTemplateFixer.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 29,
              "startColumn": 25,
              "endLine": 29,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "  }\n\n  private void execute(String source, String dest, String path) throws JsonException, IOException {\n    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));"
            },
            {
              "step": 1,
              "variableName": "new File(source)",
              "startLine": 29,
              "startColumn": 16,
              "endLine": 29,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "  }\n\n  private void execute(String source, String dest, String path) throws JsonException, IOException {\n    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 30,
              "startColumn": 19,
              "endLine": 30,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "\n  private void execute(String source, String dest, String path) throws JsonException, IOException {\n    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));\n      } else if (f.getName().endsWith(\".json\")) {"
            },
            {
              "step": 3,
              "variableName": "src.listFiles()",
              "startLine": 30,
              "startColumn": 19,
              "endLine": 30,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File[]",
              "code": "\n  private void execute(String source, String dest, String path) throws JsonException, IOException {\n    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));\n      } else if (f.getName().endsWith(\".json\")) {"
            },
            {
              "step": 4,
              "variableName": "f",
              "startLine": 40,
              "startColumn": 65,
              "endLine": 40,
              "endColumn": 66,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 5,
              "variableName": "f.getName()",
              "startLine": 40,
              "startColumn": 65,
              "endLine": 40,
              "endColumn": 76,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 6,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String[] [[]] : String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 7,
              "variableName": "String... args",
              "startLine": 479,
              "startColumn": 29,
              "endLine": 479,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @throws IOException\n   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n"
            },
            {
              "step": 8,
              "variableName": "args",
              "startLine": 480,
              "startColumn": 51,
              "endLine": 480,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 9,
              "variableName": "String... args",
              "startLine": 88,
              "startColumn": 27,
              "endLine": 88,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "   * @see this#withRequireNonRootFirstEntry(boolean)\n   * @see this#withRequirePathIsChildOfTarget(boolean)\n   */\n  public String buildPath(String... args) throws IOException {\n\n    checkNonNullNonEmptyFirstEntry(args);\n    checkNonRootFirstEntry(args);"
            },
            {
              "step": 10,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "    boolean argIsNotEmptyOrNull = false;\n\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;"
            },
            {
              "step": 11,
              "variableName": "arg",
              "startLine": 98,
              "startColumn": 20,
              "endLine": 98,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;\n      if (!argIsNotEmptyOrNull)"
            },
            {
              "step": 12,
              "variableName": "a",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 13,
              "variableName": "a.replace(\"\\\\\", File.separator)",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 14,
              "variableName": "a",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 15,
              "variableName": "a.replace(\"/\", File.separator)",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 16,
              "variableName": "a",
              "startLine": 131,
              "startColumn": 30,
              "endLine": 131,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 17,
              "variableName": "stringBuilder",
              "startLine": 131,
              "startColumn": 9,
              "endLine": 131,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 18,
              "variableName": "stringBuilder",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 19,
              "variableName": "stringBuilder.toString()",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 20,
              "variableName": "PathBuilder.getPathBuilder().buildPath(args)",
              "startLine": 480,
              "startColumn": 12,
              "endLine": 480,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 21,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 22,
              "variableName": "new File(Utilities.path(dest, \"out\", path, f.getName()))",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 23,
              "variableName": "tgt",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 24,
              "variableName": "tgt.getAbsolutePath()",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 70,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 25,
              "variableName": "\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage()",
              "startLine": 46,
              "startColumn": 32,
              "endLine": 46,
              "endColumn": 90,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 30,
              "startColumn": 19,
              "endLine": 30,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "\n  private void execute(String source, String dest, String path) throws JsonException, IOException {\n    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));\n      } else if (f.getName().endsWith(\".json\")) {"
            },
            {
              "step": 1,
              "variableName": "src.listFiles()",
              "startLine": 30,
              "startColumn": 19,
              "endLine": 30,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File[]",
              "code": "\n  private void execute(String source, String dest, String path) throws JsonException, IOException {\n    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));\n      } else if (f.getName().endsWith(\".json\")) {"
            },
            {
              "step": 2,
              "variableName": "f",
              "startLine": 40,
              "startColumn": 65,
              "endLine": 40,
              "endColumn": 66,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 3,
              "variableName": "f.getName()",
              "startLine": 40,
              "startColumn": 65,
              "endLine": 40,
              "endColumn": 76,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 4,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String[] [[]] : String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 5,
              "variableName": "String... args",
              "startLine": 479,
              "startColumn": 29,
              "endLine": 479,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @throws IOException\n   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n"
            },
            {
              "step": 6,
              "variableName": "args",
              "startLine": 480,
              "startColumn": 51,
              "endLine": 480,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 7,
              "variableName": "String... args",
              "startLine": 88,
              "startColumn": 27,
              "endLine": 88,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "   * @see this#withRequireNonRootFirstEntry(boolean)\n   * @see this#withRequirePathIsChildOfTarget(boolean)\n   */\n  public String buildPath(String... args) throws IOException {\n\n    checkNonNullNonEmptyFirstEntry(args);\n    checkNonRootFirstEntry(args);"
            },
            {
              "step": 8,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "    boolean argIsNotEmptyOrNull = false;\n\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;"
            },
            {
              "step": 9,
              "variableName": "arg",
              "startLine": 98,
              "startColumn": 20,
              "endLine": 98,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;\n      if (!argIsNotEmptyOrNull)"
            },
            {
              "step": 10,
              "variableName": "a",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 11,
              "variableName": "a.replace(\"\\\\\", File.separator)",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 12,
              "variableName": "a",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 13,
              "variableName": "a.replace(\"/\", File.separator)",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 14,
              "variableName": "a",
              "startLine": 131,
              "startColumn": 30,
              "endLine": 131,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 15,
              "variableName": "stringBuilder",
              "startLine": 131,
              "startColumn": 9,
              "endLine": 131,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 16,
              "variableName": "stringBuilder",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 17,
              "variableName": "stringBuilder.toString()",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 18,
              "variableName": "PathBuilder.getPathBuilder().buildPath(args)",
              "startLine": 480,
              "startColumn": 12,
              "endLine": 480,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 19,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 20,
              "variableName": "new File(Utilities.path(dest, \"out\", path, f.getName()))",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 21,
              "variableName": "tgt",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 22,
              "variableName": "tgt.getAbsolutePath()",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 70,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 23,
              "variableName": "\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage()",
              "startLine": 46,
              "startColumn": 32,
              "endLine": 46,
              "endColumn": 90,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dest",
              "startLine": 32,
              "startColumn": 38,
              "endLine": 32,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "    File src = new File(source);\n    for (File f : src.listFiles()) {\n      if (f.isDirectory()) {\n        execute(f.getAbsolutePath(), dest, \"\".equals(path) ? f.getName() : Utilities.path(path, f.getName()));\n      } else if (f.getName().endsWith(\".json\")) {\n        JsonObject j = JsonParser.parseObject(f);\n        if (j.has(\"resourceType\")) {"
            },
            {
              "step": 1,
              "variableName": "dest",
              "startLine": 40,
              "startColumn": 46,
              "endLine": 40,
              "endColumn": 50,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 2,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String[] [[]] : String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 3,
              "variableName": "String... args",
              "startLine": 479,
              "startColumn": 29,
              "endLine": 479,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @throws IOException\n   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n"
            },
            {
              "step": 4,
              "variableName": "args",
              "startLine": 480,
              "startColumn": 51,
              "endLine": 480,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 5,
              "variableName": "String... args",
              "startLine": 88,
              "startColumn": 27,
              "endLine": 88,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "   * @see this#withRequireNonRootFirstEntry(boolean)\n   * @see this#withRequirePathIsChildOfTarget(boolean)\n   */\n  public String buildPath(String... args) throws IOException {\n\n    checkNonNullNonEmptyFirstEntry(args);\n    checkNonRootFirstEntry(args);"
            },
            {
              "step": 6,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "    boolean argIsNotEmptyOrNull = false;\n\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;"
            },
            {
              "step": 7,
              "variableName": "arg",
              "startLine": 98,
              "startColumn": 20,
              "endLine": 98,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;\n      if (!argIsNotEmptyOrNull)"
            },
            {
              "step": 8,
              "variableName": "a",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 9,
              "variableName": "a.replace(\"\\\\\", File.separator)",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 10,
              "variableName": "a",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 11,
              "variableName": "a.replace(\"/\", File.separator)",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 12,
              "variableName": "a",
              "startLine": 131,
              "startColumn": 30,
              "endLine": 131,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 13,
              "variableName": "stringBuilder",
              "startLine": 131,
              "startColumn": 9,
              "endLine": 131,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 14,
              "variableName": "stringBuilder",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 15,
              "variableName": "stringBuilder.toString()",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 16,
              "variableName": "PathBuilder.getPathBuilder().buildPath(args)",
              "startLine": 480,
              "startColumn": 12,
              "endLine": 480,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 17,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 18,
              "variableName": "new File(Utilities.path(dest, \"out\", path, f.getName()))",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 19,
              "variableName": "tgt",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 20,
              "variableName": "tgt.getAbsolutePath()",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 70,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 21,
              "variableName": "\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage()",
              "startLine": 46,
              "startColumn": 32,
              "endLine": 46,
              "endColumn": 90,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "dest",
              "startLine": 40,
              "startColumn": 46,
              "endLine": 40,
              "endColumn": 50,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 1,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String[] [[]] : String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 2,
              "variableName": "String... args",
              "startLine": 479,
              "startColumn": 29,
              "endLine": 479,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @throws IOException\n   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n"
            },
            {
              "step": 3,
              "variableName": "args",
              "startLine": 480,
              "startColumn": 51,
              "endLine": 480,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 4,
              "variableName": "String... args",
              "startLine": 88,
              "startColumn": 27,
              "endLine": 88,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "   * @see this#withRequireNonRootFirstEntry(boolean)\n   * @see this#withRequirePathIsChildOfTarget(boolean)\n   */\n  public String buildPath(String... args) throws IOException {\n\n    checkNonNullNonEmptyFirstEntry(args);\n    checkNonRootFirstEntry(args);"
            },
            {
              "step": 5,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String[] [[]] : String",
              "code": "    boolean argIsNotEmptyOrNull = false;\n\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;"
            },
            {
              "step": 6,
              "variableName": "arg",
              "startLine": 98,
              "startColumn": 20,
              "endLine": 98,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "\n    boolean first = true;\n    for (String arg : args) {\n      if (first && arg == null)\n        continue;\n      first = false;\n      if (!argIsNotEmptyOrNull)"
            },
            {
              "step": 7,
              "variableName": "a",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 8,
              "variableName": "a.replace(\"\\\\\", File.separator)",
              "startLine": 109,
              "startColumn": 11,
              "endLine": 109,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "      if (stringBuilder.length() == 0) {\n        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());"
            },
            {
              "step": 9,
              "variableName": "a",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 10,
              "variableName": "a.replace(\"/\", File.separator)",
              "startLine": 110,
              "startColumn": 11,
              "endLine": 110,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        a = replaceVariables(a);\n      }\n      a = a.replace(\"\\\\\", File.separator);\n      a = a.replace(\"/\", File.separator);\n      if (stringBuilder.length() > 0 && a.startsWith(File.separator))\n        a = a.substring(File.separator.length());\n"
            },
            {
              "step": 11,
              "variableName": "a",
              "startLine": 131,
              "startColumn": 30,
              "endLine": 131,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 12,
              "variableName": "stringBuilder",
              "startLine": 131,
              "startColumn": 9,
              "endLine": 131,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        int i = stringBuilder.substring(0, stringBuilder.length() - 1).lastIndexOf(File.separator);\n        stringBuilder = new StringBuilder(stringBuilder.substring(0, i + 1));\n      } else\n        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();"
            },
            {
              "step": 13,
              "variableName": "stringBuilder",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "StringBuilder",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 14,
              "variableName": "stringBuilder.toString()",
              "startLine": 134,
              "startColumn": 12,
              "endLine": 134,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/PathBuilder.java",
              "type": "String",
              "code": "        stringBuilder.append(a);\n    }\n    checkPathIsChildOfTarget(stringBuilder.toString(), args);\n    return stringBuilder.toString();\n  }\n\n  private void checkPathIsChildOfTarget(String path, String[] args) throws IOException {"
            },
            {
              "step": 15,
              "variableName": "PathBuilder.getPathBuilder().buildPath(args)",
              "startLine": 480,
              "startColumn": 12,
              "endLine": 480,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "   * @see PathBuilder#buildPath(String...)\n   */\n  public static String path(String... args) throws IOException {\n    return PathBuilder.getPathBuilder().buildPath(args);\n  }\n\n  public static File pathFile(String... args) throws IOException {"
            },
            {
              "step": 16,
              "variableName": "Utilities.path(dest, \"out\", path, f.getName())",
              "startLine": 40,
              "startColumn": 31,
              "endLine": 40,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 17,
              "variableName": "new File(Utilities.path(dest, \"out\", path, f.getName()))",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "          JsonParser.compose(j, new File(Utilities.path(dest, \"in\", path, f.getName())), true);\n          checkJsonObject(j);\n          FileUtilities.createDirectory(Utilities.path(dest, \"out\", path));\n          File tgt = new File(Utilities.path(dest, \"out\", path, f.getName()));\n          JsonParser.compose(j, tgt, true);\n          try {\n            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));"
            },
            {
              "step": 18,
              "variableName": "tgt",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "File",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 19,
              "variableName": "tgt.getAbsolutePath()",
              "startLine": 46,
              "startColumn": 49,
              "endLine": 46,
              "endColumn": 70,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "String",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            },
            {
              "step": 20,
              "variableName": "\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage()",
              "startLine": 46,
              "startColumn": 32,
              "endLine": 46,
              "endColumn": 90,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/JsonResourceTemplateFixer.java",
              "type": "",
              "code": "            var res = new org.hl7.fhir.r5.formats.JsonParser().parse(FileUtilities.fileToBytes(tgt));\n            new org.hl7.fhir.r5.formats.JsonParser().setOutputStyle(OutputStyle.PRETTY).compose(new FileOutputStream(tgt), res);\n          } catch (Exception e) {\n            System.out.println(\"Error reading \"+tgt.getAbsolutePath()+\": \"+e.getMessage());\n          }\n        }\n      }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 7,
      "fileName": "PackageClient.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 199,
              "startColumn": 48,
              "endLine": 199,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   */\n\n  public Content loadContent(String source, String opName, boolean asIg, boolean mustLoad) throws FHIRException, IOException {\n    Map<String, ByteProvider> s = loadIgSource(source, false, asIg);\n    Content res = new Content();\n    if (!mustLoad && s.size() == 0) {\n      return null;"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 311,
              "startColumn": 29,
              "endLine": 311,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);\n    }\n    throw new FHIRException(\"Unable to find/resolve/read \" + (explore ? \"-ig \" : \"\") + src);\n  }"
            },
            {
              "step": 3,
              "variableName": "String src",
              "startLine": 496,
              "startColumn": 52,
              "endLine": 496,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "  }\n\n\n  private Map<String, ByteProvider> fetchByPackage(String src, boolean loadInContext) throws FHIRException, IOException {\n    NpmPackage pi;\n    \n    if (directProvider != null) {"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 513,
              "startColumn": 59,
              "endLine": 513,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      version = src.substring(src.indexOf(\"#\") + 1);\n    }\n    if (version == null) {\n      version = getPackageCacheManager().getLatestVersion(id);\n    }\n    if (version == null) {\n      pi = getPackageCacheManager().loadPackageFromCacheOnly(id);"
            },
            {
              "step": 5,
              "variableName": "String id",
              "startLine": 342,
              "startColumn": 34,
              "endLine": 342,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    return fetchTheOldWay(id, version);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    for (PackageServer nextPackageServer : getPackageServers()) {\n      // special case:\n      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {"
            },
            {
              "step": 6,
              "variableName": "id",
              "startLine": 348,
              "startColumn": 38,
              "endLine": 348,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {\n        PackageClient pc = new PackageClient(nextPackageServer);\n        try {\n          return pc.getLatestVersion(id);\n        } catch (IOException e) {\n          ourLog.info(\"Failed to determine latest version of package {} from server: {}\", id, nextPackageServer.toString());\n        }"
            },
            {
              "step": 7,
              "variableName": "String id",
              "startLine": 203,
              "startColumn": 34,
              "endLine": 203,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return Utilities.pathURL(address, id, v);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);"
            },
            {
              "step": 8,
              "variableName": "id",
              "startLine": 204,
              "startColumn": 42,
              "endLine": 204,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);\n    } else {"
            },
            {
              "step": 9,
              "variableName": "String id",
              "startLine": 79,
              "startColumn": 40,
              "endLine": 79,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return fetchUrl(url, null);\n  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;"
            },
            {
              "step": 10,
              "variableName": "id",
              "startLine": 80,
              "startColumn": 45,
              "endLine": 80,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 11,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 12,
              "variableName": "String... args",
              "startLine": 526,
              "startColumn": 32,
              "endLine": 526,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n\n  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {"
            },
            {
              "step": 13,
              "variableName": "args",
              "startLine": 529,
              "startColumn": 23,
              "endLine": 529,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);"
            },
            {
              "step": 14,
              "variableName": "arg",
              "startLine": 530,
              "startColumn": 11,
              "endLine": 530,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))"
            },
            {
              "step": 15,
              "variableName": "arg",
              "startLine": 535,
              "startColumn": 18,
              "endLine": 535,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 16,
              "variableName": "s",
              "startLine": 535,
              "startColumn": 9,
              "endLine": 535,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 17,
              "variableName": "s",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 18,
              "variableName": "s.toString()",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 19,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 20,
              "variableName": "\"Error fetching \"+url+\": \"+e.getMessage()",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "",
              "code": "        Collections.sort(res, new PackageInfo.PackageInfoSorter(false));\n      }\n    } catch (Exception e) {\n      System.out.println(\"Error fetching \"+url+\": \"+e.getMessage());\n    }\n    return res;    \n  }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 430,
              "startColumn": 34,
              "endLine": 430,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "\n    public ValidationEngine fromSource(String src) throws IOException, URISyntaxException {\n      ValidationEngine engine = new ValidationEngine();\n      engine.loadCoreDefinitions(src, false, terminologyCachePath, userAgent, timeTracker, loggingService);\n      engine.getContext().setCanRunWithoutTerminology(canRunWithoutTerminologyServer);\n      engine.getContext().setPackageTracker(engine);    \n      if (txServer != null) {"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 500,
              "startColumn": 36,
              "endLine": 500,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   *\n   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 501,
              "startColumn": 43,
              "endLine": 501,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();\n      SimpleWorkerContext.SimpleWorkerContextBuilder contextBuilder = new SimpleWorkerContext.SimpleWorkerContextBuilder().withLoggingService(loggingService);"
            },
            {
              "step": 3,
              "variableName": "String id",
              "startLine": 641,
              "startColumn": 33,
              "endLine": 641,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public NpmPackage loadPackage(String id, String version) throws FHIRException, IOException {\n    //ok, try to resolve locally\n    if (!Utilities.noString(version) && version.startsWith(\"file:\")) {\n      return loadPackageFromFile(id, version.substring(5));"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 654,
              "startColumn": 36,
              "endLine": 654,
              "endColumn": 38,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n    if (version == null) {\n      try {\n        version = getLatestVersion(id);\n      } catch (Exception e) {\n        version = null;\n      }"
            },
            {
              "step": 5,
              "variableName": "String id",
              "startLine": 342,
              "startColumn": 34,
              "endLine": 342,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    return fetchTheOldWay(id, version);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    for (PackageServer nextPackageServer : getPackageServers()) {\n      // special case:\n      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {"
            },
            {
              "step": 6,
              "variableName": "id",
              "startLine": 348,
              "startColumn": 38,
              "endLine": 348,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {\n        PackageClient pc = new PackageClient(nextPackageServer);\n        try {\n          return pc.getLatestVersion(id);\n        } catch (IOException e) {\n          ourLog.info(\"Failed to determine latest version of package {} from server: {}\", id, nextPackageServer.toString());\n        }"
            },
            {
              "step": 7,
              "variableName": "String id",
              "startLine": 203,
              "startColumn": 34,
              "endLine": 203,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return Utilities.pathURL(address, id, v);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);"
            },
            {
              "step": 8,
              "variableName": "id",
              "startLine": 204,
              "startColumn": 42,
              "endLine": 204,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);\n    } else {"
            },
            {
              "step": 9,
              "variableName": "String id",
              "startLine": 79,
              "startColumn": 40,
              "endLine": 79,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return fetchUrl(url, null);\n  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;"
            },
            {
              "step": 10,
              "variableName": "id",
              "startLine": 80,
              "startColumn": 45,
              "endLine": 80,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 11,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 12,
              "variableName": "String... args",
              "startLine": 526,
              "startColumn": 32,
              "endLine": 526,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n\n  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {"
            },
            {
              "step": 13,
              "variableName": "args",
              "startLine": 529,
              "startColumn": 23,
              "endLine": 529,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);"
            },
            {
              "step": 14,
              "variableName": "arg",
              "startLine": 530,
              "startColumn": 11,
              "endLine": 530,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))"
            },
            {
              "step": 15,
              "variableName": "arg",
              "startLine": 535,
              "startColumn": 18,
              "endLine": 535,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 16,
              "variableName": "s",
              "startLine": 535,
              "startColumn": 9,
              "endLine": 535,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 17,
              "variableName": "s",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 18,
              "variableName": "s.toString()",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 19,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 20,
              "variableName": "\"Error fetching \"+url+\": \"+e.getMessage()",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "",
              "code": "        Collections.sort(res, new PackageInfo.PackageInfoSorter(false));\n      }\n    } catch (Exception e) {\n      System.out.println(\"Error fetching \"+url+\": \"+e.getMessage());\n    }\n    return res;    \n  }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 501,
              "startColumn": 43,
              "endLine": 501,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();\n      SimpleWorkerContext.SimpleWorkerContextBuilder contextBuilder = new SimpleWorkerContext.SimpleWorkerContextBuilder().withLoggingService(loggingService);"
            },
            {
              "step": 1,
              "variableName": "String id",
              "startLine": 641,
              "startColumn": 33,
              "endLine": 641,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public NpmPackage loadPackage(String id, String version) throws FHIRException, IOException {\n    //ok, try to resolve locally\n    if (!Utilities.noString(version) && version.startsWith(\"file:\")) {\n      return loadPackageFromFile(id, version.substring(5));"
            },
            {
              "step": 2,
              "variableName": "id",
              "startLine": 654,
              "startColumn": 36,
              "endLine": 654,
              "endColumn": 38,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n    if (version == null) {\n      try {\n        version = getLatestVersion(id);\n      } catch (Exception e) {\n        version = null;\n      }"
            },
            {
              "step": 3,
              "variableName": "String id",
              "startLine": 342,
              "startColumn": 34,
              "endLine": 342,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    return fetchTheOldWay(id, version);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    for (PackageServer nextPackageServer : getPackageServers()) {\n      // special case:\n      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 348,
              "startColumn": 38,
              "endLine": 348,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {\n        PackageClient pc = new PackageClient(nextPackageServer);\n        try {\n          return pc.getLatestVersion(id);\n        } catch (IOException e) {\n          ourLog.info(\"Failed to determine latest version of package {} from server: {}\", id, nextPackageServer.toString());\n        }"
            },
            {
              "step": 5,
              "variableName": "String id",
              "startLine": 203,
              "startColumn": 34,
              "endLine": 203,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return Utilities.pathURL(address, id, v);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);"
            },
            {
              "step": 6,
              "variableName": "id",
              "startLine": 204,
              "startColumn": 42,
              "endLine": 204,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);\n    } else {"
            },
            {
              "step": 7,
              "variableName": "String id",
              "startLine": 79,
              "startColumn": 40,
              "endLine": 79,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return fetchUrl(url, null);\n  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;"
            },
            {
              "step": 8,
              "variableName": "id",
              "startLine": 80,
              "startColumn": 45,
              "endLine": 80,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 9,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 10,
              "variableName": "String... args",
              "startLine": 526,
              "startColumn": 32,
              "endLine": 526,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n\n  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {"
            },
            {
              "step": 11,
              "variableName": "args",
              "startLine": 529,
              "startColumn": 23,
              "endLine": 529,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);"
            },
            {
              "step": 12,
              "variableName": "arg",
              "startLine": 530,
              "startColumn": 11,
              "endLine": 530,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))"
            },
            {
              "step": 13,
              "variableName": "arg",
              "startLine": 535,
              "startColumn": 18,
              "endLine": 535,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 14,
              "variableName": "s",
              "startLine": 535,
              "startColumn": 9,
              "endLine": 535,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 15,
              "variableName": "s",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 16,
              "variableName": "s.toString()",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 17,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 18,
              "variableName": "\"Error fetching \"+url+\": \"+e.getMessage()",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "",
              "code": "        Collections.sort(res, new PackageInfo.PackageInfoSorter(false));\n      }\n    } catch (Exception e) {\n      System.out.println(\"Error fetching \"+url+\": \"+e.getMessage());\n    }\n    return res;    \n  }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 512,
              "startColumn": 64,
              "endLine": 512,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 311,
              "startColumn": 29,
              "endLine": 311,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);\n    }\n    throw new FHIRException(\"Unable to find/resolve/read \" + (explore ? \"-ig \" : \"\") + src);\n  }"
            },
            {
              "step": 3,
              "variableName": "String src",
              "startLine": 496,
              "startColumn": 52,
              "endLine": 496,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "  }\n\n\n  private Map<String, ByteProvider> fetchByPackage(String src, boolean loadInContext) throws FHIRException, IOException {\n    NpmPackage pi;\n    \n    if (directProvider != null) {"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 513,
              "startColumn": 59,
              "endLine": 513,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      version = src.substring(src.indexOf(\"#\") + 1);\n    }\n    if (version == null) {\n      version = getPackageCacheManager().getLatestVersion(id);\n    }\n    if (version == null) {\n      pi = getPackageCacheManager().loadPackageFromCacheOnly(id);"
            },
            {
              "step": 5,
              "variableName": "String id",
              "startLine": 342,
              "startColumn": 34,
              "endLine": 342,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    return fetchTheOldWay(id, version);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    for (PackageServer nextPackageServer : getPackageServers()) {\n      // special case:\n      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {"
            },
            {
              "step": 6,
              "variableName": "id",
              "startLine": 348,
              "startColumn": 38,
              "endLine": 348,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "      if (!(Utilities.existsInList(id, CommonPackages.ID_PUBPACK, \"hl7.terminology.r5\") && PackageServer.SECONDARY_SERVER.equals(nextPackageServer.getUrl()))) {\n        PackageClient pc = new PackageClient(nextPackageServer);\n        try {\n          return pc.getLatestVersion(id);\n        } catch (IOException e) {\n          ourLog.info(\"Failed to determine latest version of package {} from server: {}\", id, nextPackageServer.toString());\n        }"
            },
            {
              "step": 7,
              "variableName": "String id",
              "startLine": 203,
              "startColumn": 34,
              "endLine": 203,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return Utilities.pathURL(address, id, v);\n  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);"
            },
            {
              "step": 8,
              "variableName": "id",
              "startLine": 204,
              "startColumn": 42,
              "endLine": 204,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public String getLatestVersion(String id) throws IOException {\n    List<PackageInfo> list = getVersions(id);\n    if (list.isEmpty()) {\n      throw new IOException(\"Package not found: \"+id);\n    } else {"
            },
            {
              "step": 9,
              "variableName": "String id",
              "startLine": 79,
              "startColumn": 40,
              "endLine": 79,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "    return fetchUrl(url, null);\n  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;"
            },
            {
              "step": 10,
              "variableName": "id",
              "startLine": 80,
              "startColumn": 45,
              "endLine": 80,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 11,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 12,
              "variableName": "String... args",
              "startLine": 526,
              "startColumn": 32,
              "endLine": 526,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n\n  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {"
            },
            {
              "step": 13,
              "variableName": "args",
              "startLine": 529,
              "startColumn": 23,
              "endLine": 529,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String[] [[]] : String",
              "code": "  public static String pathURL(String... args) {\n    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);"
            },
            {
              "step": 14,
              "variableName": "arg",
              "startLine": 530,
              "startColumn": 11,
              "endLine": 530,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "    StringBuilder s = new StringBuilder();\n    boolean d = false;\n    for (String arg : args) {\n      if (arg != null) {\n        if (!d)\n          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))"
            },
            {
              "step": 15,
              "variableName": "arg",
              "startLine": 535,
              "startColumn": 18,
              "endLine": 535,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 16,
              "variableName": "s",
              "startLine": 535,
              "startColumn": 9,
              "endLine": 535,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "          d = !noString(arg);\n        else if (s.toString() != null && !s.toString().endsWith(\"/\") && !arg.startsWith(\"/\") && !arg.startsWith(\"?\") && !arg.startsWith(\"&\"))\n          s.append(\"/\");\n        s.append(arg);\n      }\n    }\n    return s.toString();"
            },
            {
              "step": 17,
              "variableName": "s",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "StringBuilder",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 18,
              "variableName": "s.toString()",
              "startLine": 538,
              "startColumn": 12,
              "endLine": 538,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java",
              "type": "String",
              "code": "        s.append(arg);\n      }\n    }\n    return s.toString();\n  }\n\n  public static String nmtokenize(String cs) {"
            },
            {
              "step": 19,
              "variableName": "Utilities.pathURL(address, id)",
              "startLine": 80,
              "startColumn": 18,
              "endLine": 80,
              "endColumn": 48,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "String",
              "code": "  }\n\n  public List<PackageInfo> getVersions(String id) throws IOException {\n    String url = Utilities.pathURL(address, id);\n    List<PackageInfo> res = new ArrayList<>();\n    JsonObject json;\n    try {"
            },
            {
              "step": 20,
              "variableName": "\"Error fetching \"+url+\": \"+e.getMessage()",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/PackageClient.java",
              "type": "",
              "code": "        Collections.sort(res, new PackageInfo.PackageInfoSorter(false));\n      }\n    } catch (Exception e) {\n      System.out.println(\"Error fetching \"+url+\": \"+e.getMessage());\n    }\n    return res;    \n  }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 8,
      "fileName": "XhtmlUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 57,
              "startColumn": 19,
              "endLine": 57,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "String",
              "code": "  private String source;\n\n  public FhirRequestBuilder(HTTPRequest httpRequest, String source) {\n    this.source = source;\n    this.httpRequest = httpRequest;\n  }\n"
            },
            {
              "step": 1,
              "variableName": "this",
              "startLine": 57,
              "startColumn": 5,
              "endLine": 57,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  private String source;\n\n  public FhirRequestBuilder(HTTPRequest httpRequest, String source) {\n    this.source = source;\n    this.httpRequest = httpRequest;\n  }\n"
            },
            {
              "step": 2,
              "variableName": "new FhirRequestBuilder(request, base)",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 145,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 3,
              "variableName": "withLogger",
              "startLine": 151,
              "startColumn": 29,
              "endLine": 151,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {\n    this.logger = logger;\n    return this;\n  }"
            },
            {
              "step": 4,
              "variableName": "this",
              "startLine": 152,
              "startColumn": 5,
              "endLine": 152,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {\n    this.logger = logger;\n    return this;\n  }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 153,
              "startColumn": 12,
              "endLine": 153,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {\n    this.logger = logger;\n    return this;\n  }\n\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {"
            },
            {
              "step": 6,
              "variableName": "new FhirRequestBuilder(request, base).withLogger(logger)",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 145,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 7,
              "variableName": "withResourceFormat",
              "startLine": 131,
              "startColumn": 29,
              "endLine": 131,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return ManagedWebAccess.fhirAccessor().withRetries(retryCount).withTimeout(timeout, timeoutUnit).withLogger(logger);\n  }\n\n  public FhirRequestBuilder withResourceFormat(String resourceFormat) {\n    this.resourceFormat = resourceFormat;\n    return this;\n  }"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 132,
              "startColumn": 5,
              "endLine": 132,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withResourceFormat(String resourceFormat) {\n    this.resourceFormat = resourceFormat;\n    return this;\n  }\n"
            },
            {
              "step": 9,
              "variableName": "this",
              "startLine": 133,
              "startColumn": 12,
              "endLine": 133,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withResourceFormat(String resourceFormat) {\n    this.resourceFormat = resourceFormat;\n    return this;\n  }\n\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {"
            },
            {
              "step": 10,
              "variableName": "new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 145,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 11,
              "variableName": "withRetryCount",
              "startLine": 146,
              "startColumn": 29,
              "endLine": 146,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withRetryCount(int retryCount) {\n    this.retryCount = retryCount;\n    return this;\n  }"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 147,
              "startColumn": 5,
              "endLine": 147,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withRetryCount(int retryCount) {\n    this.retryCount = retryCount;\n    return this;\n  }\n"
            },
            {
              "step": 13,
              "variableName": "this",
              "startLine": 148,
              "startColumn": 12,
              "endLine": 148,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withRetryCount(int retryCount) {\n    this.retryCount = retryCount;\n    return this;\n  }\n\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {"
            },
            {
              "step": 14,
              "variableName": "new FhirRequestBuilder(r",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 146,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 15,
              "variableName": "withMessage",
              "startLine": 141,
              "startColumn": 29,
              "endLine": 141,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withMessage(String message) {\n    this.message = message;\n    return this;\n  }"
            },
            {
              "step": 16,
              "variableName": "this",
              "startLine": 142,
              "startColumn": 5,
              "endLine": 142,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withMessage(String message) {\n    this.message = message;\n    return this;\n  }\n"
            },
            {
              "step": 17,
              "variableName": "this",
              "startLine": 143,
              "startColumn": 12,
              "endLine": 143,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withMessage(String message) {\n    this.message = message;\n    return this;\n  }\n\n  public FhirRequestBuilder withRetryCount(int retryCount) {"
            },
            {
              "step": 18,
              "variableName": "new FhirRequestBuilder(request, base).withLog",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 146,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 19,
              "variableName": "withHeaders",
              "startLine": 136,
              "startColumn": 29,
              "endLine": 136,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {\n    this.headers = headers;\n    return this;\n  }"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 137,
              "startColumn": 5,
              "endLine": 137,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {\n    this.headers = headers;\n    return this;\n  }\n"
            },
            {
              "step": 21,
              "variableName": "this",
              "startLine": 138,
              "startColumn": 12,
              "endLine": 138,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {\n    this.headers = headers;\n    return this;\n  }\n\n  public FhirRequestBuilder withMessage(String message) {"
            },
            {
              "step": 22,
              "variableName": "new FhirRequestBuilder(request, base).withLogger(logger).withR",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 147,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 23,
              "variableName": "withTimeout",
              "startLine": 156,
              "startColumn": 29,
              "endLine": 156,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;"
            },
            {
              "step": 24,
              "variableName": "this",
              "startLine": 157,
              "startColumn": 5,
              "endLine": 157,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;\n  }"
            },
            {
              "step": 25,
              "variableName": "this",
              "startLine": 158,
              "startColumn": 5,
              "endLine": 158,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;\n  }\n"
            },
            {
              "step": 26,
              "variableName": "this",
              "startLine": 159,
              "startColumn": 12,
              "endLine": 159,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;\n  }\n\n"
            },
            {
              "step": 27,
              "variableName": "new FhirRequestBuilder(request, base).wit",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 148,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 28,
              "variableName": "execute",
              "startLine": 163,
              "startColumn": 50,
              "endLine": 163,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n\n  public <T extends Resource> ResourceRequest<T> execute() throws IOException {\n    HTTPRequest requestWithHeaders = formatHeaders(httpRequest, resourceFormat, headers);\n    HTTPResult response = getManagedWebAccessor().httpCall(requestWithHeaders);\n"
            },
            {
              "step": 29,
              "variableName": "unmarshalReference(response, resourceFormat, null)",
              "startLine": 167,
              "startColumn": 18,
              "endLine": 167,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    HTTPRequest requestWithHeaders = formatHeaders(httpRequest, resourceFormat, headers);\n    HTTPResult response = getManagedWebAccessor().httpCall(requestWithHeaders);\n\n    T resource = unmarshalReference(response, resourceFormat, null);\n    return new ResourceRequest<T>(resource, response.getCode(), getLocationHeader(response.getHeaders()));\n  }\n"
            },
            {
              "step": 30,
              "variableName": "unmarshalReference",
              "startLine": 181,
              "startColumn": 36,
              "endLine": 181,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "   * Unmarshalls a resource from the response stream.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected <T extends Resource> T unmarshalReference(HTTPResult response, String format, String resourceType) {\n    int code = response.getCode();\n    boolean ok = code >= 200 && code < 300;\n    if (response.getContent() == null) {"
            },
            {
              "step": 31,
              "variableName": "source",
              "startLine": 233,
              "startColumn": 129,
              "endLine": 233,
              "endColumn": 135,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "          resource = OperationOutcomeUtilities.outcomeFromTextError(body);\n          break;\n        case \"text/html\" : \n          resource = OperationOutcomeUtilities.outcomeFromTextError(XhtmlUtils.convertHtmlToText(response.getContentAsString(), source));\n          break;\n        default: // not sure what else to do? \n          System.out.println(\"Got content-type '\"+contentType+\"' from \"+source);"
            },
            {
              "step": 32,
              "variableName": "source",
              "startLine": 233,
              "startColumn": 129,
              "endLine": 233,
              "endColumn": 135,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "String",
              "code": "          resource = OperationOutcomeUtilities.outcomeFromTextError(body);\n          break;\n        case \"text/html\" : \n          resource = OperationOutcomeUtilities.outcomeFromTextError(XhtmlUtils.convertHtmlToText(response.getContentAsString(), source));\n          break;\n        default: // not sure what else to do? \n          System.out.println(\"Got content-type '\"+contentType+\"' from \"+source);"
            },
            {
              "step": 33,
              "variableName": "String desc",
              "startLine": 5,
              "startColumn": 57,
              "endLine": 5,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "String",
              "code": "\npublic class XhtmlUtils {\n\n  public static String convertHtmlToText(String source, String desc) {\n    try {\n      XhtmlDocument doc = new XhtmlParser().parse(source, \"html\");\n      return doc.getDocumentElement().allText();"
            },
            {
              "step": 34,
              "variableName": "\"XHTML content could not be parsed from \"+desc",
              "startLine": 11,
              "startColumn": 26,
              "endLine": 11,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "",
              "code": "      return doc.getDocumentElement().allText();\n    } catch (Exception e) {\n      // todo - should we try another way?\n      System.err.println(\"XHTML content could not be parsed from \"+desc);\n      e.printStackTrace();\n      System.err.println(source);\n      return \"Unparseable HTML\";"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 233,
              "startColumn": 129,
              "endLine": 233,
              "endColumn": 135,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/client/network/FhirRequestBuilder.java",
              "type": "String",
              "code": "          resource = OperationOutcomeUtilities.outcomeFromTextError(body);\n          break;\n        case \"text/html\" : \n          resource = OperationOutcomeUtilities.outcomeFromTextError(XhtmlUtils.convertHtmlToText(response.getContentAsString(), source));\n          break;\n        default: // not sure what else to do? \n          System.out.println(\"Got content-type '\"+contentType+\"' from \"+source);"
            },
            {
              "step": 1,
              "variableName": "String desc",
              "startLine": 5,
              "startColumn": 57,
              "endLine": 5,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "String",
              "code": "\npublic class XhtmlUtils {\n\n  public static String convertHtmlToText(String source, String desc) {\n    try {\n      XhtmlDocument doc = new XhtmlParser().parse(source, \"html\");\n      return doc.getDocumentElement().allText();"
            },
            {
              "step": 2,
              "variableName": "\"XHTML content could not be parsed from \"+desc",
              "startLine": 11,
              "startColumn": 26,
              "endLine": 11,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "",
              "code": "      return doc.getDocumentElement().allText();\n    } catch (Exception e) {\n      // todo - should we try another way?\n      System.err.println(\"XHTML content could not be parsed from \"+desc);\n      e.printStackTrace();\n      System.err.println(source);\n      return \"Unparseable HTML\";"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 56,
              "startColumn": 19,
              "endLine": 56,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "String",
              "code": "  private String source;\n\n  public FhirRequestBuilder(HTTPRequest httpRequest, String source) {\n    this.source = source;\n    this.httpRequest = httpRequest;\n  }\n"
            },
            {
              "step": 1,
              "variableName": "this",
              "startLine": 56,
              "startColumn": 5,
              "endLine": 56,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  private String source;\n\n  public FhirRequestBuilder(HTTPRequest httpRequest, String source) {\n    this.source = source;\n    this.httpRequest = httpRequest;\n  }\n"
            },
            {
              "step": 2,
              "variableName": "new FhirRequestBuilder(request, base)",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 145,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 3,
              "variableName": "withLogger",
              "startLine": 146,
              "startColumn": 29,
              "endLine": 146,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {\n    this.logger = logger;\n    return this;\n  }"
            },
            {
              "step": 4,
              "variableName": "this",
              "startLine": 147,
              "startColumn": 5,
              "endLine": 147,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {\n    this.logger = logger;\n    return this;\n  }\n"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 148,
              "startColumn": 12,
              "endLine": 148,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {\n    this.logger = logger;\n    return this;\n  }\n\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {"
            },
            {
              "step": 6,
              "variableName": "new FhirRequestBuilder(request, base).withLogger(logger)",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 145,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 7,
              "variableName": "withResourceFormat",
              "startLine": 126,
              "startColumn": 29,
              "endLine": 126,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return ManagedWebAccess.fhirAccessor().withRetries(retryCount).withTimeout(timeout, timeoutUnit).withLogger(logger);\n  }\n\n  public FhirRequestBuilder withResourceFormat(String resourceFormat) {\n    this.resourceFormat = resourceFormat;\n    return this;\n  }"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 127,
              "startColumn": 5,
              "endLine": 127,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withResourceFormat(String resourceFormat) {\n    this.resourceFormat = resourceFormat;\n    return this;\n  }\n"
            },
            {
              "step": 9,
              "variableName": "this",
              "startLine": 128,
              "startColumn": 12,
              "endLine": 128,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withResourceFormat(String resourceFormat) {\n    this.resourceFormat = resourceFormat;\n    return this;\n  }\n\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {"
            },
            {
              "step": 10,
              "variableName": "new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 145,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 11,
              "variableName": "withRetryCount",
              "startLine": 141,
              "startColumn": 29,
              "endLine": 141,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withRetryCount(int retryCount) {\n    this.retryCount = retryCount;\n    return this;\n  }"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 142,
              "startColumn": 5,
              "endLine": 142,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withRetryCount(int retryCount) {\n    this.retryCount = retryCount;\n    return this;\n  }\n"
            },
            {
              "step": 13,
              "variableName": "this",
              "startLine": 143,
              "startColumn": 12,
              "endLine": 143,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withRetryCount(int retryCount) {\n    this.retryCount = retryCount;\n    return this;\n  }\n\n  public FhirRequestBuilder withLogger(ToolingClientLogger logger) {"
            },
            {
              "step": 14,
              "variableName": "new FhirRequestBuilder(r",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 146,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 15,
              "variableName": "withMessage",
              "startLine": 136,
              "startColumn": 29,
              "endLine": 136,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withMessage(String message) {\n    this.message = message;\n    return this;\n  }"
            },
            {
              "step": 16,
              "variableName": "this",
              "startLine": 137,
              "startColumn": 5,
              "endLine": 137,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withMessage(String message) {\n    this.message = message;\n    return this;\n  }\n"
            },
            {
              "step": 17,
              "variableName": "this",
              "startLine": 138,
              "startColumn": 12,
              "endLine": 138,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withMessage(String message) {\n    this.message = message;\n    return this;\n  }\n\n  public FhirRequestBuilder withRetryCount(int retryCount) {"
            },
            {
              "step": 18,
              "variableName": "new FhirRequestBuilder(request, base).withLog",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 146,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 19,
              "variableName": "withHeaders",
              "startLine": 131,
              "startColumn": 29,
              "endLine": 131,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {\n    this.headers = headers;\n    return this;\n  }"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 132,
              "startColumn": 5,
              "endLine": 132,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {\n    this.headers = headers;\n    return this;\n  }\n"
            },
            {
              "step": 21,
              "variableName": "this",
              "startLine": 133,
              "startColumn": 12,
              "endLine": 133,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withHeaders(Iterable<HTTPHeader> headers) {\n    this.headers = headers;\n    return this;\n  }\n\n  public FhirRequestBuilder withMessage(String message) {"
            },
            {
              "step": 22,
              "variableName": "new FhirRequestBuilder(request, base).withLogger(logger).withR",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 147,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 23,
              "variableName": "withTimeout",
              "startLine": 151,
              "startColumn": 29,
              "endLine": 151,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;"
            },
            {
              "step": 24,
              "variableName": "this",
              "startLine": 152,
              "startColumn": 5,
              "endLine": 152,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  }\n\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;\n  }"
            },
            {
              "step": 25,
              "variableName": "this",
              "startLine": 153,
              "startColumn": 5,
              "endLine": 153,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;\n  }\n"
            },
            {
              "step": 26,
              "variableName": "this",
              "startLine": 154,
              "startColumn": 12,
              "endLine": 154,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  public FhirRequestBuilder withTimeout(long timeout, TimeUnit unit) {\n    this.timeout = timeout;\n    this.timeoutUnit = unit;\n    return this;\n  }\n\n  public <T extends Resource> ResourceRequest<T> execute() throws IOException {"
            },
            {
              "step": 27,
              "variableName": "new FhirRequestBuilder(request, base).wit",
              "startLine": 145,
              "startColumn": 12,
              "endLine": 148,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/Client.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "\n  public <T extends Resource> ResourceRequest<T> executeFhirRequest(HTTPRequest request, String resourceFormat,\n                                                                    Iterable<HTTPHeader> headers, String message, int retryCount, long timeout) throws IOException {\n    return new FhirRequestBuilder(request, base).withLogger(logger).withResourceFormat(resourceFormat)\n        .withRetryCount(retryCount).withMessage(message)\n        .withHeaders(headers == null ? Collections.emptyList() : headers)\n        .withTimeout(timeout, TimeUnit.MILLISECONDS).execute();"
            },
            {
              "step": 28,
              "variableName": "execute",
              "startLine": 157,
              "startColumn": 50,
              "endLine": 157,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "    return this;\n  }\n\n  public <T extends Resource> ResourceRequest<T> execute() throws IOException {\n    HTTPRequest requestWithHeaders = formatHeaders(httpRequest, resourceFormat, headers);\n    HTTPResult response = getManagedWebAccessor().httpCall(requestWithHeaders);\n    T resource = unmarshalReference(response, resourceFormat, null);"
            },
            {
              "step": 29,
              "variableName": "unmarshalReference(response, resourceFormat, null)",
              "startLine": 160,
              "startColumn": 18,
              "endLine": 160,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "  public <T extends Resource> ResourceRequest<T> execute() throws IOException {\n    HTTPRequest requestWithHeaders = formatHeaders(httpRequest, resourceFormat, headers);\n    HTTPResult response = getManagedWebAccessor().httpCall(requestWithHeaders);\n    T resource = unmarshalReference(response, resourceFormat, null);\n    return new ResourceRequest<T>(resource, response.getCode(), getLocationHeader(response.getHeaders()));\n  }\n"
            },
            {
              "step": 30,
              "variableName": "unmarshalReference",
              "startLine": 173,
              "startColumn": 36,
              "endLine": 173,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "   * Unmarshalls a resource from the response stream.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected <T extends Resource> T unmarshalReference(HTTPResult response, String format, String resourceType) {\n    int code = response.getCode();\n    boolean ok = code >= 200 && code < 300;\n    if (response.getContent() == null) {"
            },
            {
              "step": 31,
              "variableName": "source",
              "startLine": 225,
              "startColumn": 129,
              "endLine": 225,
              "endColumn": 135,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "FhirRequestBuilder [source] : String",
              "code": "          resource = OperationOutcomeUtilities.outcomeFromTextError(body);\n          break;\n        case \"text/html\" : \n          resource = OperationOutcomeUtilities.outcomeFromTextError(XhtmlUtils.convertHtmlToText(response.getContentAsString(), source));\n          break;\n        default: // not sure what else to do? \n          System.out.println(\"Got content-type '\"+contentType+\"' from \"+source);"
            },
            {
              "step": 32,
              "variableName": "source",
              "startLine": 225,
              "startColumn": 129,
              "endLine": 225,
              "endColumn": 135,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "String",
              "code": "          resource = OperationOutcomeUtilities.outcomeFromTextError(body);\n          break;\n        case \"text/html\" : \n          resource = OperationOutcomeUtilities.outcomeFromTextError(XhtmlUtils.convertHtmlToText(response.getContentAsString(), source));\n          break;\n        default: // not sure what else to do? \n          System.out.println(\"Got content-type '\"+contentType+\"' from \"+source);"
            },
            {
              "step": 33,
              "variableName": "String desc",
              "startLine": 5,
              "startColumn": 57,
              "endLine": 5,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "String",
              "code": "\npublic class XhtmlUtils {\n\n  public static String convertHtmlToText(String source, String desc) {\n    try {\n      XhtmlDocument doc = new XhtmlParser().parse(source, \"html\");\n      return doc.getDocumentElement().allText();"
            },
            {
              "step": 34,
              "variableName": "\"XHTML content could not be parsed from \"+desc",
              "startLine": 11,
              "startColumn": 26,
              "endLine": 11,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "",
              "code": "      return doc.getDocumentElement().allText();\n    } catch (Exception e) {\n      // todo - should we try another way?\n      System.err.println(\"XHTML content could not be parsed from \"+desc);\n      e.printStackTrace();\n      System.err.println(source);\n      return \"Unparseable HTML\";"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 225,
              "startColumn": 129,
              "endLine": 225,
              "endColumn": 135,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/utils/client/network/FhirRequestBuilder.java",
              "type": "String",
              "code": "          resource = OperationOutcomeUtilities.outcomeFromTextError(body);\n          break;\n        case \"text/html\" : \n          resource = OperationOutcomeUtilities.outcomeFromTextError(XhtmlUtils.convertHtmlToText(response.getContentAsString(), source));\n          break;\n        default: // not sure what else to do? \n          System.out.println(\"Got content-type '\"+contentType+\"' from \"+source);"
            },
            {
              "step": 1,
              "variableName": "String desc",
              "startLine": 5,
              "startColumn": 57,
              "endLine": 5,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "String",
              "code": "\npublic class XhtmlUtils {\n\n  public static String convertHtmlToText(String source, String desc) {\n    try {\n      XhtmlDocument doc = new XhtmlParser().parse(source, \"html\");\n      return doc.getDocumentElement().allText();"
            },
            {
              "step": 2,
              "variableName": "\"XHTML content could not be parsed from \"+desc",
              "startLine": 11,
              "startColumn": 26,
              "endLine": 11,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "",
              "code": "      return doc.getDocumentElement().allText();\n    } catch (Exception e) {\n      // todo - should we try another way?\n      System.err.println(\"XHTML content could not be parsed from \"+desc);\n      e.printStackTrace();\n      System.err.println(source);\n      return \"Unparseable HTML\";"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 9,
      "fileName": "XhtmlUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 7,
              "startColumn": 51,
              "endLine": 7,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "String",
              "code": "\n  public static String convertHtmlToText(String source, String desc) {\n    try {\n      XhtmlDocument doc = new XhtmlParser().parse(source, \"html\");\n      return doc.getDocumentElement().allText();\n    } catch (Exception e) {\n      // todo - should we try another way?"
            },
            {
              "step": 1,
              "variableName": "source",
              "startLine": 13,
              "startColumn": 26,
              "endLine": 13,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xhtml/XhtmlUtils.java",
              "type": "",
              "code": "      // todo - should we try another way?\n      System.err.println(\"XHTML content could not be parsed from \"+desc);\n      e.printStackTrace();\n      System.err.println(source);\n      return \"Unparseable HTML\";\n    }\n  }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 10,
      "fileName": "XLSXmlNormaliser.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "dest",
              "startLine": 121,
              "startColumn": 57,
              "endLine": 121,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "String",
              "code": "    if (!hasComment)\n      root.appendChild(xml.createComment(\"canonicalized\"));\n    try {\n      FileOutputStream fs = ManagedFileAccess.outStream(dest);\n      try {\n        saveXml(fs);\n      } finally {"
            },
            {
              "step": 1,
              "variableName": "\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\"",
              "startLine": 133,
              "startColumn": 26,
              "endLine": 133,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "",
              "code": "      FileUtilities.stringToFile(s, dest);\n      ManagedFileAccess.file(dest).setLastModified(time);\n    } catch (Exception e) {\n      System.out.println(\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\");\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "dest",
              "startLine": 127,
              "startColumn": 45,
              "endLine": 127,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "String",
              "code": "      } finally {\n        fs.close();\n      }\n      String s = FileUtilities.fileToString(dest);\n      s = s.replaceAll(\"\\r\\n\",\"\\n\");\n      s = replaceSignificantEoln(s);\n      FileUtilities.stringToFile(s, dest);"
            },
            {
              "step": 1,
              "variableName": "\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\"",
              "startLine": 133,
              "startColumn": 26,
              "endLine": 133,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "",
              "code": "      FileUtilities.stringToFile(s, dest);\n      ManagedFileAccess.file(dest).setLastModified(time);\n    } catch (Exception e) {\n      System.out.println(\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\");\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "dest",
              "startLine": 130,
              "startColumn": 37,
              "endLine": 130,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "String",
              "code": "      String s = FileUtilities.fileToString(dest);\n      s = s.replaceAll(\"\\r\\n\",\"\\n\");\n      s = replaceSignificantEoln(s);\n      FileUtilities.stringToFile(s, dest);\n      ManagedFileAccess.file(dest).setLastModified(time);\n    } catch (Exception e) {\n      System.out.println(\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\");"
            },
            {
              "step": 1,
              "variableName": "\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\"",
              "startLine": 133,
              "startColumn": 26,
              "endLine": 133,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "",
              "code": "      FileUtilities.stringToFile(s, dest);\n      ManagedFileAccess.file(dest).setLastModified(time);\n    } catch (Exception e) {\n      System.out.println(\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\");\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "dest",
              "startLine": 131,
              "startColumn": 30,
              "endLine": 131,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "String",
              "code": "      s = s.replaceAll(\"\\r\\n\",\"\\n\");\n      s = replaceSignificantEoln(s);\n      FileUtilities.stringToFile(s, dest);\n      ManagedFileAccess.file(dest).setLastModified(time);\n    } catch (Exception e) {\n      System.out.println(\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\");\n    }"
            },
            {
              "step": 1,
              "variableName": "\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\"",
              "startLine": 133,
              "startColumn": 26,
              "endLine": 133,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xls/XLSXmlNormaliser.java",
              "type": "",
              "code": "      FileUtilities.stringToFile(s, dest);\n      ManagedFileAccess.file(dest).setLastModified(time);\n    } catch (Exception e) {\n      System.out.println(\"The file \"+dest+\" is still open in Excel, and you will have to run the build after closing Excel before committing\");\n    }\n  }\n"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 11,
      "fileName": "ValidationEngine.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 156,
              "startColumn": 9,
              "endLine": 156,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "   \n  \n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 190,
              "startColumn": 17,
              "endLine": 190,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  }\n\n\tpublic String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 194,
              "startColumn": 14,
              "endLine": 194,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "getUserString(UserDataNames.render_presentation)",
              "startLine": 601,
              "startColumn": 14,
              "endLine": 601,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/CanonicalResource.java",
              "type": "String",
              "code": "  \r\n  public String present() {\r\n    if (hasUserData(UserDataNames.render_presentation)) {\r\n      return getUserString(UserDataNames.render_presentation);\r\n    }\r\n    if (hasTitle())\r\n      return getTitle();\r"
            },
            {
              "step": 6,
              "variableName": "sd.present()",
              "startLine": 960,
              "startColumn": 79,
              "endLine": 960,
              "endColumn": 91,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      try {\n        makeSnapshot(sd);\n      } catch (Exception e) {\n        System.out.println(\"Process Note: Unable to generate snapshot for \" + sd.present() + \": \" + e.getMessage());\n        if (context.getLogger().isDebugLogging()) {\n          e.printStackTrace();\n        }"
            },
            {
              "step": 7,
              "variableName": "\"Process Note: Unable to generate snapshot for \" + sd.present() + \": \" + e.getMessage()",
              "startLine": 960,
              "startColumn": 28,
              "endLine": 960,
              "endColumn": 115,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "",
              "code": "      try {\n        makeSnapshot(sd);\n      } catch (Exception e) {\n        System.out.println(\"Process Note: Unable to generate snapshot for \" + sd.present() + \": \" + e.getMessage());\n        if (context.getLogger().isDebugLogging()) {\n          e.printStackTrace();\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 158,
              "startColumn": 12,
              "endLine": 158,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n  \n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 190,
              "startColumn": 17,
              "endLine": 190,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "Object",
              "code": "  }\n\n\tpublic String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 194,
              "startColumn": 14,
              "endLine": 194,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "getUserString(UserDataNames.render_presentation)",
              "startLine": 601,
              "startColumn": 14,
              "endLine": 601,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/CanonicalResource.java",
              "type": "String",
              "code": "  \r\n  public String present() {\r\n    if (hasUserData(UserDataNames.render_presentation)) {\r\n      return getUserString(UserDataNames.render_presentation);\r\n    }\r\n    if (hasTitle())\r\n      return getTitle();\r"
            },
            {
              "step": 5,
              "variableName": "sd.present()",
              "startLine": 960,
              "startColumn": 79,
              "endLine": 960,
              "endColumn": 91,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      try {\n        makeSnapshot(sd);\n      } catch (Exception e) {\n        System.out.println(\"Process Note: Unable to generate snapshot for \" + sd.present() + \": \" + e.getMessage());\n        if (context.getLogger().isDebugLogging()) {\n          e.printStackTrace();\n        }"
            },
            {
              "step": 6,
              "variableName": "\"Process Note: Unable to generate snapshot for \" + sd.present() + \": \" + e.getMessage()",
              "startLine": 960,
              "startColumn": 28,
              "endLine": 960,
              "endColumn": 115,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "",
              "code": "      try {\n        makeSnapshot(sd);\n      } catch (Exception e) {\n        System.out.println(\"Process Note: Unable to generate snapshot for \" + sd.present() + \": \" + e.getMessage());\n        if (context.getLogger().isDebugLogging()) {\n          e.printStackTrace();\n        }"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 12,
      "fileName": "VSACImporter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "\"Unable to fetch OID \" + oid + \": \" + e.getMessage()",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "        }\r\n      } catch (Exception e) {\r\n        e.printStackTrace();\r\n        System.out.println(\"Unable to fetch OID \" + oid + \": \" + e.getMessage());\r\n        errs.put(oid, e.getMessage());\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 23,
              "variableName": "s.substring(1, s.length()-2)",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 24,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 25,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 26,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 27,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 28,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 29,
              "variableName": "oid",
              "startLine": 114,
              "startColumn": 53,
              "endLine": 114,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        }\r\n      } catch (Exception e) {\r\n        e.printStackTrace();\r\n        System.out.println(\"Unable to fetch OID \" + oid + \": \" + e.getMessage());\r\n        errs.put(oid, e.getMessage());\r\n      }\r\n    }\r"
            },
            {
              "step": 30,
              "variableName": "\"Unable to fetch OID \" + oid + \": \" + e.getMessage()",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "        }\r\n      } catch (Exception e) {\r\n        e.printStackTrace();\r\n        System.out.println(\"Unable to fetch OID \" + oid + \": \" + e.getMessage());\r\n        errs.put(oid, e.getMessage());\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "\"Unable to fetch OID \" + oid + \": \" + e.getMessage()",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "        }\r\n      } catch (Exception e) {\r\n        e.printStackTrace();\r\n        System.out.println(\"Unable to fetch OID \" + oid + \": \" + e.getMessage());\r\n        errs.put(oid, e.getMessage());\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "\"Unable to fetch OID \" + oid + \": \" + e.getMessage()",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "        }\r\n      } catch (Exception e) {\r\n        e.printStackTrace();\r\n        System.out.println(\"Unable to fetch OID \" + oid + \": \" + e.getMessage());\r\n        errs.put(oid, e.getMessage());\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 13,
      "fileName": "VSACImporter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 164,
              "startColumn": 30,
              "endLine": 164,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "          ok = false;\r\n        } else {\r\n          errs.put(oid, \"Read: \" +e.getMessage());\r\n          System.out.println(\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n          return false;\r\n        }\r\n      }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 23,
              "variableName": "s.substring(1, s.length()-2)",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 24,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 25,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 26,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 27,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 28,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 29,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 30,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 31,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 32,
              "variableName": "\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 164,
              "startColumn": 30,
              "endLine": 164,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "          ok = false;\r\n        } else {\r\n          errs.put(oid, \"Read: \" +e.getMessage());\r\n          System.out.println(\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n          return false;\r\n        }\r\n      }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 164,
              "startColumn": 30,
              "endLine": 164,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "          ok = false;\r\n        } else {\r\n          errs.put(oid, \"Read: \" +e.getMessage());\r\n          System.out.println(\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n          return false;\r\n        }\r\n      }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 164,
              "startColumn": 30,
              "endLine": 164,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "          ok = false;\r\n        } else {\r\n          errs.put(oid, \"Read: \" +e.getMessage());\r\n          System.out.println(\"Read \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n          return false;\r\n        }\r\n      }\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 14,
      "fileName": "VSACImporter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 180,
              "startColumn": 32,
              "endLine": 180,
              "endColumn": 137,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "            ok = false;\r\n          } else {\r\n            errs.put(oid, \"Expansion: \" +e.getMessage());\r\n            System.out.println(\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n            return false;\r\n          }\r\n        }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 23,
              "variableName": "s.substring(1, s.length()-2)",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 24,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 25,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 26,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 27,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 28,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 29,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 30,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 31,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 32,
              "variableName": "\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 180,
              "startColumn": 32,
              "endLine": 180,
              "endColumn": 137,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "            ok = false;\r\n          } else {\r\n            errs.put(oid, \"Expansion: \" +e.getMessage());\r\n            System.out.println(\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n            return false;\r\n          }\r\n        }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 180,
              "startColumn": 32,
              "endLine": 180,
              "endColumn": 137,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "            ok = false;\r\n          } else {\r\n            errs.put(oid, \"Expansion: \" +e.getMessage());\r\n            System.out.println(\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n            return false;\r\n          }\r\n        }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage()",
              "startLine": 180,
              "startColumn": 32,
              "endLine": 180,
              "endColumn": 137,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "            ok = false;\r\n          } else {\r\n            errs.put(oid, \"Expansion: \" +e.getMessage());\r\n            System.out.println(\"Expand \"+oid+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e.getMessage());\r\n            return false;\r\n          }\r\n        }\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 15,
      "fileName": "VSACImporter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage()",
              "startLine": 202,
              "startColumn": 34,
              "endLine": 202,
              "endColumn": 153,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "              break;\r\n            } else {\r\n              errs.put(oid, \"Expansion: \" +e2.getMessage()+\" @ \"+offset);\r\n              System.out.println(\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage());\r\n              return false;\r\n            }\r\n          } \r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 16,
              "endLine": 106,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 23,
              "variableName": "s.substring(1, s.length()-2)",
              "startLine": 110,
              "startColumn": 14,
              "endLine": 110,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }"
            },
            {
              "step": 24,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 25,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 26,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 27,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 28,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 29,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 30,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 31,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 32,
              "variableName": "\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage()",
              "startLine": 202,
              "startColumn": 34,
              "endLine": 202,
              "endColumn": 153,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "              break;\r\n            } else {\r\n              errs.put(oid, \"Expansion: \" +e2.getMessage()+\" @ \"+offset);\r\n              System.out.println(\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage());\r\n              return false;\r\n            }\r\n          } \r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 160,
              "startColumn": 19,
              "endLine": 160,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 160,
              "startColumn": 10,
              "endLine": 160,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {\n\t        b.append(c);\n          next();\n\t\t\t\t} else {\n\t\t\t    inQuote = !inQuote;"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 173,
              "startColumn": 11,
              "endLine": 173,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 173,
              "startColumn": 3,
              "endLine": 173,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {\n\t\t\tnext();\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage()",
              "startLine": 202,
              "startColumn": 34,
              "endLine": 202,
              "endColumn": 153,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "              break;\r\n            } else {\r\n              errs.put(oid, \"Expansion: \" +e2.getMessage()+\" @ \"+offset);\r\n              System.out.println(\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage());\r\n              return false;\r\n            }\r\n          } \r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "pc",
              "startLine": 203,
              "startColumn": 12,
              "endLine": 203,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t  if (state == 0)\n\t\t  next();\n\t  if (state == 1)\n\t\t  return pc;\n\t  else\n\t\t  throw new FHIRException(\"read past end of source\");\n\t}"
            },
            {
              "step": 1,
              "variableName": "peek()",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\tboolean inQuote = false;\n\n\t\twhile (more() && !finished(inQuote, res.size())) {\n\t\t\tchar c = peek();\n\t\t\tnext();\n\t\t\tif (c == '\"' && doingQuotes) {\n\t\t\t\tif (ready() && peek() == '\"') {"
            },
            {
              "step": 2,
              "variableName": "c",
              "startLine": 171,
              "startColumn": 14,
              "endLine": 171,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "Number",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 3,
              "variableName": "b",
              "startLine": 171,
              "startColumn": 5,
              "endLine": 171,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse \n\t\t\t\tb.append(c);\n\t\t}\n\t\tres.add(b.toString().trim());\n\t\twhile (ready() && (peek() == '\\r' || peek() == '\\n')) {"
            },
            {
              "step": 4,
              "variableName": "b",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 5,
              "variableName": "b.toString()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 6,
              "variableName": "b.toString().trim()",
              "startLine": 167,
              "startColumn": 13,
              "endLine": 167,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 7,
              "variableName": "res",
              "startLine": 167,
              "startColumn": 5,
              "endLine": 167,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!inQuote && c == delimiter ) {\n\t\t\t\tres.add(b.toString().trim());\n\t\t\t\tb = new StringBuilder();\n\t\t\t}\n\t\t\telse "
            },
            {
              "step": 8,
              "variableName": "res",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 10,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "ArrayList [<element>] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "res.toArray(r)",
              "startLine": 179,
              "startColumn": 7,
              "endLine": 179,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t}\n\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n"
            },
            {
              "step": 10,
              "variableName": "r",
              "startLine": 180,
              "startColumn": 10,
              "endLine": 180,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\n\t\tString[] r = new String[] {};\n\t\tr = res.toArray(r);\n\t\treturn r;\n\t}\n\n\tprivate boolean more() throws IOException {"
            },
            {
              "step": 11,
              "variableName": "parseLine()",
              "startLine": 77,
              "startColumn": 15,
              "endLine": 77,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 12,
              "variableName": "cells",
              "startLine": 77,
              "startColumn": 7,
              "endLine": 77,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "\n  public boolean line() throws IOException, FHIRException {\n    if (ready()) {\n      cells = parseLine();\n      return true;\n    }  else\n      return false;"
            },
            {
              "step": 13,
              "variableName": "csv",
              "startLine": 79,
              "startColumn": 12,
              "endLine": 79,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    System.out.println(\"Loading\");\r\n    List<String> oids = new ArrayList<>();\r\n    List<String> allOids = new ArrayList<>();\r\n    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r"
            },
            {
              "step": 14,
              "variableName": "csv",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 15,
              "variableName": "cell",
              "startLine": 92,
              "startColumn": 17,
              "endLine": 92,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n  \n\n  public String cell(String name) {\n    int index = -1;\n    for (int i = 0; i < cols.length; i++) {\n      if (name.equals(cols[i].trim())) {"
            },
            {
              "step": 16,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 17,
              "variableName": "cell",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "    return cell(index);\n  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;"
            },
            {
              "step": 18,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "CSVReader [cells, []] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 19,
              "variableName": "cells",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 44,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String[] [[]] : String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 20,
              "variableName": "cells[index]",
              "startLine": 106,
              "startColumn": 39,
              "endLine": 106,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "  }\n\n  public String cell(int index) {\n    String s = cells.length > index ? cells[index] : null;\n    if (Utilities.noString(s))\n      return null;\n    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 112,
              "startColumn": 14,
              "endLine": 112,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    if (s.startsWith(\"\\\"\") && s.endsWith(\"\\\"\")) {\n      return s.substring(1, s.length()-2);     \n    } else {\n      return s;\n    }\n  }\n    "
            },
            {
              "step": 22,
              "variableName": "cell(index)",
              "startLine": 102,
              "startColumn": 12,
              "endLine": 102,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/CSVReader.java",
              "type": "String",
              "code": "    }\n    if (index == -1)\n      throw new FHIRException(\"no cell \"+name+\" in \"+cols);\n    return cell(index);\n  }\n\n  public String cell(int index) {"
            },
            {
              "step": 23,
              "variableName": "csv.cell(\"OID\")",
              "startLine": 82,
              "startColumn": 22,
              "endLine": 82,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    while (csv.line()) {\r\n      String status = csv.cell(\"Expansion Status\");\r\n      if (!onlyActive || \"Active\".equals(status)) {\r\n        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r"
            },
            {
              "step": 24,
              "variableName": "oid",
              "startLine": 85,
              "startColumn": 20,
              "endLine": 85,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 25,
              "variableName": "oids",
              "startLine": 85,
              "startColumn": 11,
              "endLine": 85,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "        String oid = csv.cell(\"OID\");\r\n        allOids.add(oid);\r\n        if (!onlyNew || !(ManagedFileAccess.file(Utilities.path(dest, \"ValueSet-\" + oid + \".json\")).exists())) {\r\n          oids.add(oid);\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 26,
              "variableName": "oids",
              "startLine": 97,
              "startColumn": 23,
              "endLine": 97,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "ArrayList [<element>] : String",
              "code": "    int j = 0;\r\n    long t = System.currentTimeMillis();\r\n    long tt = System.currentTimeMillis();\r\n    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r"
            },
            {
              "step": 27,
              "variableName": "oid",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 28,
              "variableName": "oid.trim()",
              "startLine": 100,
              "startColumn": 64,
              "endLine": 100,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    for (String oid : oids) {\r\n      try {\r\n        long t3 = System.currentTimeMillis();\r\n        if (processOid(dest, onlyNew, errs, fhirToolingClient, oid.trim())) {\r\n          j++;\r\n        }\r\n        i++;\r"
            },
            {
              "step": 29,
              "variableName": "String oid",
              "startLine": 150,
              "startColumn": 123,
              "endLine": 150,
              "endColumn": 133,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "String",
              "code": "    return (size - i) * average;\r\n  }\r\n\r\n  private boolean processOid(String dest, boolean onlyNew, Map<String, String> errs, FHIRToolingClient fhirToolingClient, String oid)\r\n      throws IOException, InterruptedException, FileNotFoundException {\r\n    \r\n    while (true) {\r"
            },
            {
              "step": 30,
              "variableName": "\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage()",
              "startLine": 202,
              "startColumn": 34,
              "endLine": 202,
              "endColumn": 153,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/VSACImporter.java",
              "type": "",
              "code": "              break;\r\n            } else {\r\n              errs.put(oid, \"Expansion: \" +e2.getMessage()+\" @ \"+offset);\r\n              System.out.println(\"Expand \"+oid+\" @ \"+offset+\" failed @ \"+Utilities.describeDuration(System.currentTimeMillis()-t)+\"ms: \"+e2.getMessage());\r\n              return false;\r\n            }\r\n          } \r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 16,
      "fileName": "UTGVersionSorter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 51,
              "startColumn": 49,
              "endLine": 51,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "String",
              "code": "  private void execute(String source) throws IOException {\r\n    List<CanonicalResourceAnalysis> list = new ArrayList<>();\r\n    System.out.println(\"Loading UTG\");\r\n    loadFromSource(list, ManagedFileAccess.file(source));\r\n\r\n    Map<String, CanonicalResource> r2 = loadPackageR2(\"hl7.fhir.r2.core\");\r\n    Map<String, CanonicalResource> r3 = loadPackageR3(\"hl7.fhir.r3.core\");\r"
            },
            {
              "step": 1,
              "variableName": "String pathname",
              "startLine": 101,
              "startColumn": 27,
              "endLine": 101,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "String",
              "code": "  /** \n   * Open a file, conforming to local security policy \n   **/\n  public static File file(String pathname) throws IOException {\n    switch (accessPolicy) {\n    case DIRECT:\n      if (!inAllowedPaths(pathname)) {"
            },
            {
              "step": 2,
              "variableName": "pathname",
              "startLine": 107,
              "startColumn": 23,
              "endLine": 107,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "String",
              "code": "      if (!inAllowedPaths(pathname)) {\n        throw new IOException(\"The pathname '\"+pathname+\"' cannot be accessed by policy\");\n      }\n      return new File(pathname);\n    case MANAGED:\n      return accessor.file(pathname);\n    case PROHIBITED:"
            },
            {
              "step": 3,
              "variableName": "new File(pathname)",
              "startLine": 107,
              "startColumn": 14,
              "endLine": 107,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "File",
              "code": "      if (!inAllowedPaths(pathname)) {\n        throw new IOException(\"The pathname '\"+pathname+\"' cannot be accessed by policy\");\n      }\n      return new File(pathname);\n    case MANAGED:\n      return accessor.file(pathname);\n    case PROHIBITED:"
            },
            {
              "step": 4,
              "variableName": "ManagedFileAccess.file(source)",
              "startLine": 51,
              "startColumn": 26,
              "endLine": 51,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "  private void execute(String source) throws IOException {\r\n    List<CanonicalResourceAnalysis> list = new ArrayList<>();\r\n    System.out.println(\"Loading UTG\");\r\n    loadFromSource(list, ManagedFileAccess.file(source));\r\n\r\n    Map<String, CanonicalResource> r2 = loadPackageR2(\"hl7.fhir.r2.core\");\r\n    Map<String, CanonicalResource> r3 = loadPackageR3(\"hl7.fhir.r3.core\");\r"
            },
            {
              "step": 5,
              "variableName": "File source",
              "startLine": 132,
              "startColumn": 69,
              "endLine": 132,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "    return res;\r\n  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r"
            },
            {
              "step": 6,
              "variableName": "source",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 7,
              "variableName": "source.listFiles()",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File[]",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 8,
              "variableName": "f",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 9,
              "variableName": "f.getAbsolutePath()",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "String",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 10,
              "variableName": "f.getAbsolutePath() + \" not a resource? \" + e.getMessage()",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 88,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 1,
              "variableName": "source.listFiles()",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File[]",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 2,
              "variableName": "f",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 3,
              "variableName": "f.getAbsolutePath()",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "String",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 4,
              "variableName": "f.getAbsolutePath() + \" not a resource? \" + e.getMessage()",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 88,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 1,
              "variableName": "source.listFiles()",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File[]",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 2,
              "variableName": "f",
              "startLine": 135,
              "startColumn": 30,
              "endLine": 135,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 3,
              "variableName": "File source",
              "startLine": 132,
              "startColumn": 69,
              "endLine": 132,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "    return res;\r\n  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r"
            },
            {
              "step": 4,
              "variableName": "source",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 5,
              "variableName": "source.listFiles()",
              "startLine": 133,
              "startColumn": 19,
              "endLine": 133,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File[]",
              "code": "  }\r\n\r\n  private void loadFromSource(List<CanonicalResourceAnalysis> list, File source) {\r\n    for (File f : source.listFiles()) {\r\n      if (f.isDirectory()) {\r\n        loadFromSource(list, f);\r\n      } else if (f.getName().endsWith(\".xml\")) {\r"
            },
            {
              "step": 6,
              "variableName": "f",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "File",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 7,
              "variableName": "f.getAbsolutePath()",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "String",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            },
            {
              "step": 8,
              "variableName": "f.getAbsolutePath() + \" not a resource? \" + e.getMessage()",
              "startLine": 147,
              "startColumn": 30,
              "endLine": 147,
              "endColumn": 88,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/utg/UTGVersionSorter.java",
              "type": "",
              "code": "            }\r\n          }\r\n        } catch (Exception e) {\r\n          System.out.println(f.getAbsolutePath() + \" not a resource? \" + e.getMessage());\r\n        }\r\n      }\r\n    }\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 17,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 205,
              "startColumn": 24,
              "endLine": 205,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "\n  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader) throws FileNotFoundException, IOException, FHIRException  {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) { \n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 205,
              "startColumn": 24,
              "endLine": 205,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "\n  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader) throws FileNotFoundException, IOException, FHIRException  {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) { \n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 207,
              "startColumn": 32,
              "endLine": 207,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) { \n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 209,
              "startColumn": 28,
              "endLine": 209,
              "endColumn": 69,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n      }\n    }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 18,
      "fileName": "R3TEchnicalCorrectionProcessor.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 34,
              "startColumn": 50,
              "endLine": 34,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "String",
              "code": "  }\r\n\r\n  private void execute(String src, String packageRoot) throws FileNotFoundException, IOException {\r\n    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r"
            },
            {
              "step": 1,
              "variableName": "src",
              "startLine": 37,
              "startColumn": 42,
              "endLine": 37,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "String",
              "code": "    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r\n      if (f.getName().endsWith(\".xml\") && !(f.getName().endsWith(\"warnings.xml\") || f.getName().endsWith(\".diff.xml\"))) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 2,
              "variableName": "String pathname",
              "startLine": 101,
              "startColumn": 27,
              "endLine": 101,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "String",
              "code": "  /** \n   * Open a file, conforming to local security policy \n   **/\n  public static File file(String pathname) throws IOException {\n    switch (accessPolicy) {\n    case DIRECT:\n      if (!inAllowedPaths(pathname)) {"
            },
            {
              "step": 3,
              "variableName": "pathname",
              "startLine": 107,
              "startColumn": 23,
              "endLine": 107,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "String",
              "code": "      if (!inAllowedPaths(pathname)) {\n        throw new IOException(\"The pathname '\"+pathname+\"' cannot be accessed by policy\");\n      }\n      return new File(pathname);\n    case MANAGED:\n      return accessor.file(pathname);\n    case PROHIBITED:"
            },
            {
              "step": 4,
              "variableName": "new File(pathname)",
              "startLine": 107,
              "startColumn": 14,
              "endLine": 107,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "File",
              "code": "      if (!inAllowedPaths(pathname)) {\n        throw new IOException(\"The pathname '\"+pathname+\"' cannot be accessed by policy\");\n      }\n      return new File(pathname);\n    case MANAGED:\n      return accessor.file(pathname);\n    case PROHIBITED:"
            },
            {
              "step": 5,
              "variableName": "ManagedFileAccess.file(src)",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "File",
              "code": "    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r\n      if (f.getName().endsWith(\".xml\") && !(f.getName().endsWith(\"warnings.xml\") || f.getName().endsWith(\".diff.xml\"))) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 6,
              "variableName": "ManagedFileAccess.file(src).listFiles()",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "File[]",
              "code": "    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r\n      if (f.getName().endsWith(\".xml\") && !(f.getName().endsWith(\"warnings.xml\") || f.getName().endsWith(\".diff.xml\"))) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 7,
              "variableName": "f",
              "startLine": 52,
              "startColumn": 48,
              "endLine": 52,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "File",
              "code": "//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"1\"));\r\n//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"2\"));\r\n        } catch (Exception e) {\r\n          System.out.println(\"Unable to load \"+f.getName()+\": \"+e.getMessage());\r\n        }\r\n      }\r\n      if (f.getName().endsWith(\".json\") && !(f.getName().endsWith(\"schema.json\") || f.getName().endsWith(\".diff.json\"))) {\r"
            },
            {
              "step": 8,
              "variableName": "f.getName()",
              "startLine": 52,
              "startColumn": 48,
              "endLine": 52,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "String",
              "code": "//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"1\"));\r\n//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"2\"));\r\n        } catch (Exception e) {\r\n          System.out.println(\"Unable to load \"+f.getName()+\": \"+e.getMessage());\r\n        }\r\n      }\r\n      if (f.getName().endsWith(\".json\") && !(f.getName().endsWith(\"schema.json\") || f.getName().endsWith(\".diff.json\"))) {\r"
            },
            {
              "step": 9,
              "variableName": "\"Unable to load \"+f.getName()+\": \"+e.getMessage()",
              "startLine": 52,
              "startColumn": 30,
              "endLine": 52,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "",
              "code": "//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"1\"));\r\n//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"2\"));\r\n        } catch (Exception e) {\r\n          System.out.println(\"Unable to load \"+f.getName()+\": \"+e.getMessage());\r\n        }\r\n      }\r\n      if (f.getName().endsWith(\".json\") && !(f.getName().endsWith(\"schema.json\") || f.getName().endsWith(\".diff.json\"))) {\r"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 37,
              "startColumn": 42,
              "endLine": 37,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "String",
              "code": "    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r\n      if (f.getName().endsWith(\".xml\") && !(f.getName().endsWith(\"warnings.xml\") || f.getName().endsWith(\".diff.xml\"))) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 1,
              "variableName": "String pathname",
              "startLine": 101,
              "startColumn": 27,
              "endLine": 101,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "String",
              "code": "  /** \n   * Open a file, conforming to local security policy \n   **/\n  public static File file(String pathname) throws IOException {\n    switch (accessPolicy) {\n    case DIRECT:\n      if (!inAllowedPaths(pathname)) {"
            },
            {
              "step": 2,
              "variableName": "pathname",
              "startLine": 107,
              "startColumn": 23,
              "endLine": 107,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "String",
              "code": "      if (!inAllowedPaths(pathname)) {\n        throw new IOException(\"The pathname '\"+pathname+\"' cannot be accessed by policy\");\n      }\n      return new File(pathname);\n    case MANAGED:\n      return accessor.file(pathname);\n    case PROHIBITED:"
            },
            {
              "step": 3,
              "variableName": "new File(pathname)",
              "startLine": 107,
              "startColumn": 14,
              "endLine": 107,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/filesystem/ManagedFileAccess.java",
              "type": "File",
              "code": "      if (!inAllowedPaths(pathname)) {\n        throw new IOException(\"The pathname '\"+pathname+\"' cannot be accessed by policy\");\n      }\n      return new File(pathname);\n    case MANAGED:\n      return accessor.file(pathname);\n    case PROHIBITED:"
            },
            {
              "step": 4,
              "variableName": "ManagedFileAccess.file(src)",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "File",
              "code": "    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r\n      if (f.getName().endsWith(\".xml\") && !(f.getName().endsWith(\"warnings.xml\") || f.getName().endsWith(\".diff.xml\"))) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 5,
              "variableName": "ManagedFileAccess.file(src).listFiles()",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "File[]",
              "code": "    System.out.println(\"Loading resources from \"+src);\r\n    List<Resource> resources = new ArrayList<>();\r\n    Map<String, Resource> definitions = new HashMap<>();\r\n    for (File f : ManagedFileAccess.file(src).listFiles()) {\r\n      if (f.getName().endsWith(\".xml\") && !(f.getName().endsWith(\"warnings.xml\") || f.getName().endsWith(\".diff.xml\"))) {\r\n        try {\r\n          Resource r = new XmlParser().parse(ManagedFileAccess.inStream(f));\r"
            },
            {
              "step": 6,
              "variableName": "f",
              "startLine": 52,
              "startColumn": 48,
              "endLine": 52,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "File",
              "code": "//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"1\"));\r\n//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"2\"));\r\n        } catch (Exception e) {\r\n          System.out.println(\"Unable to load \"+f.getName()+\": \"+e.getMessage());\r\n        }\r\n      }\r\n      if (f.getName().endsWith(\".json\") && !(f.getName().endsWith(\"schema.json\") || f.getName().endsWith(\".diff.json\"))) {\r"
            },
            {
              "step": 7,
              "variableName": "f.getName()",
              "startLine": 52,
              "startColumn": 48,
              "endLine": 52,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "String",
              "code": "//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"1\"));\r\n//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"2\"));\r\n        } catch (Exception e) {\r\n          System.out.println(\"Unable to load \"+f.getName()+\": \"+e.getMessage());\r\n        }\r\n      }\r\n      if (f.getName().endsWith(\".json\") && !(f.getName().endsWith(\"schema.json\") || f.getName().endsWith(\".diff.json\"))) {\r"
            },
            {
              "step": 8,
              "variableName": "\"Unable to load \"+f.getName()+\": \"+e.getMessage()",
              "startLine": 52,
              "startColumn": 30,
              "endLine": 52,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/utils/R3TEchnicalCorrectionProcessor.java",
              "type": "",
              "code": "//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"1\"));\r\n//          FileUtils.copyFile(f, ManagedFileAccess.file(f.getAbsolutePath()+\"2\"));\r\n        } catch (Exception e) {\r\n          System.out.println(\"Unable to load \"+f.getName()+\": \"+e.getMessage());\r\n        }\r\n      }\r\n      if (f.getName().endsWith(\".json\") && !(f.getName().endsWith(\"schema.json\") || f.getName().endsWith(\".diff.json\"))) {\r"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 19,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 218,
              "startColumn": 24,
              "endLine": 218,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader)\n      throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 218,
              "startColumn": 24,
              "endLine": 218,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader)\n      throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 220,
              "startColumn": 32,
              "endLine": 220,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \" + name + \": \" + e.getMessage()",
              "startLine": 222,
              "startColumn": 28,
              "endLine": 222,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 20,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 68,
              "startColumn": 9,
              "endLine": 68,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "HashMap",
              "code": "  private List<String> formatCommentsPost;\n\n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 101,
              "startColumn": 17,
              "endLine": 101,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 105,
              "startColumn": 14,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "p.getUserString(\"path\")",
              "startLine": 4349,
              "startColumn": 17,
              "endLine": 4349,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        if (p == null)\n          p = context.fetchResource(StructureDefinition.class, link);\n        if (p != null) {\n          url = p.getUserString(\"path\");\n          if (url == null)\n            url = p.getUserString(\"filename\");\n        } else"
            },
            {
              "step": 6,
              "variableName": "text",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 7,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 8,
              "variableName": "link",
              "startLine": 4347,
              "startColumn": 64,
              "endLine": 4347,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);\n        if (p == null)\n          p = context.fetchResource(StructureDefinition.class, link);\n        if (p != null) {\n          url = p.getUserString(\"path\");\n          if (url == null)"
            },
            {
              "step": 9,
              "variableName": "String uri",
              "startLine": 590,
              "startColumn": 64,
              "endLine": 590,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 10,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 598,
              "startColumn": 28,
              "endLine": 598,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 68,
              "startColumn": 9,
              "endLine": 68,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "HashMap",
              "code": "  private List<String> formatCommentsPost;\n\n  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }"
            },
            {
              "step": 1,
              "variableName": "userData",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "userData.get(name)",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 3,
              "variableName": "getUserData(name)",
              "startLine": 101,
              "startColumn": 17,
              "endLine": 101,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 4,
              "variableName": "(String) ud",
              "startLine": 105,
              "startColumn": 14,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 5,
              "variableName": "p.getUserString(\"filename\")",
              "startLine": 4351,
              "startColumn": 19,
              "endLine": 4351,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        if (p != null) {\n          url = p.getUserString(\"path\");\n          if (url == null)\n            url = p.getUserString(\"filename\");\n        } else\n          throw new DefinitionException(\"Unable to resolve markdown link \" + link);\n"
            },
            {
              "step": 6,
              "variableName": "text",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 7,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 8,
              "variableName": "link",
              "startLine": 4342,
              "startColumn": 26,
              "endLine": 4342,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");\n        StructureDefinition p = context.fetchResource(StructureDefinition.class, parts[0]);\n        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);"
            },
            {
              "step": 9,
              "variableName": "link.split(\"\\\\#\")",
              "startLine": 4342,
              "startColumn": 26,
              "endLine": 4342,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String[]",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");\n        StructureDefinition p = context.fetchResource(StructureDefinition.class, parts[0]);\n        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);"
            },
            {
              "step": 10,
              "variableName": "parts[0]",
              "startLine": 4343,
              "startColumn": 82,
              "endLine": 4343,
              "endColumn": 90,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");\n        StructureDefinition p = context.fetchResource(StructureDefinition.class, parts[0]);\n        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);\n        if (p == null)"
            },
            {
              "step": 11,
              "variableName": "String uri",
              "startLine": 590,
              "startColumn": 64,
              "endLine": 590,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 12,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 598,
              "startColumn": 28,
              "endLine": 598,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 101,
              "startColumn": 17,
              "endLine": 101,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 105,
              "startColumn": 14,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "p.getUserString(\"path\")",
              "startLine": 4349,
              "startColumn": 17,
              "endLine": 4349,
              "endColumn": 40,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        if (p == null)\n          p = context.fetchResource(StructureDefinition.class, link);\n        if (p != null) {\n          url = p.getUserString(\"path\");\n          if (url == null)\n            url = p.getUserString(\"filename\");\n        } else"
            },
            {
              "step": 5,
              "variableName": "text",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 6,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 7,
              "variableName": "link",
              "startLine": 4347,
              "startColumn": 64,
              "endLine": 4347,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);\n        if (p == null)\n          p = context.fetchResource(StructureDefinition.class, link);\n        if (p != null) {\n          url = p.getUserString(\"path\");\n          if (url == null)"
            },
            {
              "step": 8,
              "variableName": "String uri",
              "startLine": 590,
              "startColumn": 64,
              "endLine": 590,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 9,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 598,
              "startColumn": 28,
              "endLine": 598,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "userData",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "HashMap",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 1,
              "variableName": "userData.get(name)",
              "startLine": 70,
              "startColumn": 12,
              "endLine": 70,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  public Object getUserData(String name) {\n    if (userData == null)\n      return null;\n    return userData.get(name);\n  }\n\n  public void setUserData(String name, Object value) {"
            },
            {
              "step": 2,
              "variableName": "getUserData(name)",
              "startLine": 101,
              "startColumn": 17,
              "endLine": 101,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "Object",
              "code": "  }\n\n  public String getUserString(String name) {\n    Object ud = getUserData(name);\n    if (ud == null)\n      return null;\n    if (ud instanceof String)"
            },
            {
              "step": 3,
              "variableName": "(String) ud",
              "startLine": 105,
              "startColumn": 14,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java",
              "type": "String",
              "code": "    if (ud == null)\n      return null;\n    if (ud instanceof String)\n      return (String) ud;\n    return ud.toString();\n  }\n"
            },
            {
              "step": 4,
              "variableName": "p.getUserString(\"filename\")",
              "startLine": 4351,
              "startColumn": 19,
              "endLine": 4351,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        if (p != null) {\n          url = p.getUserString(\"path\");\n          if (url == null)\n            url = p.getUserString(\"filename\");\n        } else\n          throw new DefinitionException(\"Unable to resolve markdown link \" + link);\n"
            },
            {
              "step": 5,
              "variableName": "text",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 6,
              "variableName": "text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"))",
              "startLine": 4339,
              "startColumn": 23,
              "endLine": 4339,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "      // 1. custom FHIR extensions\n      while (text.contains(\"[[[\")) {\n        String left = text.substring(0, text.indexOf(\"[[[\"));\n        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");"
            },
            {
              "step": 7,
              "variableName": "link",
              "startLine": 4342,
              "startColumn": 26,
              "endLine": 4342,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");\n        StructureDefinition p = context.fetchResource(StructureDefinition.class, parts[0]);\n        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);"
            },
            {
              "step": 8,
              "variableName": "link.split(\"\\\\#\")",
              "startLine": 4342,
              "startColumn": 26,
              "endLine": 4342,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String[]",
              "code": "        String link = text.substring(text.indexOf(\"[[[\") + 3, text.indexOf(\"]]]\"));\n        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");\n        StructureDefinition p = context.fetchResource(StructureDefinition.class, parts[0]);\n        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);"
            },
            {
              "step": 9,
              "variableName": "parts[0]",
              "startLine": 4343,
              "startColumn": 82,
              "endLine": 4343,
              "endColumn": 90,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/NarrativeGenerator.java",
              "type": "String",
              "code": "        String right = text.substring(text.indexOf(\"]]]\") + 3);\n        String url = link;\n        String[] parts = link.split(\"\\\\#\");\n        StructureDefinition p = context.fetchResource(StructureDefinition.class, parts[0]);\n        if (p == null)\n          p = context.fetchTypeDefinition(parts[0]);\n        if (p == null)"
            },
            {
              "step": 10,
              "variableName": "String uri",
              "startLine": 590,
              "startColumn": 64,
              "endLine": 590,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public <T extends Resource> T fetchResource(Class<T> class_, String uri) {\n    T r = super.fetchResource(class_, uri);\n    if (r instanceof StructureDefinition) {\n      StructureDefinition p = (StructureDefinition) r;"
            },
            {
              "step": 11,
              "variableName": "\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage()",
              "startLine": 598,
              "startColumn": 28,
              "endLine": 598,
              "endColumn": 92,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        generateSnapshot(p);\n      } catch (Exception e) {\n        // not sure what to do in this case?\n        System.out.println(\"Unable to generate snapshot for \" + uri + \": \" + e.getMessage());\n      }\n    }\n    return r;"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 21,
      "fileName": "FilesystemPackageCacheManager.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 199,
              "startColumn": 48,
              "endLine": 199,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   */\n\n  public Content loadContent(String source, String opName, boolean asIg, boolean mustLoad) throws FHIRException, IOException {\n    Map<String, ByteProvider> s = loadIgSource(source, false, asIg);\n    Content res = new Content();\n    if (!mustLoad && s.size() == 0) {\n      return null;"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 311,
              "startColumn": 29,
              "endLine": 311,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);\n    }\n    throw new FHIRException(\"Unable to find/resolve/read \" + (explore ? \"-ig \" : \"\") + src);\n  }"
            },
            {
              "step": 3,
              "variableName": "String src",
              "startLine": 496,
              "startColumn": 52,
              "endLine": 496,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "  }\n\n\n  private Map<String, ByteProvider> fetchByPackage(String src, boolean loadInContext) throws FHIRException, IOException {\n    NpmPackage pi;\n    \n    if (directProvider != null) {"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 520,
              "startColumn": 49,
              "endLine": 520,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      if (pi != null)\n        System.out.println(\"   ... Using version \" + pi.version());\n    } else\n      pi = getPackageCacheManager().loadPackage(id, version);\n    if (pi == null) {\n      throw new FHIRException(\"Unable to find package \"+src);\n    } else"
            },
            {
              "step": 5,
              "variableName": "String id",
              "startLine": 641,
              "startColumn": 33,
              "endLine": 641,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public NpmPackage loadPackage(String id, String version) throws FHIRException, IOException {\n    //ok, try to resolve locally\n    if (!Utilities.noString(version) && version.startsWith(\"file:\")) {\n      return loadPackageFromFile(id, version.substring(5));"
            },
            {
              "step": 6,
              "variableName": "id",
              "startLine": 694,
              "startColumn": 30,
              "endLine": 694,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    if (source == null) {\n      throw new FHIRException(\"Unable to find package \" + id + \"#\" + version);\n    }\n    return addPackageToCache(id, source.version, source.stream, source.url);\n  }\n\n  private InputStreamWithSrc fetchSourceFromUrlSpecific(String url) {"
            },
            {
              "step": 7,
              "variableName": "final String id",
              "startLine": 529,
              "startColumn": 39,
              "endLine": 529,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "   * Add an already fetched package to the cache\n   */\n  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n"
            },
            {
              "step": 8,
              "variableName": "id : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 9,
              "variableName": "...->... : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 10,
              "variableName": "FilesystemPackageCacheManager.CacheLockFunction<T> function",
              "startLine": 236,
              "startColumn": 34,
              "endLine": 236,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "     * @param <T> The return type of the function\n     * @throws IOException If an error occurs while managing locking.\n     */\n    public <T> T doWriteWithLock(FilesystemPackageCacheManager.CacheLockFunction<T> function, @Nullable LockParameters lockParameters) throws IOException {\n      final LockParameters resolvedLockParameters = lockParameters != null ? lockParameters : FilesystemPackageCacheManagerLocks.lockParameters;\n\n      cacheLock.getLock().writeLock().lock();"
            },
            {
              "step": 11,
              "variableName": "function",
              "startLine": 263,
              "startColumn": 20,
              "endLine": 263,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "        }\n        T result = null;\n        try {\n          result = function.get();\n        } finally {\n\n          lockFile.renameTo(ManagedFileAccess.file(File.createTempFile(lockFile.getName(), \".lock-renamed\").getAbsolutePath()));"
            },
            {
              "step": 12,
              "variableName": "parameter this : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 13,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 14,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 15,
              "variableName": "\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name()",
              "startLine": 542,
              "startColumn": 33,
              "endLine": 542,
              "endColumn": 126,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 16,
              "variableName": "new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name())",
              "startLine": 542,
              "startColumn": 17,
              "endLine": 542,
              "endColumn": 127,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "IOException",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 17,
              "variableName": "t.getMessage()",
              "startLine": 573,
              "startColumn": 70,
              "endLine": 573,
              "endColumn": 84,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 18,
              "variableName": "\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\"",
              "startLine": 573,
              "startColumn": 17,
              "endLine": 573,
              "endColumn": 121,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 19,
              "variableName": "String s",
              "startLine": 602,
              "startColumn": 20,
              "endLine": 602,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    }, lockParameters);\n  }\n\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }"
            },
            {
              "step": 20,
              "variableName": "s",
              "startLine": 604,
              "startColumn": 26,
              "endLine": 604,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "",
              "code": "\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 430,
              "startColumn": 34,
              "endLine": 430,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "\n    public ValidationEngine fromSource(String src) throws IOException, URISyntaxException {\n      ValidationEngine engine = new ValidationEngine();\n      engine.loadCoreDefinitions(src, false, terminologyCachePath, userAgent, timeTracker, loggingService);\n      engine.getContext().setCanRunWithoutTerminology(canRunWithoutTerminologyServer);\n      engine.getContext().setPackageTracker(engine);    \n      if (txServer != null) {"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 500,
              "startColumn": 36,
              "endLine": 500,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   *\n   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 501,
              "startColumn": 43,
              "endLine": 501,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();\n      SimpleWorkerContext.SimpleWorkerContextBuilder contextBuilder = new SimpleWorkerContext.SimpleWorkerContextBuilder().withLoggingService(loggingService);"
            },
            {
              "step": 3,
              "variableName": "String id",
              "startLine": 641,
              "startColumn": 33,
              "endLine": 641,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public NpmPackage loadPackage(String id, String version) throws FHIRException, IOException {\n    //ok, try to resolve locally\n    if (!Utilities.noString(version) && version.startsWith(\"file:\")) {\n      return loadPackageFromFile(id, version.substring(5));"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 694,
              "startColumn": 30,
              "endLine": 694,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    if (source == null) {\n      throw new FHIRException(\"Unable to find package \" + id + \"#\" + version);\n    }\n    return addPackageToCache(id, source.version, source.stream, source.url);\n  }\n\n  private InputStreamWithSrc fetchSourceFromUrlSpecific(String url) {"
            },
            {
              "step": 5,
              "variableName": "final String id",
              "startLine": 529,
              "startColumn": 39,
              "endLine": 529,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "   * Add an already fetched package to the cache\n   */\n  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n"
            },
            {
              "step": 6,
              "variableName": "id : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 7,
              "variableName": "...->... : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 8,
              "variableName": "FilesystemPackageCacheManager.CacheLockFunction<T> function",
              "startLine": 236,
              "startColumn": 34,
              "endLine": 236,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "     * @param <T> The return type of the function\n     * @throws IOException If an error occurs while managing locking.\n     */\n    public <T> T doWriteWithLock(FilesystemPackageCacheManager.CacheLockFunction<T> function, @Nullable LockParameters lockParameters) throws IOException {\n      final LockParameters resolvedLockParameters = lockParameters != null ? lockParameters : FilesystemPackageCacheManagerLocks.lockParameters;\n\n      cacheLock.getLock().writeLock().lock();"
            },
            {
              "step": 9,
              "variableName": "function",
              "startLine": 263,
              "startColumn": 20,
              "endLine": 263,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "        }\n        T result = null;\n        try {\n          result = function.get();\n        } finally {\n\n          lockFile.renameTo(ManagedFileAccess.file(File.createTempFile(lockFile.getName(), \".lock-renamed\").getAbsolutePath()));"
            },
            {
              "step": 10,
              "variableName": "parameter this : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 11,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 12,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 13,
              "variableName": "\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name()",
              "startLine": 542,
              "startColumn": 33,
              "endLine": 542,
              "endColumn": 126,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 14,
              "variableName": "new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name())",
              "startLine": 542,
              "startColumn": 17,
              "endLine": 542,
              "endColumn": 127,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "IOException",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 15,
              "variableName": "t.getMessage()",
              "startLine": 573,
              "startColumn": 70,
              "endLine": 573,
              "endColumn": 84,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 16,
              "variableName": "\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\"",
              "startLine": 573,
              "startColumn": 17,
              "endLine": 573,
              "endColumn": 121,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 17,
              "variableName": "String s",
              "startLine": 602,
              "startColumn": 20,
              "endLine": 602,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    }, lockParameters);\n  }\n\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }"
            },
            {
              "step": 18,
              "variableName": "s",
              "startLine": 604,
              "startColumn": 26,
              "endLine": 604,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "",
              "code": "\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 501,
              "startColumn": 43,
              "endLine": 501,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();\n      SimpleWorkerContext.SimpleWorkerContextBuilder contextBuilder = new SimpleWorkerContext.SimpleWorkerContextBuilder().withLoggingService(loggingService);"
            },
            {
              "step": 1,
              "variableName": "String id",
              "startLine": 641,
              "startColumn": 33,
              "endLine": 641,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public NpmPackage loadPackage(String id, String version) throws FHIRException, IOException {\n    //ok, try to resolve locally\n    if (!Utilities.noString(version) && version.startsWith(\"file:\")) {\n      return loadPackageFromFile(id, version.substring(5));"
            },
            {
              "step": 2,
              "variableName": "id",
              "startLine": 694,
              "startColumn": 30,
              "endLine": 694,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    if (source == null) {\n      throw new FHIRException(\"Unable to find package \" + id + \"#\" + version);\n    }\n    return addPackageToCache(id, source.version, source.stream, source.url);\n  }\n\n  private InputStreamWithSrc fetchSourceFromUrlSpecific(String url) {"
            },
            {
              "step": 3,
              "variableName": "final String id",
              "startLine": 529,
              "startColumn": 39,
              "endLine": 529,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "   * Add an already fetched package to the cache\n   */\n  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n"
            },
            {
              "step": 4,
              "variableName": "id : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 5,
              "variableName": "...->... : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 6,
              "variableName": "FilesystemPackageCacheManager.CacheLockFunction<T> function",
              "startLine": 236,
              "startColumn": 34,
              "endLine": 236,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "     * @param <T> The return type of the function\n     * @throws IOException If an error occurs while managing locking.\n     */\n    public <T> T doWriteWithLock(FilesystemPackageCacheManager.CacheLockFunction<T> function, @Nullable LockParameters lockParameters) throws IOException {\n      final LockParameters resolvedLockParameters = lockParameters != null ? lockParameters : FilesystemPackageCacheManagerLocks.lockParameters;\n\n      cacheLock.getLock().writeLock().lock();"
            },
            {
              "step": 7,
              "variableName": "function",
              "startLine": 263,
              "startColumn": 20,
              "endLine": 263,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "        }\n        T result = null;\n        try {\n          result = function.get();\n        } finally {\n\n          lockFile.renameTo(ManagedFileAccess.file(File.createTempFile(lockFile.getName(), \".lock-renamed\").getAbsolutePath()));"
            },
            {
              "step": 8,
              "variableName": "parameter this : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 9,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 10,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 11,
              "variableName": "\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name()",
              "startLine": 542,
              "startColumn": 33,
              "endLine": 542,
              "endColumn": 126,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 12,
              "variableName": "new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name())",
              "startLine": 542,
              "startColumn": 17,
              "endLine": 542,
              "endColumn": 127,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "IOException",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 13,
              "variableName": "t.getMessage()",
              "startLine": 573,
              "startColumn": 70,
              "endLine": 573,
              "endColumn": 84,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 14,
              "variableName": "\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\"",
              "startLine": 573,
              "startColumn": 17,
              "endLine": 573,
              "endColumn": 121,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 15,
              "variableName": "String s",
              "startLine": 602,
              "startColumn": 20,
              "endLine": 602,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    }, lockParameters);\n  }\n\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }"
            },
            {
              "step": 16,
              "variableName": "s",
              "startLine": 604,
              "startColumn": 26,
              "endLine": 604,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "",
              "code": "\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 512,
              "startColumn": 64,
              "endLine": 512,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      }\n      context = contextBuilder.fromPackage(npm, ValidatorUtils.loaderForVersion(version), false);\n    } else {\n      Map<String, ByteProvider> source = igLoader.loadIgSource(src, recursive, true);\n      if (version == null) {\n        version = getVersionFromPack(source);\n      }"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 242,
              "startColumn": 49,
              "endLine": 242,
              "endColumn": 59,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "   * @throws FHIRException\n   * @throws IOException\n   */\n  public Map<String, ByteProvider> loadIgSource(String src,\n                                          boolean recursive,\n                                          boolean explore) throws FHIRException, IOException {\n    //"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 311,
              "startColumn": 29,
              "endLine": 311,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "        return res;\n      }\n    } else if ((src.matches(FilesystemPackageCacheManager.PACKAGE_REGEX) || src.matches(FilesystemPackageCacheManager.PACKAGE_VERSION_REGEX)) && !src.endsWith(\".zip\") && !src.endsWith(\".tgz\")) {\n      return fetchByPackage(src, false);\n    }\n    throw new FHIRException(\"Unable to find/resolve/read \" + (explore ? \"-ig \" : \"\") + src);\n  }"
            },
            {
              "step": 3,
              "variableName": "String src",
              "startLine": 496,
              "startColumn": 52,
              "endLine": 496,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "  }\n\n\n  private Map<String, ByteProvider> fetchByPackage(String src, boolean loadInContext) throws FHIRException, IOException {\n    NpmPackage pi;\n    \n    if (directProvider != null) {"
            },
            {
              "step": 4,
              "variableName": "id",
              "startLine": 520,
              "startColumn": 49,
              "endLine": 520,
              "endColumn": 51,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/IgLoader.java",
              "type": "String",
              "code": "      if (pi != null)\n        System.out.println(\"   ... Using version \" + pi.version());\n    } else\n      pi = getPackageCacheManager().loadPackage(id, version);\n    if (pi == null) {\n      throw new FHIRException(\"Unable to find package \"+src);\n    } else"
            },
            {
              "step": 5,
              "variableName": "String id",
              "startLine": 641,
              "startColumn": 33,
              "endLine": 641,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public NpmPackage loadPackage(String id, String version) throws FHIRException, IOException {\n    //ok, try to resolve locally\n    if (!Utilities.noString(version) && version.startsWith(\"file:\")) {\n      return loadPackageFromFile(id, version.substring(5));"
            },
            {
              "step": 6,
              "variableName": "id",
              "startLine": 694,
              "startColumn": 30,
              "endLine": 694,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    if (source == null) {\n      throw new FHIRException(\"Unable to find package \" + id + \"#\" + version);\n    }\n    return addPackageToCache(id, source.version, source.stream, source.url);\n  }\n\n  private InputStreamWithSrc fetchSourceFromUrlSpecific(String url) {"
            },
            {
              "step": 7,
              "variableName": "final String id",
              "startLine": 529,
              "startColumn": 39,
              "endLine": 529,
              "endColumn": 54,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "   * Add an already fetched package to the cache\n   */\n  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n"
            },
            {
              "step": 8,
              "variableName": "id : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 9,
              "variableName": "...->... : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 10,
              "variableName": "FilesystemPackageCacheManager.CacheLockFunction<T> function",
              "startLine": 236,
              "startColumn": 34,
              "endLine": 236,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "     * @param <T> The return type of the function\n     * @throws IOException If an error occurs while managing locking.\n     */\n    public <T> T doWriteWithLock(FilesystemPackageCacheManager.CacheLockFunction<T> function, @Nullable LockParameters lockParameters) throws IOException {\n      final LockParameters resolvedLockParameters = lockParameters != null ? lockParameters : FilesystemPackageCacheManagerLocks.lockParameters;\n\n      cacheLock.getLock().writeLock().lock();"
            },
            {
              "step": 11,
              "variableName": "function",
              "startLine": 263,
              "startColumn": 20,
              "endLine": 263,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManagerLocks.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "        }\n        T result = null;\n        try {\n          result = function.get();\n        } finally {\n\n          lockFile.renameTo(ManagedFileAccess.file(File.createTempFile(lockFile.getName(), \".lock-renamed\").getAbsolutePath()));"
            },
            {
              "step": 12,
              "variableName": "parameter this : new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "startLine": 531,
              "startColumn": 69,
              "endLine": 599,
              "endColumn": 6,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "  @Override\n  public NpmPackage addPackageToCache(final String id, final String version, final InputStream packageTgzInputStream, final String sourceDesc) throws IOException {\n    checkValidVersionString(version, id);\n    return locks.getPackageLock(id + \"#\" + version).doWriteWithLock(() -> {\n\n      String tempDir = Utilities.generateUniqueRandomUUIDPath(cacheFolder.getAbsolutePath());\n"
            },
            {
              "step": 13,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "new CacheLockFunction<NpmPackage>(...) { ... } [id] : String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 14,
              "variableName": "id",
              "startLine": 542,
              "startColumn": 91,
              "endLine": 542,
              "endColumn": 93,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 15,
              "variableName": "\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name()",
              "startLine": 542,
              "startColumn": 33,
              "endLine": 542,
              "endColumn": 126,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 16,
              "variableName": "new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name())",
              "startLine": 542,
              "startColumn": 17,
              "endLine": 542,
              "endColumn": 127,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "IOException",
              "code": "\n      if ((extractedNpm.name() != null && id != null && !id.equalsIgnoreCase(extractedNpm.name()) && !id.equalsIgnoreCase(extractedNpm.name()+\".\"+VersionUtilities.getNameForVersion(extractedNpm.fhirVersion())))) {\n        if (!suppressErrors && (!id.equals(\"hl7.fhir.r5.core\") && !id.equals(\"hl7.fhir.us.immds\"))) {// temporary work around\n          throw new IOException(\"Attempt to import a mis-identified package. Expected \" + id + \", got \" + extractedNpm.name());\n        }\n      }\n"
            },
            {
              "step": 17,
              "variableName": "t.getMessage()",
              "startLine": 573,
              "startColumn": 70,
              "endLine": 573,
              "endColumn": 84,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 18,
              "variableName": "\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\"",
              "startLine": 573,
              "startColumn": 17,
              "endLine": 573,
              "endColumn": 121,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "          try {\n            FileUtilities.clearDirectory(packageRoot);\n          } catch (Throwable t) {\n            log(\"Unable to clear directory: \" + packageRoot + \": \" + t.getMessage() + \" - this may cause problems later\");\n          }\n          FileUtilities.renameDirectory(tempDir, packageRoot);\n"
            },
            {
              "step": 19,
              "variableName": "String s",
              "startLine": 602,
              "startColumn": 20,
              "endLine": 602,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "String",
              "code": "    }, lockParameters);\n  }\n\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }"
            },
            {
              "step": 20,
              "variableName": "s",
              "startLine": 604,
              "startColumn": 26,
              "endLine": 604,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/npm/FilesystemPackageCacheManager.java",
              "type": "",
              "code": "\n  private void log(String s) {\n    if (!silent) {\n      System.out.println(s);\n    }\n  }\n"
            }
          ],
          "label": "No"
        }
      ]
    }
  ],
  "215": [
    {
      "resultIndex": 26,
      "fileName": "SystemOutLoggingService.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 365,
              "startColumn": 38,
              "endLine": 365,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 383,
              "startColumn": 39,
              "endLine": 383,
              "endColumn": 50,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    }\n  }\n\n  private Resource loadDefinitionItem(String name, InputStream stream, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 385,
              "startColumn": 35,
              "endLine": 385,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "\n  private Resource loadDefinitionItem(String name, InputStream stream, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))\n      return loadFromFileJson(stream, name, loader, filter, pi);\n    else if (name.equals(\"version.info\"))"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 448,
              "startColumn": 51,
              "endLine": 448,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    loadFromFile(stream, name, loader, null);\n  }\n  \n\tpublic Resource loadFromFile(InputStream stream, String name, IContextResourceLoader loader, ILoadFilter filter) throws FHIRException {\n\t\tResource f;\n\t\ttry {\n\t\t  if (loader != null)"
            },
            {
              "step": 6,
              "variableName": "\"unidentified resource in \" + name+\" (no fullUrl)\"",
              "startLine": 466,
              "startColumn": 53,
              "endLine": 466,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "\t\t  Bundle bnd = (Bundle) f;\n\t\t  for (BundleEntryComponent e : bnd.getEntry()) {\n\t\t    if (e.getFullUrl() == null) {\n\t\t      logger.logDebugMessage(LogCategory.CONTEXT, \"unidentified resource in \" + name+\" (no fullUrl)\");\n\t\t    }\n\t      if (filter == null || filter.isOkToLoad(e.getResource())) {\n\t        String path = loader != null ? loader.getResourcePath(e.getResource()) : null;"
            },
            {
              "step": 7,
              "variableName": "String message",
              "startLine": 23,
              "startColumn": 53,
              "endLine": 23,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }"
            },
            {
              "step": 8,
              "variableName": "\" -\" + category.name().toLowerCase() + \": \" + message",
              "startLine": 25,
              "startColumn": 26,
              "endLine": 25,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "",
              "code": "  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 34,
              "startColumn": 15,
              "endLine": 34,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;\n    this.fhirVersion = fhirVersion;\n  }"
            },
            {
              "step": 1,
              "variableName": "this",
              "startLine": 34,
              "startColumn": 5,
              "endLine": 34,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;\n    this.fhirVersion = fhirVersion;\n  }"
            },
            {
              "step": 2,
              "variableName": "new PackageInformation(src, version, new Date())",
              "startLine": 522,
              "startColumn": 98,
              "endLine": 522,
              "endColumn": 146,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "PackageInformation [id] : String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 3,
              "variableName": "PackageInformation pi",
              "startLine": 361,
              "startColumn": 113,
              "endLine": 361,
              "endColumn": 134,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "      return build(context);\n    }\n\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {"
            },
            {
              "step": 4,
              "variableName": "pi",
              "startLine": 365,
              "startColumn": 113,
              "endLine": 365,
              "endColumn": 115,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 5,
              "variableName": "PackageInformation pi",
              "startLine": 383,
              "startColumn": 123,
              "endLine": 383,
              "endColumn": 144,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    }\n  }\n\n  private Resource loadDefinitionItem(String name, InputStream stream, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))"
            },
            {
              "step": 6,
              "variableName": "pi",
              "startLine": 387,
              "startColumn": 61,
              "endLine": 387,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))\n      return loadFromFileJson(stream, name, loader, filter, pi);\n    else if (name.equals(\"version.info\"))\n      readVersionInfo(stream);\n    else"
            },
            {
              "step": 7,
              "variableName": "PackageInformation pi",
              "startLine": 488,
              "startColumn": 121,
              "endLine": 488,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "\t\treturn f;\n\t}\n\n  private Resource loadFromFileJson(InputStream stream, String name, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    Bundle f = null;\n    try {\n      if (loader != null)"
            },
            {
              "step": 8,
              "variableName": "pi",
              "startLine": 499,
              "startColumn": 39,
              "endLine": 499,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "        if (r instanceof Bundle)\n          f = (Bundle) r;\n        else if (filter == null || filter.isOkToLoad(f)) {\n          cacheResourceFromPackage(r, pi);\n        }\n      }\n    } catch (FHIRFormatError e1) {"
            },
            {
              "step": 9,
              "variableName": "PackageInformation packageInfo",
              "startLine": 540,
              "startColumn": 52,
              "endLine": 540,
              "endColumn": 82,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    }\n  }\n\n  public void cacheResourceFromPackage(Resource r, PackageInformation packageInfo) throws FHIRException {\n \n    synchronized (lock) {   \n      if (packageInfo != null) {"
            },
            {
              "step": 10,
              "variableName": "packageInfo",
              "startLine": 556,
              "startColumn": 109,
              "endLine": 556,
              "endColumn": 120,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 11,
              "variableName": "toString",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "    return fhirVersion;\n  }\n\n  public String toString() {\n    return getVID();\n  }\n"
            },
            {
              "step": 12,
              "variableName": "getVID()",
              "startLine": 106,
              "startColumn": 12,
              "endLine": 106,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "  }\n\n  public String toString() {\n    return getVID();\n  }\n\n  public boolean isCore() {"
            },
            {
              "step": 13,
              "variableName": "getVID",
              "startLine": 97,
              "startColumn": 17,
              "endLine": 97,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "    return b;\n  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n"
            },
            {
              "step": 14,
              "variableName": "id",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 15,
              "variableName": "id",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 16,
              "variableName": "id+\"#\"+version",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 17,
              "variableName": "getVID()",
              "startLine": 106,
              "startColumn": 12,
              "endLine": 106,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String toString() {\n    return getVID();\n  }\n\n  public boolean isCore() {"
            },
            {
              "step": 18,
              "variableName": "packageInfo.toString()",
              "startLine": 556,
              "startColumn": 109,
              "endLine": 556,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 19,
              "variableName": "\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString()",
              "startLine": 556,
              "startColumn": 55,
              "endLine": 556,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 20,
              "variableName": "String message",
              "startLine": 23,
              "startColumn": 53,
              "endLine": 23,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }"
            },
            {
              "step": 21,
              "variableName": "\" -\" + category.name().toLowerCase() + \": \" + message",
              "startLine": 25,
              "startColumn": 26,
              "endLine": 25,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "",
              "code": "  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 430,
              "startColumn": 34,
              "endLine": 430,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "\n    public ValidationEngine fromSource(String src) throws IOException, URISyntaxException {\n      ValidationEngine engine = new ValidationEngine();\n      engine.loadCoreDefinitions(src, false, terminologyCachePath, userAgent, timeTracker, loggingService);\n      engine.getContext().setCanRunWithoutTerminology(canRunWithoutTerminologyServer);\n      engine.getContext().setPackageTracker(engine);    \n      if (txServer != null) {"
            },
            {
              "step": 1,
              "variableName": "String src",
              "startLine": 500,
              "startColumn": 36,
              "endLine": 500,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   *\n   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();"
            },
            {
              "step": 2,
              "variableName": "src",
              "startLine": 522,
              "startColumn": 121,
              "endLine": 522,
              "endColumn": 124,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 3,
              "variableName": "String src",
              "startLine": 32,
              "startColumn": 29,
              "endLine": 32,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "    this.fhirVersion = fhirVersion;\n  }\n\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;"
            },
            {
              "step": 4,
              "variableName": "src",
              "startLine": 34,
              "startColumn": 15,
              "endLine": 34,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;\n    this.fhirVersion = fhirVersion;\n  }"
            },
            {
              "step": 5,
              "variableName": "this",
              "startLine": 34,
              "startColumn": 5,
              "endLine": 34,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;\n    this.fhirVersion = fhirVersion;\n  }"
            },
            {
              "step": 6,
              "variableName": "new PackageInformation(src, version, new Date())",
              "startLine": 522,
              "startColumn": 98,
              "endLine": 522,
              "endColumn": 146,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "PackageInformation [id] : String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 7,
              "variableName": "PackageInformation pi",
              "startLine": 361,
              "startColumn": 113,
              "endLine": 361,
              "endColumn": 134,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "      return build(context);\n    }\n\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {"
            },
            {
              "step": 8,
              "variableName": "pi",
              "startLine": 365,
              "startColumn": 113,
              "endLine": 365,
              "endColumn": 115,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 9,
              "variableName": "PackageInformation pi",
              "startLine": 383,
              "startColumn": 123,
              "endLine": 383,
              "endColumn": 144,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    }\n  }\n\n  private Resource loadDefinitionItem(String name, InputStream stream, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))"
            },
            {
              "step": 10,
              "variableName": "pi",
              "startLine": 387,
              "startColumn": 61,
              "endLine": 387,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))\n      return loadFromFileJson(stream, name, loader, filter, pi);\n    else if (name.equals(\"version.info\"))\n      readVersionInfo(stream);\n    else"
            },
            {
              "step": 11,
              "variableName": "PackageInformation pi",
              "startLine": 488,
              "startColumn": 121,
              "endLine": 488,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "\t\treturn f;\n\t}\n\n  private Resource loadFromFileJson(InputStream stream, String name, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    Bundle f = null;\n    try {\n      if (loader != null)"
            },
            {
              "step": 12,
              "variableName": "pi",
              "startLine": 499,
              "startColumn": 39,
              "endLine": 499,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "        if (r instanceof Bundle)\n          f = (Bundle) r;\n        else if (filter == null || filter.isOkToLoad(f)) {\n          cacheResourceFromPackage(r, pi);\n        }\n      }\n    } catch (FHIRFormatError e1) {"
            },
            {
              "step": 13,
              "variableName": "PackageInformation packageInfo",
              "startLine": 540,
              "startColumn": 52,
              "endLine": 540,
              "endColumn": 82,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    }\n  }\n\n  public void cacheResourceFromPackage(Resource r, PackageInformation packageInfo) throws FHIRException {\n \n    synchronized (lock) {   \n      if (packageInfo != null) {"
            },
            {
              "step": 14,
              "variableName": "packageInfo",
              "startLine": 556,
              "startColumn": 109,
              "endLine": 556,
              "endColumn": 120,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 15,
              "variableName": "toString",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "    return fhirVersion;\n  }\n\n  public String toString() {\n    return getVID();\n  }\n"
            },
            {
              "step": 16,
              "variableName": "getVID()",
              "startLine": 106,
              "startColumn": 12,
              "endLine": 106,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "  }\n\n  public String toString() {\n    return getVID();\n  }\n\n  public boolean isCore() {"
            },
            {
              "step": 17,
              "variableName": "getVID",
              "startLine": 97,
              "startColumn": 17,
              "endLine": 97,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "    return b;\n  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n"
            },
            {
              "step": 18,
              "variableName": "id",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 20,
              "variableName": "id+\"#\"+version",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 21,
              "variableName": "getVID()",
              "startLine": 106,
              "startColumn": 12,
              "endLine": 106,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String toString() {\n    return getVID();\n  }\n\n  public boolean isCore() {"
            },
            {
              "step": 22,
              "variableName": "packageInfo.toString()",
              "startLine": 556,
              "startColumn": 109,
              "endLine": 556,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 23,
              "variableName": "\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString()",
              "startLine": 556,
              "startColumn": 55,
              "endLine": 556,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 24,
              "variableName": "String message",
              "startLine": 23,
              "startColumn": 53,
              "endLine": 23,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }"
            },
            {
              "step": 25,
              "variableName": "\" -\" + category.name().toLowerCase() + \": \" + message",
              "startLine": 25,
              "startColumn": 26,
              "endLine": 25,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "",
              "code": "  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }\n  }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "src",
              "startLine": 501,
              "startColumn": 43,
              "endLine": 501,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "   * @see IgLoader#loadIgSource(String, boolean, boolean) loadIgSource for detailed description of the src parameter\n   */\n  private void loadCoreDefinitions(String src, boolean recursive, String terminologyCachePath, String userAgent, TimeTracker tt, ILoggingService loggingService) throws FHIRException, IOException {\n    NpmPackage npm = getPcm().loadPackage(src, null);\n    if (npm != null) {\n      version = npm.fhirVersion();\n      SimpleWorkerContext.SimpleWorkerContextBuilder contextBuilder = new SimpleWorkerContext.SimpleWorkerContextBuilder().withLoggingService(loggingService);"
            },
            {
              "step": 1,
              "variableName": "src",
              "startLine": 522,
              "startColumn": 121,
              "endLine": 522,
              "endColumn": 124,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 2,
              "variableName": "String src",
              "startLine": 32,
              "startColumn": 29,
              "endLine": 32,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "    this.fhirVersion = fhirVersion;\n  }\n\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;"
            },
            {
              "step": 3,
              "variableName": "src",
              "startLine": 34,
              "startColumn": 15,
              "endLine": 34,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;\n    this.fhirVersion = fhirVersion;\n  }"
            },
            {
              "step": 4,
              "variableName": "this",
              "startLine": 34,
              "startColumn": 5,
              "endLine": 34,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "\n  public PackageInformation(String src, String fhirVersion, Date date) {\n    super();\n    this.id = src;\n    this.date = date;\n    this.fhirVersion = fhirVersion;\n  }"
            },
            {
              "step": 5,
              "variableName": "new PackageInformation(src, version, new Date())",
              "startLine": 522,
              "startColumn": 98,
              "endLine": 522,
              "endColumn": 146,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java",
              "type": "PackageInformation [id] : String",
              "code": "      if (userAgent != null) {\n        contextBuilder.withUserAgent(userAgent);\n      }\n      context = contextBuilder.fromDefinitions(source, ValidatorUtils.loaderForVersion(version), new PackageInformation(src, version, new Date()));\n      ValidatorUtils.grabNatives(getBinaries(), source, \"http://hl7.org/fhir\");\n    }\n    // ucum-essence.xml should be in the class path. if it's not, ask about how to sort this out "
            },
            {
              "step": 6,
              "variableName": "PackageInformation pi",
              "startLine": 361,
              "startColumn": 113,
              "endLine": 361,
              "endColumn": 134,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "      return build(context);\n    }\n\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {"
            },
            {
              "step": 7,
              "variableName": "pi",
              "startLine": 365,
              "startColumn": 113,
              "endLine": 365,
              "endColumn": 115,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 8,
              "variableName": "PackageInformation pi",
              "startLine": 383,
              "startColumn": 123,
              "endLine": 383,
              "endColumn": 144,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    }\n  }\n\n  private Resource loadDefinitionItem(String name, InputStream stream, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))"
            },
            {
              "step": 9,
              "variableName": "pi",
              "startLine": 387,
              "startColumn": 61,
              "endLine": 387,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    if (name.endsWith(\".xml\"))\n      return loadFromFile(stream, name, loader, filter);\n    else if (name.endsWith(\".json\"))\n      return loadFromFileJson(stream, name, loader, filter, pi);\n    else if (name.equals(\"version.info\"))\n      readVersionInfo(stream);\n    else"
            },
            {
              "step": 10,
              "variableName": "PackageInformation pi",
              "startLine": 488,
              "startColumn": 121,
              "endLine": 488,
              "endColumn": 142,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "\t\treturn f;\n\t}\n\n  private Resource loadFromFileJson(InputStream stream, String name, IContextResourceLoader loader, ILoadFilter filter, PackageInformation pi) throws IOException, FHIRException {\n    Bundle f = null;\n    try {\n      if (loader != null)"
            },
            {
              "step": 11,
              "variableName": "pi",
              "startLine": 499,
              "startColumn": 39,
              "endLine": 499,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "        if (r instanceof Bundle)\n          f = (Bundle) r;\n        else if (filter == null || filter.isOkToLoad(f)) {\n          cacheResourceFromPackage(r, pi);\n        }\n      }\n    } catch (FHIRFormatError e1) {"
            },
            {
              "step": 12,
              "variableName": "PackageInformation packageInfo",
              "startLine": 540,
              "startColumn": 52,
              "endLine": 540,
              "endColumn": 82,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "    }\n  }\n\n  public void cacheResourceFromPackage(Resource r, PackageInformation packageInfo) throws FHIRException {\n \n    synchronized (lock) {   \n      if (packageInfo != null) {"
            },
            {
              "step": 13,
              "variableName": "packageInfo",
              "startLine": 556,
              "startColumn": 109,
              "endLine": 556,
              "endColumn": 120,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "PackageInformation [id] : String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 14,
              "variableName": "toString",
              "startLine": 105,
              "startColumn": 17,
              "endLine": 105,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "    return fhirVersion;\n  }\n\n  public String toString() {\n    return getVID();\n  }\n"
            },
            {
              "step": 15,
              "variableName": "getVID()",
              "startLine": 106,
              "startColumn": 12,
              "endLine": 106,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "  }\n\n  public String toString() {\n    return getVID();\n  }\n\n  public boolean isCore() {"
            },
            {
              "step": 16,
              "variableName": "getVID",
              "startLine": 97,
              "startColumn": 17,
              "endLine": 97,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "    return b;\n  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n"
            },
            {
              "step": 17,
              "variableName": "id",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "PackageInformation [id] : String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 18,
              "variableName": "id",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 19,
              "variableName": "id+\"#\"+version",
              "startLine": 98,
              "startColumn": 12,
              "endLine": 98,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String getVID() {\n    return id+\"#\"+version;\n  }\n\n  public String getFhirVersion() {"
            },
            {
              "step": 20,
              "variableName": "getVID()",
              "startLine": 106,
              "startColumn": 12,
              "endLine": 106,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/PackageInformation.java",
              "type": "String",
              "code": "  }\n\n  public String toString() {\n    return getVID();\n  }\n\n  public boolean isCore() {"
            },
            {
              "step": 21,
              "variableName": "packageInfo.toString()",
              "startLine": 556,
              "startColumn": 109,
              "endLine": 556,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 22,
              "variableName": "\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString()",
              "startLine": 556,
              "startColumn": 55,
              "endLine": 556,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/BaseWorkerContext.java",
              "type": "String",
              "code": "        if ((packageInfo == null || !packageInfo.isExamplesPackage()) || !map.containsKey(r.getId())) {\n          map.put(r.getId(), new ResourceProxy(r));\n        } else {\n          logger.logDebugMessage(LogCategory.PROGRESS,\"Ignore \"+r.fhirType()+\"/\"+r.getId()+\" from package \"+packageInfo.toString());\n        }\n      }\n      if (r instanceof CanonicalResource) {"
            },
            {
              "step": 23,
              "variableName": "String message",
              "startLine": 23,
              "startColumn": 53,
              "endLine": 23,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "String",
              "code": "  }\n\n  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }"
            },
            {
              "step": 24,
              "variableName": "\" -\" + category.name().toLowerCase() + \": \" + message",
              "startLine": 25,
              "startColumn": 26,
              "endLine": 25,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SystemOutLoggingService.java",
              "type": "",
              "code": "  @Override\n  public void logDebugMessage(LogCategory category, String message) {\n    if (debug) {\n      System.out.println(\" -\" + category.name().toLowerCase() + \": \" + message);\n    }\n  }\n"
            }
          ],
          "label": "No"
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 27,
      "fileName": "LiquidEngine.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "this.accessToken",
              "startLine": 128,
              "startColumn": 18,
              "endLine": 128,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "              throw new Error(\"Attempt to auto-create CDSHooksRequestFhirAuthorizationComponent.accessToken\");\r\n            else if (Configuration.doAutoCreate())\r\n              this.accessToken = new StringType(); // bb\r\n          return this.accessToken;\r\n        }\r\n\r\n        public boolean hasAccessTokenElement() { \r"
            },
            {
              "step": 1,
              "variableName": "getAccessTokenElement()",
              "startLine": 479,
              "startColumn": 35,
              "endLine": 479,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "      @Override\r\n      public Base makeProperty(int hash, String name) throws FHIRException {\r\n        switch (hash) {\r\n        case -1042689291:  return getAccessTokenElement();\r\n        case 141498579:  return getTokenTypeElement();\r\n        case 250196857:  return getExpiresInElement();\r\n        case 109264468:  return getScopeElement();\r"
            },
            {
              "step": 2,
              "variableName": "dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement())",
              "startLine": 1756,
              "startColumn": 15,
              "endLine": 1756,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      if (tgt.hasListMode(StructureMapTargetListMode.SHARE)) {\n        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {"
            },
            {
              "step": 3,
              "variableName": "v",
              "startLine": 1766,
              "startColumn": 56,
              "endLine": 1766,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 4,
              "variableName": "Base object",
              "startLine": 14,
              "startColumn": 51,
              "endLine": 14,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "public class Variables {\n  private List<Variable> list = new ArrayList<Variable>();\n\n  public void add(VariableMode mode, String name, Base object) {\n    Variable vv = null;\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))"
            },
            {
              "step": 5,
              "variableName": "object",
              "startLine": 21,
              "startColumn": 39,
              "endLine": 21,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 6,
              "variableName": "Base object",
              "startLine": 13,
              "startColumn": 51,
              "endLine": 13,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  private String name;\n  private Base object;\n\n  public Variable(VariableMode mode, String name, Base object) {\n    super();\n    this.mode = mode;\n    this.name = name;"
            },
            {
              "step": 7,
              "variableName": "object",
              "startLine": 17,
              "startColumn": 19,
              "endLine": 17,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 17,
              "startColumn": 5,
              "endLine": 17,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 9,
              "variableName": "new Variable(mode, name, object)",
              "startLine": 21,
              "startColumn": 14,
              "endLine": 21,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 10,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 11,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 12,
              "variableName": "vars",
              "startLine": 1766,
              "startColumn": 7,
              "endLine": 1766,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 13,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 14,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 15,
              "variableName": "Variables vars",
              "startLine": 1734,
              "startColumn": 73,
              "endLine": 1734,
              "endColumn": 87,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return type.equals(item.fhirType());\n  }\n\n  private void processTarget(String rulePath, TransformContext context, Variables vars, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, String srcVar, boolean atRoot, Variables sharedVars) throws FHIRException {\n    Base dest = null;\n    if (tgt.hasContext()) {\n      dest = vars.get(VariableMode.OUTPUT, tgt.getContext());"
            },
            {
              "step": 16,
              "variableName": "vars",
              "startLine": 1744,
              "startColumn": 60,
              "endLine": 1744,
              "endColumn": 64,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n    Base v = null;\n    if (tgt.hasTransform()) {\n      v = runTransform(rulePath, context, map, group, tgt, vars, dest, tgt.getElement(), srcVar, atRoot);\n      if (v != null && dest != null) {\n        try {\n          v = dest.setProperty(tgt.getElement().hashCode(), tgt.getElement(), v); // reset v because some implementations may have to rewrite v when setting the value"
            },
            {
              "step": 17,
              "variableName": "Variables vars",
              "startLine": 1769,
              "startColumn": 166,
              "endLine": 1769,
              "endColumn": 180,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {\n    try {\n      switch (tgt.getTransform()) {\n        case CREATE:"
            },
            {
              "step": 18,
              "variableName": "vars",
              "startLine": 1810,
              "startColumn": 99,
              "endLine": 1810,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 19,
              "variableName": "Variables vars",
              "startLine": 1998,
              "startColumn": 25,
              "endLine": 1998,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n\n  private Base getParam(Variables vars, StructureMapGroupRuleTargetParameterComponent parameter) throws DefinitionException {\n    DataType p = parameter.getValue();\n    if (!(p instanceof IdType))\n      return p;"
            },
            {
              "step": 20,
              "variableName": "vars",
              "startLine": 2004,
              "startColumn": 16,
              "endLine": 2004,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      return p;\n    else {\n      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)"
            },
            {
              "step": 21,
              "variableName": "get",
              "startLine": 30,
              "startColumn": 15,
              "endLine": 30,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();"
            },
            {
              "step": 22,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 23,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 24,
              "variableName": "v",
              "startLine": 32,
              "startColumn": 12,
              "endLine": 32,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }"
            },
            {
              "step": 25,
              "variableName": "v",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 26,
              "variableName": "getObject",
              "startLine": 28,
              "startColumn": 15,
              "endLine": 28,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    return name;\n  }\n\n  public Base getObject() {\n    return object;\n  }\n"
            },
            {
              "step": 27,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 28,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 29,
              "variableName": "v.getObject()",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 30,
              "variableName": "vars.get(VariableMode.INPUT, n)",
              "startLine": 2004,
              "startColumn": 16,
              "endLine": 2004,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      return p;\n    else {\n      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)"
            },
            {
              "step": 31,
              "variableName": "b",
              "startLine": 2009,
              "startColumn": 14,
              "endLine": 2009,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;\n    }\n  }\n"
            },
            {
              "step": 32,
              "variableName": "getParam(vars, tgt.getParameter().get(0))",
              "startLine": 1810,
              "startColumn": 90,
              "endLine": 1810,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 33,
              "variableName": "tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false)",
              "startLine": 1810,
              "startColumn": 57,
              "endLine": 1810,
              "endColumn": 156,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "... : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 34,
              "variableName": "Base base",
              "startLine": 838,
              "startColumn": 96,
              "endLine": 838,
              "endColumn": 105,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "   * @throws FHIRException \n   * @\n   */\n  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);"
            },
            {
              "step": 35,
              "variableName": "base",
              "startLine": 841,
              "startColumn": 16,
              "endLine": 841,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 36,
              "variableName": "list",
              "startLine": 841,
              "startColumn": 7,
              "endLine": 841,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 37,
              "variableName": "list",
              "startLine": 844,
              "startColumn": 95,
              "endLine": 844,
              "endColumn": 99,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);\n  }\n\n  /**"
            },
            {
              "step": 38,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 39,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 40,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 41,
              "variableName": "focus",
              "startLine": 4049,
              "startColumn": 44,
              "endLine": 4049,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Children : return funcChildren(context, focus, exp);\n    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);"
            },
            {
              "step": 42,
              "variableName": "List<Base> focus",
              "startLine": 5686,
              "startColumn": 58,
              "endLine": 5686,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return (item.isBooleanPrimitive());\n  }\n\n  private List<Base> funcTrace(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {"
            },
            {
              "step": 43,
              "variableName": "focus",
              "startLine": 5693,
              "startColumn": 17,
              "endLine": 5693,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);\n    }\n    return focus;\n  }"
            },
            {
              "step": 44,
              "variableName": "List<Base> contents",
              "startLine": 1012,
              "startColumn": 33,
              "endLine": 1012,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");"
            },
            {
              "step": 45,
              "variableName": "contents",
              "startLine": 1013,
              "startColumn": 57,
              "endLine": 1013,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");\n      }"
            },
            {
              "step": 46,
              "variableName": "List<Base> focus",
              "startLine": 929,
              "startColumn": 39,
              "endLine": 929,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/liquid/LiquidEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n  @Override\n  public boolean log(String argument, List<Base> focus) {\n    if (externalHostServices == null)\n      return false;\n    return externalHostServices.log(argument, focus);"
            },
            {
              "step": 47,
              "variableName": "focus",
              "startLine": 932,
              "startColumn": 47,
              "endLine": 932,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/liquid/LiquidEngine.java",
              "type": "",
              "code": "  public boolean log(String argument, List<Base> focus) {\n    if (externalHostServices == null)\n      return false;\n    return externalHostServices.log(argument, focus);\n  }\n\n  @Override"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "this.accessToken",
              "startLine": 128,
              "startColumn": 18,
              "endLine": 128,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "              throw new Error(\"Attempt to auto-create CDSHooksRequestFhirAuthorizationComponent.accessToken\");\r\n            else if (Configuration.doAutoCreate())\r\n              this.accessToken = new StringType(); // bb\r\n          return this.accessToken;\r\n        }\r\n\r\n        public boolean hasAccessTokenElement() { \r"
            },
            {
              "step": 1,
              "variableName": "getAccessTokenElement()",
              "startLine": 479,
              "startColumn": 35,
              "endLine": 479,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "      @Override\r\n      public Base makeProperty(int hash, String name) throws FHIRException {\r\n        switch (hash) {\r\n        case -1042689291:  return getAccessTokenElement();\r\n        case 141498579:  return getTokenTypeElement();\r\n        case 250196857:  return getExpiresInElement();\r\n        case 109264468:  return getScopeElement();\r"
            },
            {
              "step": 2,
              "variableName": "dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement())",
              "startLine": 1756,
              "startColumn": 15,
              "endLine": 1756,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      if (tgt.hasListMode(StructureMapTargetListMode.SHARE)) {\n        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {"
            },
            {
              "step": 3,
              "variableName": "v",
              "startLine": 1757,
              "startColumn": 68,
              "endLine": 1757,
              "endColumn": 69,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {\n        v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());"
            },
            {
              "step": 4,
              "variableName": "Base object",
              "startLine": 14,
              "startColumn": 51,
              "endLine": 14,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "public class Variables {\n  private List<Variable> list = new ArrayList<Variable>();\n\n  public void add(VariableMode mode, String name, Base object) {\n    Variable vv = null;\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))"
            },
            {
              "step": 5,
              "variableName": "object",
              "startLine": 21,
              "startColumn": 39,
              "endLine": 21,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 6,
              "variableName": "Base object",
              "startLine": 13,
              "startColumn": 51,
              "endLine": 13,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  private String name;\n  private Base object;\n\n  public Variable(VariableMode mode, String name, Base object) {\n    super();\n    this.mode = mode;\n    this.name = name;"
            },
            {
              "step": 7,
              "variableName": "object",
              "startLine": 17,
              "startColumn": 19,
              "endLine": 17,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 17,
              "startColumn": 5,
              "endLine": 17,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 9,
              "variableName": "new Variable(mode, name, object)",
              "startLine": 21,
              "startColumn": 14,
              "endLine": 21,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 10,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 11,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 12,
              "variableName": "sharedVars",
              "startLine": 1757,
              "startColumn": 11,
              "endLine": 1757,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {\n        v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());"
            },
            {
              "step": 13,
              "variableName": "vars",
              "startLine": 1329,
              "startColumn": 192,
              "endLine": 1329,
              "endColumn": 196,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 14,
              "variableName": "vars",
              "startLine": 1316,
              "startColumn": 48,
              "endLine": 1316,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n\n    for (StructureMapGroupRuleComponent r : group.getRule()) {\n      executeRule(indent + \"  \", context, map, vars, group, r, atRoot);\n    }\n  }\n"
            },
            {
              "step": 15,
              "variableName": "vars",
              "startLine": 1316,
              "startColumn": 48,
              "endLine": 1316,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n\n    for (StructureMapGroupRuleComponent r : group.getRule()) {\n      executeRule(indent + \"  \", context, map, vars, group, r, atRoot);\n    }\n  }\n"
            },
            {
              "step": 16,
              "variableName": "Variables vars",
              "startLine": 1320,
              "startColumn": 87,
              "endLine": 1320,
              "endColumn": 101,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n  }\n\n  private void executeRule(String indent, TransformContext context, StructureMap map, Variables vars, StructureMapGroupComponent group, StructureMapGroupRuleComponent rule, boolean atRoot) throws FHIRException {\n    log(indent + \"rule : \" + rule.getName() + \"; vars = \" + vars.summary());\n    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)"
            },
            {
              "step": 17,
              "variableName": "vars",
              "startLine": 1322,
              "startColumn": 25,
              "endLine": 1322,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  private void executeRule(String indent, TransformContext context, StructureMap map, Variables vars, StructureMapGroupComponent group, StructureMapGroupRuleComponent rule, boolean atRoot) throws FHIRException {\n    log(indent + \"rule : \" + rule.getName() + \"; vars = \" + vars.summary());\n    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)\n      throw new FHIRException(\"Rule \\\"\" + rule.getName() + \"\\\": not handled yet\");\n    List<Variables> source = processSource(rule.getName(), context, srcVars, rule.getSource().get(0), map.getUrl(), indent);"
            },
            {
              "step": 18,
              "variableName": "copy",
              "startLine": 24,
              "startColumn": 20,
              "endLine": 24,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;"
            },
            {
              "step": 19,
              "variableName": "list",
              "startLine": 26,
              "startColumn": 24,
              "endLine": 26,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 20,
              "variableName": "list",
              "startLine": 26,
              "startColumn": 24,
              "endLine": 26,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 21,
              "variableName": "result.list",
              "startLine": 26,
              "startColumn": 5,
              "endLine": 26,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 22,
              "variableName": "result",
              "startLine": 26,
              "startColumn": 5,
              "endLine": 26,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 23,
              "variableName": "result",
              "startLine": 27,
              "startColumn": 12,
              "endLine": 27,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {"
            },
            {
              "step": 24,
              "variableName": "vars.copy()",
              "startLine": 1322,
              "startColumn": 25,
              "endLine": 1322,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  private void executeRule(String indent, TransformContext context, StructureMap map, Variables vars, StructureMapGroupComponent group, StructureMapGroupRuleComponent rule, boolean atRoot) throws FHIRException {\n    log(indent + \"rule : \" + rule.getName() + \"; vars = \" + vars.summary());\n    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)\n      throw new FHIRException(\"Rule \\\"\" + rule.getName() + \"\\\": not handled yet\");\n    List<Variables> source = processSource(rule.getName(), context, srcVars, rule.getSource().get(0), map.getUrl(), indent);"
            },
            {
              "step": 25,
              "variableName": "srcVars",
              "startLine": 1325,
              "startColumn": 69,
              "endLine": 1325,
              "endColumn": 76,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)\n      throw new FHIRException(\"Rule \\\"\" + rule.getName() + \"\\\": not handled yet\");\n    List<Variables> source = processSource(rule.getName(), context, srcVars, rule.getSource().get(0), map.getUrl(), indent);\n    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {"
            },
            {
              "step": 26,
              "variableName": "Variables vars",
              "startLine": 1601,
              "startColumn": 82,
              "endLine": 1601,
              "endColumn": 96,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return res;\n  }\n\n  private List<Variables> processSource(String ruleId, TransformContext context, Variables vars, StructureMapGroupRuleSourceComponent src, String pathForErrors, String indent) throws FHIRException {\n    List<Base> items;\n    if (src.getContext().equals(\"@search\")) {\n      ExpressionNode expr = (ExpressionNode) src.getUserData(MAP_SEARCH_EXPRESSION);"
            },
            {
              "step": 27,
              "variableName": "vars",
              "startLine": 1613,
              "startColumn": 16,
              "endLine": 1613,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      items = services.performSearch(context.getAppInfo(), search);\n    } else {\n      items = new ArrayList<Base>();\n      Base b = vars.get(VariableMode.INPUT, src.getContext());\n      if (b == null)\n        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n"
            },
            {
              "step": 28,
              "variableName": "get",
              "startLine": 30,
              "startColumn": 15,
              "endLine": 30,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();"
            },
            {
              "step": 29,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 30,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 31,
              "variableName": "v",
              "startLine": 32,
              "startColumn": 12,
              "endLine": 32,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }"
            },
            {
              "step": 32,
              "variableName": "v",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 33,
              "variableName": "getObject",
              "startLine": 28,
              "startColumn": 15,
              "endLine": 28,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    return name;\n  }\n\n  public Base getObject() {\n    return object;\n  }\n"
            },
            {
              "step": 34,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 35,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 36,
              "variableName": "v.getObject()",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 37,
              "variableName": "vars.get(VariableMode.INPUT, src.getContext())",
              "startLine": 1613,
              "startColumn": 16,
              "endLine": 1613,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      items = services.performSearch(context.getAppInfo(), search);\n    } else {\n      items = new ArrayList<Base>();\n      Base b = vars.get(VariableMode.INPUT, src.getContext());\n      if (b == null)\n        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n"
            },
            {
              "step": 38,
              "variableName": "b",
              "startLine": 1618,
              "startColumn": 19,
              "endLine": 1618,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n\n      if (!src.hasElement())\n        items.add(b);\n      else {\n        getChildrenByName(b, src.getElement(), items);\n        if (items.size() == 0 && src.hasDefaultValue())"
            },
            {
              "step": 39,
              "variableName": "items",
              "startLine": 1618,
              "startColumn": 9,
              "endLine": 1618,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n\n      if (!src.hasElement())\n        items.add(b);\n      else {\n        getChildrenByName(b, src.getElement(), items);\n        if (items.size() == 0 && src.hasDefaultValue())"
            },
            {
              "step": 40,
              "variableName": "items",
              "startLine": 1680,
              "startColumn": 24,
              "endLine": 1680,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        src.setUserData(MAP_WHERE_LOG, expr);\n      }\n      CommaSeparatedStringBuilder b = new CommaSeparatedStringBuilder();\n      for (Base item : items) {\n        Variables varsForSource = vars.copy();\n        if (src.hasVariable()) {\n            varsForSource.add(VariableMode.INPUT, src.getVariable(), item);"
            },
            {
              "step": 41,
              "variableName": "item",
              "startLine": 1685,
              "startColumn": 75,
              "endLine": 1685,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        if (src.hasVariable()) {\n            varsForSource.add(VariableMode.INPUT, src.getVariable(), item);\n        }\n        b.appendIfNotNull(fpe.evaluateToString(varsForSource, null, null, item, expr));\n      }\n      if (b.length() > 0)\n        services.log(b.toString());"
            },
            {
              "step": 42,
              "variableName": "Base base",
              "startLine": 947,
              "startColumn": 89,
              "endLine": 947,
              "endColumn": 98,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "    return convertToString(evaluate(base, path));\n  }\n\n  public String evaluateToString(Object appInfo, Base focusResource, Base rootResource, Base base, ExpressionNode node) throws FHIRException {\n    return convertToString(evaluate(appInfo, focusResource, rootResource, base, node));\n  }\n"
            },
            {
              "step": 43,
              "variableName": "base",
              "startLine": 948,
              "startColumn": 75,
              "endLine": 948,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  }\n\n  public String evaluateToString(Object appInfo, Base focusResource, Base rootResource, Base base, ExpressionNode node) throws FHIRException {\n    return convertToString(evaluate(appInfo, focusResource, rootResource, base, node));\n  }\n\n  /**"
            },
            {
              "step": 44,
              "variableName": "Base base",
              "startLine": 856,
              "startColumn": 88,
              "endLine": 856,
              "endColumn": 97,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "   * @throws FHIRException \n   * @\n   */\n  public List<Base> evaluate(Object appContext, Base focusResource, Base rootResource, Base base, ExpressionNode expressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);"
            },
            {
              "step": 45,
              "variableName": "base",
              "startLine": 859,
              "startColumn": 16,
              "endLine": 859,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  public List<Base> evaluate(Object appContext, Base focusResource, Base rootResource, Base base, ExpressionNode expressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, expressionNode, true);"
            },
            {
              "step": 46,
              "variableName": "list",
              "startLine": 859,
              "startColumn": 7,
              "endLine": 859,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  public List<Base> evaluate(Object appContext, Base focusResource, Base rootResource, Base base, ExpressionNode expressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, expressionNode, true);"
            },
            {
              "step": 47,
              "variableName": "list",
              "startLine": 862,
              "startColumn": 95,
              "endLine": 862,
              "endColumn": 99,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, expressionNode, true);\n  }\n\n  /**"
            },
            {
              "step": 48,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 49,
              "variableName": "focus",
              "startLine": 1567,
              "startColumn": 26,
              "endLine": 1567,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {"
            },
            {
              "step": 50,
              "variableName": "item",
              "startLine": 1568,
              "startColumn": 49,
              "endLine": 1568,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "        work.add(context.getIndex());\n      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);"
            },
            {
              "step": 51,
              "variableName": "Base item",
              "startLine": 3266,
              "startColumn": 56,
              "endLine": 3266,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "    }\n  }\n\n  private List<Base> execute(ExecutionContext context, Base item, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    List<Base> result = new ArrayList<Base>(); \n    if (atEntry && context.appInfo != null && hostServices != null) {\n      // we'll see if the name matches a constant known by the context."
            },
            {
              "step": 52,
              "variableName": "item",
              "startLine": 3281,
              "startColumn": 22,
              "endLine": 3281,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "      if (sd == null) {\n        // logical model\n        if (exp.getName().equals(item.fhirType())) {\n          result.add(item);          \n        }\n      } else {\n        while (sd != null) {"
            },
            {
              "step": 53,
              "variableName": "result",
              "startLine": 3281,
              "startColumn": 11,
              "endLine": 3281,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      if (sd == null) {\n        // logical model\n        if (exp.getName().equals(item.fhirType())) {\n          result.add(item);          \n        }\n      } else {\n        while (sd != null) {"
            },
            {
              "step": 54,
              "variableName": "result",
              "startLine": 3300,
              "startColumn": 12,
              "endLine": 3300,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      // (if the name does match, and the user wants to get the constant value, they'll have to try harder...\n      result.addAll(hostServices.resolveConstant(this, context.appInfo, exp.getName(), false, false));\n    }\n    return result;\n  }\t\n\n  private String getParent(String rn) {"
            },
            {
              "step": 55,
              "variableName": "execute(context, item, exp, atEntry)",
              "startLine": 1568,
              "startColumn": 32,
              "endLine": 1568,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        work.add(context.getIndex());\n      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);"
            },
            {
              "step": 56,
              "variableName": "outcome",
              "startLine": 1569,
              "startColumn": 28,
              "endLine": 1569,
              "endColumn": 35,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }"
            },
            {
              "step": 57,
              "variableName": "base",
              "startLine": 1570,
              "startColumn": 17,
              "endLine": 1570,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }\n          }"
            },
            {
              "step": 58,
              "variableName": "base",
              "startLine": 1571,
              "startColumn": 24,
              "endLine": 1571,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }\n          }\n        }     "
            },
            {
              "step": 59,
              "variableName": "work",
              "startLine": 1571,
              "startColumn": 15,
              "endLine": 1571,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }\n          }\n        }     "
            },
            {
              "step": 60,
              "variableName": "work",
              "startLine": 1590,
              "startColumn": 31,
              "endLine": 1590,
              "endColumn": 35,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    }\n\n    if (exp.getInner() != null) {\n      work = execute(context, work, exp.getInner(), false);\n    }\n\n    if (exp.isProximal() && exp.getOperation() != null) {"
            },
            {
              "step": 61,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 62,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 63,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 64,
              "variableName": "focus",
              "startLine": 4050,
              "startColumn": 62,
              "endLine": 4050,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);\n    case Now : return funcNow(context, focus, exp);"
            },
            {
              "step": 65,
              "variableName": "List<Base> focus",
              "startLine": 5698,
              "startColumn": 67,
              "endLine": 5698,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return focus;\n  }\n\n  private List<Base> funcDefineVariable(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    List<Base> value;"
            },
            {
              "step": 66,
              "variableName": "value",
              "startLine": 5708,
              "startColumn": 38,
              "endLine": 5708,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      value = focus;\n    }\n    // stash the variable into the context\n    context.setDefinedVariable(name, value);\n    return focus;\n  }\n"
            },
            {
              "step": 67,
              "variableName": "List<Base> value",
              "startLine": 1090,
              "startColumn": 49,
              "endLine": 1090,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      return definedVariables == null ? makeNull() : definedVariables.get(name);\n    }\n\n    public void setDefinedVariable(String name, List<Base> value) {\n      if (isSystemVariable(name))\n        throw new PathEngineException(worker.formatMessage(I18nConstants.FHIRPATH_REDEFINE_VARIABLE, name), I18nConstants.FHIRPATH_REDEFINE_VARIABLE);\n"
            },
            {
              "step": 68,
              "variableName": "value",
              "startLine": 1103,
              "startColumn": 34,
              "endLine": 1103,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        }\n      }\n\n      definedVariables.put(name, value);\n    }\n  }\n"
            },
            {
              "step": 69,
              "variableName": "definedVariables",
              "startLine": 1103,
              "startColumn": 7,
              "endLine": 1103,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "HashMap [<map.value>, <element>] : StringType",
              "code": "        }\n      }\n\n      definedVariables.put(name, value);\n    }\n  }\n"
            },
            {
              "step": 70,
              "variableName": "definedVariables",
              "startLine": 1103,
              "startColumn": 7,
              "endLine": 1103,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [definedVariables, <map.value>, <element>] : StringType",
              "code": "        }\n      }\n\n      definedVariables.put(name, value);\n    }\n  }\n"
            },
            {
              "step": 71,
              "variableName": "context",
              "startLine": 5708,
              "startColumn": 5,
              "endLine": 5708,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [definedVariables, <map.value>, <element>] : StringType",
              "code": "      value = focus;\n    }\n    // stash the variable into the context\n    context.setDefinedVariable(name, value);\n    return focus;\n  }\n"
            },
            {
              "step": 72,
              "variableName": "context",
              "startLine": 4050,
              "startColumn": 53,
              "endLine": 4050,
              "endColumn": 60,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [definedVariables, <map.value>, <element>] : StringType",
              "code": "    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);\n    case Now : return funcNow(context, focus, exp);"
            },
            {
              "step": 73,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 74,
              "variableName": "focus",
              "startLine": 4016,
              "startColumn": 52,
              "endLine": 4016,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Select : return funcSelect(context, focus, exp);\n    case All : return funcAll(context, focus, exp);\n    case Repeat : return funcRepeat(context, focus, exp);\n    case Aggregate : return funcAggregate(context, focus, exp);\n    case Item : return funcItem(context, focus, exp);\n    case As : return funcAs(context, focus, exp);\n    case OfType : return funcOfType(context, focus, exp);"
            },
            {
              "step": 75,
              "variableName": "List<Base> focus",
              "startLine": 5371,
              "startColumn": 62,
              "endLine": 5371,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private List<Base> funcAggregate(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> total = new ArrayList<Base>();\n    if (exp.parameterCount() > 1) {\n      total = execute(context, focus, exp.getParameters().get(1), false);"
            },
            {
              "step": 76,
              "variableName": "focus",
              "startLine": 5374,
              "startColumn": 32,
              "endLine": 5374,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  private List<Base> funcAggregate(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> total = new ArrayList<Base>();\n    if (exp.parameterCount() > 1) {\n      total = execute(context, focus, exp.getParameters().get(1), false);\n    }\n\n    List<Base> pc = new ArrayList<Base>();"
            },
            {
              "step": 77,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 78,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 79,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 80,
              "variableName": "focus",
              "startLine": 4010,
              "startColumn": 50,
              "endLine": 4010,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case SubsetOf : return funcSubsetOf(context, focus, exp);\n    case SupersetOf : return funcSupersetOf(context, focus, exp);\n    case IsDistinct : return funcIsDistinct(context, focus, exp);\n    case Distinct : return funcDistinct(context, focus, exp);\n    case Count : return funcCount(context, focus, exp);\n    case Where : return funcWhere(context, focus, exp);\n    case Select : return funcSelect(context, focus, exp);"
            },
            {
              "step": 81,
              "variableName": "List<Base> focus",
              "startLine": 5722,
              "startColumn": 61,
              "endLine": 5722,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return focus;\n  }\n\n  private List<Base> funcDistinct(ExecutionContext context, List<Base> focus, ExpressionNode exp) {\n    if (focus.size() <= 1) {\n      return focus;\n    }"
            },
            {
              "step": 82,
              "variableName": "focus",
              "startLine": 5724,
              "startColumn": 14,
              "endLine": 5724,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n  private List<Base> funcDistinct(ExecutionContext context, List<Base> focus, ExpressionNode exp) {\n    if (focus.size() <= 1) {\n      return focus;\n    }\n\n    List<Base> result = new ArrayList<Base>();"
            },
            {
              "step": 83,
              "variableName": "funcDistinct(context, focus, exp)",
              "startLine": 4010,
              "startColumn": 28,
              "endLine": 4010,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case SubsetOf : return funcSubsetOf(context, focus, exp);\n    case SupersetOf : return funcSupersetOf(context, focus, exp);\n    case IsDistinct : return funcIsDistinct(context, focus, exp);\n    case Distinct : return funcDistinct(context, focus, exp);\n    case Count : return funcCount(context, focus, exp);\n    case Where : return funcWhere(context, focus, exp);\n    case Select : return funcSelect(context, focus, exp);"
            },
            {
              "step": 84,
              "variableName": "evaluateFunction(context, focus, exp)",
              "startLine": 1578,
              "startColumn": 26,
              "endLine": 1578,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 85,
              "variableName": "work2",
              "startLine": 1579,
              "startColumn": 19,
              "endLine": 1579,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:\n      work.addAll(resolveConstant(context, exp.getConstant(), false, exp, true));"
            },
            {
              "step": 86,
              "variableName": "work",
              "startLine": 1579,
              "startColumn": 7,
              "endLine": 1579,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:\n      work.addAll(resolveConstant(context, exp.getConstant(), false, exp, true));"
            },
            {
              "step": 87,
              "variableName": "work",
              "startLine": 1615,
              "startColumn": 12,
              "endLine": 1615,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n    }\n    //    System.out.println(\"Result of {'\"+exp.toString()+\"'}: \"+work.toString());\n    return work;\n  }\n\n  private List<Base> executeTypeName(ExecutionContext context, List<Base> focus, ExpressionNode next, boolean atEntry) {"
            },
            {
              "step": 88,
              "variableName": "execute(context, focus, exp.getParameters().get(1), false)",
              "startLine": 5374,
              "startColumn": 15,
              "endLine": 5374,
              "endColumn": 73,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  private List<Base> funcAggregate(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> total = new ArrayList<Base>();\n    if (exp.parameterCount() > 1) {\n      total = execute(context, focus, exp.getParameters().get(1), false);\n    }\n\n    List<Base> pc = new ArrayList<Base>();"
            },
            {
              "step": 89,
              "variableName": "total",
              "startLine": 5380,
              "startColumn": 17,
              "endLine": 5380,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    List<Base> pc = new ArrayList<Base>();\n    for (Base item : focus) {\n      ExecutionContext c = changeThis(context, item);\n      c.total = total;\n      c.next();\n      total = execute(c, pc, exp.getParameters().get(0), true);\n    }"
            },
            {
              "step": 90,
              "variableName": "c",
              "startLine": 5380,
              "startColumn": 7,
              "endLine": 5380,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    List<Base> pc = new ArrayList<Base>();\n    for (Base item : focus) {\n      ExecutionContext c = changeThis(context, item);\n      c.total = total;\n      c.next();\n      total = execute(c, pc, exp.getParameters().get(0), true);\n    }"
            },
            {
              "step": 91,
              "variableName": "c",
              "startLine": 5382,
              "startColumn": 23,
              "endLine": 5382,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      ExecutionContext c = changeThis(context, item);\n      c.total = total;\n      c.next();\n      total = execute(c, pc, exp.getParameters().get(0), true);\n    }\n    return total;\n  }"
            },
            {
              "step": 92,
              "variableName": "ExecutionContext inContext",
              "startLine": 1551,
              "startColumn": 30,
              "endLine": 1551,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 93,
              "variableName": "inContext",
              "startLine": 1553,
              "startColumn": 52,
              "endLine": 1553,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 94,
              "variableName": "ExecutionContext context",
              "startLine": 4819,
              "startColumn": 48,
              "endLine": 4819,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return newContext;\n  }\n\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;"
            },
            {
              "step": 95,
              "variableName": "context",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 96,
              "variableName": "context.total",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 97,
              "variableName": "newContext",
              "startLine": 4821,
              "startColumn": 5,
              "endLine": 4821,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 98,
              "variableName": "newContext",
              "startLine": 4822,
              "startColumn": 5,
              "endLine": 4822,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {\n      for (String s : context.definedVariables.keySet()) {"
            },
            {
              "step": 99,
              "variableName": "newContext",
              "startLine": 4829,
              "startColumn": 12,
              "endLine": 4829,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "        newContext.setDefinedVariable(s, context.definedVariables.get(s));\n      }\n    }\n    return newContext;\n  }\n\n  private ExecutionTypeContext changeThis(ExecutionTypeContext context, TypeDetails newThis) {"
            },
            {
              "step": 100,
              "variableName": "contextForParameter(inContext)",
              "startLine": 1553,
              "startColumn": 32,
              "endLine": 1553,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 101,
              "variableName": "context",
              "startLine": 1578,
              "startColumn": 43,
              "endLine": 1578,
              "endColumn": 50,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 102,
              "variableName": "ExecutionContext context",
              "startLine": 4002,
              "startColumn": 39,
              "endLine": 4002,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 103,
              "variableName": "context",
              "startLine": 4049,
              "startColumn": 35,
              "endLine": 4049,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    case Children : return funcChildren(context, focus, exp);\n    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);"
            },
            {
              "step": 104,
              "variableName": "ExecutionContext context",
              "startLine": 5686,
              "startColumn": 32,
              "endLine": 5686,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return (item.isBooleanPrimitive());\n  }\n\n  private List<Base> funcTrace(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {"
            },
            {
              "step": 105,
              "variableName": "context",
              "startLine": 5690,
              "startColumn": 31,
              "endLine": 5690,
              "endColumn": 38,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {\n      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);"
            },
            {
              "step": 106,
              "variableName": "ExecutionContext inContext",
              "startLine": 1551,
              "startColumn": 30,
              "endLine": 1551,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 107,
              "variableName": "inContext",
              "startLine": 1553,
              "startColumn": 52,
              "endLine": 1553,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 108,
              "variableName": "ExecutionContext context",
              "startLine": 4819,
              "startColumn": 48,
              "endLine": 4819,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return newContext;\n  }\n\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;"
            },
            {
              "step": 109,
              "variableName": "context",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 110,
              "variableName": "context.total",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 111,
              "variableName": "newContext",
              "startLine": 4821,
              "startColumn": 5,
              "endLine": 4821,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 112,
              "variableName": "newContext",
              "startLine": 4822,
              "startColumn": 5,
              "endLine": 4822,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {\n      for (String s : context.definedVariables.keySet()) {"
            },
            {
              "step": 113,
              "variableName": "newContext",
              "startLine": 4829,
              "startColumn": 12,
              "endLine": 4829,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "        newContext.setDefinedVariable(s, context.definedVariables.get(s));\n      }\n    }\n    return newContext;\n  }\n\n  private ExecutionTypeContext changeThis(ExecutionTypeContext context, TypeDetails newThis) {"
            },
            {
              "step": 114,
              "variableName": "contextForParameter(inContext)",
              "startLine": 1553,
              "startColumn": 32,
              "endLine": 1553,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 115,
              "variableName": "context",
              "startLine": 1563,
              "startColumn": 21,
              "endLine": 1563,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      if (atEntry && exp.getName().equals(\"$this\")) {\n        work.add(context.getThisItem());\n      } else if (atEntry && exp.getName().equals(\"$total\")) {\n        work.addAll(context.getTotal());\n      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {"
            },
            {
              "step": 116,
              "variableName": "getTotal",
              "startLine": 1066,
              "startColumn": 23,
              "endLine": 1066,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    public Base getThisItem() {\n      return thisItem;\n    }\n    public List<Base> getTotal() {\n      return total;\n    }\n"
            },
            {
              "step": 117,
              "variableName": "total",
              "startLine": 1067,
              "startColumn": 14,
              "endLine": 1067,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      return thisItem;\n    }\n    public List<Base> getTotal() {\n      return total;\n    }\n\n    public void next() {"
            },
            {
              "step": 118,
              "variableName": "total",
              "startLine": 1067,
              "startColumn": 14,
              "endLine": 1067,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      return thisItem;\n    }\n    public List<Base> getTotal() {\n      return total;\n    }\n\n    public void next() {"
            },
            {
              "step": 119,
              "variableName": "context.getTotal()",
              "startLine": 1563,
              "startColumn": 21,
              "endLine": 1563,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      if (atEntry && exp.getName().equals(\"$this\")) {\n        work.add(context.getThisItem());\n      } else if (atEntry && exp.getName().equals(\"$total\")) {\n        work.addAll(context.getTotal());\n      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {"
            },
            {
              "step": 120,
              "variableName": "work",
              "startLine": 1563,
              "startColumn": 9,
              "endLine": 1563,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      if (atEntry && exp.getName().equals(\"$this\")) {\n        work.add(context.getThisItem());\n      } else if (atEntry && exp.getName().equals(\"$total\")) {\n        work.addAll(context.getTotal());\n      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {"
            },
            {
              "step": 121,
              "variableName": "work",
              "startLine": 1615,
              "startColumn": 12,
              "endLine": 1615,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n    }\n    //    System.out.println(\"Result of {'\"+exp.toString()+\"'}: \"+work.toString());\n    return work;\n  }\n\n  private List<Base> executeTypeName(ExecutionContext context, List<Base> focus, ExpressionNode next, boolean atEntry) {"
            },
            {
              "step": 122,
              "variableName": "execute(context, focus, exp.getParameters().get(1), true)",
              "startLine": 5690,
              "startColumn": 23,
              "endLine": 5690,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {\n      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);"
            },
            {
              "step": 123,
              "variableName": "n2",
              "startLine": 5691,
              "startColumn": 17,
              "endLine": 5691,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {\n      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);\n    }"
            },
            {
              "step": 124,
              "variableName": "List<Base> contents",
              "startLine": 1012,
              "startColumn": 33,
              "endLine": 1012,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");"
            },
            {
              "step": 125,
              "variableName": "contents",
              "startLine": 1013,
              "startColumn": 57,
              "endLine": 1013,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");\n      }"
            },
            {
              "step": 126,
              "variableName": "List<Base> focus",
              "startLine": 322,
              "startColumn": 41,
              "endLine": 322,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    }\n\n    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else"
            },
            {
              "step": 127,
              "variableName": "focus",
              "startLine": 324,
              "startColumn": 51,
              "endLine": 324,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "List",
              "code": "    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else\n        return false;\n    }"
            },
            {
              "step": 128,
              "variableName": "List<Base> focus",
              "startLine": 929,
              "startColumn": 39,
              "endLine": 929,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/liquid/LiquidEngine.java",
              "type": "List",
              "code": "  }\n\n  @Override\n  public boolean log(String argument, List<Base> focus) {\n    if (externalHostServices == null)\n      return false;\n    return externalHostServices.log(argument, focus);"
            },
            {
              "step": 129,
              "variableName": "focus",
              "startLine": 932,
              "startColumn": 47,
              "endLine": 932,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/liquid/LiquidEngine.java",
              "type": "",
              "code": "  public boolean log(String argument, List<Base> focus) {\n    if (externalHostServices == null)\n      return false;\n    return externalHostServices.log(argument, focus);\n  }\n\n  @Override"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.accessToken",
              "startLine": 128,
              "startColumn": 18,
              "endLine": 128,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "              throw new Error(\"Attempt to auto-create CDSHooksRequestFhirAuthorizationComponent.accessToken\");\r\n            else if (Configuration.doAutoCreate())\r\n              this.accessToken = new StringType(); // bb\r\n          return this.accessToken;\r\n        }\r\n\r\n        public boolean hasAccessTokenElement() { \r"
            },
            {
              "step": 1,
              "variableName": "getAccessTokenElement()",
              "startLine": 479,
              "startColumn": 35,
              "endLine": 479,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "      @Override\r\n      public Base makeProperty(int hash, String name) throws FHIRException {\r\n        switch (hash) {\r\n        case -1042689291:  return getAccessTokenElement();\r\n        case 141498579:  return getTokenTypeElement();\r\n        case 250196857:  return getExpiresInElement();\r\n        case 109264468:  return getScopeElement();\r"
            },
            {
              "step": 2,
              "variableName": "dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement())",
              "startLine": 1760,
              "startColumn": 13,
              "endLine": 1760,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {\n        v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n      } else {\n        v = dest;\n      }"
            },
            {
              "step": 3,
              "variableName": "v",
              "startLine": 1766,
              "startColumn": 56,
              "endLine": 1766,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 4,
              "variableName": "Base object",
              "startLine": 14,
              "startColumn": 51,
              "endLine": 14,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "public class Variables {\n  private List<Variable> list = new ArrayList<Variable>();\n\n  public void add(VariableMode mode, String name, Base object) {\n    Variable vv = null;\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))"
            },
            {
              "step": 5,
              "variableName": "object",
              "startLine": 21,
              "startColumn": 39,
              "endLine": 21,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 6,
              "variableName": "Base object",
              "startLine": 13,
              "startColumn": 51,
              "endLine": 13,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  private String name;\n  private Base object;\n\n  public Variable(VariableMode mode, String name, Base object) {\n    super();\n    this.mode = mode;\n    this.name = name;"
            },
            {
              "step": 7,
              "variableName": "object",
              "startLine": 17,
              "startColumn": 19,
              "endLine": 17,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 17,
              "startColumn": 5,
              "endLine": 17,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 9,
              "variableName": "new Variable(mode, name, object)",
              "startLine": 21,
              "startColumn": 14,
              "endLine": 21,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 10,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 11,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 12,
              "variableName": "vars",
              "startLine": 1766,
              "startColumn": 7,
              "endLine": 1766,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 13,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 14,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 15,
              "variableName": "Variables vars",
              "startLine": 1734,
              "startColumn": 73,
              "endLine": 1734,
              "endColumn": 87,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return type.equals(item.fhirType());\n  }\n\n  private void processTarget(String rulePath, TransformContext context, Variables vars, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, String srcVar, boolean atRoot, Variables sharedVars) throws FHIRException {\n    Base dest = null;\n    if (tgt.hasContext()) {\n      dest = vars.get(VariableMode.OUTPUT, tgt.getContext());"
            },
            {
              "step": 16,
              "variableName": "vars",
              "startLine": 1744,
              "startColumn": 60,
              "endLine": 1744,
              "endColumn": 64,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n    Base v = null;\n    if (tgt.hasTransform()) {\n      v = runTransform(rulePath, context, map, group, tgt, vars, dest, tgt.getElement(), srcVar, atRoot);\n      if (v != null && dest != null) {\n        try {\n          v = dest.setProperty(tgt.getElement().hashCode(), tgt.getElement(), v); // reset v because some implementations may have to rewrite v when setting the value"
            },
            {
              "step": 17,
              "variableName": "Variables vars",
              "startLine": 1769,
              "startColumn": 166,
              "endLine": 1769,
              "endColumn": 180,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {\n    try {\n      switch (tgt.getTransform()) {\n        case CREATE:"
            },
            {
              "step": 18,
              "variableName": "vars",
              "startLine": 1810,
              "startColumn": 99,
              "endLine": 1810,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 19,
              "variableName": "Variables vars",
              "startLine": 1998,
              "startColumn": 25,
              "endLine": 1998,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n\n  private Base getParam(Variables vars, StructureMapGroupRuleTargetParameterComponent parameter) throws DefinitionException {\n    DataType p = parameter.getValue();\n    if (!(p instanceof IdType))\n      return p;"
            },
            {
              "step": 20,
              "variableName": "vars",
              "startLine": 2006,
              "startColumn": 13,
              "endLine": 2006,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;"
            },
            {
              "step": 21,
              "variableName": "get",
              "startLine": 30,
              "startColumn": 15,
              "endLine": 30,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();"
            },
            {
              "step": 22,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 23,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 24,
              "variableName": "v",
              "startLine": 32,
              "startColumn": 12,
              "endLine": 32,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }"
            },
            {
              "step": 25,
              "variableName": "v",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 26,
              "variableName": "getObject",
              "startLine": 28,
              "startColumn": 15,
              "endLine": 28,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    return name;\n  }\n\n  public Base getObject() {\n    return object;\n  }\n"
            },
            {
              "step": 27,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 28,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 29,
              "variableName": "v.getObject()",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 30,
              "variableName": "vars.get(VariableMode.OUTPUT, n)",
              "startLine": 2006,
              "startColumn": 13,
              "endLine": 2006,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;"
            },
            {
              "step": 31,
              "variableName": "b",
              "startLine": 2009,
              "startColumn": 14,
              "endLine": 2009,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;\n    }\n  }\n"
            },
            {
              "step": 32,
              "variableName": "getParam(vars, tgt.getParameter().get(0))",
              "startLine": 1810,
              "startColumn": 90,
              "endLine": 1810,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 33,
              "variableName": "tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false)",
              "startLine": 1810,
              "startColumn": 57,
              "endLine": 1810,
              "endColumn": 156,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "... : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 34,
              "variableName": "Base base",
              "startLine": 838,
              "startColumn": 96,
              "endLine": 838,
              "endColumn": 105,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "   * @throws FHIRException \n   * @\n   */\n  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);"
            },
            {
              "step": 35,
              "variableName": "base",
              "startLine": 841,
              "startColumn": 16,
              "endLine": 841,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 36,
              "variableName": "list",
              "startLine": 841,
              "startColumn": 7,
              "endLine": 841,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 37,
              "variableName": "list",
              "startLine": 844,
              "startColumn": 95,
              "endLine": 844,
              "endColumn": 99,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);\n  }\n\n  /**"
            },
            {
              "step": 38,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 39,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 40,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 41,
              "variableName": "focus",
              "startLine": 4049,
              "startColumn": 44,
              "endLine": 4049,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Children : return funcChildren(context, focus, exp);\n    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);"
            },
            {
              "step": 42,
              "variableName": "List<Base> focus",
              "startLine": 5686,
              "startColumn": 58,
              "endLine": 5686,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return (item.isBooleanPrimitive());\n  }\n\n  private List<Base> funcTrace(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {"
            },
            {
              "step": 43,
              "variableName": "focus",
              "startLine": 5693,
              "startColumn": 17,
              "endLine": 5693,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);\n    }\n    return focus;\n  }"
            },
            {
              "step": 44,
              "variableName": "List<Base> contents",
              "startLine": 1012,
              "startColumn": 33,
              "endLine": 1012,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");"
            },
            {
              "step": 45,
              "variableName": "contents",
              "startLine": 1013,
              "startColumn": 57,
              "endLine": 1013,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");\n      }"
            },
            {
              "step": 46,
              "variableName": "List<Base> focus",
              "startLine": 929,
              "startColumn": 39,
              "endLine": 929,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/liquid/LiquidEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n  @Override\n  public boolean log(String argument, List<Base> focus) {\n    if (externalHostServices == null)\n      return false;\n    return externalHostServices.log(argument, focus);"
            },
            {
              "step": 47,
              "variableName": "focus",
              "startLine": 932,
              "startColumn": 47,
              "endLine": 932,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/liquid/LiquidEngine.java",
              "type": "",
              "code": "  public boolean log(String argument, List<Base> focus) {\n    if (externalHostServices == null)\n      return false;\n    return externalHostServices.log(argument, focus);\n  }\n\n  @Override"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 28,
      "fileName": "InstanceValidator.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "this.accessToken",
              "startLine": 128,
              "startColumn": 18,
              "endLine": 128,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "              throw new Error(\"Attempt to auto-create CDSHooksRequestFhirAuthorizationComponent.accessToken\");\r\n            else if (Configuration.doAutoCreate())\r\n              this.accessToken = new StringType(); // bb\r\n          return this.accessToken;\r\n        }\r\n\r\n        public boolean hasAccessTokenElement() { \r"
            },
            {
              "step": 1,
              "variableName": "getAccessTokenElement()",
              "startLine": 479,
              "startColumn": 35,
              "endLine": 479,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "      @Override\r\n      public Base makeProperty(int hash, String name) throws FHIRException {\r\n        switch (hash) {\r\n        case -1042689291:  return getAccessTokenElement();\r\n        case 141498579:  return getTokenTypeElement();\r\n        case 250196857:  return getExpiresInElement();\r\n        case 109264468:  return getScopeElement();\r"
            },
            {
              "step": 2,
              "variableName": "dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement())",
              "startLine": 1756,
              "startColumn": 15,
              "endLine": 1756,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      if (tgt.hasListMode(StructureMapTargetListMode.SHARE)) {\n        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {"
            },
            {
              "step": 3,
              "variableName": "v",
              "startLine": 1766,
              "startColumn": 56,
              "endLine": 1766,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 4,
              "variableName": "Base object",
              "startLine": 14,
              "startColumn": 51,
              "endLine": 14,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "public class Variables {\n  private List<Variable> list = new ArrayList<Variable>();\n\n  public void add(VariableMode mode, String name, Base object) {\n    Variable vv = null;\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))"
            },
            {
              "step": 5,
              "variableName": "object",
              "startLine": 21,
              "startColumn": 39,
              "endLine": 21,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 6,
              "variableName": "Base object",
              "startLine": 13,
              "startColumn": 51,
              "endLine": 13,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  private String name;\n  private Base object;\n\n  public Variable(VariableMode mode, String name, Base object) {\n    super();\n    this.mode = mode;\n    this.name = name;"
            },
            {
              "step": 7,
              "variableName": "object",
              "startLine": 17,
              "startColumn": 19,
              "endLine": 17,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 17,
              "startColumn": 5,
              "endLine": 17,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 9,
              "variableName": "new Variable(mode, name, object)",
              "startLine": 21,
              "startColumn": 14,
              "endLine": 21,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 10,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 11,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 12,
              "variableName": "vars",
              "startLine": 1766,
              "startColumn": 7,
              "endLine": 1766,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 13,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 14,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 15,
              "variableName": "Variables vars",
              "startLine": 1734,
              "startColumn": 73,
              "endLine": 1734,
              "endColumn": 87,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return type.equals(item.fhirType());\n  }\n\n  private void processTarget(String rulePath, TransformContext context, Variables vars, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, String srcVar, boolean atRoot, Variables sharedVars) throws FHIRException {\n    Base dest = null;\n    if (tgt.hasContext()) {\n      dest = vars.get(VariableMode.OUTPUT, tgt.getContext());"
            },
            {
              "step": 16,
              "variableName": "vars",
              "startLine": 1744,
              "startColumn": 60,
              "endLine": 1744,
              "endColumn": 64,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n    Base v = null;\n    if (tgt.hasTransform()) {\n      v = runTransform(rulePath, context, map, group, tgt, vars, dest, tgt.getElement(), srcVar, atRoot);\n      if (v != null && dest != null) {\n        try {\n          v = dest.setProperty(tgt.getElement().hashCode(), tgt.getElement(), v); // reset v because some implementations may have to rewrite v when setting the value"
            },
            {
              "step": 17,
              "variableName": "Variables vars",
              "startLine": 1769,
              "startColumn": 166,
              "endLine": 1769,
              "endColumn": 180,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {\n    try {\n      switch (tgt.getTransform()) {\n        case CREATE:"
            },
            {
              "step": 18,
              "variableName": "vars",
              "startLine": 1810,
              "startColumn": 99,
              "endLine": 1810,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 19,
              "variableName": "Variables vars",
              "startLine": 1998,
              "startColumn": 25,
              "endLine": 1998,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n\n  private Base getParam(Variables vars, StructureMapGroupRuleTargetParameterComponent parameter) throws DefinitionException {\n    DataType p = parameter.getValue();\n    if (!(p instanceof IdType))\n      return p;"
            },
            {
              "step": 20,
              "variableName": "vars",
              "startLine": 2004,
              "startColumn": 16,
              "endLine": 2004,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      return p;\n    else {\n      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)"
            },
            {
              "step": 21,
              "variableName": "get",
              "startLine": 30,
              "startColumn": 15,
              "endLine": 30,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();"
            },
            {
              "step": 22,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 23,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 24,
              "variableName": "v",
              "startLine": 32,
              "startColumn": 12,
              "endLine": 32,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }"
            },
            {
              "step": 25,
              "variableName": "v",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 26,
              "variableName": "getObject",
              "startLine": 28,
              "startColumn": 15,
              "endLine": 28,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    return name;\n  }\n\n  public Base getObject() {\n    return object;\n  }\n"
            },
            {
              "step": 27,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 28,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 29,
              "variableName": "v.getObject()",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 30,
              "variableName": "vars.get(VariableMode.INPUT, n)",
              "startLine": 2004,
              "startColumn": 16,
              "endLine": 2004,
              "endColumn": 47,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      return p;\n    else {\n      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)"
            },
            {
              "step": 31,
              "variableName": "b",
              "startLine": 2009,
              "startColumn": 14,
              "endLine": 2009,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;\n    }\n  }\n"
            },
            {
              "step": 32,
              "variableName": "getParam(vars, tgt.getParameter().get(0))",
              "startLine": 1810,
              "startColumn": 90,
              "endLine": 1810,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 33,
              "variableName": "tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false)",
              "startLine": 1810,
              "startColumn": 57,
              "endLine": 1810,
              "endColumn": 156,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "... : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 34,
              "variableName": "Base base",
              "startLine": 838,
              "startColumn": 96,
              "endLine": 838,
              "endColumn": 105,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "   * @throws FHIRException \n   * @\n   */\n  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);"
            },
            {
              "step": 35,
              "variableName": "base",
              "startLine": 841,
              "startColumn": 16,
              "endLine": 841,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 36,
              "variableName": "list",
              "startLine": 841,
              "startColumn": 7,
              "endLine": 841,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 37,
              "variableName": "list",
              "startLine": 844,
              "startColumn": 95,
              "endLine": 844,
              "endColumn": 99,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);\n  }\n\n  /**"
            },
            {
              "step": 38,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 39,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 40,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 41,
              "variableName": "focus",
              "startLine": 4049,
              "startColumn": 44,
              "endLine": 4049,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Children : return funcChildren(context, focus, exp);\n    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);"
            },
            {
              "step": 42,
              "variableName": "List<Base> focus",
              "startLine": 5686,
              "startColumn": 58,
              "endLine": 5686,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return (item.isBooleanPrimitive());\n  }\n\n  private List<Base> funcTrace(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {"
            },
            {
              "step": 43,
              "variableName": "focus",
              "startLine": 5693,
              "startColumn": 17,
              "endLine": 5693,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);\n    }\n    return focus;\n  }"
            },
            {
              "step": 44,
              "variableName": "List<Base> contents",
              "startLine": 1012,
              "startColumn": 33,
              "endLine": 1012,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");"
            },
            {
              "step": 45,
              "variableName": "contents",
              "startLine": 1013,
              "startColumn": 57,
              "endLine": 1013,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");\n      }"
            },
            {
              "step": 46,
              "variableName": "List<Base> focus",
              "startLine": 322,
              "startColumn": 41,
              "endLine": 322,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    }\n\n    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else"
            },
            {
              "step": 47,
              "variableName": "focus",
              "startLine": 324,
              "startColumn": 51,
              "endLine": 324,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "",
              "code": "    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else\n        return false;\n    }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "this.accessToken",
              "startLine": 128,
              "startColumn": 18,
              "endLine": 128,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "              throw new Error(\"Attempt to auto-create CDSHooksRequestFhirAuthorizationComponent.accessToken\");\r\n            else if (Configuration.doAutoCreate())\r\n              this.accessToken = new StringType(); // bb\r\n          return this.accessToken;\r\n        }\r\n\r\n        public boolean hasAccessTokenElement() { \r"
            },
            {
              "step": 1,
              "variableName": "getAccessTokenElement()",
              "startLine": 479,
              "startColumn": 35,
              "endLine": 479,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "      @Override\r\n      public Base makeProperty(int hash, String name) throws FHIRException {\r\n        switch (hash) {\r\n        case -1042689291:  return getAccessTokenElement();\r\n        case 141498579:  return getTokenTypeElement();\r\n        case 250196857:  return getExpiresInElement();\r\n        case 109264468:  return getScopeElement();\r"
            },
            {
              "step": 2,
              "variableName": "dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement())",
              "startLine": 1756,
              "startColumn": 15,
              "endLine": 1756,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      if (tgt.hasListMode(StructureMapTargetListMode.SHARE)) {\n        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {"
            },
            {
              "step": 3,
              "variableName": "v",
              "startLine": 1757,
              "startColumn": 68,
              "endLine": 1757,
              "endColumn": 69,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {\n        v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());"
            },
            {
              "step": 4,
              "variableName": "Base object",
              "startLine": 14,
              "startColumn": 51,
              "endLine": 14,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "public class Variables {\n  private List<Variable> list = new ArrayList<Variable>();\n\n  public void add(VariableMode mode, String name, Base object) {\n    Variable vv = null;\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))"
            },
            {
              "step": 5,
              "variableName": "object",
              "startLine": 21,
              "startColumn": 39,
              "endLine": 21,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 6,
              "variableName": "Base object",
              "startLine": 13,
              "startColumn": 51,
              "endLine": 13,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  private String name;\n  private Base object;\n\n  public Variable(VariableMode mode, String name, Base object) {\n    super();\n    this.mode = mode;\n    this.name = name;"
            },
            {
              "step": 7,
              "variableName": "object",
              "startLine": 17,
              "startColumn": 19,
              "endLine": 17,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 17,
              "startColumn": 5,
              "endLine": 17,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 9,
              "variableName": "new Variable(mode, name, object)",
              "startLine": 21,
              "startColumn": 14,
              "endLine": 21,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 10,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 11,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 12,
              "variableName": "sharedVars",
              "startLine": 1757,
              "startColumn": 11,
              "endLine": 1757,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        v = sharedVars.get(VariableMode.SHARED, tgt.getListRuleId());\n        if (v == null) {\n          v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {\n        v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());"
            },
            {
              "step": 13,
              "variableName": "vars",
              "startLine": 1329,
              "startColumn": 192,
              "endLine": 1329,
              "endColumn": 196,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 14,
              "variableName": "vars",
              "startLine": 1316,
              "startColumn": 48,
              "endLine": 1316,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n\n    for (StructureMapGroupRuleComponent r : group.getRule()) {\n      executeRule(indent + \"  \", context, map, vars, group, r, atRoot);\n    }\n  }\n"
            },
            {
              "step": 15,
              "variableName": "vars",
              "startLine": 1316,
              "startColumn": 48,
              "endLine": 1316,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n\n    for (StructureMapGroupRuleComponent r : group.getRule()) {\n      executeRule(indent + \"  \", context, map, vars, group, r, atRoot);\n    }\n  }\n"
            },
            {
              "step": 16,
              "variableName": "Variables vars",
              "startLine": 1320,
              "startColumn": 87,
              "endLine": 1320,
              "endColumn": 101,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n  }\n\n  private void executeRule(String indent, TransformContext context, StructureMap map, Variables vars, StructureMapGroupComponent group, StructureMapGroupRuleComponent rule, boolean atRoot) throws FHIRException {\n    log(indent + \"rule : \" + rule.getName() + \"; vars = \" + vars.summary());\n    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)"
            },
            {
              "step": 17,
              "variableName": "vars",
              "startLine": 1322,
              "startColumn": 25,
              "endLine": 1322,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  private void executeRule(String indent, TransformContext context, StructureMap map, Variables vars, StructureMapGroupComponent group, StructureMapGroupRuleComponent rule, boolean atRoot) throws FHIRException {\n    log(indent + \"rule : \" + rule.getName() + \"; vars = \" + vars.summary());\n    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)\n      throw new FHIRException(\"Rule \\\"\" + rule.getName() + \"\\\": not handled yet\");\n    List<Variables> source = processSource(rule.getName(), context, srcVars, rule.getSource().get(0), map.getUrl(), indent);"
            },
            {
              "step": 18,
              "variableName": "copy",
              "startLine": 24,
              "startColumn": 20,
              "endLine": 24,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;"
            },
            {
              "step": 19,
              "variableName": "list",
              "startLine": 26,
              "startColumn": 24,
              "endLine": 26,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 20,
              "variableName": "list",
              "startLine": 26,
              "startColumn": 24,
              "endLine": 26,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 21,
              "variableName": "result.list",
              "startLine": 26,
              "startColumn": 5,
              "endLine": 26,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 22,
              "variableName": "result",
              "startLine": 26,
              "startColumn": 5,
              "endLine": 26,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n"
            },
            {
              "step": 23,
              "variableName": "result",
              "startLine": 27,
              "startColumn": 12,
              "endLine": 27,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  public Variables copy() {\n    Variables result = new Variables();\n    result.list.addAll(list);\n    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {"
            },
            {
              "step": 24,
              "variableName": "vars.copy()",
              "startLine": 1322,
              "startColumn": 25,
              "endLine": 1322,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "\n  private void executeRule(String indent, TransformContext context, StructureMap map, Variables vars, StructureMapGroupComponent group, StructureMapGroupRuleComponent rule, boolean atRoot) throws FHIRException {\n    log(indent + \"rule : \" + rule.getName() + \"; vars = \" + vars.summary());\n    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)\n      throw new FHIRException(\"Rule \\\"\" + rule.getName() + \"\\\": not handled yet\");\n    List<Variables> source = processSource(rule.getName(), context, srcVars, rule.getSource().get(0), map.getUrl(), indent);"
            },
            {
              "step": 25,
              "variableName": "srcVars",
              "startLine": 1325,
              "startColumn": 69,
              "endLine": 1325,
              "endColumn": 76,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    Variables srcVars = vars.copy();\n    if (rule.getSource().size() != 1)\n      throw new FHIRException(\"Rule \\\"\" + rule.getName() + \"\\\": not handled yet\");\n    List<Variables> source = processSource(rule.getName(), context, srcVars, rule.getSource().get(0), map.getUrl(), indent);\n    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {"
            },
            {
              "step": 26,
              "variableName": "Variables vars",
              "startLine": 1601,
              "startColumn": 82,
              "endLine": 1601,
              "endColumn": 96,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return res;\n  }\n\n  private List<Variables> processSource(String ruleId, TransformContext context, Variables vars, StructureMapGroupRuleSourceComponent src, String pathForErrors, String indent) throws FHIRException {\n    List<Base> items;\n    if (src.getContext().equals(\"@search\")) {\n      ExpressionNode expr = (ExpressionNode) src.getUserData(MAP_SEARCH_EXPRESSION);"
            },
            {
              "step": 27,
              "variableName": "vars",
              "startLine": 1613,
              "startColumn": 16,
              "endLine": 1613,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      items = services.performSearch(context.getAppInfo(), search);\n    } else {\n      items = new ArrayList<Base>();\n      Base b = vars.get(VariableMode.INPUT, src.getContext());\n      if (b == null)\n        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n"
            },
            {
              "step": 28,
              "variableName": "get",
              "startLine": 30,
              "startColumn": 15,
              "endLine": 30,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();"
            },
            {
              "step": 29,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 30,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 31,
              "variableName": "v",
              "startLine": 32,
              "startColumn": 12,
              "endLine": 32,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }"
            },
            {
              "step": 32,
              "variableName": "v",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 33,
              "variableName": "getObject",
              "startLine": 28,
              "startColumn": 15,
              "endLine": 28,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    return name;\n  }\n\n  public Base getObject() {\n    return object;\n  }\n"
            },
            {
              "step": 34,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 35,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 36,
              "variableName": "v.getObject()",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 37,
              "variableName": "vars.get(VariableMode.INPUT, src.getContext())",
              "startLine": 1613,
              "startColumn": 16,
              "endLine": 1613,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      items = services.performSearch(context.getAppInfo(), search);\n    } else {\n      items = new ArrayList<Base>();\n      Base b = vars.get(VariableMode.INPUT, src.getContext());\n      if (b == null)\n        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n"
            },
            {
              "step": 38,
              "variableName": "b",
              "startLine": 1618,
              "startColumn": 19,
              "endLine": 1618,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n\n      if (!src.hasElement())\n        items.add(b);\n      else {\n        getChildrenByName(b, src.getElement(), items);\n        if (items.size() == 0 && src.hasDefaultValue())"
            },
            {
              "step": 39,
              "variableName": "items",
              "startLine": 1618,
              "startColumn": 9,
              "endLine": 1618,
              "endColumn": 14,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        throw new FHIRException(\"Unknown input variable \" + src.getContext() + \" in \" + pathForErrors + \" rule \" + ruleId + \" (vars = \" + vars.summary() + \")\");\n\n      if (!src.hasElement())\n        items.add(b);\n      else {\n        getChildrenByName(b, src.getElement(), items);\n        if (items.size() == 0 && src.hasDefaultValue())"
            },
            {
              "step": 40,
              "variableName": "items",
              "startLine": 1680,
              "startColumn": 24,
              "endLine": 1680,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        src.setUserData(MAP_WHERE_LOG, expr);\n      }\n      CommaSeparatedStringBuilder b = new CommaSeparatedStringBuilder();\n      for (Base item : items) {\n        Variables varsForSource = vars.copy();\n        if (src.hasVariable()) {\n            varsForSource.add(VariableMode.INPUT, src.getVariable(), item);"
            },
            {
              "step": 41,
              "variableName": "item",
              "startLine": 1685,
              "startColumn": 75,
              "endLine": 1685,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        if (src.hasVariable()) {\n            varsForSource.add(VariableMode.INPUT, src.getVariable(), item);\n        }\n        b.appendIfNotNull(fpe.evaluateToString(varsForSource, null, null, item, expr));\n      }\n      if (b.length() > 0)\n        services.log(b.toString());"
            },
            {
              "step": 42,
              "variableName": "Base base",
              "startLine": 947,
              "startColumn": 89,
              "endLine": 947,
              "endColumn": 98,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "    return convertToString(evaluate(base, path));\n  }\n\n  public String evaluateToString(Object appInfo, Base focusResource, Base rootResource, Base base, ExpressionNode node) throws FHIRException {\n    return convertToString(evaluate(appInfo, focusResource, rootResource, base, node));\n  }\n"
            },
            {
              "step": 43,
              "variableName": "base",
              "startLine": 948,
              "startColumn": 75,
              "endLine": 948,
              "endColumn": 79,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  }\n\n  public String evaluateToString(Object appInfo, Base focusResource, Base rootResource, Base base, ExpressionNode node) throws FHIRException {\n    return convertToString(evaluate(appInfo, focusResource, rootResource, base, node));\n  }\n\n  /**"
            },
            {
              "step": 44,
              "variableName": "Base base",
              "startLine": 856,
              "startColumn": 88,
              "endLine": 856,
              "endColumn": 97,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "   * @throws FHIRException \n   * @\n   */\n  public List<Base> evaluate(Object appContext, Base focusResource, Base rootResource, Base base, ExpressionNode expressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);"
            },
            {
              "step": 45,
              "variableName": "base",
              "startLine": 859,
              "startColumn": 16,
              "endLine": 859,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  public List<Base> evaluate(Object appContext, Base focusResource, Base rootResource, Base base, ExpressionNode expressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, expressionNode, true);"
            },
            {
              "step": 46,
              "variableName": "list",
              "startLine": 859,
              "startColumn": 7,
              "endLine": 859,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  public List<Base> evaluate(Object appContext, Base focusResource, Base rootResource, Base base, ExpressionNode expressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, expressionNode, true);"
            },
            {
              "step": 47,
              "variableName": "list",
              "startLine": 862,
              "startColumn": 95,
              "endLine": 862,
              "endColumn": 99,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, expressionNode, true);\n  }\n\n  /**"
            },
            {
              "step": 48,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 49,
              "variableName": "focus",
              "startLine": 1567,
              "startColumn": 26,
              "endLine": 1567,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {"
            },
            {
              "step": 50,
              "variableName": "item",
              "startLine": 1568,
              "startColumn": 49,
              "endLine": 1568,
              "endColumn": 53,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "        work.add(context.getIndex());\n      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);"
            },
            {
              "step": 51,
              "variableName": "Base item",
              "startLine": 3266,
              "startColumn": 56,
              "endLine": 3266,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "    }\n  }\n\n  private List<Base> execute(ExecutionContext context, Base item, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    List<Base> result = new ArrayList<Base>(); \n    if (atEntry && context.appInfo != null && hostServices != null) {\n      // we'll see if the name matches a constant known by the context."
            },
            {
              "step": 52,
              "variableName": "item",
              "startLine": 3281,
              "startColumn": 22,
              "endLine": 3281,
              "endColumn": 26,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "      if (sd == null) {\n        // logical model\n        if (exp.getName().equals(item.fhirType())) {\n          result.add(item);          \n        }\n      } else {\n        while (sd != null) {"
            },
            {
              "step": 53,
              "variableName": "result",
              "startLine": 3281,
              "startColumn": 11,
              "endLine": 3281,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      if (sd == null) {\n        // logical model\n        if (exp.getName().equals(item.fhirType())) {\n          result.add(item);          \n        }\n      } else {\n        while (sd != null) {"
            },
            {
              "step": 54,
              "variableName": "result",
              "startLine": 3300,
              "startColumn": 12,
              "endLine": 3300,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      // (if the name does match, and the user wants to get the constant value, they'll have to try harder...\n      result.addAll(hostServices.resolveConstant(this, context.appInfo, exp.getName(), false, false));\n    }\n    return result;\n  }\t\n\n  private String getParent(String rn) {"
            },
            {
              "step": 55,
              "variableName": "execute(context, item, exp, atEntry)",
              "startLine": 1568,
              "startColumn": 32,
              "endLine": 1568,
              "endColumn": 68,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        work.add(context.getIndex());\n      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);"
            },
            {
              "step": 56,
              "variableName": "outcome",
              "startLine": 1569,
              "startColumn": 28,
              "endLine": 1569,
              "endColumn": 35,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      } else {\n        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }"
            },
            {
              "step": 57,
              "variableName": "base",
              "startLine": 1570,
              "startColumn": 17,
              "endLine": 1570,
              "endColumn": 21,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "        for (Base item : focus) {\n          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }\n          }"
            },
            {
              "step": 58,
              "variableName": "base",
              "startLine": 1571,
              "startColumn": 24,
              "endLine": 1571,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }\n          }\n        }     "
            },
            {
              "step": 59,
              "variableName": "work",
              "startLine": 1571,
              "startColumn": 15,
              "endLine": 1571,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "          List<Base> outcome = execute(context, item, exp, atEntry);\n          for (Base base : outcome) {\n            if (base != null) {\n              work.add(base);\n            }\n          }\n        }     "
            },
            {
              "step": 60,
              "variableName": "work",
              "startLine": 1590,
              "startColumn": 31,
              "endLine": 1590,
              "endColumn": 35,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    }\n\n    if (exp.getInner() != null) {\n      work = execute(context, work, exp.getInner(), false);\n    }\n\n    if (exp.isProximal() && exp.getOperation() != null) {"
            },
            {
              "step": 61,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 62,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 63,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 64,
              "variableName": "focus",
              "startLine": 4050,
              "startColumn": 62,
              "endLine": 4050,
              "endColumn": 67,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);\n    case Now : return funcNow(context, focus, exp);"
            },
            {
              "step": 65,
              "variableName": "List<Base> focus",
              "startLine": 5698,
              "startColumn": 67,
              "endLine": 5698,
              "endColumn": 83,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return focus;\n  }\n\n  private List<Base> funcDefineVariable(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    List<Base> value;"
            },
            {
              "step": 66,
              "variableName": "value",
              "startLine": 5708,
              "startColumn": 38,
              "endLine": 5708,
              "endColumn": 43,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      value = focus;\n    }\n    // stash the variable into the context\n    context.setDefinedVariable(name, value);\n    return focus;\n  }\n"
            },
            {
              "step": 67,
              "variableName": "List<Base> value",
              "startLine": 1090,
              "startColumn": 49,
              "endLine": 1090,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      return definedVariables == null ? makeNull() : definedVariables.get(name);\n    }\n\n    public void setDefinedVariable(String name, List<Base> value) {\n      if (isSystemVariable(name))\n        throw new PathEngineException(worker.formatMessage(I18nConstants.FHIRPATH_REDEFINE_VARIABLE, name), I18nConstants.FHIRPATH_REDEFINE_VARIABLE);\n"
            },
            {
              "step": 68,
              "variableName": "value",
              "startLine": 1103,
              "startColumn": 34,
              "endLine": 1103,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "        }\n      }\n\n      definedVariables.put(name, value);\n    }\n  }\n"
            },
            {
              "step": 69,
              "variableName": "definedVariables",
              "startLine": 1103,
              "startColumn": 7,
              "endLine": 1103,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "HashMap [<map.value>, <element>] : StringType",
              "code": "        }\n      }\n\n      definedVariables.put(name, value);\n    }\n  }\n"
            },
            {
              "step": 70,
              "variableName": "definedVariables",
              "startLine": 1103,
              "startColumn": 7,
              "endLine": 1103,
              "endColumn": 23,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [definedVariables, <map.value>, <element>] : StringType",
              "code": "        }\n      }\n\n      definedVariables.put(name, value);\n    }\n  }\n"
            },
            {
              "step": 71,
              "variableName": "context",
              "startLine": 5708,
              "startColumn": 5,
              "endLine": 5708,
              "endColumn": 12,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [definedVariables, <map.value>, <element>] : StringType",
              "code": "      value = focus;\n    }\n    // stash the variable into the context\n    context.setDefinedVariable(name, value);\n    return focus;\n  }\n"
            },
            {
              "step": 72,
              "variableName": "context",
              "startLine": 4050,
              "startColumn": 53,
              "endLine": 4050,
              "endColumn": 60,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [definedVariables, <map.value>, <element>] : StringType",
              "code": "    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);\n    case Now : return funcNow(context, focus, exp);"
            },
            {
              "step": 73,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 74,
              "variableName": "focus",
              "startLine": 4016,
              "startColumn": 52,
              "endLine": 4016,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Select : return funcSelect(context, focus, exp);\n    case All : return funcAll(context, focus, exp);\n    case Repeat : return funcRepeat(context, focus, exp);\n    case Aggregate : return funcAggregate(context, focus, exp);\n    case Item : return funcItem(context, focus, exp);\n    case As : return funcAs(context, focus, exp);\n    case OfType : return funcOfType(context, focus, exp);"
            },
            {
              "step": 75,
              "variableName": "List<Base> focus",
              "startLine": 5371,
              "startColumn": 62,
              "endLine": 5371,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private List<Base> funcAggregate(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> total = new ArrayList<Base>();\n    if (exp.parameterCount() > 1) {\n      total = execute(context, focus, exp.getParameters().get(1), false);"
            },
            {
              "step": 76,
              "variableName": "focus",
              "startLine": 5374,
              "startColumn": 32,
              "endLine": 5374,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  private List<Base> funcAggregate(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> total = new ArrayList<Base>();\n    if (exp.parameterCount() > 1) {\n      total = execute(context, focus, exp.getParameters().get(1), false);\n    }\n\n    List<Base> pc = new ArrayList<Base>();"
            },
            {
              "step": 77,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 78,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 79,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 80,
              "variableName": "focus",
              "startLine": 4010,
              "startColumn": 50,
              "endLine": 4010,
              "endColumn": 55,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case SubsetOf : return funcSubsetOf(context, focus, exp);\n    case SupersetOf : return funcSupersetOf(context, focus, exp);\n    case IsDistinct : return funcIsDistinct(context, focus, exp);\n    case Distinct : return funcDistinct(context, focus, exp);\n    case Count : return funcCount(context, focus, exp);\n    case Where : return funcWhere(context, focus, exp);\n    case Select : return funcSelect(context, focus, exp);"
            },
            {
              "step": 81,
              "variableName": "List<Base> focus",
              "startLine": 5722,
              "startColumn": 61,
              "endLine": 5722,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return focus;\n  }\n\n  private List<Base> funcDistinct(ExecutionContext context, List<Base> focus, ExpressionNode exp) {\n    if (focus.size() <= 1) {\n      return focus;\n    }"
            },
            {
              "step": 82,
              "variableName": "focus",
              "startLine": 5724,
              "startColumn": 14,
              "endLine": 5724,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n  private List<Base> funcDistinct(ExecutionContext context, List<Base> focus, ExpressionNode exp) {\n    if (focus.size() <= 1) {\n      return focus;\n    }\n\n    List<Base> result = new ArrayList<Base>();"
            },
            {
              "step": 83,
              "variableName": "funcDistinct(context, focus, exp)",
              "startLine": 4010,
              "startColumn": 28,
              "endLine": 4010,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case SubsetOf : return funcSubsetOf(context, focus, exp);\n    case SupersetOf : return funcSupersetOf(context, focus, exp);\n    case IsDistinct : return funcIsDistinct(context, focus, exp);\n    case Distinct : return funcDistinct(context, focus, exp);\n    case Count : return funcCount(context, focus, exp);\n    case Where : return funcWhere(context, focus, exp);\n    case Select : return funcSelect(context, focus, exp);"
            },
            {
              "step": 84,
              "variableName": "evaluateFunction(context, focus, exp)",
              "startLine": 1578,
              "startColumn": 26,
              "endLine": 1578,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 85,
              "variableName": "work2",
              "startLine": 1579,
              "startColumn": 19,
              "endLine": 1579,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:\n      work.addAll(resolveConstant(context, exp.getConstant(), false, exp, true));"
            },
            {
              "step": 86,
              "variableName": "work",
              "startLine": 1579,
              "startColumn": 7,
              "endLine": 1579,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:\n      work.addAll(resolveConstant(context, exp.getConstant(), false, exp, true));"
            },
            {
              "step": 87,
              "variableName": "work",
              "startLine": 1615,
              "startColumn": 12,
              "endLine": 1615,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n    }\n    //    System.out.println(\"Result of {'\"+exp.toString()+\"'}: \"+work.toString());\n    return work;\n  }\n\n  private List<Base> executeTypeName(ExecutionContext context, List<Base> focus, ExpressionNode next, boolean atEntry) {"
            },
            {
              "step": 88,
              "variableName": "execute(context, focus, exp.getParameters().get(1), false)",
              "startLine": 5374,
              "startColumn": 15,
              "endLine": 5374,
              "endColumn": 73,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  private List<Base> funcAggregate(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> total = new ArrayList<Base>();\n    if (exp.parameterCount() > 1) {\n      total = execute(context, focus, exp.getParameters().get(1), false);\n    }\n\n    List<Base> pc = new ArrayList<Base>();"
            },
            {
              "step": 89,
              "variableName": "total",
              "startLine": 5380,
              "startColumn": 17,
              "endLine": 5380,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    List<Base> pc = new ArrayList<Base>();\n    for (Base item : focus) {\n      ExecutionContext c = changeThis(context, item);\n      c.total = total;\n      c.next();\n      total = execute(c, pc, exp.getParameters().get(0), true);\n    }"
            },
            {
              "step": 90,
              "variableName": "c",
              "startLine": 5380,
              "startColumn": 7,
              "endLine": 5380,
              "endColumn": 8,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    List<Base> pc = new ArrayList<Base>();\n    for (Base item : focus) {\n      ExecutionContext c = changeThis(context, item);\n      c.total = total;\n      c.next();\n      total = execute(c, pc, exp.getParameters().get(0), true);\n    }"
            },
            {
              "step": 91,
              "variableName": "c",
              "startLine": 5382,
              "startColumn": 23,
              "endLine": 5382,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      ExecutionContext c = changeThis(context, item);\n      c.total = total;\n      c.next();\n      total = execute(c, pc, exp.getParameters().get(0), true);\n    }\n    return total;\n  }"
            },
            {
              "step": 92,
              "variableName": "ExecutionContext inContext",
              "startLine": 1551,
              "startColumn": 30,
              "endLine": 1551,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 93,
              "variableName": "inContext",
              "startLine": 1553,
              "startColumn": 52,
              "endLine": 1553,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 94,
              "variableName": "ExecutionContext context",
              "startLine": 4819,
              "startColumn": 48,
              "endLine": 4819,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return newContext;\n  }\n\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;"
            },
            {
              "step": 95,
              "variableName": "context",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 96,
              "variableName": "context.total",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 97,
              "variableName": "newContext",
              "startLine": 4821,
              "startColumn": 5,
              "endLine": 4821,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 98,
              "variableName": "newContext",
              "startLine": 4822,
              "startColumn": 5,
              "endLine": 4822,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {\n      for (String s : context.definedVariables.keySet()) {"
            },
            {
              "step": 99,
              "variableName": "newContext",
              "startLine": 4829,
              "startColumn": 12,
              "endLine": 4829,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "        newContext.setDefinedVariable(s, context.definedVariables.get(s));\n      }\n    }\n    return newContext;\n  }\n\n  private ExecutionTypeContext changeThis(ExecutionTypeContext context, TypeDetails newThis) {"
            },
            {
              "step": 100,
              "variableName": "contextForParameter(inContext)",
              "startLine": 1553,
              "startColumn": 32,
              "endLine": 1553,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 101,
              "variableName": "context",
              "startLine": 1578,
              "startColumn": 43,
              "endLine": 1578,
              "endColumn": 50,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 102,
              "variableName": "ExecutionContext context",
              "startLine": 4002,
              "startColumn": 39,
              "endLine": 4002,
              "endColumn": 63,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 103,
              "variableName": "context",
              "startLine": 4049,
              "startColumn": 35,
              "endLine": 4049,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    case Children : return funcChildren(context, focus, exp);\n    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);"
            },
            {
              "step": 104,
              "variableName": "ExecutionContext context",
              "startLine": 5686,
              "startColumn": 32,
              "endLine": 5686,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return (item.isBooleanPrimitive());\n  }\n\n  private List<Base> funcTrace(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {"
            },
            {
              "step": 105,
              "variableName": "context",
              "startLine": 5690,
              "startColumn": 31,
              "endLine": 5690,
              "endColumn": 38,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {\n      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);"
            },
            {
              "step": 106,
              "variableName": "ExecutionContext inContext",
              "startLine": 1551,
              "startColumn": 30,
              "endLine": 1551,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 107,
              "variableName": "inContext",
              "startLine": 1553,
              "startColumn": 52,
              "endLine": 1553,
              "endColumn": 61,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 108,
              "variableName": "ExecutionContext context",
              "startLine": 4819,
              "startColumn": 48,
              "endLine": 4819,
              "endColumn": 72,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    return newContext;\n  }\n\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;"
            },
            {
              "step": 109,
              "variableName": "context",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 110,
              "variableName": "context.total",
              "startLine": 4821,
              "startColumn": 24,
              "endLine": 4821,
              "endColumn": 37,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 111,
              "variableName": "newContext",
              "startLine": 4821,
              "startColumn": 5,
              "endLine": 4821,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {"
            },
            {
              "step": 112,
              "variableName": "newContext",
              "startLine": 4822,
              "startColumn": 5,
              "endLine": 4822,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "  private ExecutionContext contextForParameter(ExecutionContext context) {\n    ExecutionContext newContext = new ExecutionContext(context.appInfo, context.focusResource, context.rootResource, context.context, context.thisItem);\n    newContext.total = context.total;\n    newContext.index = context.index;\n    // append all of the defined variables from the context into the new context\n    if (context.definedVariables != null) {\n      for (String s : context.definedVariables.keySet()) {"
            },
            {
              "step": 113,
              "variableName": "newContext",
              "startLine": 4829,
              "startColumn": 12,
              "endLine": 4829,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "        newContext.setDefinedVariable(s, context.definedVariables.get(s));\n      }\n    }\n    return newContext;\n  }\n\n  private ExecutionTypeContext changeThis(ExecutionTypeContext context, TypeDetails newThis) {"
            },
            {
              "step": 114,
              "variableName": "contextForParameter(inContext)",
              "startLine": 1553,
              "startColumn": 32,
              "endLine": 1553,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();\n    switch (exp.getKind()) {\n    case Unary:"
            },
            {
              "step": 115,
              "variableName": "context",
              "startLine": 1563,
              "startColumn": 21,
              "endLine": 1563,
              "endColumn": 28,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      if (atEntry && exp.getName().equals(\"$this\")) {\n        work.add(context.getThisItem());\n      } else if (atEntry && exp.getName().equals(\"$total\")) {\n        work.addAll(context.getTotal());\n      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {"
            },
            {
              "step": 116,
              "variableName": "getTotal",
              "startLine": 1066,
              "startColumn": 23,
              "endLine": 1066,
              "endColumn": 31,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "    public Base getThisItem() {\n      return thisItem;\n    }\n    public List<Base> getTotal() {\n      return total;\n    }\n"
            },
            {
              "step": 117,
              "variableName": "total",
              "startLine": 1067,
              "startColumn": 14,
              "endLine": 1067,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ExecutionContext [total, <element>] : StringType",
              "code": "      return thisItem;\n    }\n    public List<Base> getTotal() {\n      return total;\n    }\n\n    public void next() {"
            },
            {
              "step": 118,
              "variableName": "total",
              "startLine": 1067,
              "startColumn": 14,
              "endLine": 1067,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      return thisItem;\n    }\n    public List<Base> getTotal() {\n      return total;\n    }\n\n    public void next() {"
            },
            {
              "step": 119,
              "variableName": "context.getTotal()",
              "startLine": 1563,
              "startColumn": 21,
              "endLine": 1563,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      if (atEntry && exp.getName().equals(\"$this\")) {\n        work.add(context.getThisItem());\n      } else if (atEntry && exp.getName().equals(\"$total\")) {\n        work.addAll(context.getTotal());\n      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {"
            },
            {
              "step": 120,
              "variableName": "work",
              "startLine": 1563,
              "startColumn": 9,
              "endLine": 1563,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      if (atEntry && exp.getName().equals(\"$this\")) {\n        work.add(context.getThisItem());\n      } else if (atEntry && exp.getName().equals(\"$total\")) {\n        work.addAll(context.getTotal());\n      } else if (atEntry && exp.getName().equals(\"$index\")) {\n        work.add(context.getIndex());\n      } else {"
            },
            {
              "step": 121,
              "variableName": "work",
              "startLine": 1615,
              "startColumn": 12,
              "endLine": 1615,
              "endColumn": 16,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n    }\n    //    System.out.println(\"Result of {'\"+exp.toString()+\"'}: \"+work.toString());\n    return work;\n  }\n\n  private List<Base> executeTypeName(ExecutionContext context, List<Base> focus, ExpressionNode next, boolean atEntry) {"
            },
            {
              "step": 122,
              "variableName": "execute(context, focus, exp.getParameters().get(1), true)",
              "startLine": 5690,
              "startColumn": 23,
              "endLine": 5690,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {\n      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);"
            },
            {
              "step": 123,
              "variableName": "n2",
              "startLine": 5691,
              "startColumn": 17,
              "endLine": 5691,
              "endColumn": 19,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {\n      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);\n    }"
            },
            {
              "step": 124,
              "variableName": "List<Base> contents",
              "startLine": 1012,
              "startColumn": 33,
              "endLine": 1012,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");"
            },
            {
              "step": 125,
              "variableName": "contents",
              "startLine": 1013,
              "startColumn": 57,
              "endLine": 1013,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");\n      }"
            },
            {
              "step": 126,
              "variableName": "List<Base> focus",
              "startLine": 322,
              "startColumn": 41,
              "endLine": 322,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    }\n\n    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else"
            },
            {
              "step": 127,
              "variableName": "focus",
              "startLine": 324,
              "startColumn": 51,
              "endLine": 324,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "",
              "code": "    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else\n        return false;\n    }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "this.accessToken",
              "startLine": 128,
              "startColumn": 18,
              "endLine": 128,
              "endColumn": 34,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "              throw new Error(\"Attempt to auto-create CDSHooksRequestFhirAuthorizationComponent.accessToken\");\r\n            else if (Configuration.doAutoCreate())\r\n              this.accessToken = new StringType(); // bb\r\n          return this.accessToken;\r\n        }\r\n\r\n        public boolean hasAccessTokenElement() { \r"
            },
            {
              "step": 1,
              "variableName": "getAccessTokenElement()",
              "startLine": 479,
              "startColumn": 35,
              "endLine": 479,
              "endColumn": 58,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/tools/CDSHooksRequest.java",
              "type": "StringType",
              "code": "      @Override\r\n      public Base makeProperty(int hash, String name) throws FHIRException {\r\n        switch (hash) {\r\n        case -1042689291:  return getAccessTokenElement();\r\n        case 141498579:  return getTokenTypeElement();\r\n        case 250196857:  return getExpiresInElement();\r\n        case 109264468:  return getScopeElement();\r"
            },
            {
              "step": 2,
              "variableName": "dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement())",
              "startLine": 1760,
              "startColumn": 13,
              "endLine": 1760,
              "endColumn": 77,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "          sharedVars.add(VariableMode.SHARED, tgt.getListRuleId(), v);\n        }\n      } else if (tgt.hasElement()) {\n        v = dest.makeProperty(tgt.getElement().hashCode(), tgt.getElement());\n      } else {\n        v = dest;\n      }"
            },
            {
              "step": 3,
              "variableName": "v",
              "startLine": 1766,
              "startColumn": 56,
              "endLine": 1766,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 4,
              "variableName": "Base object",
              "startLine": 14,
              "startColumn": 51,
              "endLine": 14,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "public class Variables {\n  private List<Variable> list = new ArrayList<Variable>();\n\n  public void add(VariableMode mode, String name, Base object) {\n    Variable vv = null;\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))"
            },
            {
              "step": 5,
              "variableName": "object",
              "startLine": 21,
              "startColumn": 39,
              "endLine": 21,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 6,
              "variableName": "Base object",
              "startLine": 13,
              "startColumn": 51,
              "endLine": 13,
              "endColumn": 62,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  private String name;\n  private Base object;\n\n  public Variable(VariableMode mode, String name, Base object) {\n    super();\n    this.mode = mode;\n    this.name = name;"
            },
            {
              "step": 7,
              "variableName": "object",
              "startLine": 17,
              "startColumn": 19,
              "endLine": 17,
              "endColumn": 25,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 8,
              "variableName": "this",
              "startLine": 17,
              "startColumn": 5,
              "endLine": 17,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    super();\n    this.mode = mode;\n    this.name = name;\n    this.object = object;\n  }\n\n  public VariableMode getMode() {"
            },
            {
              "step": 9,
              "variableName": "new Variable(mode, name, object)",
              "startLine": 21,
              "startColumn": 14,
              "endLine": 21,
              "endColumn": 46,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 10,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 11,
              "variableName": "list",
              "startLine": 21,
              "startColumn": 5,
              "endLine": 21,
              "endColumn": 9,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "        vv = v;\n    if (vv != null)\n      list.remove(vv);\n    list.add(new Variable(mode, name, object));\n  }\n\n  public Variables copy() {"
            },
            {
              "step": 12,
              "variableName": "vars",
              "startLine": 1766,
              "startColumn": 7,
              "endLine": 1766,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      }\n    }\n    if (tgt.hasVariable() && v != null)\n      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {"
            },
            {
              "step": 13,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 14,
              "variableName": "v",
              "startLine": 1329,
              "startColumn": 88,
              "endLine": 1329,
              "endColumn": 89,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    if (source != null) {\n      for (Variables v : source) {\n        for (StructureMapGroupRuleTargetComponent t : rule.getTarget()) {\n          processTarget(map.getName()+\"|\"+group.getName()+\"|\"+rule.getName(), context, v, map, group, t, rule.getSource().size() == 1 ? rule.getSourceFirstRep().getVariable() : null, atRoot, vars);\n        }\n        if (rule.hasRule()) {\n          for (StructureMapGroupRuleComponent childrule : rule.getRule()) {"
            },
            {
              "step": 15,
              "variableName": "Variables vars",
              "startLine": 1734,
              "startColumn": 73,
              "endLine": 1734,
              "endColumn": 87,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return type.equals(item.fhirType());\n  }\n\n  private void processTarget(String rulePath, TransformContext context, Variables vars, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, String srcVar, boolean atRoot, Variables sharedVars) throws FHIRException {\n    Base dest = null;\n    if (tgt.hasContext()) {\n      dest = vars.get(VariableMode.OUTPUT, tgt.getContext());"
            },
            {
              "step": 16,
              "variableName": "vars",
              "startLine": 1744,
              "startColumn": 60,
              "endLine": 1744,
              "endColumn": 64,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    }\n    Base v = null;\n    if (tgt.hasTransform()) {\n      v = runTransform(rulePath, context, map, group, tgt, vars, dest, tgt.getElement(), srcVar, atRoot);\n      if (v != null && dest != null) {\n        try {\n          v = dest.setProperty(tgt.getElement().hashCode(), tgt.getElement(), v); // reset v because some implementations may have to rewrite v when setting the value"
            },
            {
              "step": 17,
              "variableName": "Variables vars",
              "startLine": 1769,
              "startColumn": 166,
              "endLine": 1769,
              "endColumn": 180,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      vars.add(VariableMode.OUTPUT, tgt.getVariable(), v);\n  }\n  \n  private Base runTransform(String rulePath, TransformContext context, StructureMap map, StructureMapGroupComponent group, StructureMapGroupRuleTargetComponent tgt, Variables vars, Base dest, String element, String srcVar, boolean root) throws FHIRException {\n    try {\n      switch (tgt.getTransform()) {\n        case CREATE:"
            },
            {
              "step": 18,
              "variableName": "vars",
              "startLine": 1810,
              "startColumn": 99,
              "endLine": 1810,
              "endColumn": 103,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 19,
              "variableName": "Variables vars",
              "startLine": 1998,
              "startColumn": 25,
              "endLine": 1998,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n\n  private Base getParam(Variables vars, StructureMapGroupRuleTargetParameterComponent parameter) throws DefinitionException {\n    DataType p = parameter.getValue();\n    if (!(p instanceof IdType))\n      return p;"
            },
            {
              "step": 20,
              "variableName": "vars",
              "startLine": 2006,
              "startColumn": 13,
              "endLine": 2006,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;"
            },
            {
              "step": 21,
              "variableName": "get",
              "startLine": 30,
              "startColumn": 15,
              "endLine": 30,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "    return result;\n  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();"
            },
            {
              "step": 22,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variables [list, <element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 23,
              "variableName": "list",
              "startLine": 31,
              "startColumn": 23,
              "endLine": 31,
              "endColumn": 27,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "ArrayList [<element>, object] : StringType",
              "code": "  }\n\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;"
            },
            {
              "step": 24,
              "variableName": "v",
              "startLine": 32,
              "startColumn": 12,
              "endLine": 32,
              "endColumn": 13,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "\n  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }"
            },
            {
              "step": 25,
              "variableName": "v",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 17,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "Variable [object] : StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 26,
              "variableName": "getObject",
              "startLine": 28,
              "startColumn": 15,
              "endLine": 28,
              "endColumn": 24,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "    return name;\n  }\n\n  public Base getObject() {\n    return object;\n  }\n"
            },
            {
              "step": 27,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "Variable [object] : StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 28,
              "variableName": "object",
              "startLine": 29,
              "startColumn": 12,
              "endLine": 29,
              "endColumn": 18,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variable.java",
              "type": "StringType",
              "code": "  }\n\n  public Base getObject() {\n    return object;\n  }\n\n  public String summary() {"
            },
            {
              "step": 29,
              "variableName": "v.getObject()",
              "startLine": 33,
              "startColumn": 16,
              "endLine": 33,
              "endColumn": 29,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/Variables.java",
              "type": "StringType",
              "code": "  public Base get(VariableMode mode, String name) {\n    for (Variable v : list)\n      if ((v.getMode() == mode) && v.getName().equals(name))\n        return v.getObject();\n    return null;\n  }\n"
            },
            {
              "step": 30,
              "variableName": "vars.get(VariableMode.OUTPUT, n)",
              "startLine": 2006,
              "startColumn": 13,
              "endLine": 2006,
              "endColumn": 45,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "      String n = ((IdType) p).asStringValue();\n      Base b = vars.get(VariableMode.INPUT, n);\n      if (b == null)\n        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;"
            },
            {
              "step": 31,
              "variableName": "b",
              "startLine": 2009,
              "startColumn": 14,
              "endLine": 2009,
              "endColumn": 15,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "        b = vars.get(VariableMode.OUTPUT, n);\n      if (b == null)\n        throw new DefinitionException(\"Variable \" + n + \" not found (\" + vars.summary() + \")\");\n      return b;\n    }\n  }\n"
            },
            {
              "step": 32,
              "variableName": "getParam(vars, tgt.getParameter().get(0))",
              "startLine": 1810,
              "startColumn": 90,
              "endLine": 1810,
              "endColumn": 131,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 33,
              "variableName": "tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false)",
              "startLine": 1810,
              "startColumn": 57,
              "endLine": 1810,
              "endColumn": 156,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/structuremap/StructureMapUtilities.java",
              "type": "... : StringType",
              "code": "            expr = fpe.parse(getParamStringNoNull(vars, tgt.getParameter().get(tgt.getParameter().size() - 1), tgt.toString()));\n            tgt.setUserData(MAP_EXPRESSION, expr);\n          }\n          List<Base> v = fpe.evaluate(vars, null, null, tgt.getParameter().size() == 2 ? getParam(vars, tgt.getParameter().get(0)) : new BooleanType(false), expr);\n          if (v.size() == 0)\n            return null;\n          else if (v.size() != 1)"
            },
            {
              "step": 34,
              "variableName": "Base base",
              "startLine": 838,
              "startColumn": 96,
              "endLine": 838,
              "endColumn": 105,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "   * @throws FHIRException \n   * @\n   */\n  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);"
            },
            {
              "step": 35,
              "variableName": "base",
              "startLine": 841,
              "startColumn": 16,
              "endLine": 841,
              "endColumn": 20,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 36,
              "variableName": "list",
              "startLine": 841,
              "startColumn": 7,
              "endLine": 841,
              "endColumn": 11,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  public List<Base> evaluate(Object appContext, Resource focusResource, Resource rootResource, Base base, ExpressionNode ExpressionNode) throws FHIRException {\n    List<Base> list = new ArrayList<Base>();\n    if (base != null) {\n      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);"
            },
            {
              "step": 37,
              "variableName": "list",
              "startLine": 844,
              "startColumn": 95,
              "endLine": 844,
              "endColumn": 99,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      list.add(base);\n    }\n    log = new StringBuilder();\n    return execute(new ExecutionContext(appContext, focusResource, rootResource, base, base), list, ExpressionNode, true);\n  }\n\n  /**"
            },
            {
              "step": 38,
              "variableName": "List<Base> focus",
              "startLine": 1551,
              "startColumn": 58,
              "endLine": 1551,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return false;\n  }\n\n  private List<Base> execute(ExecutionContext inContext, List<Base> focus, ExpressionNode exp, boolean atEntry) throws FHIRException {\n    //    System.out.println(\"Evaluate {'\"+exp.toString()+\"'} on \"+focus.toString());\n    ExecutionContext context = contextForParameter(inContext);\n    List<Base> work = new ArrayList<Base>();"
            },
            {
              "step": 39,
              "variableName": "focus",
              "startLine": 1578,
              "startColumn": 52,
              "endLine": 1578,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      }\n      break;\n    case Function:\n      List<Base> work2 = evaluateFunction(context, focus, exp);\n      work.addAll(work2);\n      break;\n    case Constant:"
            },
            {
              "step": 40,
              "variableName": "List<Base> focus",
              "startLine": 4002,
              "startColumn": 65,
              "endLine": 4002,
              "endColumn": 81,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  //\t\treturn s.equals(\"boolean\") || s.equals(\"integer\") || s.equals(\"decimal\") || s.equals(\"base64Binary\") || s.equals(\"instant\") || s.equals(\"string\") || s.equals(\"uri\") || s.equals(\"date\") || s.equals(\"dateTime\") || s.equals(\"time\") || s.equals(\"code\") || s.equals(\"oid\") || s.equals(\"id\") || s.equals(\"unsignedInt\") || s.equals(\"positiveInt\") || s.equals(\"markdown\");\n  //\t}\n\n  private List<Base> evaluateFunction(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    switch (exp.getFunction()) {\n    case Empty : return funcEmpty(context, focus, exp);\n    case Not : return funcNot(context, focus, exp);"
            },
            {
              "step": 41,
              "variableName": "focus",
              "startLine": 4049,
              "startColumn": 44,
              "endLine": 4049,
              "endColumn": 49,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    case Children : return funcChildren(context, focus, exp);\n    case Descendants : return funcDescendants(context, focus, exp);\n    case MemberOf : return funcMemberOf(context, focus, exp);\n    case Trace : return funcTrace(context, focus, exp);\n    case DefineVariable : return funcDefineVariable(context, focus, exp);\n    case Check : return funcCheck(context, focus, exp);\n    case Today : return funcToday(context, focus, exp);"
            },
            {
              "step": 42,
              "variableName": "List<Base> focus",
              "startLine": 5686,
              "startColumn": 58,
              "endLine": 5686,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    return (item.isBooleanPrimitive());\n  }\n\n  private List<Base> funcTrace(ExecutionContext context, List<Base> focus, ExpressionNode exp) throws FHIRException {\n    List<Base> nl = execute(context, focus, exp.getParameters().get(0), true);\n    String name = nl.get(0).primitiveValue();\n    if (exp.getParameters().size() == 2) {"
            },
            {
              "step": 43,
              "variableName": "focus",
              "startLine": 5693,
              "startColumn": 17,
              "endLine": 5693,
              "endColumn": 22,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "      List<Base> n2 = execute(context, focus, exp.getParameters().get(1), true);\n      log(name, n2);\n    } else { \n      log(name, focus);\n    }\n    return focus;\n  }"
            },
            {
              "step": 44,
              "variableName": "List<Base> contents",
              "startLine": 1012,
              "startColumn": 33,
              "endLine": 1012,
              "endColumn": 52,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "  }\n\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");"
            },
            {
              "step": 45,
              "variableName": "contents",
              "startLine": 1013,
              "startColumn": 57,
              "endLine": 1013,
              "endColumn": 65,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/fhirpath/FHIRPathEngine.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "\n\n  private void log(String name, List<Base> contents) {\n    if (hostServices == null || !hostServices.log(name, contents)) {\n      if (log.length() > 0) {\n        log.append(\"; \");\n      }"
            },
            {
              "step": 46,
              "variableName": "List<Base> focus",
              "startLine": 322,
              "startColumn": 41,
              "endLine": 322,
              "endColumn": 57,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "ArrayList [<element>] : StringType",
              "code": "    }\n\n    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else"
            },
            {
              "step": 47,
              "variableName": "focus",
              "startLine": 324,
              "startColumn": 51,
              "endLine": 324,
              "endColumn": 56,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/instance/InstanceValidator.java",
              "type": "",
              "code": "    @Override\n    public boolean log(String argument, List<Base> focus) {\n      if (externalHostServices != null)\n        return externalHostServices.log(argument, focus);\n      else\n        return false;\n    }"
            }
          ],
          "label": "Yes"
        }
      ]
    }
  ],
  "537": [
    {
      "resultIndex": 22,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 267,
              "startColumn": 24,
              "endLine": 267,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader,\n      PackageVersion pi) throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 267,
              "startColumn": 24,
              "endLine": 267,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader,\n      PackageVersion pi) throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 269,
              "startColumn": 32,
              "endLine": 269,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \" + name + \": \" + e.getMessage()",
              "startLine": 272,
              "startColumn": 33,
              "endLine": 272,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }\n    return res;"
            },
            {
              "step": 4,
              "variableName": "new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e)",
              "startLine": 272,
              "startColumn": 15,
              "endLine": 272,
              "endColumn": 84,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "FHIRException",
              "code": "        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }\n    return res;"
            },
            {
              "step": 5,
              "variableName": "e.getMessage()",
              "startLine": 271,
              "startColumn": 61,
              "endLine": 271,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }"
            },
            {
              "step": 6,
              "variableName": "\"Error loading \" + name + \": \" + e.getMessage()",
              "startLine": 271,
              "startColumn": 28,
              "endLine": 271,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/context/SimpleWorkerContext.java",
              "type": "",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader, null, pi);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 23,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 32,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 363,
              "startColumn": 26,
              "endLine": 363,
              "endColumn": 41,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "\n    public SimpleWorkerContext fromDefinitions(Map<String, ByteProvider> source, IContextResourceLoader loader, PackageInformation pi) throws IOException, FHIRException  {\n      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 365,
              "startColumn": 38,
              "endLine": 365,
              "endColumn": 42,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      SimpleWorkerContext context = getSimpleWorkerContextInstance();\n      for (String name : source.keySet()) {\n        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 368,
              "startColumn": 35,
              "endLine": 368,
              "endColumn": 76,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }\n      return build(context);"
            },
            {
              "step": 4,
              "variableName": "new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e)",
              "startLine": 368,
              "startColumn": 17,
              "endLine": 368,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "FHIRException",
              "code": "          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }\n      return build(context);"
            },
            {
              "step": 5,
              "variableName": "e.getMessage()",
              "startLine": 367,
              "startColumn": 57,
              "endLine": 367,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }"
            },
            {
              "step": 6,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 367,
              "startColumn": 30,
              "endLine": 367,
              "endColumn": 71,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/context/SimpleWorkerContext.java",
              "type": "",
              "code": "        try {\n          context.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name).getBytes()), loader, null, pi);\n        } catch (Exception e) {\n          System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n          throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n        }\n      }"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 24,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 205,
              "startColumn": 24,
              "endLine": 205,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "\n  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader) throws FileNotFoundException, IOException, FHIRException  {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) { \n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 205,
              "startColumn": 24,
              "endLine": 205,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "\n  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader) throws FileNotFoundException, IOException, FHIRException  {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) { \n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 207,
              "startColumn": 32,
              "endLine": 207,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) { \n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 210,
              "startColumn": 33,
              "endLine": 210,
              "endColumn": 74,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n      }\n    }\n    return res;"
            },
            {
              "step": 4,
              "variableName": "new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e)",
              "startLine": 210,
              "startColumn": 15,
              "endLine": 210,
              "endColumn": 78,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "FHIRException",
              "code": "        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n      }\n    }\n    return res;"
            },
            {
              "step": 5,
              "variableName": "e.getMessage()",
              "startLine": 209,
              "startColumn": 55,
              "endLine": 209,
              "endColumn": 69,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n      }\n    }"
            },
            {
              "step": 6,
              "variableName": "\"Error loading \"+name+\": \"+e.getMessage()",
              "startLine": 209,
              "startColumn": 28,
              "endLine": 209,
              "endColumn": 69,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.dstu3/src/main/java/org/hl7/fhir/dstu3/context/SimpleWorkerContext.java",
              "type": "",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \"+name+\": \"+e.getMessage());\n        throw new FHIRException(\"Error loading \"+name+\": \"+e.getMessage(), e);\n      }\n    }"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 25,
      "fileName": "SimpleWorkerContext.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "source",
              "startLine": 218,
              "startColumn": 24,
              "endLine": 218,
              "endColumn": 30,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "Map",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader)\n      throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 1,
              "variableName": "source.keySet()",
              "startLine": 218,
              "startColumn": 24,
              "endLine": 218,
              "endColumn": 39,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "Set [<element>] : Object",
              "code": "  public static SimpleWorkerContext fromDefinitions(Map<String, byte[]> source, IContextResourceLoader loader)\n      throws FileNotFoundException, IOException, FHIRException {\n    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {"
            },
            {
              "step": 2,
              "variableName": "name",
              "startLine": 220,
              "startColumn": 32,
              "endLine": 220,
              "endColumn": 36,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "    SimpleWorkerContext res = new SimpleWorkerContext();\n    for (String name : source.keySet()) {\n      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);"
            },
            {
              "step": 3,
              "variableName": "\"Error loading \" + name + \": \" + e.getMessage()",
              "startLine": 223,
              "startColumn": 33,
              "endLine": 223,
              "endColumn": 80,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }\n    return res;"
            },
            {
              "step": 4,
              "variableName": "new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e)",
              "startLine": 223,
              "startColumn": 15,
              "endLine": 223,
              "endColumn": 84,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "FHIRException",
              "code": "        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }\n    return res;"
            },
            {
              "step": 5,
              "variableName": "e.getMessage()",
              "startLine": 222,
              "startColumn": 61,
              "endLine": 222,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "String",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }"
            },
            {
              "step": 6,
              "variableName": "\"Error loading \" + name + \": \" + e.getMessage()",
              "startLine": 222,
              "startColumn": 28,
              "endLine": 222,
              "endColumn": 75,
              "uri": "org.hl7.fhir.core-6.5.21/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/context/SimpleWorkerContext.java",
              "type": "",
              "code": "      try {\n        res.loadDefinitionItem(name, new ByteArrayInputStream(source.get(name)), loader);\n      } catch (Exception e) {\n        System.out.println(\"Error loading \" + name + \": \" + e.getMessage());\n        throw new FHIRException(\"Error loading \" + name + \": \" + e.getMessage(), e);\n      }\n    }"
            }
          ]
        }
      ]
    }
  ]
}