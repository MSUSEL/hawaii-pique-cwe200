{
  "208": [
    {
      "resultIndex": 0,
      "fileName": "AbstractConfiguredObject.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 232,
              "startColumn": 48,
              "endLine": 232,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));\n        }"
            },
            {
              "step": 8,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 53,
              "startColumn": 17,
              "endLine": 53,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    private String _password;\n\n    @ManagedObjectFactoryConstructor\n    ManagedUser(final Map<String, Object> attributes, ConfigModelPasswordManagingAuthenticationProvider<?> parent)\n    {\n        super(parent, attributes);\n        _authenticationManager = parent;"
            },
            {
              "step": 9,
              "variableName": "attributes",
              "startLine": 55,
              "startColumn": 23,
              "endLine": 55,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @ManagedObjectFactoryConstructor\n    ManagedUser(final Map<String, Object> attributes, ConfigModelPasswordManagingAuthenticationProvider<?> parent)\n    {\n        super(parent, attributes);\n        _authenticationManager = parent;\n\n        setState(State.ACTIVE);"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 236,
              "startColumn": 40,
              "endLine": 236,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private volatile int _awaitAttainmentTimeout;\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 238,
              "startColumn": 22,
              "endLine": 238,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }\n\n"
            },
            {
              "step": 12,
              "variableName": "Map<String, Object> attributes",
              "startLine": 243,
              "startColumn": 40,
              "endLine": 243,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());\n    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,"
            },
            {
              "step": 14,
              "variableName": "Map<String, Object> attributes",
              "startLine": 250,
              "startColumn": 40,
              "endLine": 250,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor,\n                                       Model model)\n    {"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 323,
              "startColumn": 58,
              "endLine": 323,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        _managesChildStorage = managesChildren(_category) || managesChildren(_typeClass);\n        _bestFitInterface = calculateBestFitInterface();\n\n        if(attributes.get(TYPE) != null && !_type.equals(attributes.get(TYPE)))\n        {\n            throw new IllegalConfigurationException(\"Provided type is \" + attributes.get(TYPE)\n                                                    + \" but calculated type is \" + _type);"
            },
            {
              "step": 16,
              "variableName": "attributes.get(TYPE)",
              "startLine": 323,
              "startColumn": 58,
              "endLine": 323,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        _managesChildStorage = managesChildren(_category) || managesChildren(_typeClass);\n        _bestFitInterface = calculateBestFitInterface();\n\n        if(attributes.get(TYPE) != null && !_type.equals(attributes.get(TYPE)))\n        {\n            throw new IllegalConfigurationException(\"Provided type is \" + attributes.get(TYPE)\n                                                    + \" but calculated type is \" + _type);"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 216,
              "startColumn": 48,
              "endLine": 216,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();\n            attrMap.put(ConfiguredObject.ID, id);\n            attrMap.put(ConfiguredObject.NAME, groupName);\n            GroupAdapter groupAdapter = new GroupAdapter(attrMap);\n            groupAdapter.create();\n            return Futures.immediateFuture((C) groupAdapter);"
            },
            {
              "step": 46,
              "variableName": "attrMap",
              "startLine": 216,
              "startColumn": 13,
              "endLine": 216,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();\n            attrMap.put(ConfiguredObject.ID, id);\n            attrMap.put(ConfiguredObject.NAME, groupName);\n            GroupAdapter groupAdapter = new GroupAdapter(attrMap);\n            groupAdapter.create();\n            return Futures.immediateFuture((C) groupAdapter);"
            },
            {
              "step": 47,
              "variableName": "attrMap",
              "startLine": 217,
              "startColumn": 58,
              "endLine": 217,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            UUID id = UUID.randomUUID();\n            attrMap.put(ConfiguredObject.ID, id);\n            attrMap.put(ConfiguredObject.NAME, groupName);\n            GroupAdapter groupAdapter = new GroupAdapter(attrMap);\n            groupAdapter.create();\n            return Futures.immediateFuture((C) groupAdapter);\n        }"
            },
            {
              "step": 48,
              "variableName": "Map<String, Object> attributes",
              "startLine": 314,
              "startColumn": 29,
              "endLine": 314,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    private class GroupAdapter extends AbstractConfiguredObject<GroupAdapter> implements Group<GroupAdapter>\n    {\n        public GroupAdapter(Map<String, Object> attributes)\n        {\n            super(FileBasedGroupProviderImpl.this, attributes);\n        }"
            },
            {
              "step": 49,
              "variableName": "attributes",
              "startLine": 316,
              "startColumn": 52,
              "endLine": 316,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        public GroupAdapter(Map<String, Object> attributes)\n        {\n            super(FileBasedGroupProviderImpl.this, attributes);\n        }\n\n        @Override"
            },
            {
              "step": 50,
              "variableName": "Map<String, Object> attributes",
              "startLine": 236,
              "startColumn": 40,
              "endLine": 236,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    private volatile int _awaitAttainmentTimeout;\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }"
            },
            {
              "step": 51,
              "variableName": "attributes",
              "startLine": 238,
              "startColumn": 22,
              "endLine": 238,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }\n\n"
            },
            {
              "step": 52,
              "variableName": "Map<String, Object> attributes",
              "startLine": 243,
              "startColumn": 40,
              "endLine": 243,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());"
            },
            {
              "step": 53,
              "variableName": "attributes",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());\n    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,"
            },
            {
              "step": 54,
              "variableName": "Map<String, Object> attributes",
              "startLine": 250,
              "startColumn": 40,
              "endLine": 250,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor,\n                                       Model model)\n    {"
            },
            {
              "step": 55,
              "variableName": "attributes",
              "startLine": 323,
              "startColumn": 58,
              "endLine": 323,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        _managesChildStorage = managesChildren(_category) || managesChildren(_typeClass);\n        _bestFitInterface = calculateBestFitInterface();\n\n        if(attributes.get(TYPE) != null && !_type.equals(attributes.get(TYPE)))\n        {\n            throw new IllegalConfigurationException(\"Provided type is \" + attributes.get(TYPE)\n                                                    + \" but calculated type is \" + _type);"
            },
            {
              "step": 56,
              "variableName": "attributes.get(TYPE)",
              "startLine": 323,
              "startColumn": 58,
              "endLine": 323,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        _managesChildStorage = managesChildren(_category) || managesChildren(_typeClass);\n        _bestFitInterface = calculateBestFitInterface();\n\n        if(attributes.get(TYPE) != null && !_type.equals(attributes.get(TYPE)))\n        {\n            throw new IllegalConfigurationException(\"Provided type is \" + attributes.get(TYPE)\n                                                    + \" but calculated type is \" + _type);"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 232,
              "startColumn": 48,
              "endLine": 232,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));\n        }"
            },
            {
              "step": 8,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 53,
              "startColumn": 17,
              "endLine": 53,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    private String _password;\n\n    @ManagedObjectFactoryConstructor\n    ManagedUser(final Map<String, Object> attributes, ConfigModelPasswordManagingAuthenticationProvider<?> parent)\n    {\n        super(parent, attributes);\n        _authenticationManager = parent;"
            },
            {
              "step": 9,
              "variableName": "attributes",
              "startLine": 55,
              "startColumn": 23,
              "endLine": 55,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @ManagedObjectFactoryConstructor\n    ManagedUser(final Map<String, Object> attributes, ConfigModelPasswordManagingAuthenticationProvider<?> parent)\n    {\n        super(parent, attributes);\n        _authenticationManager = parent;\n\n        setState(State.ACTIVE);"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 236,
              "startColumn": 40,
              "endLine": 236,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private volatile int _awaitAttainmentTimeout;\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 238,
              "startColumn": 22,
              "endLine": 238,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }\n\n"
            },
            {
              "step": 12,
              "variableName": "Map<String, Object> attributes",
              "startLine": 243,
              "startColumn": 40,
              "endLine": 243,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());\n    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,"
            },
            {
              "step": 14,
              "variableName": "Map<String, Object> attributes",
              "startLine": 250,
              "startColumn": 40,
              "endLine": 250,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor,\n                                       Model model)\n    {"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 305,
              "startColumn": 46,
              "endLine": 305,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        if(idObj == null)\n        {\n            uuid = UUID.randomUUID();\n            attributes = new LinkedHashMap<>(attributes);\n            attributes.put(ID, uuid);\n        }\n        else"
            },
            {
              "step": 16,
              "variableName": "new LinkedHashMap<>(attributes)",
              "startLine": 305,
              "startColumn": 26,
              "endLine": 305,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "LinkedHashMap [<map.value>] : String",
              "code": "        if(idObj == null)\n        {\n            uuid = UUID.randomUUID();\n            attributes = new LinkedHashMap<>(attributes);\n            attributes.put(ID, uuid);\n        }\n        else"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 323,
              "startColumn": 58,
              "endLine": 323,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "LinkedHashMap [<map.value>] : String",
              "code": "        _managesChildStorage = managesChildren(_category) || managesChildren(_typeClass);\n        _bestFitInterface = calculateBestFitInterface();\n\n        if(attributes.get(TYPE) != null && !_type.equals(attributes.get(TYPE)))\n        {\n            throw new IllegalConfigurationException(\"Provided type is \" + attributes.get(TYPE)\n                                                    + \" but calculated type is \" + _type);"
            },
            {
              "step": 18,
              "variableName": "attributes.get(TYPE)",
              "startLine": 323,
              "startColumn": 58,
              "endLine": 323,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        _managesChildStorage = managesChildren(_category) || managesChildren(_typeClass);\n        _bestFitInterface = calculateBestFitInterface();\n\n        if(attributes.get(TYPE) != null && !_type.equals(attributes.get(TYPE)))\n        {\n            throw new IllegalConfigurationException(\"Provided type is \" + attributes.get(TYPE)\n                                                    + \" but calculated type is \" + _type);"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "AncestorAttributeResolver.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 232,
              "startColumn": 48,
              "endLine": 232,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));\n        }"
            },
            {
              "step": 8,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 53,
              "startColumn": 17,
              "endLine": 53,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    private String _password;\n\n    @ManagedObjectFactoryConstructor\n    ManagedUser(final Map<String, Object> attributes, ConfigModelPasswordManagingAuthenticationProvider<?> parent)\n    {\n        super(parent, attributes);\n        _authenticationManager = parent;"
            },
            {
              "step": 9,
              "variableName": "attributes",
              "startLine": 55,
              "startColumn": 23,
              "endLine": 55,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @ManagedObjectFactoryConstructor\n    ManagedUser(final Map<String, Object> attributes, ConfigModelPasswordManagingAuthenticationProvider<?> parent)\n    {\n        super(parent, attributes);\n        _authenticationManager = parent;\n\n        setState(State.ACTIVE);"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 236,
              "startColumn": 40,
              "endLine": 236,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private volatile int _awaitAttainmentTimeout;\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 238,
              "startColumn": 22,
              "endLine": 238,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }\n\n"
            },
            {
              "step": 12,
              "variableName": "Map<String, Object> attributes",
              "startLine": 243,
              "startColumn": 40,
              "endLine": 243,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());\n    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,"
            },
            {
              "step": 14,
              "variableName": "Map<String, Object> attributes",
              "startLine": 250,
              "startColumn": 40,
              "endLine": 250,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor,\n                                       Model model)\n    {"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 299,
              "startColumn": 24,
              "endLine": 299,
              "endColumn": 34,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n\n\n        Object idObj = attributes.get(ID);\n\n        UUID uuid;\n        if(idObj == null)"
            },
            {
              "step": 16,
              "variableName": "attributes.get(ID)",
              "startLine": 299,
              "startColumn": 24,
              "endLine": 299,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n\n\n        Object idObj = attributes.get(ID);\n\n        UUID uuid;\n        if(idObj == null)"
            },
            {
              "step": 17,
              "variableName": "idObj",
              "startLine": 310,
              "startColumn": 67,
              "endLine": 310,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n        else\n        {\n            uuid = AttributeValueConverter.UUID_CONVERTER.convert(idObj, this);\n        }\n        _id = uuid;\n        _name = AttributeValueConverter.STRING_CONVERTER.convert(attributes.get(NAME),this);"
            },
            {
              "step": 18,
              "variableName": "final Object value",
              "startLine": 119,
              "startColumn": 29,
              "endLine": 119,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    static final AttributeValueConverter<UUID> UUID_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        public UUID convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof UUID)\n            {"
            },
            {
              "step": 19,
              "variableName": "(String) value",
              "startLine": 127,
              "startColumn": 85,
              "endLine": 127,
              "endColumn": 99,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return UUID.fromString(AbstractConfiguredObject.interpolate(object, (String) value));\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 20,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 21,
              "variableName": "value",
              "startLine": 3679,
              "startColumn": 35,
              "endLine": 3679,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        {\n            Map<String, String> inheritedContext = new HashMap<>();\n            generateInheritedContext(object.getModel(), object, inheritedContext);\n            return Strings.expand(value, false,\n                                  JSON_SUBSTITUTION_RESOLVER,\n                                  getOwnAttributeResolver(object),\n                                  getAncestorAttributeResolver(object),"
            },
            {
              "step": 22,
              "variableName": "final String input",
              "startLine": 275,
              "startColumn": 33,
              "endLine": 275,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     *\n     * @return Expanded string\n     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }"
            },
            {
              "step": 23,
              "variableName": "input",
              "startLine": 277,
              "startColumn": 23,
              "endLine": 277,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }\n\n    /**"
            },
            {
              "step": 24,
              "variableName": "final String input",
              "startLine": 291,
              "startColumn": 9,
              "endLine": 291,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Expanded string\n     */\n    private static String expand(\n        final String input,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 25,
              "variableName": "input",
              "startLine": 301,
              "startColumn": 39,
              "endLine": 301,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 26,
              "variableName": "VAR.matcher(input)",
              "startLine": 301,
              "startColumn": 27,
              "endLine": 301,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 27,
              "variableName": "m",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 28,
              "variableName": "m.group(1)",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 29,
              "variableName": "var",
              "startLine": 320,
              "startColumn": 78,
              "endLine": 320,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "            }\n            else\n            {\n                m.appendReplacement(result, Matcher.quoteReplacement(resolve(var, resolver, stack, failOnUnresolved)));\n            }\n        }\n        m.appendTail(result);"
            },
            {
              "step": 30,
              "variableName": "final String var",
              "startLine": 338,
              "startColumn": 9,
              "endLine": 338,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Resolved variable value\n     */\n    private static String resolve(\n        final String var,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 31,
              "variableName": "var",
              "startLine": 351,
              "startColumn": 48,
              "endLine": 351,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "                               stack));\n        }\n\n        final String result = resolver.resolve(var, resolver);\n        if (result == null)\n        {\n            if (failOnUnresolved)"
            },
            {
              "step": 32,
              "variableName": "final String variable",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public String resolve(final String variable, final Strings.Resolver resolver)\n    {\n        boolean clearStack = false;\n        Set<String> currentStack = _stack.get();"
            },
            {
              "step": 33,
              "variableName": "variable",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 34,
              "variableName": "variable.substring(PREFIX.length())",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 84,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 35,
              "variableName": "classQualifiedAttrName",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 36,
              "variableName": "classQualifiedAttrName.substring(0, colonIndex)",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 101,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 37,
              "variableName": "categorySimpleClassName",
              "startLine": 85,
              "startColumn": 118,
              "endLine": 85,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());\n                    if (ancestorCategory == null)\n                    {\n                        return null;"
            },
            {
              "step": 38,
              "variableName": "String targetCategorySimpleClassName",
              "startLine": 147,
              "startColumn": 85,
              "endLine": 147,
              "endColumn": 121,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        }\n    }\n\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {"
            },
            {
              "step": 39,
              "variableName": "targetCategorySimpleClassName",
              "startLine": 149,
              "startColumn": 13,
              "endLine": 149,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "",
              "code": "\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {\n            return objectCategory;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 171,
              "startColumn": 42,
              "endLine": 171,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "\n                final byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n\n                final byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 176,
              "startColumn": 72,
              "endLine": 176,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 176,
              "startColumn": 37,
              "endLine": 176,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 4,
              "variableName": "password",
              "startLine": 178,
              "startColumn": 43,
              "endLine": 178,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }\n            catch (NoSuchAlgorithmException e)\n            {"
            },
            {
              "step": 5,
              "variableName": "final String password",
              "startLine": 204,
              "startColumn": 62,
              "endLine": 204,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void upgradeUserPassword(final ManagedUser user, final String password)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "password",
              "startLine": 209,
              "startColumn": 30,
              "endLine": 209,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        try\n        {\n            _doNotCreateStoredPasswordBecauseItIsBeingUpgraded = true;\n            user.setPassword(password);\n        }\n        finally\n        {"
            },
            {
              "step": 7,
              "variableName": "final String password",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }"
            },
            {
              "step": 8,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 12,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 14,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 15,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 16,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 17,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 18,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 20,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 21,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 22,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 23,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 24,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 25,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 27,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 28,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 29,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 30,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 31,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 32,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 33,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 34,
              "variableName": "desired",
              "startLine": 1852,
              "startColumn": 45,
              "endLine": 1852,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 35,
              "variableName": "Object value",
              "startLine": 476,
              "startColumn": 55,
              "endLine": 476,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 36,
              "variableName": "value",
              "startLine": 486,
              "startColumn": 53,
              "endLine": 486,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                value = attribute.defaultValue();\n            }\n            ConfiguredObjectTypeRegistry.AutomatedField field = _automatedFields.get(name);\n            Object desiredValue = attribute.convert(value, this);\n            field.set(this, desiredValue);\n        }\n        catch (IllegalAccessException e)"
            },
            {
              "step": 37,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 38,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 39,
              "variableName": "final Object value",
              "startLine": 100,
              "startColumn": 31,
              "endLine": 100,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    static final AttributeValueConverter<Object> OBJECT_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        public Object convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof String)\n            {"
            },
            {
              "step": 40,
              "variableName": "(String) value",
              "startLine": 104,
              "startColumn": 69,
              "endLine": 104,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        {\n            if (value instanceof String)\n            {\n                return AbstractConfiguredObject.interpolate(object, (String) value);\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 41,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 42,
              "variableName": "value",
              "startLine": 3679,
              "startColumn": 35,
              "endLine": 3679,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        {\n            Map<String, String> inheritedContext = new HashMap<>();\n            generateInheritedContext(object.getModel(), object, inheritedContext);\n            return Strings.expand(value, false,\n                                  JSON_SUBSTITUTION_RESOLVER,\n                                  getOwnAttributeResolver(object),\n                                  getAncestorAttributeResolver(object),"
            },
            {
              "step": 43,
              "variableName": "final String input",
              "startLine": 275,
              "startColumn": 33,
              "endLine": 275,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     *\n     * @return Expanded string\n     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }"
            },
            {
              "step": 44,
              "variableName": "input",
              "startLine": 277,
              "startColumn": 23,
              "endLine": 277,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }\n\n    /**"
            },
            {
              "step": 45,
              "variableName": "final String input",
              "startLine": 291,
              "startColumn": 9,
              "endLine": 291,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Expanded string\n     */\n    private static String expand(\n        final String input,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 46,
              "variableName": "input",
              "startLine": 301,
              "startColumn": 39,
              "endLine": 301,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 47,
              "variableName": "VAR.matcher(input)",
              "startLine": 301,
              "startColumn": 27,
              "endLine": 301,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 48,
              "variableName": "m",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 49,
              "variableName": "m.group(1)",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 50,
              "variableName": "var",
              "startLine": 320,
              "startColumn": 78,
              "endLine": 320,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "            }\n            else\n            {\n                m.appendReplacement(result, Matcher.quoteReplacement(resolve(var, resolver, stack, failOnUnresolved)));\n            }\n        }\n        m.appendTail(result);"
            },
            {
              "step": 51,
              "variableName": "final String var",
              "startLine": 338,
              "startColumn": 9,
              "endLine": 338,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Resolved variable value\n     */\n    private static String resolve(\n        final String var,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 52,
              "variableName": "var",
              "startLine": 351,
              "startColumn": 48,
              "endLine": 351,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "                               stack));\n        }\n\n        final String result = resolver.resolve(var, resolver);\n        if (result == null)\n        {\n            if (failOnUnresolved)"
            },
            {
              "step": 53,
              "variableName": "final String variable",
              "startLine": 515,
              "startColumn": 31,
              "endLine": 515,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public String resolve(final String variable, final Resolver resolver)\n        {\n            final String result = primary.resolve(variable, resolver);\n            return result != null"
            },
            {
              "step": 54,
              "variableName": "variable",
              "startLine": 517,
              "startColumn": 51,
              "endLine": 517,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        @Override\n        public String resolve(final String variable, final Resolver resolver)\n        {\n            final String result = primary.resolve(variable, resolver);\n            return result != null\n                    ? result\n                    : secondary.resolve(variable, resolver);"
            },
            {
              "step": 55,
              "variableName": "final String variable",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public String resolve(final String variable, final Strings.Resolver resolver)\n    {\n        boolean clearStack = false;\n        Set<String> currentStack = _stack.get();"
            },
            {
              "step": 56,
              "variableName": "variable",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 57,
              "variableName": "variable.substring(PREFIX.length())",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 84,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 58,
              "variableName": "classQualifiedAttrName",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 59,
              "variableName": "classQualifiedAttrName.substring(0, colonIndex)",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 101,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 60,
              "variableName": "categorySimpleClassName",
              "startLine": 85,
              "startColumn": 118,
              "endLine": 85,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());\n                    if (ancestorCategory == null)\n                    {\n                        return null;"
            },
            {
              "step": 61,
              "variableName": "String targetCategorySimpleClassName",
              "startLine": 147,
              "startColumn": 85,
              "endLine": 147,
              "endColumn": 121,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        }\n    }\n\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {"
            },
            {
              "step": 62,
              "variableName": "targetCategorySimpleClassName",
              "startLine": 149,
              "startColumn": 13,
              "endLine": 149,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "",
              "code": "\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {\n            return objectCategory;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 6,
              "variableName": "storedPassword",
              "startLine": 96,
              "startColumn": 42,
              "endLine": 96,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 10,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 11,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 12,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 13,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 14,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 15,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 16,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 17,
              "variableName": "desired",
              "startLine": 1849,
              "startColumn": 39,
              "endLine": 1849,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 18,
              "variableName": "_attributes",
              "startLine": 1849,
              "startColumn": 17,
              "endLine": 1849,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 19,
              "variableName": "_attributes",
              "startLine": 1849,
              "startColumn": 17,
              "endLine": 1849,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 20,
              "variableName": "changeAttribute(attributeName, desired)",
              "startLine": 3049,
              "startColumn": 25,
              "endLine": 3049,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 21,
              "variableName": "getAttribute(attributeName)",
              "startLine": 3048,
              "startColumn": 39,
              "endLine": 3048,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);"
            },
            {
              "step": 22,
              "variableName": "getAttribute",
              "startLine": 1787,
              "startColumn": 25,
              "endLine": 1787,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final Object getAttribute(String name)\n    {\n        ConfiguredObjectAttribute<X,?> attr = (ConfiguredObjectAttribute<X, ?>) _attributeTypes.get(name);\n        if(attr != null)"
            },
            {
              "step": 23,
              "variableName": "(X)this",
              "startLine": 1792,
              "startColumn": 42,
              "endLine": 1792,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "        ConfiguredObjectAttribute<X,?> attr = (ConfiguredObjectAttribute<X, ?>) _attributeTypes.get(name);\n        if(attr != null)\n        {\n            Object value = attr.getValue((X)this);\n            if(value != null && !isSystemProcess() && attr.isSecureValue(value))\n            {\n                return SECURE_VALUES.get(value.getClass());"
            },
            {
              "step": 24,
              "variableName": "final C configuredObject",
              "startLine": 282,
              "startColumn": 29,
              "endLine": 282,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)"
            },
            {
              "step": 25,
              "variableName": "configuredObject",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 26,
              "variableName": "getActualAttributes",
              "startLine": 1821,
              "startColumn": 38,
              "endLine": 1821,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final Map<String, Object> getActualAttributes()\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 27,
              "variableName": "_attributes",
              "startLine": 1825,
              "startColumn": 34,
              "endLine": 1825,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 28,
              "variableName": "_attributes",
              "startLine": 1825,
              "startColumn": 34,
              "endLine": 1825,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 29,
              "variableName": "new HashMap<>(_attributes)",
              "startLine": 1825,
              "startColumn": 20,
              "endLine": 1825,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 30,
              "variableName": "configuredObject.getActualAttributes()",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 31,
              "variableName": "configuredObject.getActualAttributes().get(getName())",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 32,
              "variableName": "value",
              "startLine": 289,
              "startColumn": 24,
              "endLine": 289,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "        {\n            value = defaultValue();\n        }\n        return convert(value, configuredObject);\n    }\n\n    @Override"
            },
            {
              "step": 33,
              "variableName": "final Object value",
              "startLine": 293,
              "startColumn": 28,
              "endLine": 293,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public final T convert(final Object value, final C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 34,
              "variableName": "value",
              "startLine": 298,
              "startColumn": 38,
              "endLine": 298,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 35,
              "variableName": "final Object value",
              "startLine": 143,
              "startColumn": 21,
              "endLine": 143,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    static final AttributeValueConverter<URI> URI_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        URI convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof URI)\n            {"
            },
            {
              "step": 36,
              "variableName": "(String) value",
              "startLine": 151,
              "startColumn": 80,
              "endLine": 151,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return URI.create(AbstractConfiguredObject.interpolate(object, (String) value));\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 37,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 38,
              "variableName": "value",
              "startLine": 3679,
              "startColumn": 35,
              "endLine": 3679,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        {\n            Map<String, String> inheritedContext = new HashMap<>();\n            generateInheritedContext(object.getModel(), object, inheritedContext);\n            return Strings.expand(value, false,\n                                  JSON_SUBSTITUTION_RESOLVER,\n                                  getOwnAttributeResolver(object),\n                                  getAncestorAttributeResolver(object),"
            },
            {
              "step": 39,
              "variableName": "final String input",
              "startLine": 275,
              "startColumn": 33,
              "endLine": 275,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     *\n     * @return Expanded string\n     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }"
            },
            {
              "step": 40,
              "variableName": "input",
              "startLine": 277,
              "startColumn": 23,
              "endLine": 277,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }\n\n    /**"
            },
            {
              "step": 41,
              "variableName": "final String input",
              "startLine": 291,
              "startColumn": 9,
              "endLine": 291,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Expanded string\n     */\n    private static String expand(\n        final String input,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 42,
              "variableName": "input",
              "startLine": 301,
              "startColumn": 39,
              "endLine": 301,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 43,
              "variableName": "VAR.matcher(input)",
              "startLine": 301,
              "startColumn": 27,
              "endLine": 301,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 44,
              "variableName": "m",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 45,
              "variableName": "m.group(1)",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 46,
              "variableName": "var",
              "startLine": 320,
              "startColumn": 78,
              "endLine": 320,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "            }\n            else\n            {\n                m.appendReplacement(result, Matcher.quoteReplacement(resolve(var, resolver, stack, failOnUnresolved)));\n            }\n        }\n        m.appendTail(result);"
            },
            {
              "step": 47,
              "variableName": "final String var",
              "startLine": 338,
              "startColumn": 9,
              "endLine": 338,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Resolved variable value\n     */\n    private static String resolve(\n        final String var,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 48,
              "variableName": "var",
              "startLine": 351,
              "startColumn": 48,
              "endLine": 351,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "                               stack));\n        }\n\n        final String result = resolver.resolve(var, resolver);\n        if (result == null)\n        {\n            if (failOnUnresolved)"
            },
            {
              "step": 49,
              "variableName": "final String variable",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public String resolve(final String variable, final Strings.Resolver resolver)\n    {\n        boolean clearStack = false;\n        Set<String> currentStack = _stack.get();"
            },
            {
              "step": 50,
              "variableName": "variable",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 51,
              "variableName": "variable.substring(PREFIX.length())",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 84,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 52,
              "variableName": "classQualifiedAttrName",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 53,
              "variableName": "classQualifiedAttrName.substring(0, colonIndex)",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 101,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 54,
              "variableName": "categorySimpleClassName",
              "startLine": 85,
              "startColumn": 118,
              "endLine": 85,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());\n                    if (ancestorCategory == null)\n                    {\n                        return null;"
            },
            {
              "step": 55,
              "variableName": "String targetCategorySimpleClassName",
              "startLine": 147,
              "startColumn": 85,
              "endLine": 147,
              "endColumn": 121,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        }\n    }\n\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {"
            },
            {
              "step": 56,
              "variableName": "targetCategorySimpleClassName",
              "startLine": 149,
              "startColumn": 13,
              "endLine": 149,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "",
              "code": "\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {\n            return objectCategory;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 216,
              "startColumn": 48,
              "endLine": 216,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();\n            attrMap.put(ConfiguredObject.ID, id);\n            attrMap.put(ConfiguredObject.NAME, groupName);\n            GroupAdapter groupAdapter = new GroupAdapter(attrMap);\n            groupAdapter.create();\n            return Futures.immediateFuture((C) groupAdapter);"
            },
            {
              "step": 46,
              "variableName": "attrMap",
              "startLine": 216,
              "startColumn": 13,
              "endLine": 216,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();\n            attrMap.put(ConfiguredObject.ID, id);\n            attrMap.put(ConfiguredObject.NAME, groupName);\n            GroupAdapter groupAdapter = new GroupAdapter(attrMap);\n            groupAdapter.create();\n            return Futures.immediateFuture((C) groupAdapter);"
            },
            {
              "step": 47,
              "variableName": "attrMap",
              "startLine": 217,
              "startColumn": 58,
              "endLine": 217,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            UUID id = UUID.randomUUID();\n            attrMap.put(ConfiguredObject.ID, id);\n            attrMap.put(ConfiguredObject.NAME, groupName);\n            GroupAdapter groupAdapter = new GroupAdapter(attrMap);\n            groupAdapter.create();\n            return Futures.immediateFuture((C) groupAdapter);\n        }"
            },
            {
              "step": 48,
              "variableName": "Map<String, Object> attributes",
              "startLine": 314,
              "startColumn": 29,
              "endLine": 314,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    private class GroupAdapter extends AbstractConfiguredObject<GroupAdapter> implements Group<GroupAdapter>\n    {\n        public GroupAdapter(Map<String, Object> attributes)\n        {\n            super(FileBasedGroupProviderImpl.this, attributes);\n        }"
            },
            {
              "step": 49,
              "variableName": "attributes",
              "startLine": 316,
              "startColumn": 52,
              "endLine": 316,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        public GroupAdapter(Map<String, Object> attributes)\n        {\n            super(FileBasedGroupProviderImpl.this, attributes);\n        }\n\n        @Override"
            },
            {
              "step": 50,
              "variableName": "Map<String, Object> attributes",
              "startLine": 236,
              "startColumn": 40,
              "endLine": 236,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    private volatile int _awaitAttainmentTimeout;\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }"
            },
            {
              "step": 51,
              "variableName": "attributes",
              "startLine": 238,
              "startColumn": 22,
              "endLine": 238,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes)\n    {\n        this(parent, attributes, parent.getChildExecutor());\n    }\n\n"
            },
            {
              "step": 52,
              "variableName": "Map<String, Object> attributes",
              "startLine": 243,
              "startColumn": 40,
              "endLine": 243,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());"
            },
            {
              "step": 53,
              "variableName": "attributes",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor)\n    {\n        this(parent, attributes, taskExecutor, parent.getModel());\n    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,"
            },
            {
              "step": 54,
              "variableName": "Map<String, Object> attributes",
              "startLine": 250,
              "startColumn": 40,
              "endLine": 250,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    }\n\n    protected AbstractConfiguredObject(final ConfiguredObject<?> parent,\n                                       Map<String, Object> attributes,\n                                       TaskExecutor taskExecutor,\n                                       Model model)\n    {"
            },
            {
              "step": 55,
              "variableName": "attributes",
              "startLine": 337,
              "startColumn": 29,
              "endLine": 337,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        populateChildTypeMaps();\n\n\n        Object durableObj = attributes.get(DURABLE);\n        _durable = AttributeValueConverter.BOOLEAN_CONVERTER.convert(durableObj == null\n                                                                             ? ((ConfiguredSettableAttribute) (_attributeTypes\n                .get(DURABLE))).defaultValue()"
            },
            {
              "step": 56,
              "variableName": "attributes.get(DURABLE)",
              "startLine": 337,
              "startColumn": 29,
              "endLine": 337,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        populateChildTypeMaps();\n\n\n        Object durableObj = attributes.get(DURABLE);\n        _durable = AttributeValueConverter.BOOLEAN_CONVERTER.convert(durableObj == null\n                                                                             ? ((ConfiguredSettableAttribute) (_attributeTypes\n                .get(DURABLE))).defaultValue()"
            },
            {
              "step": 57,
              "variableName": "durableObj == null",
              "startLine": 338,
              "startColumn": 70,
              "endLine": 341,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "... : String",
              "code": "\n\n        Object durableObj = attributes.get(DURABLE);\n        _durable = AttributeValueConverter.BOOLEAN_CONVERTER.convert(durableObj == null\n                                                                             ? ((ConfiguredSettableAttribute) (_attributeTypes\n                .get(DURABLE))).defaultValue()\n                                                                             : durableObj, this);"
            },
            {
              "step": 58,
              "variableName": "final Object value",
              "startLine": 389,
              "startColumn": 32,
              "endLine": 389,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    {\n\n        @Override\n        public Boolean convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof Boolean)\n            {"
            },
            {
              "step": 59,
              "variableName": "(String) value",
              "startLine": 397,
              "startColumn": 85,
              "endLine": 397,
              "endColumn": 99,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return Boolean.valueOf(AbstractConfiguredObject.interpolate(object, (String) value));\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 60,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 61,
              "variableName": "value",
              "startLine": 3679,
              "startColumn": 35,
              "endLine": 3679,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        {\n            Map<String, String> inheritedContext = new HashMap<>();\n            generateInheritedContext(object.getModel(), object, inheritedContext);\n            return Strings.expand(value, false,\n                                  JSON_SUBSTITUTION_RESOLVER,\n                                  getOwnAttributeResolver(object),\n                                  getAncestorAttributeResolver(object),"
            },
            {
              "step": 62,
              "variableName": "final String input",
              "startLine": 275,
              "startColumn": 33,
              "endLine": 275,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     *\n     * @return Expanded string\n     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }"
            },
            {
              "step": 63,
              "variableName": "input",
              "startLine": 277,
              "startColumn": 23,
              "endLine": 277,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     */\n    public static String expand(final String input, final boolean failOnUnresolved, final Resolver... resolvers)\n    {\n        return expand(input, chain(resolvers), new Stack<>(), failOnUnresolved);\n    }\n\n    /**"
            },
            {
              "step": 64,
              "variableName": "final String input",
              "startLine": 291,
              "startColumn": 9,
              "endLine": 291,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Expanded string\n     */\n    private static String expand(\n        final String input,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 65,
              "variableName": "input",
              "startLine": 301,
              "startColumn": 39,
              "endLine": 301,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 66,
              "variableName": "VAR.matcher(input)",
              "startLine": 301,
              "startColumn": 27,
              "endLine": 301,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        {\n            return null;\n        }\n        final Matcher m = VAR.matcher(input);\n        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {"
            },
            {
              "step": 67,
              "variableName": "m",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 33,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "Matcher",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 68,
              "variableName": "m.group(1)",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "        final StringBuffer result = new StringBuffer();\n        while (m.find())\n        {\n            final String var = m.group(1);\n            if (var == null)\n            {\n                final String esc = m.group(2);"
            },
            {
              "step": 69,
              "variableName": "var",
              "startLine": 320,
              "startColumn": 78,
              "endLine": 320,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "            }\n            else\n            {\n                m.appendReplacement(result, Matcher.quoteReplacement(resolve(var, resolver, stack, failOnUnresolved)));\n            }\n        }\n        m.appendTail(result);"
            },
            {
              "step": 70,
              "variableName": "final String var",
              "startLine": 338,
              "startColumn": 9,
              "endLine": 338,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "     * @return Resolved variable value\n     */\n    private static String resolve(\n        final String var,\n        final Resolver resolver,\n        final Stack<String> stack,\n        final boolean failOnUnresolved"
            },
            {
              "step": 71,
              "variableName": "var",
              "startLine": 351,
              "startColumn": 48,
              "endLine": 351,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/Strings.java",
              "type": "String",
              "code": "                               stack));\n        }\n\n        final String result = resolver.resolve(var, resolver);\n        if (result == null)\n        {\n            if (failOnUnresolved)"
            },
            {
              "step": 72,
              "variableName": "final String variable",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public String resolve(final String variable, final Strings.Resolver resolver)\n    {\n        boolean clearStack = false;\n        Set<String> currentStack = _stack.get();"
            },
            {
              "step": 73,
              "variableName": "variable",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 74,
              "variableName": "variable.substring(PREFIX.length())",
              "startLine": 64,
              "startColumn": 49,
              "endLine": 64,
              "endColumn": 84,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        {\n            if (variable.startsWith(PREFIX))\n            {\n                String classQualifiedAttrName = variable.substring(PREFIX.length());\n\n                if (currentStack.contains(classQualifiedAttrName))\n                {"
            },
            {
              "step": 75,
              "variableName": "classQualifiedAttrName",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 76,
              "variableName": "classQualifiedAttrName.substring(0, colonIndex)",
              "startLine": 82,
              "startColumn": 54,
              "endLine": 82,
              "endColumn": 101,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                        return null;\n                    }\n\n                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());"
            },
            {
              "step": 77,
              "variableName": "categorySimpleClassName",
              "startLine": 85,
              "startColumn": 118,
              "endLine": 85,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "                    String categorySimpleClassName = classQualifiedAttrName.substring(0, colonIndex);\n                    String attributeName = classQualifiedAttrName.substring(colonIndex + 1);\n\n                    final Class<? extends ConfiguredObject> ancestorCategory = findAncestorCategoryBySimpleClassName(categorySimpleClassName, _object.getCategoryClass());\n                    if (ancestorCategory == null)\n                    {\n                        return null;"
            },
            {
              "step": 78,
              "variableName": "String targetCategorySimpleClassName",
              "startLine": 147,
              "startColumn": 85,
              "endLine": 147,
              "endColumn": 121,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "String",
              "code": "        }\n    }\n\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {"
            },
            {
              "step": 79,
              "variableName": "targetCategorySimpleClassName",
              "startLine": 149,
              "startColumn": 13,
              "endLine": 149,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AncestorAttributeResolver.java",
              "type": "",
              "code": "\n    private Class<? extends ConfiguredObject> findAncestorCategoryBySimpleClassName(String targetCategorySimpleClassName, Class<? extends ConfiguredObject> objectCategory)\n    {\n        if (targetCategorySimpleClassName.equals(objectCategory.getSimpleName().toLowerCase()))\n        {\n            return objectCategory;\n        }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "AttributeValueConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 6,
              "variableName": "storedPassword",
              "startLine": 96,
              "startColumn": 42,
              "endLine": 96,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 10,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 11,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 12,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 13,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 14,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 15,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 16,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 17,
              "variableName": "desired",
              "startLine": 1852,
              "startColumn": 45,
              "endLine": 1852,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 476,
              "startColumn": 55,
              "endLine": 476,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 486,
              "startColumn": 53,
              "endLine": 486,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                value = attribute.defaultValue();\n            }\n            ConfiguredObjectTypeRegistry.AutomatedField field = _automatedFields.get(name);\n            Object desiredValue = attribute.convert(value, this);\n            field.set(this, desiredValue);\n        }\n        catch (IllegalAccessException e)"
            },
            {
              "step": 20,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 21,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 22,
              "variableName": "final Object value",
              "startLine": 412,
              "startColumn": 29,
              "endLine": 412,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    static final AttributeValueConverter<List> LIST_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        public List convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof List)\n            {"
            },
            {
              "step": 23,
              "variableName": "(String) value",
              "startLine": 424,
              "startColumn": 69,
              "endLine": 424,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return Collections.unmodifiableList(convertFromJson((String) value, object, List.class));\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 24,
              "variableName": "final String value",
              "startLine": 614,
              "startColumn": 42,
              "endLine": 614,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n    };\n\n    private static <T> T convertFromJson(final String value, final ConfiguredObject object, final Class<T> valueType)\n    {\n        String interpolated = AbstractConfiguredObject.interpolate(object, value);\n        ObjectMapper objectMapper = new ObjectMapper();"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 626,
              "startColumn": 22,
              "endLine": 626,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "        {\n            throw new IllegalArgumentException(\"Cannot convert String '\"\n                  + value + \"'\"\n                  + (value.equals(interpolated)\n                               ? \"\" : (\" (interpolated to '\" + interpolated + \"')\"))\n                                       + \" to a \" + valueType.getSimpleName());\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 171,
              "startColumn": 42,
              "endLine": 171,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "\n                final byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n\n                final byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 176,
              "startColumn": 72,
              "endLine": 176,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 176,
              "startColumn": 37,
              "endLine": 176,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 4,
              "variableName": "password",
              "startLine": 178,
              "startColumn": 43,
              "endLine": 178,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }\n            catch (NoSuchAlgorithmException e)\n            {"
            },
            {
              "step": 5,
              "variableName": "final String password",
              "startLine": 204,
              "startColumn": 62,
              "endLine": 204,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void upgradeUserPassword(final ManagedUser user, final String password)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "password",
              "startLine": 209,
              "startColumn": 30,
              "endLine": 209,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        try\n        {\n            _doNotCreateStoredPasswordBecauseItIsBeingUpgraded = true;\n            user.setPassword(password);\n        }\n        finally\n        {"
            },
            {
              "step": 7,
              "variableName": "final String password",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }"
            },
            {
              "step": 8,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 12,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 14,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 15,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 16,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 17,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 18,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 20,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 21,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 22,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 23,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 24,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 25,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 27,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 28,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 29,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 30,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 31,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 32,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 33,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 34,
              "variableName": "desired",
              "startLine": 1849,
              "startColumn": 39,
              "endLine": 1849,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 35,
              "variableName": "_attributes",
              "startLine": 1849,
              "startColumn": 17,
              "endLine": 1849,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 36,
              "variableName": "_attributes",
              "startLine": 1849,
              "startColumn": 17,
              "endLine": 1849,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 37,
              "variableName": "changeAttribute(attributeName, desired)",
              "startLine": 3049,
              "startColumn": 25,
              "endLine": 3049,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 38,
              "variableName": "getAttribute(attributeName)",
              "startLine": 3048,
              "startColumn": 39,
              "endLine": 3048,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);"
            },
            {
              "step": 39,
              "variableName": "getAttribute",
              "startLine": 1787,
              "startColumn": 25,
              "endLine": 1787,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final Object getAttribute(String name)\n    {\n        ConfiguredObjectAttribute<X,?> attr = (ConfiguredObjectAttribute<X, ?>) _attributeTypes.get(name);\n        if(attr != null)"
            },
            {
              "step": 40,
              "variableName": "(X)this",
              "startLine": 1792,
              "startColumn": 42,
              "endLine": 1792,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "        ConfiguredObjectAttribute<X,?> attr = (ConfiguredObjectAttribute<X, ?>) _attributeTypes.get(name);\n        if(attr != null)\n        {\n            Object value = attr.getValue((X)this);\n            if(value != null && !isSystemProcess() && attr.isSecureValue(value))\n            {\n                return SECURE_VALUES.get(value.getClass());"
            },
            {
              "step": 41,
              "variableName": "final C configuredObject",
              "startLine": 282,
              "startColumn": 29,
              "endLine": 282,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)"
            },
            {
              "step": 42,
              "variableName": "configuredObject",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 43,
              "variableName": "getActualAttributes",
              "startLine": 1821,
              "startColumn": 38,
              "endLine": 1821,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final Map<String, Object> getActualAttributes()\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 44,
              "variableName": "_attributes",
              "startLine": 1825,
              "startColumn": 34,
              "endLine": 1825,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 45,
              "variableName": "_attributes",
              "startLine": 1825,
              "startColumn": 34,
              "endLine": 1825,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 46,
              "variableName": "new HashMap<>(_attributes)",
              "startLine": 1825,
              "startColumn": 20,
              "endLine": 1825,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 47,
              "variableName": "configuredObject.getActualAttributes()",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 48,
              "variableName": "configuredObject.getActualAttributes().get(getName())",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 49,
              "variableName": "value",
              "startLine": 289,
              "startColumn": 24,
              "endLine": 289,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "        {\n            value = defaultValue();\n        }\n        return convert(value, configuredObject);\n    }\n\n    @Override"
            },
            {
              "step": 50,
              "variableName": "final Object value",
              "startLine": 293,
              "startColumn": 28,
              "endLine": 293,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public final T convert(final Object value, final C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 51,
              "variableName": "value",
              "startLine": 298,
              "startColumn": 38,
              "endLine": 298,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 52,
              "variableName": "final Object value",
              "startLine": 440,
              "startColumn": 28,
              "endLine": 440,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    static final AttributeValueConverter<Set> SET_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        public Set convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof Set)\n            {"
            },
            {
              "step": 53,
              "variableName": "(String) value",
              "startLine": 453,
              "startColumn": 68,
              "endLine": 453,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return Collections.unmodifiableSet(convertFromJson((String) value, object, Set.class));\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 54,
              "variableName": "final String value",
              "startLine": 614,
              "startColumn": 42,
              "endLine": 614,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n    };\n\n    private static <T> T convertFromJson(final String value, final ConfiguredObject object, final Class<T> valueType)\n    {\n        String interpolated = AbstractConfiguredObject.interpolate(object, value);\n        ObjectMapper objectMapper = new ObjectMapper();"
            },
            {
              "step": 55,
              "variableName": "value",
              "startLine": 626,
              "startColumn": 22,
              "endLine": 626,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "        {\n            throw new IllegalArgumentException(\"Cannot convert String '\"\n                  + value + \"'\"\n                  + (value.equals(interpolated)\n                               ? \"\" : (\" (interpolated to '\" + interpolated + \"')\"))\n                                       + \" to a \" + valueType.getSimpleName());\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2052,
              "startColumn": 78,
              "endLine": 2052,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                             Map<String, Object> attributes)\n    {\n        return getObjectFactory().createAsync(childClass, attributes, this);\n    }"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 2054,
              "startColumn": 59,
              "endLine": 2054,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                             Map<String, Object> attributes)\n    {\n        return getObjectFactory().createAsync(childClass, attributes, this);\n    }\n\n    private <C extends ConfiguredObject> void registerChild(final C child)"
            },
            {
              "step": 43,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 139,
              "startColumn": 53,
              "endLine": 139,
              "endColumn": 89,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <X extends ConfiguredObject<X>> ListenableFuture<X> createAsync(Class<X> clazz,\n                                                    final Map<String, Object> attributes,\n                                                    final ConfiguredObject<?> parent)\n    {\n        ConfiguredObjectTypeFactory<X> factory = getConfiguredObjectTypeFactory(clazz, attributes, parent);"
            },
            {
              "step": 44,
              "variableName": "attributes",
              "startLine": 144,
              "startColumn": 42,
              "endLine": 144,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        ConfiguredObjectTypeFactory<X> factory = getConfiguredObjectTypeFactory(clazz, attributes, parent);\n\n        return factory.createAsync(this, attributes, parent);\n    }\n\n    private <X extends ConfiguredObject<X>> ConfiguredObjectTypeFactory<X> getConfiguredObjectTypeFactory(final Class<X> categoryClass,"
            },
            {
              "step": 45,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 116,
              "startColumn": 44,
              "endLine": 116,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public ListenableFuture<X> createAsync(final ConfiguredObjectFactory factory,\n                                           final Map<String, Object> attributes,\n                                           final ConfiguredObject<?> parent)\n    {\n        return getPortFactory(factory, attributes, (Broker<?>) parent).createAsync(factory, attributes, parent);"
            },
            {
              "step": 46,
              "variableName": "attributes",
              "startLine": 119,
              "startColumn": 40,
              "endLine": 119,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "                                           final Map<String, Object> attributes,\n                                           final ConfiguredObject<?> parent)\n    {\n        return getPortFactory(factory, attributes, (Broker<?>) parent).createAsync(factory, attributes, parent);\n    }\n\n    @Override"
            },
            {
              "step": 47,
              "variableName": "Map<String, Object> attributes",
              "startLine": 131,
              "startColumn": 58,
              "endLine": 131,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    public ConfiguredObjectTypeFactory<X> getPortFactory(final ConfiguredObjectFactory factory,\n                                                         Map<String, Object> attributes,\n                                                         Broker<?> broker)\n    {\n        String type;"
            },
            {
              "step": 48,
              "variableName": "attributes",
              "startLine": 142,
              "startColumn": 36,
              "endLine": 142,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else\n        {\n            type = getProtocolType(attributes, broker).name();\n        }\n\n        return factory.getConfiguredObjectTypeFactory(Port.class.getSimpleName(), type);"
            },
            {
              "step": 49,
              "variableName": "Map<String, Object> portAttributes",
              "startLine": 61,
              "startColumn": 42,
              "endLine": 61,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n    }\n\n    private ProtocolType getProtocolType(Map<String, Object> portAttributes, Broker<?> broker)\n    {\n        Model model = broker.getModel();\n        ConfiguredObjectTypeRegistry typeRegistry = model.getTypeRegistry();"
            },
            {
              "step": 50,
              "variableName": "portAttributes",
              "startLine": 69,
              "startColumn": 78,
              "endLine": 69,
              "endColumn": 92,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "                typeRegistry.getAttributeTypes(Port.class);\n        ConfiguredSettableAttribute protocolsAttribute =\n                (ConfiguredSettableAttribute) attributeTypes.get(Port.PROTOCOLS);\n        Set<Protocol> protocols = (Set<Protocol>) protocolsAttribute.convert(portAttributes.get(Port.PROTOCOLS),broker);\n        ProtocolType protocolType = null;\n\n        if(protocols == null || protocols.isEmpty())"
            },
            {
              "step": 51,
              "variableName": "portAttributes.get(Port.PROTOCOLS)",
              "startLine": 69,
              "startColumn": 78,
              "endLine": 69,
              "endColumn": 112,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "String",
              "code": "                typeRegistry.getAttributeTypes(Port.class);\n        ConfiguredSettableAttribute protocolsAttribute =\n                (ConfiguredSettableAttribute) attributeTypes.get(Port.PROTOCOLS);\n        Set<Protocol> protocols = (Set<Protocol>) protocolsAttribute.convert(portAttributes.get(Port.PROTOCOLS),broker);\n        ProtocolType protocolType = null;\n\n        if(protocols == null || protocols.isEmpty())"
            },
            {
              "step": 52,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 53,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 54,
              "variableName": "final Object value",
              "startLine": 469,
              "startColumn": 35,
              "endLine": 469,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            COLLECTION_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        public Collection convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof Collection)\n            {"
            },
            {
              "step": 55,
              "variableName": "(String) value",
              "startLine": 481,
              "startColumn": 75,
              "endLine": 481,
              "endColumn": 89,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return Collections.unmodifiableCollection(convertFromJson((String) value, object, Collection.class));\n            }\n            else if (value == null)\n            {"
            },
            {
              "step": 56,
              "variableName": "final String value",
              "startLine": 614,
              "startColumn": 42,
              "endLine": 614,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n    };\n\n    private static <T> T convertFromJson(final String value, final ConfiguredObject object, final Class<T> valueType)\n    {\n        String interpolated = AbstractConfiguredObject.interpolate(object, value);\n        ObjectMapper objectMapper = new ObjectMapper();"
            },
            {
              "step": 57,
              "variableName": "value",
              "startLine": 626,
              "startColumn": 22,
              "endLine": 626,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "        {\n            throw new IllegalArgumentException(\"Cannot convert String '\"\n                  + value + \"'\"\n                  + (value.equals(interpolated)\n                               ? \"\" : (\" (interpolated to '\" + interpolated + \"')\"))\n                                       + \" to a \" + valueType.getSimpleName());\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 6,
              "variableName": "storedPassword",
              "startLine": 96,
              "startColumn": 42,
              "endLine": 96,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 10,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 11,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 12,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 13,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 14,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 15,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 16,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 17,
              "variableName": "desired",
              "startLine": 1852,
              "startColumn": 45,
              "endLine": 1852,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 476,
              "startColumn": 55,
              "endLine": 476,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 486,
              "startColumn": 53,
              "endLine": 486,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                value = attribute.defaultValue();\n            }\n            ConfiguredObjectTypeRegistry.AutomatedField field = _automatedFields.get(name);\n            Object desiredValue = attribute.convert(value, this);\n            field.set(this, desiredValue);\n        }\n        catch (IllegalAccessException e)"
            },
            {
              "step": 20,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 21,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 22,
              "variableName": "final Object value",
              "startLine": 497,
              "startColumn": 28,
              "endLine": 497,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "    static final AttributeValueConverter<Map> MAP_CONVERTER = new AttributeValueConverter<>()\n    {\n        @Override\n        public Map convert(final Object value, final ConfiguredObject object)\n        {\n            if (value instanceof Map)\n            {"
            },
            {
              "step": 23,
              "variableName": "(String) value",
              "startLine": 522,
              "startColumn": 68,
              "endLine": 522,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if (value instanceof String)\n            {\n                return Collections.unmodifiableMap(convertFromJson((String) value, object, Map.class));\n            }\n            else\n            {"
            },
            {
              "step": 24,
              "variableName": "final String value",
              "startLine": 614,
              "startColumn": 42,
              "endLine": 614,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n    };\n\n    private static <T> T convertFromJson(final String value, final ConfiguredObject object, final Class<T> valueType)\n    {\n        String interpolated = AbstractConfiguredObject.interpolate(object, value);\n        ObjectMapper objectMapper = new ObjectMapper();"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 626,
              "startColumn": 22,
              "endLine": 626,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "        {\n            throw new IllegalArgumentException(\"Cannot convert String '\"\n                  + value + \"'\"\n                  + (value.equals(interpolated)\n                               ? \"\" : (\" (interpolated to '\" + interpolated + \"')\"))\n                                       + \" to a \" + valueType.getSimpleName());\n        }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "AttributeValueConverter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 6,
              "variableName": "storedPassword",
              "startLine": 96,
              "startColumn": 42,
              "endLine": 96,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 10,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 11,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 12,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 13,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 14,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 15,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 16,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 17,
              "variableName": "desired",
              "startLine": 1852,
              "startColumn": 45,
              "endLine": 1852,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 476,
              "startColumn": 55,
              "endLine": 476,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 486,
              "startColumn": 53,
              "endLine": 486,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                value = attribute.defaultValue();\n            }\n            ConfiguredObjectTypeRegistry.AutomatedField field = _automatedFields.get(name);\n            Object desiredValue = attribute.convert(value, this);\n            field.set(this, desiredValue);\n        }\n        catch (IllegalAccessException e)"
            },
            {
              "step": 20,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 21,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 22,
              "variableName": "final Object value",
              "startLine": 1086,
              "startColumn": 26,
              "endLine": 1086,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public X convert(final Object value, final ConfiguredObject object)\n        {\n            if(value == null)\n            {"
            },
            {
              "step": 23,
              "variableName": "(String) value",
              "startLine": 1110,
              "startColumn": 80,
              "endLine": 1110,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 24,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 25,
              "variableName": "value",
              "startLine": 3673,
              "startColumn": 20,
              "endLine": 3673,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "    {\n        if(object == null)\n        {\n            return value;\n        }\n        else\n        {"
            },
            {
              "step": 26,
              "variableName": "AbstractConfiguredObject.interpolate(object, (String) value)",
              "startLine": 1110,
              "startColumn": 35,
              "endLine": 1110,
              "endColumn": 95,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 27,
              "variableName": "valueStr",
              "startLine": 1114,
              "startColumn": 51,
              "endLine": 1114,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {\n                    if(candidate.getName().equals(valueStr))\n                    {\n                        return candidate;\n                    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 171,
              "startColumn": 42,
              "endLine": 171,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "\n                final byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n\n                final byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 176,
              "startColumn": 72,
              "endLine": 176,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 176,
              "startColumn": 37,
              "endLine": 176,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 4,
              "variableName": "password",
              "startLine": 178,
              "startColumn": 43,
              "endLine": 178,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }\n            catch (NoSuchAlgorithmException e)\n            {"
            },
            {
              "step": 5,
              "variableName": "final String password",
              "startLine": 204,
              "startColumn": 62,
              "endLine": 204,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void upgradeUserPassword(final ManagedUser user, final String password)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "password",
              "startLine": 209,
              "startColumn": 30,
              "endLine": 209,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        try\n        {\n            _doNotCreateStoredPasswordBecauseItIsBeingUpgraded = true;\n            user.setPassword(password);\n        }\n        finally\n        {"
            },
            {
              "step": 7,
              "variableName": "final String password",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }"
            },
            {
              "step": 8,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 12,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 14,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 15,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 16,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 17,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 18,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 20,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 21,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 22,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 23,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 24,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 25,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 27,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 28,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 29,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 30,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 31,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 32,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 33,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 34,
              "variableName": "desired",
              "startLine": 1849,
              "startColumn": 39,
              "endLine": 1849,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 35,
              "variableName": "_attributes",
              "startLine": 1849,
              "startColumn": 17,
              "endLine": 1849,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 36,
              "variableName": "_attributes",
              "startLine": 1849,
              "startColumn": 17,
              "endLine": 1849,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "               ((actualValue != null && !actualValue.equals(desired)) || (actualValue == null && desired != null)))\n            {\n                //TODO: don't put nulls\n                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);"
            },
            {
              "step": 37,
              "variableName": "changeAttribute(attributeName, desired)",
              "startLine": 3049,
              "startColumn": 25,
              "endLine": 3049,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 38,
              "variableName": "getAttribute(attributeName)",
              "startLine": 3048,
              "startColumn": 39,
              "endLine": 3048,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);"
            },
            {
              "step": 39,
              "variableName": "getAttribute",
              "startLine": 1787,
              "startColumn": 25,
              "endLine": 1787,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final Object getAttribute(String name)\n    {\n        ConfiguredObjectAttribute<X,?> attr = (ConfiguredObjectAttribute<X, ?>) _attributeTypes.get(name);\n        if(attr != null)"
            },
            {
              "step": 40,
              "variableName": "(X)this",
              "startLine": 1792,
              "startColumn": 42,
              "endLine": 1792,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "        ConfiguredObjectAttribute<X,?> attr = (ConfiguredObjectAttribute<X, ?>) _attributeTypes.get(name);\n        if(attr != null)\n        {\n            Object value = attr.getValue((X)this);\n            if(value != null && !isSystemProcess() && attr.isSecureValue(value))\n            {\n                return SECURE_VALUES.get(value.getClass());"
            },
            {
              "step": 41,
              "variableName": "final C configuredObject",
              "startLine": 282,
              "startColumn": 29,
              "endLine": 282,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)"
            },
            {
              "step": 42,
              "variableName": "configuredObject",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 43,
              "variableName": "getActualAttributes",
              "startLine": 1821,
              "startColumn": 38,
              "endLine": 1821,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public final Map<String, Object> getActualAttributes()\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 44,
              "variableName": "_attributes",
              "startLine": 1825,
              "startColumn": 34,
              "endLine": 1825,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "AbstractConfiguredObject [_attributes, <map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 45,
              "variableName": "_attributes",
              "startLine": 1825,
              "startColumn": 34,
              "endLine": 1825,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 46,
              "variableName": "new HashMap<>(_attributes)",
              "startLine": 1825,
              "startColumn": 20,
              "endLine": 1825,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        synchronized (_attributes)\n        {\n            return new HashMap<>(_attributes);\n        }\n    }\n"
            },
            {
              "step": 47,
              "variableName": "configuredObject.getActualAttributes()",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 48,
              "variableName": "configuredObject.getActualAttributes().get(getName())",
              "startLine": 284,
              "startColumn": 24,
              "endLine": 284,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "    @Override\n    public final T getValue(final C configuredObject)\n    {\n        Object value = configuredObject.getActualAttributes().get(getName());\n        if(value == null)\n        {\n            value = defaultValue();"
            },
            {
              "step": 49,
              "variableName": "value",
              "startLine": 289,
              "startColumn": 24,
              "endLine": 289,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "        {\n            value = defaultValue();\n        }\n        return convert(value, configuredObject);\n    }\n\n    @Override"
            },
            {
              "step": 50,
              "variableName": "final Object value",
              "startLine": 293,
              "startColumn": 28,
              "endLine": 293,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public final T convert(final Object value, final C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 51,
              "variableName": "value",
              "startLine": 298,
              "startColumn": 38,
              "endLine": 298,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredSettableInjectedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 52,
              "variableName": "final Object value",
              "startLine": 1086,
              "startColumn": 26,
              "endLine": 1086,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public X convert(final Object value, final ConfiguredObject object)\n        {\n            if(value == null)\n            {"
            },
            {
              "step": 53,
              "variableName": "(String) value",
              "startLine": 1110,
              "startColumn": 80,
              "endLine": 1110,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 54,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 55,
              "variableName": "value",
              "startLine": 3673,
              "startColumn": 20,
              "endLine": 3673,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "    {\n        if(object == null)\n        {\n            return value;\n        }\n        else\n        {"
            },
            {
              "step": 56,
              "variableName": "AbstractConfiguredObject.interpolate(object, (String) value)",
              "startLine": 1110,
              "startColumn": 35,
              "endLine": 1110,
              "endColumn": 95,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 57,
              "variableName": "valueStr",
              "startLine": 1114,
              "startColumn": 51,
              "endLine": 1114,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {\n                    if(candidate.getName().equals(valueStr))\n                    {\n                        return candidate;\n                    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2052,
              "startColumn": 78,
              "endLine": 2052,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                             Map<String, Object> attributes)\n    {\n        return getObjectFactory().createAsync(childClass, attributes, this);\n    }"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 2054,
              "startColumn": 59,
              "endLine": 2054,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                             Map<String, Object> attributes)\n    {\n        return getObjectFactory().createAsync(childClass, attributes, this);\n    }\n\n    private <C extends ConfiguredObject> void registerChild(final C child)"
            },
            {
              "step": 43,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 139,
              "startColumn": 53,
              "endLine": 139,
              "endColumn": 89,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <X extends ConfiguredObject<X>> ListenableFuture<X> createAsync(Class<X> clazz,\n                                                    final Map<String, Object> attributes,\n                                                    final ConfiguredObject<?> parent)\n    {\n        ConfiguredObjectTypeFactory<X> factory = getConfiguredObjectTypeFactory(clazz, attributes, parent);"
            },
            {
              "step": 44,
              "variableName": "attributes",
              "startLine": 144,
              "startColumn": 42,
              "endLine": 144,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        ConfiguredObjectTypeFactory<X> factory = getConfiguredObjectTypeFactory(clazz, attributes, parent);\n\n        return factory.createAsync(this, attributes, parent);\n    }\n\n    private <X extends ConfiguredObject<X>> ConfiguredObjectTypeFactory<X> getConfiguredObjectTypeFactory(final Class<X> categoryClass,"
            },
            {
              "step": 45,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 116,
              "startColumn": 44,
              "endLine": 116,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public ListenableFuture<X> createAsync(final ConfiguredObjectFactory factory,\n                                           final Map<String, Object> attributes,\n                                           final ConfiguredObject<?> parent)\n    {\n        return getPortFactory(factory, attributes, (Broker<?>) parent).createAsync(factory, attributes, parent);"
            },
            {
              "step": 46,
              "variableName": "attributes",
              "startLine": 119,
              "startColumn": 40,
              "endLine": 119,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "                                           final Map<String, Object> attributes,\n                                           final ConfiguredObject<?> parent)\n    {\n        return getPortFactory(factory, attributes, (Broker<?>) parent).createAsync(factory, attributes, parent);\n    }\n\n    @Override"
            },
            {
              "step": 47,
              "variableName": "Map<String, Object> attributes",
              "startLine": 131,
              "startColumn": 58,
              "endLine": 131,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    public ConfiguredObjectTypeFactory<X> getPortFactory(final ConfiguredObjectFactory factory,\n                                                         Map<String, Object> attributes,\n                                                         Broker<?> broker)\n    {\n        String type;"
            },
            {
              "step": 48,
              "variableName": "attributes",
              "startLine": 142,
              "startColumn": 36,
              "endLine": 142,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else\n        {\n            type = getProtocolType(attributes, broker).name();\n        }\n\n        return factory.getConfiguredObjectTypeFactory(Port.class.getSimpleName(), type);"
            },
            {
              "step": 49,
              "variableName": "Map<String, Object> portAttributes",
              "startLine": 61,
              "startColumn": 42,
              "endLine": 61,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n    }\n\n    private ProtocolType getProtocolType(Map<String, Object> portAttributes, Broker<?> broker)\n    {\n        Model model = broker.getModel();\n        ConfiguredObjectTypeRegistry typeRegistry = model.getTypeRegistry();"
            },
            {
              "step": 50,
              "variableName": "portAttributes",
              "startLine": 69,
              "startColumn": 78,
              "endLine": 69,
              "endColumn": 92,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "Map [<map.value>] : String",
              "code": "                typeRegistry.getAttributeTypes(Port.class);\n        ConfiguredSettableAttribute protocolsAttribute =\n                (ConfiguredSettableAttribute) attributeTypes.get(Port.PROTOCOLS);\n        Set<Protocol> protocols = (Set<Protocol>) protocolsAttribute.convert(portAttributes.get(Port.PROTOCOLS),broker);\n        ProtocolType protocolType = null;\n\n        if(protocols == null || protocols.isEmpty())"
            },
            {
              "step": 51,
              "variableName": "portAttributes.get(Port.PROTOCOLS)",
              "startLine": 69,
              "startColumn": 78,
              "endLine": 69,
              "endColumn": 112,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/port/PortFactory.java",
              "type": "String",
              "code": "                typeRegistry.getAttributeTypes(Port.class);\n        ConfiguredSettableAttribute protocolsAttribute =\n                (ConfiguredSettableAttribute) attributeTypes.get(Port.PROTOCOLS);\n        Set<Protocol> protocols = (Set<Protocol>) protocolsAttribute.convert(portAttributes.get(Port.PROTOCOLS),broker);\n        ProtocolType protocolType = null;\n\n        if(protocols == null || protocols.isEmpty())"
            },
            {
              "step": 52,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 53,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 54,
              "variableName": "final Object value",
              "startLine": 846,
              "startColumn": 29,
              "endLine": 846,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public List convert(final Object value, final ConfiguredObject object)\n        {\n            if(value instanceof Collection)\n            {"
            },
            {
              "step": 55,
              "variableName": "value",
              "startLine": 881,
              "startColumn": 88,
              "endLine": 881,
              "endColumn": 93,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "                        // fall through to the non-JSON single object case\n                    }\n                }\n                return \"\".equals(value) ? List.of() : List.of(_memberConverter.convert(value, object));\n            }\n        }\n    }"
            },
            {
              "step": 56,
              "variableName": "final Object value",
              "startLine": 1086,
              "startColumn": 26,
              "endLine": 1086,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public X convert(final Object value, final ConfiguredObject object)\n        {\n            if(value == null)\n            {"
            },
            {
              "step": 57,
              "variableName": "(String) value",
              "startLine": 1110,
              "startColumn": 80,
              "endLine": 1110,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 58,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 59,
              "variableName": "value",
              "startLine": 3673,
              "startColumn": 20,
              "endLine": 3673,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "    {\n        if(object == null)\n        {\n            return value;\n        }\n        else\n        {"
            },
            {
              "step": 60,
              "variableName": "AbstractConfiguredObject.interpolate(object, (String) value)",
              "startLine": 1110,
              "startColumn": 35,
              "endLine": 1110,
              "endColumn": 95,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 61,
              "variableName": "valueStr",
              "startLine": 1114,
              "startColumn": 51,
              "endLine": 1114,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {\n                    if(candidate.getName().equals(valueStr))\n                    {\n                        return candidate;\n                    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 6,
              "variableName": "storedPassword",
              "startLine": 96,
              "startColumn": 42,
              "endLine": 96,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 10,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 11,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 12,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 13,
              "variableName": "entry",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.value>] : String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 14,
              "variableName": "entry.getValue()",
              "startLine": 3047,
              "startColumn": 38,
              "endLine": 3047,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {"
            },
            {
              "step": 15,
              "variableName": "desired",
              "startLine": 3049,
              "startColumn": 56,
              "endLine": 3049,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 16,
              "variableName": "final Object desired",
              "startLine": 1837,
              "startColumn": 56,
              "endLine": 1837,
              "endColumn": 76,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 17,
              "variableName": "desired",
              "startLine": 1852,
              "startColumn": 45,
              "endLine": 1852,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 18,
              "variableName": "Object value",
              "startLine": 476,
              "startColumn": 55,
              "endLine": 476,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 19,
              "variableName": "value",
              "startLine": 486,
              "startColumn": 53,
              "endLine": 486,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                value = attribute.defaultValue();\n            }\n            ConfiguredObjectTypeRegistry.AutomatedField field = _automatedFields.get(name);\n            Object desiredValue = attribute.convert(value, this);\n            field.set(this, desiredValue);\n        }\n        catch (IllegalAccessException e)"
            },
            {
              "step": 20,
              "variableName": "final Object value",
              "startLine": 246,
              "startColumn": 22,
              "endLine": 246,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "\n\n    @Override\n    public T convert(final Object value, C object)\n    {\n        final AttributeValueConverter<T> converter = getConverter();\n        try"
            },
            {
              "step": 21,
              "variableName": "value",
              "startLine": 251,
              "startColumn": 38,
              "endLine": 251,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredAutomatedAttribute.java",
              "type": "String",
              "code": "        final AttributeValueConverter<T> converter = getConverter();\n        try\n        {\n            return converter.convert(value, object);\n        }\n        catch (IllegalArgumentException iae)\n        {"
            },
            {
              "step": 22,
              "variableName": "final Object value",
              "startLine": 897,
              "startColumn": 28,
              "endLine": 897,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public Set convert(final Object value, final ConfiguredObject object)\n        {\n            if(value instanceof Collection)\n            {"
            },
            {
              "step": 23,
              "variableName": "value",
              "startLine": 932,
              "startColumn": 99,
              "endLine": 932,
              "endColumn": 104,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "                        // fall through to the non-JSON single object case\n                    }\n                }\n                return Collections.unmodifiableSet(Collections.singleton(_memberConverter.convert(value, object)));\n            }\n        }\n    }"
            },
            {
              "step": 24,
              "variableName": "final Object value",
              "startLine": 1086,
              "startColumn": 26,
              "endLine": 1086,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "        }\n\n        @Override\n        public X convert(final Object value, final ConfiguredObject object)\n        {\n            if(value == null)\n            {"
            },
            {
              "step": 25,
              "variableName": "(String) value",
              "startLine": 1110,
              "startColumn": 80,
              "endLine": 1110,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 26,
              "variableName": "String value",
              "startLine": 3669,
              "startColumn": 59,
              "endLine": 3669,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    //=========================================================================================\n\n    static String interpolate(ConfiguredObject<?> object, String value)\n    {\n        if(object == null)\n        {"
            },
            {
              "step": 27,
              "variableName": "value",
              "startLine": 3673,
              "startColumn": 20,
              "endLine": 3673,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "    {\n        if(object == null)\n        {\n            return value;\n        }\n        else\n        {"
            },
            {
              "step": 28,
              "variableName": "AbstractConfiguredObject.interpolate(object, (String) value)",
              "startLine": 1110,
              "startColumn": 35,
              "endLine": 1110,
              "endColumn": 95,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "String",
              "code": "            }\n            else if(value instanceof String)\n            {\n                String valueStr = AbstractConfiguredObject.interpolate(object, (String) value);\n                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {"
            },
            {
              "step": 29,
              "variableName": "valueStr",
              "startLine": 1114,
              "startColumn": 51,
              "endLine": 1114,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java",
              "type": "",
              "code": "                Collection<X> reachable = object.getModel().getReachableObjects(object, _klazz);\n                for(X candidate : reachable)\n                {\n                    if(candidate.getName().equals(valueStr))\n                    {\n                        return candidate;\n                    }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "AbstractScramAuthenticationManager.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 131,
              "startColumn": 36,
              "endLine": 131,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "\n                byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n\n                byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n                if(Arrays.equals(saltAndPasswordKeys.getStoredKey(), storedKey)\n                   && Arrays.equals(saltAndPasswordKeys.getServerKey(), serverKey))"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 134,
              "startColumn": 73,
              "endLine": 134,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "",
              "code": "                byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n                if(Arrays.equals(saltAndPasswordKeys.getStoredKey(), storedKey)\n                   && Arrays.equals(saltAndPasswordKeys.getServerKey(), serverKey))\n                {\n                    return new AuthenticationResult(new UsernamePrincipal(username, this));\n                }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "ManagedUser.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 6,
              "variableName": "storedPassword",
              "startLine": 93,
              "startColumn": 18,
              "endLine": 93,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "",
              "code": "        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 171,
              "startColumn": 42,
              "endLine": 171,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "\n                final byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n\n                final byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 176,
              "startColumn": 72,
              "endLine": 176,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 176,
              "startColumn": 37,
              "endLine": 176,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                final String password = passwordFields[PasswordField.SALT.ordinal()] + \",\"\n                                  + \",\" // remove previously insecure salted password field\n                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }"
            },
            {
              "step": 4,
              "variableName": "password",
              "startLine": 178,
              "startColumn": 43,
              "endLine": 178,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "                                  + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                                  + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                                  + oldDefaultIterationCount;\n                upgradeUserPassword(user, password);\n            }\n            catch (NoSuchAlgorithmException e)\n            {"
            },
            {
              "step": 5,
              "variableName": "final String password",
              "startLine": 204,
              "startColumn": 62,
              "endLine": 204,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void upgradeUserPassword(final ManagedUser user, final String password)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "password",
              "startLine": 209,
              "startColumn": 30,
              "endLine": 209,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "        try\n        {\n            _doNotCreateStoredPasswordBecauseItIsBeingUpgraded = true;\n            user.setPassword(password);\n        }\n        finally\n        {"
            },
            {
              "step": 7,
              "variableName": "final String password",
              "startLine": 109,
              "startColumn": 29,
              "endLine": 109,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }"
            },
            {
              "step": 8,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 10,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 11,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 12,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 14,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 15,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 16,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 17,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 18,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 20,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 21,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 22,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 23,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 24,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 25,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 26,
              "variableName": "Map<String, Object> attributes",
              "startLine": 87,
              "startColumn": 37,
              "endLine": 87,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    }\n\n    @Override\n    protected void changeAttributes(Map<String, Object> attributes)\n    {\n        if(attributes.containsKey(PASSWORD))\n        {"
            },
            {
              "step": 27,
              "variableName": "attributes",
              "startLine": 91,
              "startColumn": 47,
              "endLine": 91,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {"
            },
            {
              "step": 28,
              "variableName": "attributes.get(PASSWORD)",
              "startLine": 91,
              "startColumn": 47,
              "endLine": 91,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    {\n        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {"
            },
            {
              "step": 29,
              "variableName": "(String) attributes.get(PASSWORD)",
              "startLine": 91,
              "startColumn": 38,
              "endLine": 91,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    {\n        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {"
            },
            {
              "step": 30,
              "variableName": "desiredPassword",
              "startLine": 92,
              "startColumn": 81,
              "endLine": 92,
              "endColumn": 96,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 31,
              "variableName": "final String password",
              "startLine": 263,
              "startColumn": 43,
              "endLine": 263,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    protected String createStoredPassword(final String password)\n    {\n        if (_doNotCreateStoredPasswordBecauseItIsBeingUpgraded)\n        {"
            },
            {
              "step": 32,
              "variableName": "password",
              "startLine": 267,
              "startColumn": 20,
              "endLine": 267,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "    {\n        if (_doNotCreateStoredPasswordBecauseItIsBeingUpgraded)\n        {\n            return password;\n        }\n\n        try"
            },
            {
              "step": 33,
              "variableName": "_authenticationManager.createStoredPassword(desiredPassword)",
              "startLine": 92,
              "startColumn": 37,
              "endLine": 92,
              "endColumn": 97,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "        if(attributes.containsKey(PASSWORD))\n        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);"
            },
            {
              "step": 34,
              "variableName": "storedPassword",
              "startLine": 93,
              "startColumn": 18,
              "endLine": 93,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "",
              "code": "        {\n            String desiredPassword = (String) attributes.get(PASSWORD);\n            String storedPassword = _authenticationManager.createStoredPassword(desiredPassword);\n            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "FileGroupDatabase.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 46,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 47,
              "variableName": "group",
              "startLine": 191,
              "startColumn": 21,
              "endLine": 191,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);"
            },
            {
              "step": 48,
              "variableName": "final String searchString",
              "startLine": 203,
              "startColumn": 28,
              "endLine": 203,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean exists(final String searchString, final Set<String> set)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 49,
              "variableName": "searchString",
              "startLine": 209,
              "startColumn": 42,
              "endLine": 209,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(searchString))\n                {\n                    return true;\n                }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2910,
              "startColumn": 67,
              "endLine": 2910,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Queue>)clazz, attributes);\n        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2910,
              "startColumn": 67,
              "endLine": 2910,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Queue>)clazz, attributes);\n        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> userTask",
              "startLine": 151,
              "startColumn": 64,
              "endLine": 151,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }"
            },
            {
              "step": 32,
              "variableName": "userTask",
              "startLine": 153,
              "startColumn": 59,
              "endLine": 153,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E"
            },
            {
              "step": 33,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 35,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 36,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 153,
              "startColumn": 34,
              "endLine": 153,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E"
            },
            {
              "step": 37,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 38,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 39,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 40,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 41,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 42,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 43,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 44,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 45,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 46,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 47,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 48,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 49,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 50,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 51,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 52,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 53,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 54,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 55,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 56,
              "variableName": "group",
              "startLine": 191,
              "startColumn": 21,
              "endLine": 191,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);"
            },
            {
              "step": 57,
              "variableName": "final String searchString",
              "startLine": 203,
              "startColumn": 28,
              "endLine": 203,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean exists(final String searchString, final Set<String> set)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 58,
              "variableName": "searchString",
              "startLine": 209,
              "startColumn": 42,
              "endLine": 209,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(searchString))\n                {\n                    return true;\n                }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2914,
              "startColumn": 49,
              "endLine": 2914,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {\n            return (T) createChild(Queue.class, attributes);\n        }\n        else\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2914,
              "startColumn": 49,
              "endLine": 2914,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {\n            return (T) createChild(Queue.class, attributes);\n        }\n        else\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 46,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 47,
              "variableName": "group",
              "startLine": 191,
              "startColumn": 21,
              "endLine": 191,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);"
            },
            {
              "step": 48,
              "variableName": "final String searchString",
              "startLine": 203,
              "startColumn": 28,
              "endLine": 203,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean exists(final String searchString, final Set<String> set)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 49,
              "variableName": "searchString",
              "startLine": 209,
              "startColumn": 42,
              "endLine": 209,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(searchString))\n                {\n                    return true;\n                }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 7,
      "fileName": "FileGroupDatabase.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 46,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 47,
              "variableName": "group",
              "startLine": 194,
              "startColumn": 33,
              "endLine": 194,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 48,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 49,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 50,
              "variableName": "update()",
              "startLine": 195,
              "startColumn": 13,
              "endLine": 195,
              "endColumn": 21,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else\n        {"
            },
            {
              "step": 51,
              "variableName": "update",
              "startLine": 231,
              "startColumn": 31,
              "endLine": 231,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        update();\n    }\n\n    private synchronized void update()\n    {\n        if (_groupFile != null)\n        {"
            },
            {
              "step": 52,
              "variableName": "writeGroupFile(_groupFile)",
              "startLine": 237,
              "startColumn": 17,
              "endLine": 237,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            try\n            {\n                writeGroupFile(_groupFile);\n            }\n            catch (IOException e)\n            {"
            },
            {
              "step": 53,
              "variableName": "writeGroupFile",
              "startLine": 283,
              "startColumn": 31,
              "endLine": 283,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        }\n    }\n\n    private synchronized void writeGroupFile(final String groupFile) throws IOException\n    {\n        final Properties propertiesFile = new Properties();\n"
            },
            {
              "step": 54,
              "variableName": "_groupToUserMap",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 55,
              "variableName": "_groupToUserMap",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 56,
              "variableName": "_groupToUserMap.keySet()",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 87,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 57,
              "variableName": "Set<String> set",
              "startLine": 330,
              "startColumn": 30,
              "endLine": 330,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "        return userSet;\n    }\n\n    private String keySearch(Set<String> set, String requiredKey)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 58,
              "variableName": "set",
              "startLine": 334,
              "startColumn": 31,
              "endLine": 334,
              "endColumn": 34,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "    {\n        if (!_groupProvider.isCaseSensitive())\n        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {"
            },
            {
              "step": 59,
              "variableName": "key",
              "startLine": 336,
              "startColumn": 21,
              "endLine": 336,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {\n                    return key;\n                }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2910,
              "startColumn": 67,
              "endLine": 2910,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Queue>)clazz, attributes);\n        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2910,
              "startColumn": 67,
              "endLine": 2910,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Queue>)clazz, attributes);\n        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> userTask",
              "startLine": 151,
              "startColumn": 64,
              "endLine": 151,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }"
            },
            {
              "step": 32,
              "variableName": "userTask",
              "startLine": 153,
              "startColumn": 59,
              "endLine": 153,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E"
            },
            {
              "step": 33,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 35,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 36,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 153,
              "startColumn": 34,
              "endLine": 153,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E"
            },
            {
              "step": 37,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 38,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 39,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 40,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 41,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 42,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 43,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 44,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 45,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 46,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 47,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 48,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 49,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 50,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 51,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 52,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 53,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 54,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 55,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 56,
              "variableName": "group",
              "startLine": 194,
              "startColumn": 33,
              "endLine": 194,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 57,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 58,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 59,
              "variableName": "update()",
              "startLine": 195,
              "startColumn": 13,
              "endLine": 195,
              "endColumn": 21,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else\n        {"
            },
            {
              "step": 60,
              "variableName": "update",
              "startLine": 231,
              "startColumn": 31,
              "endLine": 231,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        update();\n    }\n\n    private synchronized void update()\n    {\n        if (_groupFile != null)\n        {"
            },
            {
              "step": 61,
              "variableName": "writeGroupFile(_groupFile)",
              "startLine": 237,
              "startColumn": 17,
              "endLine": 237,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            try\n            {\n                writeGroupFile(_groupFile);\n            }\n            catch (IOException e)\n            {"
            },
            {
              "step": 62,
              "variableName": "writeGroupFile",
              "startLine": 283,
              "startColumn": 31,
              "endLine": 283,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        }\n    }\n\n    private synchronized void writeGroupFile(final String groupFile) throws IOException\n    {\n        final Properties propertiesFile = new Properties();\n"
            },
            {
              "step": 63,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 64,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 65,
              "variableName": "_groupToUserMap",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 66,
              "variableName": "_groupToUserMap.keySet()",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 87,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 67,
              "variableName": "Set<String> set",
              "startLine": 330,
              "startColumn": 30,
              "endLine": 330,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "        return userSet;\n    }\n\n    private String keySearch(Set<String> set, String requiredKey)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 68,
              "variableName": "set",
              "startLine": 334,
              "startColumn": 31,
              "endLine": 334,
              "endColumn": 34,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "    {\n        if (!_groupProvider.isCaseSensitive())\n        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {"
            },
            {
              "step": 69,
              "variableName": "key",
              "startLine": 336,
              "startColumn": 21,
              "endLine": 336,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {\n                    return key;\n                }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2914,
              "startColumn": 49,
              "endLine": 2914,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {\n            return (T) createChild(Queue.class, attributes);\n        }\n        else\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2914,
              "startColumn": 49,
              "endLine": 2914,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {\n            return (T) createChild(Queue.class, attributes);\n        }\n        else\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 46,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 47,
              "variableName": "group",
              "startLine": 194,
              "startColumn": 33,
              "endLine": 194,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 48,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 49,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 50,
              "variableName": "update()",
              "startLine": 195,
              "startColumn": 13,
              "endLine": 195,
              "endColumn": 21,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else\n        {"
            },
            {
              "step": 51,
              "variableName": "update",
              "startLine": 231,
              "startColumn": 31,
              "endLine": 231,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        update();\n    }\n\n    private synchronized void update()\n    {\n        if (_groupFile != null)\n        {"
            },
            {
              "step": 52,
              "variableName": "writeGroupFile(_groupFile)",
              "startLine": 237,
              "startColumn": 17,
              "endLine": 237,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            try\n            {\n                writeGroupFile(_groupFile);\n            }\n            catch (IOException e)\n            {"
            },
            {
              "step": 53,
              "variableName": "writeGroupFile",
              "startLine": 283,
              "startColumn": 31,
              "endLine": 283,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        }\n    }\n\n    private synchronized void writeGroupFile(final String groupFile) throws IOException\n    {\n        final Properties propertiesFile = new Properties();\n"
            },
            {
              "step": 54,
              "variableName": "_groupToUserMap",
              "startLine": 289,
              "startColumn": 33,
              "endLine": 289,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 55,
              "variableName": "_groupToUserMap",
              "startLine": 289,
              "startColumn": 33,
              "endLine": 289,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 56,
              "variableName": "_groupToUserMap",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 57,
              "variableName": "_groupToUserMap.keySet()",
              "startLine": 289,
              "startColumn": 63,
              "endLine": 289,
              "endColumn": 87,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 58,
              "variableName": "Set<String> set",
              "startLine": 330,
              "startColumn": 30,
              "endLine": 330,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "        return userSet;\n    }\n\n    private String keySearch(Set<String> set, String requiredKey)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 59,
              "variableName": "set",
              "startLine": 334,
              "startColumn": 31,
              "endLine": 334,
              "endColumn": 34,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "    {\n        if (!_groupProvider.isCaseSensitive())\n        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {"
            },
            {
              "step": 60,
              "variableName": "key",
              "startLine": 336,
              "startColumn": 21,
              "endLine": 336,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {\n                    return key;\n                }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 8,
      "fileName": "FileGroupDatabase.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 46,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 47,
              "variableName": "group",
              "startLine": 194,
              "startColumn": 33,
              "endLine": 194,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 48,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 49,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 50,
              "variableName": "update()",
              "startLine": 195,
              "startColumn": 13,
              "endLine": 195,
              "endColumn": 21,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else\n        {"
            },
            {
              "step": 51,
              "variableName": "update",
              "startLine": 231,
              "startColumn": 31,
              "endLine": 231,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        update();\n    }\n\n    private synchronized void update()\n    {\n        if (_groupFile != null)\n        {"
            },
            {
              "step": 52,
              "variableName": "writeGroupFile(_groupFile)",
              "startLine": 237,
              "startColumn": 17,
              "endLine": 237,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            try\n            {\n                writeGroupFile(_groupFile);\n            }\n            catch (IOException e)\n            {"
            },
            {
              "step": 53,
              "variableName": "writeGroupFile",
              "startLine": 283,
              "startColumn": 31,
              "endLine": 283,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        }\n    }\n\n    private synchronized void writeGroupFile(final String groupFile) throws IOException\n    {\n        final Properties propertiesFile = new Properties();\n"
            },
            {
              "step": 54,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 55,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 56,
              "variableName": "_groupToUserMap.keySet()",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 57,
              "variableName": "group",
              "startLine": 289,
              "startColumn": 89,
              "endLine": 289,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 58,
              "variableName": "String requiredKey",
              "startLine": 330,
              "startColumn": 47,
              "endLine": 330,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        return userSet;\n    }\n\n    private String keySearch(Set<String> set, String requiredKey)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 59,
              "variableName": "requiredKey",
              "startLine": 336,
              "startColumn": 42,
              "endLine": 336,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {\n                    return key;\n                }"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2910,
              "startColumn": 67,
              "endLine": 2910,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Queue>)clazz, attributes);\n        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2910,
              "startColumn": 67,
              "endLine": 2910,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Queue>)clazz, attributes);\n        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> userTask",
              "startLine": 151,
              "startColumn": 64,
              "endLine": 151,
              "endColumn": 83,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }"
            },
            {
              "step": 32,
              "variableName": "userTask",
              "startLine": 153,
              "startColumn": 59,
              "endLine": 153,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E"
            },
            {
              "step": 33,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 35,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 36,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 153,
              "startColumn": 34,
              "endLine": 153,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> userTask) throws E\n    {\n        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E"
            },
            {
              "step": 37,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 38,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 39,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 40,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 41,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 42,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 43,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 44,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 45,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 46,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 47,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 48,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 49,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 50,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 51,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 52,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 53,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 54,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 55,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 56,
              "variableName": "group",
              "startLine": 194,
              "startColumn": 33,
              "endLine": 194,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 57,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 58,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 59,
              "variableName": "update()",
              "startLine": 195,
              "startColumn": 13,
              "endLine": 195,
              "endColumn": 21,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else\n        {"
            },
            {
              "step": 60,
              "variableName": "update",
              "startLine": 231,
              "startColumn": 31,
              "endLine": 231,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        update();\n    }\n\n    private synchronized void update()\n    {\n        if (_groupFile != null)\n        {"
            },
            {
              "step": 61,
              "variableName": "writeGroupFile(_groupFile)",
              "startLine": 237,
              "startColumn": 17,
              "endLine": 237,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            try\n            {\n                writeGroupFile(_groupFile);\n            }\n            catch (IOException e)\n            {"
            },
            {
              "step": 62,
              "variableName": "writeGroupFile",
              "startLine": 283,
              "startColumn": 31,
              "endLine": 283,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        }\n    }\n\n    private synchronized void writeGroupFile(final String groupFile) throws IOException\n    {\n        final Properties propertiesFile = new Properties();\n"
            },
            {
              "step": 63,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 64,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 65,
              "variableName": "_groupToUserMap.keySet()",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 66,
              "variableName": "group",
              "startLine": 289,
              "startColumn": 89,
              "endLine": 289,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 67,
              "variableName": "String requiredKey",
              "startLine": 330,
              "startColumn": 47,
              "endLine": 330,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        return userSet;\n    }\n\n    private String keySearch(Set<String> set, String requiredKey)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 68,
              "variableName": "requiredKey",
              "startLine": 336,
              "startColumn": 42,
              "endLine": 336,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {\n                    return key;\n                }"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 244,
              "startColumn": 16,
              "endLine": 244,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "    {\n        Mac mac = createShaHmac(key);\n        mac.update(string.getBytes(StandardCharsets.US_ASCII));\n        return mac.doFinal();\n    }\n\n    private Mac createShaHmac(final byte[] keyBytes)"
            },
            {
              "step": 1,
              "variableName": "computeHmac(saltedPassword, \"Server Key\")",
              "startLine": 278,
              "startColumn": 32,
              "endLine": 278,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            byte[] clientKey = computeHmac(saltedPassword, \"Client Key\");\n\n            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank"
            },
            {
              "step": 2,
              "variableName": "serverKey",
              "startLine": 283,
              "startColumn": 57,
              "endLine": 283,
              "endColumn": 66,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "byte[]",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 3,
              "variableName": "Base64.getEncoder().encodeToString(serverKey)",
              "startLine": 283,
              "startColumn": 22,
              "endLine": 283,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\"\n                   + iterationCount;\n        }\n        catch (NoSuchAlgorithmException e)"
            },
            {
              "step": 4,
              "variableName": "Base64.getEncode",
              "startLine": 280,
              "startColumn": 20,
              "endLine": 284,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "            byte[] storedKey = MessageDigest.getInstance(getDigestName()).digest(clientKey);\n            byte[] serverKey = computeHmac(saltedPassword, \"Server Key\");\n\n            return Base64.getEncoder().encodeToString(salt) + \",\"\n                   + \",\" // leave insecure salted password field blank\n                   + Base64.getEncoder().encodeToString(storedKey) + \",\"\n                   + Base64.getEncoder().encodeToString(serverKey) + \",\""
            },
            {
              "step": 5,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 6,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 7,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 8,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 9,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 11,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 14,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 15,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 16,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2914,
              "startColumn": 49,
              "endLine": 2914,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {\n            return (T) createChild(Queue.class, attributes);\n        }\n        else\n        {"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes",
              "startLine": 2914,
              "startColumn": 49,
              "endLine": 2914,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if(clazz.isAssignableFrom(Queue.class))\n        {\n            return (T) createChild(Queue.class, attributes);\n        }\n        else\n        {"
            },
            {
              "step": 23,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 25,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 26,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 27,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 28,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 29,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 30,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 31,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 32,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 34,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 35,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 36,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 37,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 38,
              "variableName": "create",
              "startLine": 2014,
              "startColumn": 41,
              "endLine": 2014,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return result;\n            }\n\n            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->"
            },
            {
              "step": 39,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 40,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 41,
              "variableName": "Map<String, Object> attributes",
              "startLine": 199,
              "startColumn": 75,
              "endLine": 199,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    protected <C extends ConfiguredObject> ListenableFuture<C> addChildAsync(Class<C> childClass,\n                                                                          Map<String, Object> attributes)\n    {\n        if (childClass == Group.class)\n        {"
            },
            {
              "step": 42,
              "variableName": "attributes",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 43,
              "variableName": "attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 41,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 44,
              "variableName": "(String) attributes.get(ConfiguredObject.NAME)",
              "startLine": 203,
              "startColumn": 32,
              "endLine": 203,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "    {\n        if (childClass == Group.class)\n        {\n            String groupName = (String) attributes.get(ConfiguredObject.NAME);\n\n            if (getState() != State.ACTIVE)\n            {"
            },
            {
              "step": 45,
              "variableName": "groupName",
              "startLine": 211,
              "startColumn": 40,
              "endLine": 211,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImpl.java",
              "type": "String",
              "code": "                        \"Group provider '%s' is not activated. Cannot create a group.\",\n                        getName()));\n            }\n            _groupDatabase.createGroup(groupName);\n\n            Map<String, Object> attrMap = new HashMap<>();\n            UUID id = UUID.randomUUID();"
            },
            {
              "step": 46,
              "variableName": "String group",
              "startLine": 189,
              "startColumn": 42,
              "endLine": 189,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public synchronized void createGroup(String group)\n    {\n        if (!exists(group, _groupToUserMap.keySet()))\n        {"
            },
            {
              "step": 47,
              "variableName": "group",
              "startLine": 194,
              "startColumn": 33,
              "endLine": 194,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 48,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 49,
              "variableName": "_groupToUserMap",
              "startLine": 194,
              "startColumn": 13,
              "endLine": 194,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        if (!exists(group, _groupToUserMap.keySet()))\n        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else"
            },
            {
              "step": 50,
              "variableName": "update()",
              "startLine": 195,
              "startColumn": 13,
              "endLine": 195,
              "endColumn": 21,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            Set<String> users = new ConcurrentSkipListSet<>();\n            _groupToUserMap.put(group, users);\n            update();\n        }\n        else\n        {"
            },
            {
              "step": 51,
              "variableName": "update",
              "startLine": 231,
              "startColumn": 31,
              "endLine": 231,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        update();\n    }\n\n    private synchronized void update()\n    {\n        if (_groupFile != null)\n        {"
            },
            {
              "step": 52,
              "variableName": "writeGroupFile(_groupFile)",
              "startLine": 237,
              "startColumn": 17,
              "endLine": 237,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        {\n            try\n            {\n                writeGroupFile(_groupFile);\n            }\n            catch (IOException e)\n            {"
            },
            {
              "step": 53,
              "variableName": "writeGroupFile",
              "startLine": 283,
              "startColumn": 31,
              "endLine": 283,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "        }\n    }\n\n    private synchronized void writeGroupFile(final String groupFile) throws IOException\n    {\n        final Properties propertiesFile = new Properties();\n"
            },
            {
              "step": 54,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "FileGroupDatabase [_groupToUserMap, <map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 55,
              "variableName": "_groupToUserMap",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 44,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "ConcurrentHashMap [<map.key>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 56,
              "variableName": "_groupToUserMap.keySet()",
              "startLine": 287,
              "startColumn": 29,
              "endLine": 287,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "Set [<element>] : String",
              "code": "    {\n        final Properties propertiesFile = new Properties();\n\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);"
            },
            {
              "step": 57,
              "variableName": "group",
              "startLine": 289,
              "startColumn": 89,
              "endLine": 289,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "\n        for (String group : _groupToUserMap.keySet())\n        {\n            Set<String> users = _groupToUserMap.get(keySearch(_groupToUserMap.keySet(), group));\n            final String userList = Joiner.on(\",\").useForNull(\"\").join(users);\n\n            propertiesFile.setProperty(group + \".users\", userList);"
            },
            {
              "step": 58,
              "variableName": "String requiredKey",
              "startLine": 330,
              "startColumn": 47,
              "endLine": 330,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "String",
              "code": "        return userSet;\n    }\n\n    private String keySearch(Set<String> set, String requiredKey)\n    {\n        if (!_groupProvider.isCaseSensitive())\n        {"
            },
            {
              "step": 59,
              "variableName": "requiredKey",
              "startLine": 336,
              "startColumn": 42,
              "endLine": 336,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/group/FileGroupDatabase.java",
              "type": "",
              "code": "        {\n            for (String key : set)\n            {\n                if (key.equalsIgnoreCase(requiredKey))\n                {\n                    return key;\n                }"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 9,
      "fileName": "SpnegoAuthenticator.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(SpnegoAuthenticator.REQUEST_AUTH_HEADER_NAME)",
              "startLine": 56,
              "startColumn": 52,
              "endLine": 56,
              "endColumn": 115,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/SpnegoInteractiveAuthenticator.java",
              "type": "String",
              "code": "            final KerberosAuthenticationManager kerberosProvider =\n                    (KerberosAuthenticationManager) authenticationProvider;\n            return response -> {\n                final String authorizationHeader = request.getHeader(SpnegoAuthenticator.REQUEST_AUTH_HEADER_NAME);\n                final AuthenticationResult authenticationResult = kerberosProvider.authenticate(authorizationHeader);\n                if (authenticationResult == null\n                    || authenticationResult.getStatus() == AuthenticationResult.AuthenticationStatus.ERROR)"
            },
            {
              "step": 1,
              "variableName": "authorizationHeader",
              "startLine": 57,
              "startColumn": 97,
              "endLine": 57,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/SpnegoInteractiveAuthenticator.java",
              "type": "String",
              "code": "                    (KerberosAuthenticationManager) authenticationProvider;\n            return response -> {\n                final String authorizationHeader = request.getHeader(SpnegoAuthenticator.REQUEST_AUTH_HEADER_NAME);\n                final AuthenticationResult authenticationResult = kerberosProvider.authenticate(authorizationHeader);\n                if (authenticationResult == null\n                    || authenticationResult.getStatus() == AuthenticationResult.AuthenticationStatus.ERROR)\n                {"
            },
            {
              "step": 2,
              "variableName": "String authorizationHeader",
              "startLine": 98,
              "startColumn": 46,
              "endLine": 98,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/KerberosAuthenticationManager.java",
              "type": "String",
              "code": "        }\n    }\n\n    public AuthenticationResult authenticate(String authorizationHeader)\n    {\n        return _authenticator.authenticate(authorizationHeader);\n    }"
            },
            {
              "step": 3,
              "variableName": "authorizationHeader",
              "startLine": 100,
              "startColumn": 44,
              "endLine": 100,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/KerberosAuthenticationManager.java",
              "type": "String",
              "code": "\n    public AuthenticationResult authenticate(String authorizationHeader)\n    {\n        return _authenticator.authenticate(authorizationHeader);\n    }\n\n    public String getSpnegoLoginConfigScope()"
            },
            {
              "step": 4,
              "variableName": "String authorizationHeader",
              "startLine": 62,
              "startColumn": 46,
              "endLine": 62,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "        _kerberosProvider = kerberosProvider;\n    }\n\n    public AuthenticationResult authenticate(String authorizationHeader)\n    {\n        if (authorizationHeader == null)\n        {"
            },
            {
              "step": 5,
              "variableName": "authorizationHeader",
              "startLine": 74,
              "startColumn": 37,
              "endLine": 74,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "        }\n        else\n        {\n            if (!hasNegotiatePrefix(authorizationHeader))\n            {\n                if (LOGGER.isDebugEnabled())\n                {"
            },
            {
              "step": 6,
              "variableName": "final String authorizationHeader",
              "startLine": 115,
              "startColumn": 40,
              "endLine": 115,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean hasNegotiatePrefix(final String authorizationHeader)\n    {\n        if (authorizationHeader.length() > NEGOTIATE_PREFIX.length() )\n        {"
            },
            {
              "step": 7,
              "variableName": "authorizationHeader",
              "startLine": 119,
              "startColumn": 54,
              "endLine": 119,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "    {\n        if (authorizationHeader.length() > NEGOTIATE_PREFIX.length() )\n        {\n            return NEGOTIATE_PREFIX.equalsIgnoreCase(authorizationHeader.substring(0, NEGOTIATE_PREFIX.length()));\n        }\n        return false;\n    }"
            },
            {
              "step": 8,
              "variableName": "authorizationHeader.substring(0, NEGOTIATE_PREFIX.length())",
              "startLine": 119,
              "startColumn": 54,
              "endLine": 119,
              "endColumn": 113,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "",
              "code": "    {\n        if (authorizationHeader.length() > NEGOTIATE_PREFIX.length() )\n        {\n            return NEGOTIATE_PREFIX.equalsIgnoreCase(authorizationHeader.substring(0, NEGOTIATE_PREFIX.length()));\n        }\n        return false;\n    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(SpnegoAuthenticator.REQUEST_AUTH_HEADER_NAME)",
              "startLine": 49,
              "startColumn": 48,
              "endLine": 49,
              "endColumn": 111,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/SpnegoPreemptiveAuthenticator.java",
              "type": "String",
              "code": "        if (authenticationProvider instanceof KerberosAuthenticationManager)\n        {\n            final KerberosAuthenticationManager kerberosProvider = (KerberosAuthenticationManager) authenticationProvider;\n            final String authorizationHeader = request.getHeader(SpnegoAuthenticator.REQUEST_AUTH_HEADER_NAME);\n            final AuthenticationResult authenticationResult = kerberosProvider.authenticate(authorizationHeader);\n            final Port<?> port = configuration.getPort(request);\n            final SubjectCreator subjectCreator = port.getSubjectCreator(request.isSecure(), request.getServerName());"
            },
            {
              "step": 1,
              "variableName": "authorizationHeader",
              "startLine": 50,
              "startColumn": 93,
              "endLine": 50,
              "endColumn": 112,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/SpnegoPreemptiveAuthenticator.java",
              "type": "String",
              "code": "        {\n            final KerberosAuthenticationManager kerberosProvider = (KerberosAuthenticationManager) authenticationProvider;\n            final String authorizationHeader = request.getHeader(SpnegoAuthenticator.REQUEST_AUTH_HEADER_NAME);\n            final AuthenticationResult authenticationResult = kerberosProvider.authenticate(authorizationHeader);\n            final Port<?> port = configuration.getPort(request);\n            final SubjectCreator subjectCreator = port.getSubjectCreator(request.isSecure(), request.getServerName());\n            final SubjectAuthenticationResult result = subjectCreator.createResultWithGroups(authenticationResult);"
            },
            {
              "step": 2,
              "variableName": "String authorizationHeader",
              "startLine": 98,
              "startColumn": 46,
              "endLine": 98,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/KerberosAuthenticationManager.java",
              "type": "String",
              "code": "        }\n    }\n\n    public AuthenticationResult authenticate(String authorizationHeader)\n    {\n        return _authenticator.authenticate(authorizationHeader);\n    }"
            },
            {
              "step": 3,
              "variableName": "authorizationHeader",
              "startLine": 100,
              "startColumn": 44,
              "endLine": 100,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/KerberosAuthenticationManager.java",
              "type": "String",
              "code": "\n    public AuthenticationResult authenticate(String authorizationHeader)\n    {\n        return _authenticator.authenticate(authorizationHeader);\n    }\n\n    public String getSpnegoLoginConfigScope()"
            },
            {
              "step": 4,
              "variableName": "String authorizationHeader",
              "startLine": 62,
              "startColumn": 46,
              "endLine": 62,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "        _kerberosProvider = kerberosProvider;\n    }\n\n    public AuthenticationResult authenticate(String authorizationHeader)\n    {\n        if (authorizationHeader == null)\n        {"
            },
            {
              "step": 5,
              "variableName": "authorizationHeader",
              "startLine": 74,
              "startColumn": 37,
              "endLine": 74,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "        }\n        else\n        {\n            if (!hasNegotiatePrefix(authorizationHeader))\n            {\n                if (LOGGER.isDebugEnabled())\n                {"
            },
            {
              "step": 6,
              "variableName": "final String authorizationHeader",
              "startLine": 115,
              "startColumn": 40,
              "endLine": 115,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean hasNegotiatePrefix(final String authorizationHeader)\n    {\n        if (authorizationHeader.length() > NEGOTIATE_PREFIX.length() )\n        {"
            },
            {
              "step": 7,
              "variableName": "authorizationHeader",
              "startLine": 119,
              "startColumn": 54,
              "endLine": 119,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "String",
              "code": "    {\n        if (authorizationHeader.length() > NEGOTIATE_PREFIX.length() )\n        {\n            return NEGOTIATE_PREFIX.equalsIgnoreCase(authorizationHeader.substring(0, NEGOTIATE_PREFIX.length()));\n        }\n        return false;\n    }"
            },
            {
              "step": 8,
              "variableName": "authorizationHeader.substring(0, NEGOTIATE_PREFIX.length())",
              "startLine": 119,
              "startColumn": 54,
              "endLine": 119,
              "endColumn": 113,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/SpnegoAuthenticator.java",
              "type": "",
              "code": "    {\n        if (authorizationHeader.length() > NEGOTIATE_PREFIX.length() )\n        {\n            return NEGOTIATE_PREFIX.equalsIgnoreCase(authorizationHeader.substring(0, NEGOTIATE_PREFIX.length()));\n        }\n        return false;\n    }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 10,
      "fileName": "BasicAuthPreemptiveAuthenticator.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(\"Authorization\")",
              "startLine": 49,
              "startColumn": 31,
              "endLine": 49,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/BasicAuthPreemptiveAuthenticator.java",
              "type": "String",
              "code": "    @Override\n    public Subject attemptAuthentication(final HttpServletRequest request, final HttpManagementConfiguration managementConfiguration)\n    {\n        final String header = request.getHeader(\"Authorization\");\n        final Port<?> port = managementConfiguration.getPort(request);\n        final AuthenticationProvider<?> authenticationProvider = managementConfiguration.getAuthenticationProvider(request);\n        final SubjectCreator subjectCreator = port.getSubjectCreator(request.isSecure(), request.getServerName());"
            },
            {
              "step": 1,
              "variableName": "header",
              "startLine": 58,
              "startColumn": 37,
              "endLine": 58,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/BasicAuthPreemptiveAuthenticator.java",
              "type": "String",
              "code": "        {\n            final UsernamePasswordAuthenticationProvider<?> namePasswdAuthProvider = (UsernamePasswordAuthenticationProvider<?>)authenticationProvider;\n\n            final String[] tokens = header.split(\"\\\\s\");\n            if (tokens.length >= 2 && \"BASIC\".equalsIgnoreCase(tokens[0]))\n            {\n                boolean isBasicAuthSupported = request.isSecure()"
            },
            {
              "step": 2,
              "variableName": "header.split(\"\\\\s\")",
              "startLine": 58,
              "startColumn": 37,
              "endLine": 58,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/BasicAuthPreemptiveAuthenticator.java",
              "type": "String[]",
              "code": "        {\n            final UsernamePasswordAuthenticationProvider<?> namePasswdAuthProvider = (UsernamePasswordAuthenticationProvider<?>)authenticationProvider;\n\n            final String[] tokens = header.split(\"\\\\s\");\n            if (tokens.length >= 2 && \"BASIC\".equalsIgnoreCase(tokens[0]))\n            {\n                boolean isBasicAuthSupported = request.isSecure()"
            },
            {
              "step": 3,
              "variableName": "tokens[0]",
              "startLine": 59,
              "startColumn": 64,
              "endLine": 59,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/auth/BasicAuthPreemptiveAuthenticator.java",
              "type": "",
              "code": "            final UsernamePasswordAuthenticationProvider<?> namePasswdAuthProvider = (UsernamePasswordAuthenticationProvider<?>)authenticationProvider;\n\n            final String[] tokens = header.split(\"\\\\s\");\n            if (tokens.length >= 2 && \"BASIC\".equalsIgnoreCase(tokens[0]))\n            {\n                boolean isBasicAuthSupported = request.isSecure()\n                    ? managementConfiguration.isHttpsBasicAuthenticationEnabled()"
            }
          ],
          "label": "No"
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 11,
      "fileName": "AbstractConfiguredObject.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "User.PASSWORD",
              "startLine": 111,
              "startColumn": 48,
              "endLine": 111,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 27,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            },
            {
              "step": 28,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 27,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            },
            {
              "step": 28,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "PASSWORD",
              "startLine": 415,
              "startColumn": 34,
              "endLine": 415,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.key>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 27,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            },
            {
              "step": 28,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 415,
              "startColumn": 44,
              "endLine": 415,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.value>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 27,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            },
            {
              "step": 28,
              "variableName": "LOGGER.info(\"{} : {} ({}) : Update : {} : {",
              "startLine": 3583,
              "startColumn": 13,
              "endLine": 3588,
              "endColumn": 56,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        else\n        {\n            LOGGER.info(\"{} : {} ({}) : Update : {} : {}\",\n                        LogMessage.getActor(),\n                        getCategoryClass().getSimpleName(),\n                        getName(),"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 12,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 534,
              "startColumn": 13,
              "endLine": 534,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnection.java",
              "type": "ServerSession",
              "code": "        ServerSession ssn = getSession(channel);\n        if(ssn != null)\n        {\n            ssn.received(method);\n        }\n        else\n        {"
            },
            {
              "step": 1,
              "variableName": "received",
              "startLine": 504,
              "startColumn": 10,
              "endLine": 504,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 506,
              "startColumn": 20,
              "endLine": 506,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }\n\n    private void send(Method m)"
            },
            {
              "step": 3,
              "variableName": "C context",
              "startLine": 149,
              "startColumn": 30,
              "endLine": 149,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    public abstract <C> void dispatch(C context, MethodDelegate<C> delegate);\n\n    @Override\n    public <C> void delegate(C context, ProtocolDelegate<C> delegate)\n    {\n        if (getEncodedTrack() == Frame.L4)\n        {"
            },
            {
              "step": 4,
              "variableName": "context",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    {\n        if (getEncodedTrack() == Frame.L4)\n        {\n            delegate.command(context, this);\n        }\n        else\n        {"
            },
            {
              "step": 5,
              "variableName": "ServerSession session",
              "startLine": 109,
              "startColumn": 25,
              "endLine": 109,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "    }\n\n    @Override\n    public void command(ServerSession session, Method method)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "session",
              "startLine": 120,
              "startColumn": 21,
              "endLine": 120,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                Object newOutstanding = session.getAsyncCommandMark();\n                if(newOutstanding == null || newOutstanding == asyncCommandMark)\n                {\n                    session.processed(method);\n                }\n\n                if(newOutstanding != null)"
            },
            {
              "step": 7,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 8,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 9,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 10,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 11,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 368,
              "startColumn": 63,
              "endLine": 368,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            },
            {
              "step": 13,
              "variableName": "LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed)",
              "startLine": 368,
              "startColumn": 13,
              "endLine": 368,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "Object[] [[]] : ServerSession",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            },
            {
              "step": 14,
              "variableName": "LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed)",
              "startLine": 368,
              "startColumn": 13,
              "endLine": 368,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 536,
              "startColumn": 25,
              "endLine": 536,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                    // TODO: we currently do not send MessageAccept when AcceptMode is EXPLICIT\n                    if (ssn.isTransactional())\n                    {\n                        ssn.processed(xfr);\n                    }\n                    else\n                    {"
            },
            {
              "step": 1,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 2,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 3,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 4,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 5,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 368,
              "startColumn": 63,
              "endLine": 368,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            },
            {
              "step": 7,
              "variableName": "LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed)",
              "startLine": 368,
              "startColumn": 13,
              "endLine": 368,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "Object[] [[]] : ServerSession",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            },
            {
              "step": 8,
              "variableName": "LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed)",
              "startLine": 368,
              "startColumn": 13,
              "endLine": 368,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1885,
              "startColumn": 13,
              "endLine": 1885,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        method.dispatch(ssn, this);\n        if (processed)\n        {\n            ssn.processed(method);\n        }\n    }\n"
            },
            {
              "step": 1,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 2,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 3,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 4,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 5,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 368,
              "startColumn": 63,
              "endLine": 368,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            },
            {
              "step": 7,
              "variableName": "LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed)",
              "startLine": 368,
              "startColumn": 13,
              "endLine": 368,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "Object[] [[]] : ServerSession",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            },
            {
              "step": 8,
              "variableName": "LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed)",
              "startLine": 368,
              "startColumn": 13,
              "endLine": 368,
              "endColumn": 116,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 13,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1934,
              "startColumn": 36,
              "endLine": 1934,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "            if(ranges.size() == 1)\n            {\n                Range range = ranges.getFirst();\n                boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n\n                if(advanced && cmp.getTimelyReply())\n                {"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 475,
              "startColumn": 49,
              "endLine": 475,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            },
            {
              "step": 3,
              "variableName": "LOGGER.debug(\"{} complete({}, {})\", this, lower, upper)",
              "startLine": 475,
              "startColumn": 13,
              "endLine": 475,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "Object[] [[]] : ServerSession",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            },
            {
              "step": 4,
              "variableName": "LOGGER.debug(\"{} complete({}, {})\", this, lower, upper)",
              "startLine": 475,
              "startColumn": 13,
              "endLine": 475,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1949,
              "startColumn": 40,
              "endLine": 1949,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                }\n                for (Range range : ranges)\n                {\n                    boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n                    if (advanced && known != null)\n                    {\n                        known.add(range);"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 475,
              "startColumn": 49,
              "endLine": 475,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            },
            {
              "step": 3,
              "variableName": "LOGGER.debug(\"{} complete({}, {})\", this, lower, upper)",
              "startLine": 475,
              "startColumn": 13,
              "endLine": 475,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "Object[] [[]] : ServerSession",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            },
            {
              "step": 4,
              "variableName": "LOGGER.debug(\"{} complete({}, {})\", this, lower, upper)",
              "startLine": 475,
              "startColumn": 13,
              "endLine": 475,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 14,
      "fileName": "SystemLauncher.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 289,
              "startColumn": 71,
              "endLine": 289,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "String",
              "code": "                {\n                    password = new StringUtil().randomAlphaNumericString(MANAGEMENT_MODE_PASSWORD_LENGTH);\n                }\n                attributes.put(SystemConfig.MANAGEMENT_MODE_PASSWORD, password);\n            }\n            setExceptionHandler();\n"
            },
            {
              "step": 1,
              "variableName": "attributes",
              "startLine": 289,
              "startColumn": 17,
              "endLine": 289,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                {\n                    password = new StringUtil().randomAlphaNumericString(MANAGEMENT_MODE_PASSWORD_LENGTH);\n                }\n                attributes.put(SystemConfig.MANAGEMENT_MODE_PASSWORD, password);\n            }\n            setExceptionHandler();\n"
            },
            {
              "step": 2,
              "variableName": "attributes",
              "startLine": 293,
              "startColumn": 25,
              "endLine": 293,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            }\n            setExceptionHandler();\n\n            startBroker(attributes);\n        }\n    }\n"
            },
            {
              "step": 3,
              "variableName": "Map<String,Object> attributes",
              "startLine": 497,
              "startColumn": 32,
              "endLine": 497,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        } \n    }\n\n    protected void startBroker(Map<String,Object> attributes) throws Exception\n    {\n        SystemLauncher systemLauncher = new SystemLauncher(new LogbackLoggingSystemLauncherListener(),\n                                                           new SystemLauncherListener.DefaultSystemLauncherListener()"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 512,
              "startColumn": 32,
              "endLine": 512,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                                                               }\n                                                           });\n\n        systemLauncher.startup(attributes);\n    }\n\n    protected void shutdown(final int status)"
            },
            {
              "step": 5,
              "variableName": "final Map<String,Object> systemConfigAttributes",
              "startLine": 193,
              "startColumn": 25,
              "endLine": 193,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    }\n\n\n    public void startup(final Map<String,Object> systemConfigAttributes) throws Exception\n    {\n        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n"
            },
            {
              "step": 6,
              "variableName": "systemConfigAttributes : HashMap [<map.value>] : String",
              "startLine": 198,
              "startColumn": 42,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 7,
              "variableName": "(...)... : new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "startLine": 198,
              "startColumn": 42,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 8,
              "variableName": "parameter this : new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "startLine": 198,
              "startColumn": 78,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 9,
              "variableName": "systemConfigAttributes",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "\n            try\n            {\n                startupImpl(systemConfigAttributes);\n            }\n            catch (RuntimeException e)\n            {"
            },
            {
              "step": 10,
              "variableName": "systemConfigAttributes",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n            try\n            {\n                startupImpl(systemConfigAttributes);\n            }\n            catch (RuntimeException e)\n            {"
            },
            {
              "step": 11,
              "variableName": "Map<String,Object> systemConfigAttributes",
              "startLine": 222,
              "startColumn": 30,
              "endLine": 222,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    }\n\n    private void startupImpl(Map<String,Object> systemConfigAttributes) throws Exception\n    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n"
            },
            {
              "step": 12,
              "variableName": "systemConfigAttributes",
              "startLine": 226,
              "startColumn": 37,
              "endLine": 226,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n\n        String storeType = (String) systemConfigAttributes.get(SystemConfig.TYPE);\n\n        // Create the RootLogger to be used during broker operation\n        boolean statusUpdatesEnabled = Boolean.parseBoolean(System.getProperty(SystemConfig.PROPERTY_STATUS_UPDATES, \"true\"));"
            },
            {
              "step": 13,
              "variableName": "systemConfigAttributes.get(SystemConfig.TYPE)",
              "startLine": 226,
              "startColumn": 37,
              "endLine": 226,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "String",
              "code": "    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n\n        String storeType = (String) systemConfigAttributes.get(SystemConfig.TYPE);\n\n        // Create the RootLogger to be used during broker operation\n        boolean statusUpdatesEnabled = Boolean.parseBoolean(System.getProperty(SystemConfig.PROPERTY_STATUS_UPDATES, \"true\"));"
            },
            {
              "step": 14,
              "variableName": "(String) systemConfigAttributes.get(SystemConfig.TYPE)",
              "startLine": 226,
              "startColumn": 28,
              "endLine": 226,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "String",
              "code": "    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n\n        String storeType = (String) systemConfigAttributes.get(SystemConfig.TYPE);\n\n        // Create the RootLogger to be used during broker operation\n        boolean statusUpdatesEnabled = Boolean.parseBoolean(System.getProperty(SystemConfig.PROPERTY_STATUS_UPDATES, \"true\"));"
            },
            {
              "step": 15,
              "variableName": "\"Unknown config store type '\" + storeType + \"', only the following types are supported: \" + configFactoryLoader.getSupportedTypes()",
              "startLine": 238,
              "startColumn": 26,
              "endLine": 238,
              "endColumn": 157,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "",
              "code": "        SystemConfigFactory configFactory = configFactoryLoader.get(storeType);\n        if(configFactory == null)\n        {\n            LOGGER.error(\"Unknown config store type '\" + storeType + \"', only the following types are supported: \" + configFactoryLoader.getSupportedTypes());\n            throw new IllegalArgumentException(\"Unknown config store type '\"+storeType+\"', only the following types are supported: \" + configFactoryLoader.getSupportedTypes());\n        }\n"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 289,
              "startColumn": 71,
              "endLine": 289,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "String",
              "code": "                {\n                    password = new StringUtil().randomAlphaNumericString(MANAGEMENT_MODE_PASSWORD_LENGTH);\n                }\n                attributes.put(SystemConfig.MANAGEMENT_MODE_PASSWORD, password);\n            }\n            setExceptionHandler();\n"
            },
            {
              "step": 1,
              "variableName": "attributes",
              "startLine": 289,
              "startColumn": 17,
              "endLine": 289,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                {\n                    password = new StringUtil().randomAlphaNumericString(MANAGEMENT_MODE_PASSWORD_LENGTH);\n                }\n                attributes.put(SystemConfig.MANAGEMENT_MODE_PASSWORD, password);\n            }\n            setExceptionHandler();\n"
            },
            {
              "step": 2,
              "variableName": "attributes",
              "startLine": 293,
              "startColumn": 25,
              "endLine": 293,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "            }\n            setExceptionHandler();\n\n            startBroker(attributes);\n        }\n    }\n"
            },
            {
              "step": 3,
              "variableName": "Map<String,Object> attributes",
              "startLine": 497,
              "startColumn": 32,
              "endLine": 497,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        } \n    }\n\n    protected void startBroker(Map<String,Object> attributes) throws Exception\n    {\n        SystemLauncher systemLauncher = new SystemLauncher(new LogbackLoggingSystemLauncherListener(),\n                                                           new SystemLauncherListener.DefaultSystemLauncherListener()"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 512,
              "startColumn": 32,
              "endLine": 512,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker/src/main/java/org/apache/qpid/server/Main.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                                                               }\n                                                           });\n\n        systemLauncher.startup(attributes);\n    }\n\n    protected void shutdown(final int status)"
            },
            {
              "step": 5,
              "variableName": "final Map<String,Object> systemConfigAttributes",
              "startLine": 193,
              "startColumn": 25,
              "endLine": 193,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    }\n\n\n    public void startup(final Map<String,Object> systemConfigAttributes) throws Exception\n    {\n        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n"
            },
            {
              "step": 6,
              "variableName": "systemConfigAttributes : HashMap [<map.value>] : String",
              "startLine": 198,
              "startColumn": 78,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 7,
              "variableName": "...->... : new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "startLine": 198,
              "startColumn": 78,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 8,
              "variableName": "(...)... : new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "startLine": 198,
              "startColumn": 42,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 9,
              "variableName": "parameter this : new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "startLine": 198,
              "startColumn": 78,
              "endLine": 218,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "        final SystemOutMessageLogger systemOutMessageLogger = new SystemOutMessageLogger();\n\n        _eventLogger = new EventLogger(systemOutMessageLogger);\n        Subject.doAs(_brokerTaskSubject, (PrivilegedExceptionAction<Object>) () ->\n        {\n            _listener.beforeStartup();\n"
            },
            {
              "step": 10,
              "variableName": "systemConfigAttributes",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "new PrivilegedExceptionAction<Object>(...) { ... } [systemConfigAttributes, <map.value>] : String",
              "code": "\n            try\n            {\n                startupImpl(systemConfigAttributes);\n            }\n            catch (RuntimeException e)\n            {"
            },
            {
              "step": 11,
              "variableName": "systemConfigAttributes",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 51,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n            try\n            {\n                startupImpl(systemConfigAttributes);\n            }\n            catch (RuntimeException e)\n            {"
            },
            {
              "step": 12,
              "variableName": "Map<String,Object> systemConfigAttributes",
              "startLine": 222,
              "startColumn": 30,
              "endLine": 222,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    }\n\n    private void startupImpl(Map<String,Object> systemConfigAttributes) throws Exception\n    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n"
            },
            {
              "step": 13,
              "variableName": "systemConfigAttributes",
              "startLine": 226,
              "startColumn": 37,
              "endLine": 226,
              "endColumn": 59,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n\n        String storeType = (String) systemConfigAttributes.get(SystemConfig.TYPE);\n\n        // Create the RootLogger to be used during broker operation\n        boolean statusUpdatesEnabled = Boolean.parseBoolean(System.getProperty(SystemConfig.PROPERTY_STATUS_UPDATES, \"true\"));"
            },
            {
              "step": 14,
              "variableName": "systemConfigAttributes.get(SystemConfig.TYPE)",
              "startLine": 226,
              "startColumn": 37,
              "endLine": 226,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "String",
              "code": "    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n\n        String storeType = (String) systemConfigAttributes.get(SystemConfig.TYPE);\n\n        // Create the RootLogger to be used during broker operation\n        boolean statusUpdatesEnabled = Boolean.parseBoolean(System.getProperty(SystemConfig.PROPERTY_STATUS_UPDATES, \"true\"));"
            },
            {
              "step": 15,
              "variableName": "(String) systemConfigAttributes.get(SystemConfig.TYPE)",
              "startLine": 226,
              "startColumn": 28,
              "endLine": 226,
              "endColumn": 82,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "String",
              "code": "    {\n        populateSystemPropertiesFromDefaults((String) systemConfigAttributes.get(SystemConfig.INITIAL_SYSTEM_PROPERTIES_LOCATION));\n\n        String storeType = (String) systemConfigAttributes.get(SystemConfig.TYPE);\n\n        // Create the RootLogger to be used during broker operation\n        boolean statusUpdatesEnabled = Boolean.parseBoolean(System.getProperty(SystemConfig.PROPERTY_STATUS_UPDATES, \"true\"));"
            },
            {
              "step": 16,
              "variableName": "\"Unknown config store type '\" + storeType + \"', only the following types are supported: \" + configFactoryLoader.getSupportedTypes()",
              "startLine": 238,
              "startColumn": 26,
              "endLine": 238,
              "endColumn": 157,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/SystemLauncher.java",
              "type": "",
              "code": "        SystemConfigFactory configFactory = configFactoryLoader.get(storeType);\n        if(configFactory == null)\n        {\n            LOGGER.error(\"Unknown config store type '\" + storeType + \"', only the following types are supported: \" + configFactoryLoader.getSupportedTypes());\n            throw new IllegalArgumentException(\"Unknown config store type '\"+storeType+\"', only the following types are supported: \" + configFactoryLoader.getSupportedTypes());\n        }\n"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 15,
      "fileName": "AbstractConfiguredObject.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 267,
              "startColumn": 20,
              "endLine": 267,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java",
              "type": "String",
              "code": "    {\n        if (_doNotCreateStoredPasswordBecauseItIsBeingUpgraded)\n        {\n            return password;\n        }\n\n        try"
            },
            {
              "step": 1,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 2,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 5,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 6,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 7,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 8,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 10,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 11,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 12,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 14,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 16,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 17,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 23,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 24,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 25,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 26,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 27,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 28,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 29,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 30,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 31,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 32,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 33,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 34,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 35,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 88,
              "startColumn": 46,
              "endLine": 88,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "                Map<String, Object> userAttrs = new HashMap<>();\n                userAttrs.put(User.ID, UUID.randomUUID());\n                userAttrs.put(User.NAME, username);\n                userAttrs.put(User.PASSWORD, password);\n                userAttrs.put(User.TYPE, ManagedUser.MANAGED_USER_TYPE);\n                User user = createChild(User.class, userAttrs);\n                return user != null;"
            },
            {
              "step": 1,
              "variableName": "userAttrs",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                Map<String, Object> userAttrs = new HashMap<>();\n                userAttrs.put(User.ID, UUID.randomUUID());\n                userAttrs.put(User.NAME, username);\n                userAttrs.put(User.PASSWORD, password);\n                userAttrs.put(User.TYPE, ManagedUser.MANAGED_USER_TYPE);\n                User user = createChild(User.class, userAttrs);\n                return user != null;"
            },
            {
              "step": 2,
              "variableName": "userAttrs",
              "startLine": 90,
              "startColumn": 53,
              "endLine": 90,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                userAttrs.put(User.NAME, username);\n                userAttrs.put(User.PASSWORD, password);\n                userAttrs.put(User.TYPE, ManagedUser.MANAGED_USER_TYPE);\n                User user = createChild(User.class, userAttrs);\n                return user != null;\n            }\n"
            },
            {
              "step": 3,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 5,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "attributes : HashMap [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 7,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 8,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 9,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 10,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 11,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 14,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 15,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 16,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 82,
              "startColumn": 16,
              "endLine": 82,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PlainAuthenticationProvider.java",
              "type": "String",
              "code": "    @Override\n    protected String createStoredPassword(final String password)\n    {\n        return password;\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "createStoredPassword((String) attributes.get(User.PASSWORD))",
              "startLine": 231,
              "startColumn": 43,
              "endLine": 231,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 2,
              "variableName": "attributes",
              "startLine": 231,
              "startColumn": 13,
              "endLine": 231,
              "endColumn": 23,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ConfigModelPasswordManagingAuthenticationProvider.java",
              "type": "Map [<map.value>] : String",
              "code": "            {\n                throw new IllegalArgumentException(\"User '\" + username + \"' already exists\");\n            }\n            attributes.put(User.PASSWORD, createStoredPassword((String) attributes.get(User.PASSWORD)));\n            ManagedUser user = new ManagedUser(attributes, ConfigModelPasswordManagingAuthenticationProvider.this);\n            user.create();\n            return Futures.immediateFuture((C)getUser(username));"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 2017,
              "startColumn": 58,
              "endLine": 2017,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            private ListenableFuture<C> create()\n            {\n                authoriseCreateChild(childClass, attributes);\n                return doAfter(addChildAsync(childClass, attributes), child ->\n                {\n                    if (child != null)\n                    {"
            },
            {
              "step": 5,
              "variableName": "create()",
              "startLine": 2002,
              "startColumn": 30,
              "endLine": 2002,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                ListenableFuture<C> result = null;\n                try\n                {\n                    result = create();\n                }\n                finally\n                {"
            },
            {
              "step": 6,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 7,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 8,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "new (...) [post update] : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 10,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 11,
              "variableName": "new (...) [post update] : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 12,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 13,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 14,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 2951,
              "startColumn": 59,
              "endLine": 2951,
              "endColumn": 69,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        try\n        {\n            queue = createMessageDestination(Queue.class, attributes);\n\n            for (String binding : bindings.keySet())\n            {"
            },
            {
              "step": 16,
              "variableName": "attributes",
              "startLine": 2970,
              "startColumn": 71,
              "endLine": 2970,
              "endColumn": 81,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "                    {\n                        existingQueue.delete();\n\n                        queue = createMessageDestination(Queue.class, attributes);\n\n                        for (String binding : bindings.keySet())\n                        {"
            },
            {
              "step": 17,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2902,
              "startColumn": 70,
              "endLine": 2902,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @Override\n    public <T extends MessageDestination> T createMessageDestination(final Class<T> clazz,\n                                                                     final Map<String, Object> attributes)\n    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2906,
              "startColumn": 70,
              "endLine": 2906,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(Exchange.class.isAssignableFrom(clazz))\n        {\n            return (T) createChild((Class<? extends Exchange>)clazz, attributes);\n        }\n        else if(Queue.class.isAssignableFrom(clazz))\n        {"
            },
            {
              "step": 19,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 20,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 21,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 22,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 23,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 24,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 25,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 26,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 27,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 28,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 29,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 30,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 31,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 32,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 33,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 34,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 35,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 249,
              "startColumn": 38,
              "endLine": 249,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "    {\n        Map<String, Object> userAttrs = new HashMap<>();\n        userAttrs.put(User.NAME, username);\n        userAttrs.put(User.PASSWORD, password);\n\n        User user = createChild(User.class, userAttrs);\n        return user != null;"
            },
            {
              "step": 1,
              "variableName": "userAttrs",
              "startLine": 249,
              "startColumn": 9,
              "endLine": 249,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        Map<String, Object> userAttrs = new HashMap<>();\n        userAttrs.put(User.NAME, username);\n        userAttrs.put(User.PASSWORD, password);\n\n        User user = createChild(User.class, userAttrs);\n        return user != null;"
            },
            {
              "step": 2,
              "variableName": "userAttrs",
              "startLine": 251,
              "startColumn": 45,
              "endLine": 251,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        userAttrs.put(User.NAME, username);\n        userAttrs.put(User.PASSWORD, password);\n\n        User user = createChild(User.class, userAttrs);\n        return user != null;\n\n    }"
            },
            {
              "step": 3,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1985,
              "startColumn": 82,
              "endLine": 1985,
              "endColumn": 118,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 1987,
              "startColumn": 52,
              "endLine": 1987,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> C createChild(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doSync(createChildAsync(childClass, attributes));\n    }\n\n    @SuppressWarnings(\"unchecked\")"
            },
            {
              "step": 5,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 1992,
              "startColumn": 105,
              "endLine": 1992,
              "endColumn": 141,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "attributes : HashMap [<map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 7,
              "variableName": "new (...) : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 1994,
              "startColumn": 33,
              "endLine": 2048,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <C extends ConfiguredObject> ListenableFuture<C> createChildAsync(final Class<C> childClass, final Map<String, Object> attributes)\n    {\n        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()"
            },
            {
              "step": 8,
              "variableName": "final Task<ListenableFuture<T>, E> task",
              "startLine": 616,
              "startColumn": 83,
              "endLine": 616,
              "endColumn": 122,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    }\n\n    protected final <T, E extends Exception> ListenableFuture<T> doOnConfigThread(final Task<ListenableFuture<T>, E> task)\n    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n"
            },
            {
              "step": 9,
              "variableName": "task : new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 10,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "startLine": 620,
              "startColumn": 30,
              "endLine": 667,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    {\n        final SettableFuture<T> returnVal = SettableFuture.create();\n\n        _taskExecutor.submit(new Task<Void, RuntimeException>()\n        {\n\n            @Override"
            },
            {
              "step": 11,
              "variableName": "Task<T, E> task",
              "startLine": 80,
              "startColumn": 64,
              "endLine": 80,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 83,
              "startColumn": 26,
              "endLine": 83,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> ListenableFuture<T> submit(Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        final T result = task.execute();\n        return Futures.immediateFuture(result);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 624,
              "startColumn": 25,
              "endLine": 624,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "        {\n\n            @Override\n            public Void execute()\n            {\n                try\n                {"
            },
            {
              "step": 14,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [task, attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 15,
              "variableName": "task",
              "startLine": 628,
              "startColumn": 39,
              "endLine": 628,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            {\n                try\n                {\n                    addFutureCallback(task.execute(), new FutureCallback<>()\n                    {\n                        @Override\n                        public void onSuccess(final T result)"
            },
            {
              "step": 16,
              "variableName": "execute",
              "startLine": 1997,
              "startColumn": 40,
              "endLine": 1997,
              "endColumn": 47,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return doOnConfigThread(new Task<ListenableFuture<C>, RuntimeException>()\n        {\n            @Override\n            public ListenableFuture<C> execute()\n            {\n                ListenableFuture<C> result = null;\n                try"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<ListenableFuture<C>,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 18,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 2008,
              "startColumn": 48,
              "endLine": 2008,
              "endColumn": 58,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                {\n                    if (result == null)\n                    {\n                        logCreated(childClass, attributes, Outcome.FAILURE);\n                    }\n                }\n                return result;"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 16,
      "fileName": "AbstractConfiguredObject.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "Task<T, E> userTask",
              "startLine": 187,
              "startColumn": 43,
              "endLine": 187,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));"
            },
            {
              "step": 12,
              "variableName": "userTask",
              "startLine": 189,
              "startColumn": 66,
              "endLine": 189,
              "endColumn": 74,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 13,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 14,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 15,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 16,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 189,
              "startColumn": 41,
              "endLine": 189,
              "endColumn": 75,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 17,
              "variableName": "task",
              "startLine": 190,
              "startColumn": 59,
              "endLine": 190,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n\n    private boolean isTaskExecutorThread()"
            },
            {
              "step": 18,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 19,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 20,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 21,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 22,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 23,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 24,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 25,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 26,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 415,
              "startColumn": 44,
              "endLine": 415,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.value>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 415,
              "startColumn": 44,
              "endLine": 415,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.value>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "Task<T, E> userTask",
              "startLine": 187,
              "startColumn": 43,
              "endLine": 187,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));"
            },
            {
              "step": 12,
              "variableName": "userTask",
              "startLine": 189,
              "startColumn": 66,
              "endLine": 189,
              "endColumn": 74,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 13,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 14,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 15,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 16,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 189,
              "startColumn": 41,
              "endLine": 189,
              "endColumn": 75,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 17,
              "variableName": "task",
              "startLine": 190,
              "startColumn": 59,
              "endLine": 190,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n\n    private boolean isTaskExecutorThread()"
            },
            {
              "step": 18,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 19,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 20,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 21,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 22,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 23,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 24,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 25,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 26,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 17,
      "fileName": "AbstractConfiguredObject.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 6,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 7,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 8,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 12,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 13,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 14,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> modifiedAttributes",
              "startLine": 3234,
              "startColumn": 64,
              "endLine": 3234,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    private final void authoriseSetAttributes(final ConfiguredObject<?> proxyForValidation,\n                                                               final Map<String, Object> modifiedAttributes)\n    {\n        if (modifiedAttributes.containsKey(DESIRED_STATE) && State.DELETED.equals(proxyForValidation.getDesiredState()))\n        {"
            },
            {
              "step": 17,
              "variableName": "modifiedAttributes",
              "startLine": 3246,
              "startColumn": 49,
              "endLine": 3246,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            }\n        }\n\n        authorise(this, null, Operation.UPDATE, modifiedAttributes);\n    }\n\n    protected Principal getSystemPrincipal()"
            },
            {
              "step": 18,
              "variableName": "Map<String, Object> arguments",
              "startLine": 3186,
              "startColumn": 28,
              "endLine": 3186,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private void authorise(final ConfiguredObject<?> configuredObject,\n                           SecurityToken token,\n                           final Operation operation,\n                           Map<String, Object> arguments)\n    {\n\n        AccessControl accessControl = getAccessControl();"
            },
            {
              "step": 19,
              "variableName": "arguments",
              "startLine": 3192,
              "startColumn": 89,
              "endLine": 3192,
              "endColumn": 98,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        AccessControl accessControl = getAccessControl();\n        if(accessControl != null)\n        {\n            Result result = accessControl.authorise(token, operation, configuredObject, arguments);\n            LOGGER.debug(\"authorise returned {}\", result);\n            if (result == Result.DEFER)\n            {"
            },
            {
              "step": 20,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 113,
              "startColumn": 29,
              "endLine": 113,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    public Result authorise(final CachingSecurityToken token,\n                            final Operation operation,\n                            final PermissionedObject configuredObject,\n                            final Map<String, Object> arguments)\n    {\n        if(token != null)\n        {"
            },
            {
              "step": 21,
              "variableName": "arguments",
              "startLine": 121,
              "startColumn": 59,
              "endLine": 121,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else\n        {\n            return authorise(operation, configuredObject, arguments);\n        }\n    }\n"
            },
            {
              "step": 22,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 127,
              "startColumn": 22,
              "endLine": 127,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }"
            },
            {
              "step": 23,
              "variableName": "arguments",
              "startLine": 129,
              "startColumn": 64,
              "endLine": 129,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }\n\n"
            },
            {
              "step": 24,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 560,
              "startColumn": 22,
              "endLine": 560,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        switch(operation.getType())\n        {"
            },
            {
              "step": 25,
              "variableName": "arguments",
              "startLine": 571,
              "startColumn": 79,
              "endLine": 571,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "            case DELETE:\n                return authorise(LegacyOperation.DELETE, configuredObject, Collections.emptyMap());\n            case INVOKE_METHOD:\n                return authoriseMethod(configuredObject, operation.getName(), arguments);\n            case PERFORM_ACTION:\n                return authoriseAction(configuredObject, operation.getName(), arguments);\n            case DISCOVER:"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 405,
              "startColumn": 28,
              "endLine": 405,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authoriseMethod(final PermissionedObject configuredObject,\n                           final String methodName,\n                           final Map<String, Object> arguments)\n    {\n\n        Class<? extends ConfiguredObject> categoryClass = configuredObject.getCategoryClass();"
            },
            {
              "step": 27,
              "variableName": "arguments",
              "startLine": 460,
              "startColumn": 82,
              "endLine": 460,
              "endColumn": 91,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if (categoryClass == Exchange.class)\n        {\n            final ObjectProperties props = createObjectPropertiesForExchangeBind(arguments, configuredObject);\n            if (createdBy != null)\n            {\n                props.put(Property.CREATED_BY, createdBy);"
            },
            {
              "step": 28,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 528,
              "startColumn": 68,
              "endLine": 528,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        return hierarchicalName.stream().collect(Collectors.joining(\".\"));\n    }\n\n    private ObjectProperties createObjectPropertiesForExchangeBind(final Map<String, Object> arguments,\n                                                                   final PermissionedObject configuredObject)\n    {\n        ObjectProperties properties = new ObjectProperties();"
            },
            {
              "step": 29,
              "variableName": "arguments",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 30,
              "variableName": "arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 31,
              "variableName": "(String) arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 36,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 32,
              "variableName": "destination",
              "startLine": 541,
              "startColumn": 77,
              "endLine": 541,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());\n\n        MessageDestination dest = virtualhost.getAttainedMessageDestination(destination, false);\n        if (dest != null)\n        {\n            // The temporary attribute (inherited from the binding's queue) seems to exist to allow the user to"
            },
            {
              "step": 33,
              "variableName": "final String name",
              "startLine": 1376,
              "startColumn": 61,
              "endLine": 1376,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public MessageDestination getAttainedMessageDestination(final String name, final boolean mayCreate)\n    {\n        MessageDestination destination = _systemNodeDestinations.get(name);\n        if(destination == null)"
            },
            {
              "step": 34,
              "variableName": "name",
              "startLine": 1381,
              "startColumn": 71,
              "endLine": 1381,
              "endColumn": 75,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "        MessageDestination destination = _systemNodeDestinations.get(name);\n        if(destination == null)\n        {\n            destination = getAttainedChildFromAddress(Exchange.class, name);\n        }\n        if(destination == null)\n        {"
            },
            {
              "step": 35,
              "variableName": "final String address",
              "startLine": 1478,
              "startColumn": 74,
              "endLine": 1478,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "\n    @Override\n    public <T extends ConfiguredObject<?>> T getAttainedChildFromAddress(final Class<T> childClass,\n                                                                         final String address)\n    {\n        T child = awaitChildClassToAttainState(childClass, address);\n        if(child == null && getGlobalAddressDomains() != null)"
            },
            {
              "step": 36,
              "variableName": "address",
              "startLine": 1480,
              "startColumn": 60,
              "endLine": 1480,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "    public <T extends ConfiguredObject<?>> T getAttainedChildFromAddress(final Class<T> childClass,\n                                                                         final String address)\n    {\n        T child = awaitChildClassToAttainState(childClass, address);\n        if(child == null && getGlobalAddressDomains() != null)\n        {\n            for(String domain : getGlobalAddressDomains())"
            },
            {
              "step": 37,
              "variableName": "final String name",
              "startLine": 3321,
              "startColumn": 108,
              "endLine": 3321,
              "endColumn": 125,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        return _awaitAttainmentTimeout;\n    }\n\n    protected final <C extends ConfiguredObject> C awaitChildClassToAttainState(final Class<C> childClass, final String name)\n    {\n        ListenableFuture<C> attainedChildByName = getAttainedChildByName(childClass, name);\n        try"
            },
            {
              "step": 38,
              "variableName": "name",
              "startLine": 3330,
              "startColumn": 138,
              "endLine": 3330,
              "endColumn": 142,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        catch (TimeoutException e)\n        {\n            LOGGER.warn(\"Gave up waiting for {} '{}' to attain state. Check object's state via Management.\", childClass.getSimpleName(), name);\n            return null;\n        }\n    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 6,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 7,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 8,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "Task<T, E> userTask",
              "startLine": 187,
              "startColumn": 43,
              "endLine": 187,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));"
            },
            {
              "step": 10,
              "variableName": "userTask",
              "startLine": 189,
              "startColumn": 66,
              "endLine": 189,
              "endColumn": 74,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 11,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 13,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 14,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 189,
              "startColumn": 41,
              "endLine": 189,
              "endColumn": 75,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 15,
              "variableName": "task",
              "startLine": 190,
              "startColumn": 59,
              "endLine": 190,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n\n    private boolean isTaskExecutorThread()"
            },
            {
              "step": 16,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 17,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 18,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 19,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 20,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 21,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 22,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 23,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 25,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> modifiedAttributes",
              "startLine": 3234,
              "startColumn": 64,
              "endLine": 3234,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    private final void authoriseSetAttributes(final ConfiguredObject<?> proxyForValidation,\n                                                               final Map<String, Object> modifiedAttributes)\n    {\n        if (modifiedAttributes.containsKey(DESIRED_STATE) && State.DELETED.equals(proxyForValidation.getDesiredState()))\n        {"
            },
            {
              "step": 27,
              "variableName": "modifiedAttributes",
              "startLine": 3246,
              "startColumn": 49,
              "endLine": 3246,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            }\n        }\n\n        authorise(this, null, Operation.UPDATE, modifiedAttributes);\n    }\n\n    protected Principal getSystemPrincipal()"
            },
            {
              "step": 28,
              "variableName": "Map<String, Object> arguments",
              "startLine": 3186,
              "startColumn": 28,
              "endLine": 3186,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private void authorise(final ConfiguredObject<?> configuredObject,\n                           SecurityToken token,\n                           final Operation operation,\n                           Map<String, Object> arguments)\n    {\n\n        AccessControl accessControl = getAccessControl();"
            },
            {
              "step": 29,
              "variableName": "arguments",
              "startLine": 3192,
              "startColumn": 89,
              "endLine": 3192,
              "endColumn": 98,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        AccessControl accessControl = getAccessControl();\n        if(accessControl != null)\n        {\n            Result result = accessControl.authorise(token, operation, configuredObject, arguments);\n            LOGGER.debug(\"authorise returned {}\", result);\n            if (result == Result.DEFER)\n            {"
            },
            {
              "step": 30,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 90,
              "startColumn": 29,
              "endLine": 90,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/CompoundAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    public Result authorise(final CompoundSecurityToken token,\n                            final Operation operation,\n                            final PermissionedObject configuredObject,\n                            final Map<String, Object> arguments)\n    {\n        List<AccessControl<?>> underlying = _underlyingControls.get();\n        Map<AccessControl<?>, SecurityToken> compoundToken = token == null ? null : token.getCompoundToken(underlying);"
            },
            {
              "step": 31,
              "variableName": "arguments",
              "startLine": 97,
              "startColumn": 99,
              "endLine": 97,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/CompoundAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "        for(AccessControl control : underlying)\n        {\n            SecurityToken underlyingToken = compoundToken == null ? null : compoundToken.get(control);\n            final Result result = control.authorise(underlyingToken, operation, configuredObject, arguments);\n            if(result.isFinal())\n            {\n                return result;"
            },
            {
              "step": 32,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 113,
              "startColumn": 29,
              "endLine": 113,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    public Result authorise(final CachingSecurityToken token,\n                            final Operation operation,\n                            final PermissionedObject configuredObject,\n                            final Map<String, Object> arguments)\n    {\n        if(token != null)\n        {"
            },
            {
              "step": 33,
              "variableName": "arguments",
              "startLine": 117,
              "startColumn": 71,
              "endLine": 117,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(token != null)\n        {\n            return token.authorise(this, operation, configuredObject, arguments);\n        }\n        else\n        {"
            },
            {
              "step": 34,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 57,
              "startColumn": 22,
              "endLine": 57,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/CachingSecurityToken.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final RuleBasedAccessControl ruleBasedAccessControl, final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        AccessControlCache cache;\n        while((cache = CACHE_UPDATE.get(this)).getAccessControl() != ruleBasedAccessControl)"
            },
            {
              "step": 35,
              "variableName": "arguments",
              "startLine": 68,
              "startColumn": 84,
              "endLine": 68,
              "endColumn": 93,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/CachingSecurityToken.java",
              "type": "Map [<map.value>] : String",
              "code": "        Result result = cache.getCache().get(key);\n        if(result == null)\n        {\n            result = ruleBasedAccessControl.authorise(operation, configuredObject, arguments);\n            cache.getCache().putIfAbsent(key, result);\n        }\n        return result;"
            },
            {
              "step": 36,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 127,
              "startColumn": 22,
              "endLine": 127,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }"
            },
            {
              "step": 37,
              "variableName": "arguments",
              "startLine": 129,
              "startColumn": 64,
              "endLine": 129,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }\n\n"
            },
            {
              "step": 38,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 560,
              "startColumn": 22,
              "endLine": 560,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        switch(operation.getType())\n        {"
            },
            {
              "step": 39,
              "variableName": "arguments",
              "startLine": 571,
              "startColumn": 79,
              "endLine": 571,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "            case DELETE:\n                return authorise(LegacyOperation.DELETE, configuredObject, Collections.emptyMap());\n            case INVOKE_METHOD:\n                return authoriseMethod(configuredObject, operation.getName(), arguments);\n            case PERFORM_ACTION:\n                return authoriseAction(configuredObject, operation.getName(), arguments);\n            case DISCOVER:"
            },
            {
              "step": 40,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 405,
              "startColumn": 28,
              "endLine": 405,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authoriseMethod(final PermissionedObject configuredObject,\n                           final String methodName,\n                           final Map<String, Object> arguments)\n    {\n\n        Class<? extends ConfiguredObject> categoryClass = configuredObject.getCategoryClass();"
            },
            {
              "step": 41,
              "variableName": "arguments",
              "startLine": 460,
              "startColumn": 82,
              "endLine": 460,
              "endColumn": 91,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if (categoryClass == Exchange.class)\n        {\n            final ObjectProperties props = createObjectPropertiesForExchangeBind(arguments, configuredObject);\n            if (createdBy != null)\n            {\n                props.put(Property.CREATED_BY, createdBy);"
            },
            {
              "step": 42,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 528,
              "startColumn": 68,
              "endLine": 528,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        return hierarchicalName.stream().collect(Collectors.joining(\".\"));\n    }\n\n    private ObjectProperties createObjectPropertiesForExchangeBind(final Map<String, Object> arguments,\n                                                                   final PermissionedObject configuredObject)\n    {\n        ObjectProperties properties = new ObjectProperties();"
            },
            {
              "step": 43,
              "variableName": "arguments",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 44,
              "variableName": "arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 45,
              "variableName": "(String) arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 36,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 46,
              "variableName": "destination",
              "startLine": 541,
              "startColumn": 77,
              "endLine": 541,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());\n\n        MessageDestination dest = virtualhost.getAttainedMessageDestination(destination, false);\n        if (dest != null)\n        {\n            // The temporary attribute (inherited from the binding's queue) seems to exist to allow the user to"
            },
            {
              "step": 47,
              "variableName": "final String name",
              "startLine": 1376,
              "startColumn": 61,
              "endLine": 1376,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public MessageDestination getAttainedMessageDestination(final String name, final boolean mayCreate)\n    {\n        MessageDestination destination = _systemNodeDestinations.get(name);\n        if(destination == null)"
            },
            {
              "step": 48,
              "variableName": "name",
              "startLine": 1385,
              "startColumn": 68,
              "endLine": 1385,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "        }\n        if(destination == null)\n        {\n            destination = getAttainedChildFromAddress(Queue.class, name);\n        }\n        if(destination == null && mayCreate)\n        {"
            },
            {
              "step": 49,
              "variableName": "final String address",
              "startLine": 1478,
              "startColumn": 74,
              "endLine": 1478,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "\n    @Override\n    public <T extends ConfiguredObject<?>> T getAttainedChildFromAddress(final Class<T> childClass,\n                                                                         final String address)\n    {\n        T child = awaitChildClassToAttainState(childClass, address);\n        if(child == null && getGlobalAddressDomains() != null)"
            },
            {
              "step": 50,
              "variableName": "address",
              "startLine": 1487,
              "startColumn": 70,
              "endLine": 1487,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "            {\n                if(address.startsWith(domain + \"/\"))\n                {\n                    child = awaitChildClassToAttainState(childClass, address.substring(domain.length()+1));\n                    if(child != null)\n                    {\n                        break;"
            },
            {
              "step": 51,
              "variableName": "address.substring(domain.length()+1)",
              "startLine": 1487,
              "startColumn": 70,
              "endLine": 1487,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "            {\n                if(address.startsWith(domain + \"/\"))\n                {\n                    child = awaitChildClassToAttainState(childClass, address.substring(domain.length()+1));\n                    if(child != null)\n                    {\n                        break;"
            },
            {
              "step": 52,
              "variableName": "final String name",
              "startLine": 3321,
              "startColumn": 108,
              "endLine": 3321,
              "endColumn": 125,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        return _awaitAttainmentTimeout;\n    }\n\n    protected final <C extends ConfiguredObject> C awaitChildClassToAttainState(final Class<C> childClass, final String name)\n    {\n        ListenableFuture<C> attainedChildByName = getAttainedChildByName(childClass, name);\n        try"
            },
            {
              "step": 53,
              "variableName": "name",
              "startLine": 3330,
              "startColumn": 138,
              "endLine": 3330,
              "endColumn": 142,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        catch (TimeoutException e)\n        {\n            LOGGER.warn(\"Gave up waiting for {} '{}' to attain state. Check object's state via Management.\", childClass.getSimpleName(), name);\n            return null;\n        }\n    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 415,
              "startColumn": 44,
              "endLine": 415,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.value>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 6,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 7,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 8,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 12,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 13,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 14,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 15,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> modifiedAttributes",
              "startLine": 3234,
              "startColumn": 64,
              "endLine": 3234,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    private final void authoriseSetAttributes(final ConfiguredObject<?> proxyForValidation,\n                                                               final Map<String, Object> modifiedAttributes)\n    {\n        if (modifiedAttributes.containsKey(DESIRED_STATE) && State.DELETED.equals(proxyForValidation.getDesiredState()))\n        {"
            },
            {
              "step": 17,
              "variableName": "modifiedAttributes",
              "startLine": 3246,
              "startColumn": 49,
              "endLine": 3246,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            }\n        }\n\n        authorise(this, null, Operation.UPDATE, modifiedAttributes);\n    }\n\n    protected Principal getSystemPrincipal()"
            },
            {
              "step": 18,
              "variableName": "Map<String, Object> arguments",
              "startLine": 3186,
              "startColumn": 28,
              "endLine": 3186,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private void authorise(final ConfiguredObject<?> configuredObject,\n                           SecurityToken token,\n                           final Operation operation,\n                           Map<String, Object> arguments)\n    {\n\n        AccessControl accessControl = getAccessControl();"
            },
            {
              "step": 19,
              "variableName": "arguments",
              "startLine": 3192,
              "startColumn": 89,
              "endLine": 3192,
              "endColumn": 98,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        AccessControl accessControl = getAccessControl();\n        if(accessControl != null)\n        {\n            Result result = accessControl.authorise(token, operation, configuredObject, arguments);\n            LOGGER.debug(\"authorise returned {}\", result);\n            if (result == Result.DEFER)\n            {"
            },
            {
              "step": 20,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 113,
              "startColumn": 29,
              "endLine": 113,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    public Result authorise(final CachingSecurityToken token,\n                            final Operation operation,\n                            final PermissionedObject configuredObject,\n                            final Map<String, Object> arguments)\n    {\n        if(token != null)\n        {"
            },
            {
              "step": 21,
              "variableName": "arguments",
              "startLine": 121,
              "startColumn": 59,
              "endLine": 121,
              "endColumn": 68,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else\n        {\n            return authorise(operation, configuredObject, arguments);\n        }\n    }\n"
            },
            {
              "step": 22,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 127,
              "startColumn": 22,
              "endLine": 127,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }"
            },
            {
              "step": 23,
              "variableName": "arguments",
              "startLine": 129,
              "startColumn": 64,
              "endLine": 129,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }\n\n"
            },
            {
              "step": 24,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 560,
              "startColumn": 22,
              "endLine": 560,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        switch(operation.getType())\n        {"
            },
            {
              "step": 25,
              "variableName": "arguments",
              "startLine": 571,
              "startColumn": 79,
              "endLine": 571,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "            case DELETE:\n                return authorise(LegacyOperation.DELETE, configuredObject, Collections.emptyMap());\n            case INVOKE_METHOD:\n                return authoriseMethod(configuredObject, operation.getName(), arguments);\n            case PERFORM_ACTION:\n                return authoriseAction(configuredObject, operation.getName(), arguments);\n            case DISCOVER:"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 405,
              "startColumn": 28,
              "endLine": 405,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authoriseMethod(final PermissionedObject configuredObject,\n                           final String methodName,\n                           final Map<String, Object> arguments)\n    {\n\n        Class<? extends ConfiguredObject> categoryClass = configuredObject.getCategoryClass();"
            },
            {
              "step": 27,
              "variableName": "arguments",
              "startLine": 460,
              "startColumn": 82,
              "endLine": 460,
              "endColumn": 91,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if (categoryClass == Exchange.class)\n        {\n            final ObjectProperties props = createObjectPropertiesForExchangeBind(arguments, configuredObject);\n            if (createdBy != null)\n            {\n                props.put(Property.CREATED_BY, createdBy);"
            },
            {
              "step": 28,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 528,
              "startColumn": 68,
              "endLine": 528,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        return hierarchicalName.stream().collect(Collectors.joining(\".\"));\n    }\n\n    private ObjectProperties createObjectPropertiesForExchangeBind(final Map<String, Object> arguments,\n                                                                   final PermissionedObject configuredObject)\n    {\n        ObjectProperties properties = new ObjectProperties();"
            },
            {
              "step": 29,
              "variableName": "arguments",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 30,
              "variableName": "arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 31,
              "variableName": "(String) arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 36,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 32,
              "variableName": "destination",
              "startLine": 541,
              "startColumn": 77,
              "endLine": 541,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());\n\n        MessageDestination dest = virtualhost.getAttainedMessageDestination(destination, false);\n        if (dest != null)\n        {\n            // The temporary attribute (inherited from the binding's queue) seems to exist to allow the user to"
            },
            {
              "step": 33,
              "variableName": "final String name",
              "startLine": 1376,
              "startColumn": 61,
              "endLine": 1376,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public MessageDestination getAttainedMessageDestination(final String name, final boolean mayCreate)\n    {\n        MessageDestination destination = _systemNodeDestinations.get(name);\n        if(destination == null)"
            },
            {
              "step": 34,
              "variableName": "name",
              "startLine": 1381,
              "startColumn": 71,
              "endLine": 1381,
              "endColumn": 75,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "        MessageDestination destination = _systemNodeDestinations.get(name);\n        if(destination == null)\n        {\n            destination = getAttainedChildFromAddress(Exchange.class, name);\n        }\n        if(destination == null)\n        {"
            },
            {
              "step": 35,
              "variableName": "final String address",
              "startLine": 1478,
              "startColumn": 74,
              "endLine": 1478,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "\n    @Override\n    public <T extends ConfiguredObject<?>> T getAttainedChildFromAddress(final Class<T> childClass,\n                                                                         final String address)\n    {\n        T child = awaitChildClassToAttainState(childClass, address);\n        if(child == null && getGlobalAddressDomains() != null)"
            },
            {
              "step": 36,
              "variableName": "address",
              "startLine": 1480,
              "startColumn": 60,
              "endLine": 1480,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "    public <T extends ConfiguredObject<?>> T getAttainedChildFromAddress(final Class<T> childClass,\n                                                                         final String address)\n    {\n        T child = awaitChildClassToAttainState(childClass, address);\n        if(child == null && getGlobalAddressDomains() != null)\n        {\n            for(String domain : getGlobalAddressDomains())"
            },
            {
              "step": 37,
              "variableName": "final String name",
              "startLine": 3321,
              "startColumn": 108,
              "endLine": 3321,
              "endColumn": 125,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        return _awaitAttainmentTimeout;\n    }\n\n    protected final <C extends ConfiguredObject> C awaitChildClassToAttainState(final Class<C> childClass, final String name)\n    {\n        ListenableFuture<C> attainedChildByName = getAttainedChildByName(childClass, name);\n        try"
            },
            {
              "step": 38,
              "variableName": "name",
              "startLine": 3330,
              "startColumn": 138,
              "endLine": 3330,
              "endColumn": 142,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        catch (TimeoutException e)\n        {\n            LOGGER.warn(\"Gave up waiting for {} '{}' to attain state. Check object's state via Management.\", childClass.getSimpleName(), name);\n            return null;\n        }\n    }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 415,
              "startColumn": 44,
              "endLine": 415,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.value>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes : Map [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 6,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 7,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 8,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 9,
              "variableName": "Task<T, E> userTask",
              "startLine": 187,
              "startColumn": 43,
              "endLine": 187,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));"
            },
            {
              "step": 10,
              "variableName": "userTask",
              "startLine": 189,
              "startColumn": 66,
              "endLine": 189,
              "endColumn": 74,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 11,
              "variableName": "Task<T, E> task",
              "startLine": 231,
              "startColumn": 35,
              "endLine": 231,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "    {\n        private final Task<T,E> _task;\n\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 233,
              "startColumn": 21,
              "endLine": 233,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 13,
              "variableName": "_task",
              "startLine": 233,
              "startColumn": 13,
              "endLine": 233,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "\n        public TaskLoggingWrapper(Task<T, E> task)\n        {\n            _task = task;\n        }\n\n        @Override"
            },
            {
              "step": 14,
              "variableName": "new TaskLoggingWrapper<>(userTask)",
              "startLine": 189,
              "startColumn": 41,
              "endLine": 189,
              "endColumn": 75,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "    @Override\n    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n"
            },
            {
              "step": 15,
              "variableName": "task",
              "startLine": 190,
              "startColumn": 59,
              "endLine": 190,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(Task<T, E> userTask) throws CancellationException, E\n    {\n        TaskLoggingWrapper<T, E> task = new TaskLoggingWrapper<>(userTask);\n        return FutureHelper.<T, E>await(submitWrappedTask(task));\n    }\n\n    private boolean isTaskExecutorThread()"
            },
            {
              "step": 16,
              "variableName": "TaskLoggingWrapper<T, E> task",
              "startLine": 156,
              "startColumn": 76,
              "endLine": 156,
              "endColumn": 105,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "        return submitWrappedTask(new TaskLoggingWrapper<>(userTask));\n    }\n\n    private <T, E extends Exception> ListenableFuture<T> submitWrappedTask(TaskLoggingWrapper<T, E> task) throws E\n    {\n        checkState(task);\n        if (isTaskExecutorThread())"
            },
            {
              "step": 17,
              "variableName": "task",
              "startLine": 165,
              "startColumn": 24,
              "endLine": 165,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "            {\n                LOGGER.trace(\"Running {} immediately\", task);\n            }\n            T result = task.execute();\n            return Futures.immediateFuture(result);\n        }\n        else"
            },
            {
              "step": 18,
              "variableName": "execute",
              "startLine": 237,
              "startColumn": 18,
              "endLine": 237,
              "endColumn": 25,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "        }\n\n        @Override\n        public T execute() throws E\n        {\n            if (LOGGER.isDebugEnabled())\n            {"
            },
            {
              "step": 19,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "TaskLoggingWrapper [_task, attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 20,
              "variableName": "_task",
              "startLine": 248,
              "startColumn": 26,
              "endLine": 248,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/configuration/updater/TaskExecutorImpl.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "            T result = null;\n            try\n            {\n                result = _task.execute();\n                success = true;\n            }\n            finally"
            },
            {
              "step": 21,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 22,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 23,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 24,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [attributes, <map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 25,
              "variableName": "attributes",
              "startLine": 2908,
              "startColumn": 78,
              "endLine": 2908,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())\n                {\n                    validateChange(createProxyForValidation(attributes), attributes.keySet());"
            },
            {
              "step": 26,
              "variableName": "final Map<String, Object> modifiedAttributes",
              "startLine": 3234,
              "startColumn": 64,
              "endLine": 3234,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "\n\n    private final void authoriseSetAttributes(final ConfiguredObject<?> proxyForValidation,\n                                                               final Map<String, Object> modifiedAttributes)\n    {\n        if (modifiedAttributes.containsKey(DESIRED_STATE) && State.DELETED.equals(proxyForValidation.getDesiredState()))\n        {"
            },
            {
              "step": 27,
              "variableName": "modifiedAttributes",
              "startLine": 3246,
              "startColumn": 49,
              "endLine": 3246,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "            }\n        }\n\n        authorise(this, null, Operation.UPDATE, modifiedAttributes);\n    }\n\n    protected Principal getSystemPrincipal()"
            },
            {
              "step": 28,
              "variableName": "Map<String, Object> arguments",
              "startLine": 3186,
              "startColumn": 28,
              "endLine": 3186,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    private void authorise(final ConfiguredObject<?> configuredObject,\n                           SecurityToken token,\n                           final Operation operation,\n                           Map<String, Object> arguments)\n    {\n\n        AccessControl accessControl = getAccessControl();"
            },
            {
              "step": 29,
              "variableName": "arguments",
              "startLine": 3192,
              "startColumn": 89,
              "endLine": 3192,
              "endColumn": 98,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "        AccessControl accessControl = getAccessControl();\n        if(accessControl != null)\n        {\n            Result result = accessControl.authorise(token, operation, configuredObject, arguments);\n            LOGGER.debug(\"authorise returned {}\", result);\n            if (result == Result.DEFER)\n            {"
            },
            {
              "step": 30,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 90,
              "startColumn": 29,
              "endLine": 90,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/CompoundAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    public Result authorise(final CompoundSecurityToken token,\n                            final Operation operation,\n                            final PermissionedObject configuredObject,\n                            final Map<String, Object> arguments)\n    {\n        List<AccessControl<?>> underlying = _underlyingControls.get();\n        Map<AccessControl<?>, SecurityToken> compoundToken = token == null ? null : token.getCompoundToken(underlying);"
            },
            {
              "step": 31,
              "variableName": "arguments",
              "startLine": 97,
              "startColumn": 99,
              "endLine": 97,
              "endColumn": 108,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/CompoundAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "        for(AccessControl control : underlying)\n        {\n            SecurityToken underlyingToken = compoundToken == null ? null : compoundToken.get(control);\n            final Result result = control.authorise(underlyingToken, operation, configuredObject, arguments);\n            if(result.isFinal())\n            {\n                return result;"
            },
            {
              "step": 32,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 113,
              "startColumn": 29,
              "endLine": 113,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    public Result authorise(final CachingSecurityToken token,\n                            final Operation operation,\n                            final PermissionedObject configuredObject,\n                            final Map<String, Object> arguments)\n    {\n        if(token != null)\n        {"
            },
            {
              "step": 33,
              "variableName": "arguments",
              "startLine": 117,
              "startColumn": 71,
              "endLine": 117,
              "endColumn": 80,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "    {\n        if(token != null)\n        {\n            return token.authorise(this, operation, configuredObject, arguments);\n        }\n        else\n        {"
            },
            {
              "step": 34,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 57,
              "startColumn": 22,
              "endLine": 57,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/CachingSecurityToken.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final RuleBasedAccessControl ruleBasedAccessControl, final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        AccessControlCache cache;\n        while((cache = CACHE_UPDATE.get(this)).getAccessControl() != ruleBasedAccessControl)"
            },
            {
              "step": 35,
              "variableName": "arguments",
              "startLine": 68,
              "startColumn": 84,
              "endLine": 68,
              "endColumn": 93,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/CachingSecurityToken.java",
              "type": "Map [<map.value>] : String",
              "code": "        Result result = cache.getCache().get(key);\n        if(result == null)\n        {\n            result = ruleBasedAccessControl.authorise(operation, configuredObject, arguments);\n            cache.getCache().putIfAbsent(key, result);\n        }\n        return result;"
            },
            {
              "step": 36,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 127,
              "startColumn": 22,
              "endLine": 127,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }"
            },
            {
              "step": 37,
              "variableName": "arguments",
              "startLine": 129,
              "startColumn": 64,
              "endLine": 129,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControl.java",
              "type": "Map [<map.value>] : String",
              "code": "                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        return _adapter.authorise(operation, configuredObject, arguments);\n    }\n\n"
            },
            {
              "step": 38,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 560,
              "startColumn": 22,
              "endLine": 560,
              "endColumn": 57,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authorise(final Operation operation,\n                     final PermissionedObject configuredObject,\n                     final Map<String, Object> arguments)\n    {\n        switch(operation.getType())\n        {"
            },
            {
              "step": 39,
              "variableName": "arguments",
              "startLine": 571,
              "startColumn": 79,
              "endLine": 571,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "            case DELETE:\n                return authorise(LegacyOperation.DELETE, configuredObject, Collections.emptyMap());\n            case INVOKE_METHOD:\n                return authoriseMethod(configuredObject, operation.getName(), arguments);\n            case PERFORM_ACTION:\n                return authoriseAction(configuredObject, operation.getName(), arguments);\n            case DISCOVER:"
            },
            {
              "step": 40,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 405,
              "startColumn": 28,
              "endLine": 405,
              "endColumn": 63,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "\n    Result authoriseMethod(final PermissionedObject configuredObject,\n                           final String methodName,\n                           final Map<String, Object> arguments)\n    {\n\n        Class<? extends ConfiguredObject> categoryClass = configuredObject.getCategoryClass();"
            },
            {
              "step": 41,
              "variableName": "arguments",
              "startLine": 460,
              "startColumn": 82,
              "endLine": 460,
              "endColumn": 91,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        }\n        else if (categoryClass == Exchange.class)\n        {\n            final ObjectProperties props = createObjectPropertiesForExchangeBind(arguments, configuredObject);\n            if (createdBy != null)\n            {\n                props.put(Property.CREATED_BY, createdBy);"
            },
            {
              "step": 42,
              "variableName": "final Map<String, Object> arguments",
              "startLine": 528,
              "startColumn": 68,
              "endLine": 528,
              "endColumn": 103,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        return hierarchicalName.stream().collect(Collectors.joining(\".\"));\n    }\n\n    private ObjectProperties createObjectPropertiesForExchangeBind(final Map<String, Object> arguments,\n                                                                   final PermissionedObject configuredObject)\n    {\n        ObjectProperties properties = new ObjectProperties();"
            },
            {
              "step": 43,
              "variableName": "arguments",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "Map [<map.value>] : String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 44,
              "variableName": "arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 45,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 45,
              "variableName": "(String) arguments.get(\"destination\")",
              "startLine": 536,
              "startColumn": 36,
              "endLine": 536,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        final QueueManagingVirtualHost virtualhost = exchange.getVirtualHost();\n\n        properties.setName(exchange.getName());\n        final String destination = (String) arguments.get(\"destination\");\n        properties.put(Property.QUEUE_NAME, destination);\n        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());"
            },
            {
              "step": 46,
              "variableName": "destination",
              "startLine": 541,
              "startColumn": 77,
              "endLine": 541,
              "endColumn": 88,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/access-control/src/main/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapter.java",
              "type": "String",
              "code": "        properties.put(Property.ROUTING_KEY, (String)arguments.get(\"bindingKey\"));\n        properties.put(Property.VIRTUALHOST_NAME, virtualhost.getName());\n\n        MessageDestination dest = virtualhost.getAttainedMessageDestination(destination, false);\n        if (dest != null)\n        {\n            // The temporary attribute (inherited from the binding's queue) seems to exist to allow the user to"
            },
            {
              "step": 47,
              "variableName": "final String name",
              "startLine": 1376,
              "startColumn": 61,
              "endLine": 1376,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public MessageDestination getAttainedMessageDestination(final String name, final boolean mayCreate)\n    {\n        MessageDestination destination = _systemNodeDestinations.get(name);\n        if(destination == null)"
            },
            {
              "step": 48,
              "variableName": "name",
              "startLine": 1385,
              "startColumn": 68,
              "endLine": 1385,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "        }\n        if(destination == null)\n        {\n            destination = getAttainedChildFromAddress(Queue.class, name);\n        }\n        if(destination == null && mayCreate)\n        {"
            },
            {
              "step": 49,
              "variableName": "final String address",
              "startLine": 1478,
              "startColumn": 74,
              "endLine": 1478,
              "endColumn": 94,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "\n    @Override\n    public <T extends ConfiguredObject<?>> T getAttainedChildFromAddress(final Class<T> childClass,\n                                                                         final String address)\n    {\n        T child = awaitChildClassToAttainState(childClass, address);\n        if(child == null && getGlobalAddressDomains() != null)"
            },
            {
              "step": 50,
              "variableName": "address",
              "startLine": 1487,
              "startColumn": 70,
              "endLine": 1487,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "            {\n                if(address.startsWith(domain + \"/\"))\n                {\n                    child = awaitChildClassToAttainState(childClass, address.substring(domain.length()+1));\n                    if(child != null)\n                    {\n                        break;"
            },
            {
              "step": 51,
              "variableName": "address.substring(domain.length()+1)",
              "startLine": 1487,
              "startColumn": 70,
              "endLine": 1487,
              "endColumn": 106,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java",
              "type": "String",
              "code": "            {\n                if(address.startsWith(domain + \"/\"))\n                {\n                    child = awaitChildClassToAttainState(childClass, address.substring(domain.length()+1));\n                    if(child != null)\n                    {\n                        break;"
            },
            {
              "step": 52,
              "variableName": "final String name",
              "startLine": 3321,
              "startColumn": 108,
              "endLine": 3321,
              "endColumn": 125,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        return _awaitAttainmentTimeout;\n    }\n\n    protected final <C extends ConfiguredObject> C awaitChildClassToAttainState(final Class<C> childClass, final String name)\n    {\n        ListenableFuture<C> attainedChildByName = getAttainedChildByName(childClass, name);\n        try"
            },
            {
              "step": 53,
              "variableName": "name",
              "startLine": 3330,
              "startColumn": 138,
              "endLine": 3330,
              "endColumn": 142,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "        }\n        catch (TimeoutException e)\n        {\n            LOGGER.warn(\"Gave up waiting for {} '{}' to attain state. Check object's state via Management.\", childClass.getSimpleName(), name);\n            return null;\n        }\n    }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 18,
      "fileName": "AbstractConfiguredObject.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "User.PASSWORD",
              "startLine": 111,
              "startColumn": 48,
              "endLine": 111,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 111,
              "startColumn": 63,
              "endLine": 111,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "PASSWORD",
              "startLine": 415,
              "startColumn": 34,
              "endLine": 415,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.key>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.key>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 415,
              "startColumn": 44,
              "endLine": 415,
              "endColumn": 52,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.value>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 15,
              "variableName": "updateAttributes",
              "startLine": 2901,
              "startColumn": 32,
              "endLine": 2901,
              "endColumn": 48,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                }\n                finally\n                {\n                    logUpdated(updateAttributes, outcome);\n                }\n                return null;\n            }"
            },
            {
              "step": 16,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3574,
              "startColumn": 31,
              "endLine": 3574,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected void logUpdated(final Map<String, Object> attributes, final Outcome outcome)\n    {\n        final EventLogger eventLogger = getEventLogger();\n        if (eventLogger != null)"
            },
            {
              "step": 17,
              "variableName": "attributes",
              "startLine": 3588,
              "startColumn": 44,
              "endLine": 3588,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3646,
              "startColumn": 41,
              "endLine": 3646,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "        }\n    }\n\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3648,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 21,
              "variableName": "attributes.entrySet",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3649,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 22,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3650,
              "endColumn": 79,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 23,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3651,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>, <map.value>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 24,
              "variableName": "attributes.e",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Stream [<element>] : String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 25,
              "variableName": "attributes.entrySet()",
              "startLine": 3648,
              "startColumn": 16,
              "endLine": 3664,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "\n    protected String attributesAsString(final Map<String, Object> attributes)\n    {\n        return attributes.entrySet()\n                         .stream()\n                         .filter(e -> _attributeTypes.get(e.getKey()) != null)\n                         .sorted(Map.Entry.comparingByKey())"
            },
            {
              "step": 26,
              "variableName": "attributesAsString(attributes)",
              "startLine": 3588,
              "startColumn": 25,
              "endLine": 3588,
              "endColumn": 55,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "",
              "code": "                        getCategoryClass().getSimpleName(),\n                        getName(),\n                        outcome,\n                        attributesAsString(attributes));\n        }\n    }\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 19,
      "fileName": "AbstractPasswordFilePrincipalDatabase.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "passwordFile",
              "startLine": 72,
              "startColumn": 59,
              "endLine": 72,
              "endColumn": 71,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/database/AbstractPasswordFilePrincipalDatabase.java",
              "type": "File",
              "code": "    @Override\n    public final void open(File passwordFile) throws IOException\n    {\n        getLogger().debug(\"PasswordFile using file : {}\", passwordFile.getAbsolutePath());\n        _passwordFile = passwordFile;\n        if (!passwordFile.exists())\n        {"
            },
            {
              "step": 1,
              "variableName": "passwordFile.getAbsolutePath()",
              "startLine": 72,
              "startColumn": 59,
              "endLine": 72,
              "endColumn": 89,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/database/AbstractPasswordFilePrincipalDatabase.java",
              "type": "",
              "code": "    @Override\n    public final void open(File passwordFile) throws IOException\n    {\n        getLogger().debug(\"PasswordFile using file : {}\", passwordFile.getAbsolutePath());\n        _passwordFile = passwordFile;\n        if (!passwordFile.exists())\n        {"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 21,
      "fileName": "ServerScopedRuntimeException.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "PASSWORD",
              "startLine": 96,
              "startColumn": 32,
              "endLine": 96,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 1,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.key>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 2,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 3,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 5,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 6,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.key>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 7,
              "variableName": "entry.getKey()",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 8,
              "variableName": "attributeName",
              "startLine": 3049,
              "startColumn": 41,
              "endLine": 3049,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 9,
              "variableName": "final String name",
              "startLine": 1837,
              "startColumn": 37,
              "endLine": 1837,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 10,
              "variableName": "name",
              "startLine": 1852,
              "startColumn": 39,
              "endLine": 1852,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 11,
              "variableName": "final String name",
              "startLine": 476,
              "startColumn": 36,
              "endLine": 476,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 12,
              "variableName": "\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName()",
              "startLine": 491,
              "startColumn": 52,
              "endLine": 491,
              "endColumn": 157,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n        catch (IllegalAccessException e)\n        {\n            throw new ServerScopedRuntimeException(\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName(),e);\n        }\n        catch (InvocationTargetException e)\n        {"
            },
            {
              "step": 13,
              "variableName": "final String message",
              "startLine": 37,
              "startColumn": 41,
              "endLine": 37,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "String",
              "code": "\n    }\n\n    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);"
            },
            {
              "step": 14,
              "variableName": "message",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "",
              "code": "    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);\n    }\n\n    public ServerScopedRuntimeException(final Throwable cause)"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "PASSWORD",
              "startLine": 96,
              "startColumn": 32,
              "endLine": 96,
              "endColumn": 40,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 1,
              "variableName": "attributes",
              "startLine": 96,
              "startColumn": 17,
              "endLine": 96,
              "endColumn": 27,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.key>] : String",
              "code": "            if (!storedPassword.equals(getActualAttributes().get(User.PASSWORD)))\n            {\n                attributes = new HashMap<>(attributes);\n                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);"
            },
            {
              "step": 2,
              "variableName": "attributes",
              "startLine": 99,
              "startColumn": 32,
              "endLine": 99,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                attributes.put(PASSWORD, storedPassword);\n            }\n        }\n        super.changeAttributes(attributes);\n    }\n\n    @Override"
            },
            {
              "step": 3,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 4,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 5,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 6,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.key>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 7,
              "variableName": "entry.getKey()",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 8,
              "variableName": "attributeName",
              "startLine": 3049,
              "startColumn": 41,
              "endLine": 3049,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 9,
              "variableName": "final String name",
              "startLine": 1837,
              "startColumn": 37,
              "endLine": 1837,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 10,
              "variableName": "name",
              "startLine": 1852,
              "startColumn": 39,
              "endLine": 1852,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 11,
              "variableName": "final String name",
              "startLine": 476,
              "startColumn": 36,
              "endLine": 476,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 12,
              "variableName": "\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName()",
              "startLine": 499,
              "startColumn": 52,
              "endLine": 499,
              "endColumn": 157,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "            {\n                throw (RuntimeException) e.getCause();\n            }\n            throw new ServerScopedRuntimeException(\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName(),e);\n        }\n    }\n"
            },
            {
              "step": 13,
              "variableName": "final String message",
              "startLine": 37,
              "startColumn": 41,
              "endLine": 37,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "String",
              "code": "\n    }\n\n    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);"
            },
            {
              "step": 14,
              "variableName": "message",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "",
              "code": "    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);\n    }\n\n    public ServerScopedRuntimeException(final Throwable cause)"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "User.PASSWORD",
              "startLine": 111,
              "startColumn": 48,
              "endLine": 111,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 1,
              "variableName": "Collections.singletonMap(User.PASSWORD, password)",
              "startLine": 111,
              "startColumn": 23,
              "endLine": 111,
              "endColumn": 72,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/ManagedUser.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setPassword(final String password)\n    {\n        setAttributes(Collections.singletonMap(User.PASSWORD, password));\n    }\n\n    @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 15,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 16,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 17,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 21,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.key>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 22,
              "variableName": "entry.getKey()",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 23,
              "variableName": "attributeName",
              "startLine": 3049,
              "startColumn": 41,
              "endLine": 3049,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 24,
              "variableName": "final String name",
              "startLine": 1837,
              "startColumn": 37,
              "endLine": 1837,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 25,
              "variableName": "name",
              "startLine": 1852,
              "startColumn": 39,
              "endLine": 1852,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 26,
              "variableName": "final String name",
              "startLine": 476,
              "startColumn": 36,
              "endLine": 476,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 27,
              "variableName": "\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName()",
              "startLine": 491,
              "startColumn": 52,
              "endLine": 491,
              "endColumn": 157,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n        catch (IllegalAccessException e)\n        {\n            throw new ServerScopedRuntimeException(\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName(),e);\n        }\n        catch (InvocationTargetException e)\n        {"
            },
            {
              "step": 28,
              "variableName": "final String message",
              "startLine": 37,
              "startColumn": 41,
              "endLine": 37,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "String",
              "code": "\n    }\n\n    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);"
            },
            {
              "step": 29,
              "variableName": "message",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "",
              "code": "    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);\n    }\n\n    public ServerScopedRuntimeException(final Throwable cause)"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "PASSWORD",
              "startLine": 415,
              "startColumn": 34,
              "endLine": 415,
              "endColumn": 42,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 1,
              "variableName": "Map.of(PASSWORD, password)",
              "startLine": 415,
              "startColumn": 27,
              "endLine": 415,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManager.java",
              "type": "Map [<map.key>] : String",
              "code": "        @Override\n        public void setPassword(String password)\n        {\n            setAttributes(Map.of(PASSWORD, password));\n        }\n\n        @Override"
            },
            {
              "step": 2,
              "variableName": "Map<String, Object> attributes",
              "startLine": 2620,
              "startColumn": 31,
              "endLine": 2620,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }"
            },
            {
              "step": 3,
              "variableName": "attributes",
              "startLine": 2622,
              "startColumn": 35,
              "endLine": 2622,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public void setAttributes(Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        doSync(setAttributesAsync(attributes));\n    }\n\n    protected void postSetAttributes(final Set<String> actualUpdatedAttributes)"
            },
            {
              "step": 4,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 2884,
              "startColumn": 54,
              "endLine": 2884,
              "endColumn": 90,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    }\n\n    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);"
            },
            {
              "step": 5,
              "variableName": "attributes",
              "startLine": 2886,
              "startColumn": 67,
              "endLine": 2886,
              "endColumn": 77,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Map [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 6,
              "variableName": "new HashMap<>(attributes)",
              "startLine": 2886,
              "startColumn": 53,
              "endLine": 2886,
              "endColumn": 78,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    @Override\n    public ListenableFuture<Void> setAttributesAsync(final Map<String, Object> attributes) throws IllegalStateException, AccessControlException, IllegalArgumentException\n    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {"
            },
            {
              "step": 7,
              "variableName": "Map<String,Object> updateAttributes : HashMap [<map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 8,
              "variableName": "new (...) : new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "startLine": 2888,
              "startColumn": 17,
              "endLine": 2934,
              "endColumn": 10,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    {\n        final Map<String,Object> updateAttributes = new HashMap<>(attributes);\n        Object desiredState = updateAttributes.remove(ConfiguredObject.DESIRED_STATE);\n        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()"
            },
            {
              "step": 9,
              "variableName": "Task<T,E> task",
              "startLine": 2614,
              "startColumn": 56,
              "endLine": 2614,
              "endColumn": 70,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        return getTaskExecutor();\n    }\n\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }"
            },
            {
              "step": 10,
              "variableName": "task",
              "startLine": 2616,
              "startColumn": 34,
              "endLine": 2616,
              "endColumn": 38,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "\n    protected final <T, E extends Exception> T runTask(Task<T,E> task) throws E\n    {\n        return _taskExecutor.run(task);\n    }\n\n    @Override"
            },
            {
              "step": 11,
              "variableName": "final Task<T, E> task",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 64,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    }\n\n    @Override\n    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();"
            },
            {
              "step": 12,
              "variableName": "task",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/CurrentThreadTaskExecutor.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "    public <T, E extends Exception> T run(final Task<T, E> task) throws CancellationException, E\n    {\n        checkThread();\n        return task.execute();\n    }\n\n    @Override"
            },
            {
              "step": 13,
              "variableName": "execute",
              "startLine": 2891,
              "startColumn": 25,
              "endLine": 2891,
              "endColumn": 32,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "        runTask(new Task<Void, RuntimeException>()\n        {\n            @Override\n            public Void execute()\n            {\n                Outcome outcome = Outcome.FAILURE;\n                try"
            },
            {
              "step": 14,
              "variableName": "setAttributes()",
              "startLine": 2896,
              "startColumn": 21,
              "endLine": 2896,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                Outcome outcome = Outcome.FAILURE;\n                try\n                {\n                    setAttributes();\n                    outcome = Outcome.SUCCESS;\n                }\n                finally"
            },
            {
              "step": 15,
              "variableName": "setAttributes",
              "startLine": 2906,
              "startColumn": 26,
              "endLine": 2906,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                return null;\n            }\n\n            private void setAttributes()\n            {\n                authoriseSetAttributes(createProxyForValidation(attributes), attributes);\n                if (!isSystemProcess())"
            },
            {
              "step": 16,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "new Task<Void,RuntimeException>(...) { ... } [Map<String,Object> updateAttributes, <map.key>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 17,
              "variableName": "updateAttributes",
              "startLine": 2914,
              "startColumn": 34,
              "endLine": 2914,
              "endColumn": 50,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "                    validateChange(createProxyForValidation(attributes), attributes.keySet());\n                }\n\n                changeAttributes(updateAttributes);\n            }\n\n            @Override"
            },
            {
              "step": 18,
              "variableName": "final Map<String, Object> attributes",
              "startLine": 3035,
              "startColumn": 37,
              "endLine": 3035,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        }\n    }\n\n    protected void changeAttributes(final Map<String, Object> attributes)\n    {\n        Collection<String> names = getAttributeNames();\n        Set<String> updatedAttributes = new HashSet<>(attributes.size());"
            },
            {
              "step": 19,
              "variableName": "attributes",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 62,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "HashMap [<map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 20,
              "variableName": "attributes.entrySet()",
              "startLine": 3042,
              "startColumn": 52,
              "endLine": 3042,
              "endColumn": 73,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "EntrySet [<element>, <map.key>] : String",
              "code": "        try\n        {\n            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))"
            },
            {
              "step": 21,
              "variableName": "entry",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "Entry [<map.key>] : String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 22,
              "variableName": "entry.getKey()",
              "startLine": 3044,
              "startColumn": 40,
              "endLine": 3044,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "            bulkChangeStart();\n            for (Map.Entry<String, Object> entry : attributes.entrySet())\n            {\n                String attributeName = entry.getKey();\n                if (names.contains(attributeName))\n                {\n                    Object desired = entry.getValue();"
            },
            {
              "step": 23,
              "variableName": "attributeName",
              "startLine": 3049,
              "startColumn": 41,
              "endLine": 3049,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                {\n                    Object desired = entry.getValue();\n                    Object expected = getAttribute(attributeName);\n                    if (changeAttribute(attributeName, desired))\n                    {\n                        attributeSet(attributeName, expected, desired);\n                        updatedAttributes.add(attributeName);"
            },
            {
              "step": 24,
              "variableName": "final String name",
              "startLine": 1837,
              "startColumn": 37,
              "endLine": 1837,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private boolean changeAttribute(final String name, final Object desired)\n    {\n        synchronized (_attributes)\n        {"
            },
            {
              "step": 25,
              "variableName": "name",
              "startLine": 1852,
              "startColumn": 39,
              "endLine": 1852,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "                _attributes.put(name, desired);\n                if(attr != null && attr.isAutomated())\n                {\n                    automatedSetValue(name, desired);\n                }\n                return true;\n            }"
            },
            {
              "step": 26,
              "variableName": "final String name",
              "startLine": 476,
              "startColumn": 36,
              "endLine": 476,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n    }\n\n    private void automatedSetValue(final String name, Object value)\n    {\n        try\n        {"
            },
            {
              "step": 27,
              "variableName": "\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName()",
              "startLine": 491,
              "startColumn": 52,
              "endLine": 491,
              "endColumn": 157,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java",
              "type": "String",
              "code": "        }\n        catch (IllegalAccessException e)\n        {\n            throw new ServerScopedRuntimeException(\"Unable to set the automated attribute \" + name + \" on the configure object type \" + getClass().getName(),e);\n        }\n        catch (InvocationTargetException e)\n        {"
            },
            {
              "step": 28,
              "variableName": "final String message",
              "startLine": 37,
              "startColumn": 41,
              "endLine": 37,
              "endColumn": 61,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "String",
              "code": "\n    }\n\n    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);"
            },
            {
              "step": 29,
              "variableName": "message",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 29,
              "uri": "qpid-broker-j-9.2.1/broker-core/src/main/java/org/apache/qpid/server/util/ServerScopedRuntimeException.java",
              "type": "",
              "code": "    public ServerScopedRuntimeException(final String message, final Throwable cause)\n    {\n        super(message, cause);\n        LOGGER.error(message, cause);\n    }\n\n    public ServerScopedRuntimeException(final Throwable cause)"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 22,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 534,
              "startColumn": 13,
              "endLine": 534,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnection.java",
              "type": "ServerSession",
              "code": "        ServerSession ssn = getSession(channel);\n        if(ssn != null)\n        {\n            ssn.received(method);\n        }\n        else\n        {"
            },
            {
              "step": 1,
              "variableName": "received",
              "startLine": 504,
              "startColumn": 10,
              "endLine": 504,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 506,
              "startColumn": 20,
              "endLine": 506,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }\n\n    private void send(Method m)"
            },
            {
              "step": 3,
              "variableName": "C context",
              "startLine": 149,
              "startColumn": 30,
              "endLine": 149,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    public abstract <C> void dispatch(C context, MethodDelegate<C> delegate);\n\n    @Override\n    public <C> void delegate(C context, ProtocolDelegate<C> delegate)\n    {\n        if (getEncodedTrack() == Frame.L4)\n        {"
            },
            {
              "step": 4,
              "variableName": "context",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    {\n        if (getEncodedTrack() == Frame.L4)\n        {\n            delegate.command(context, this);\n        }\n        else\n        {"
            },
            {
              "step": 5,
              "variableName": "ServerSession session",
              "startLine": 109,
              "startColumn": 25,
              "endLine": 109,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "    }\n\n    @Override\n    public void command(ServerSession session, Method method)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "session",
              "startLine": 120,
              "startColumn": 21,
              "endLine": 120,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                Object newOutstanding = session.getAsyncCommandMark();\n                if(newOutstanding == null || newOutstanding == asyncCommandMark)\n                {\n                    session.processed(method);\n                }\n\n                if(newOutstanding != null)"
            },
            {
              "step": 7,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 8,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 9,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 10,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 11,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 368,
              "startColumn": 63,
              "endLine": 368,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 536,
              "startColumn": 25,
              "endLine": 536,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                    // TODO: we currently do not send MessageAccept when AcceptMode is EXPLICIT\n                    if (ssn.isTransactional())\n                    {\n                        ssn.processed(xfr);\n                    }\n                    else\n                    {"
            },
            {
              "step": 1,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 2,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 3,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 4,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 5,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 368,
              "startColumn": 63,
              "endLine": 368,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1885,
              "startColumn": 13,
              "endLine": 1885,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        method.dispatch(ssn, this);\n        if (processed)\n        {\n            ssn.processed(method);\n        }\n    }\n"
            },
            {
              "step": 1,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 2,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 3,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 4,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 5,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 368,
              "startColumn": 63,
              "endLine": 368,
              "endColumn": 67,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    {\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} ch={} processed([{},{}]) {} {}\", this, channel, lower, upper, syncPoint, maxProcessed);\n        }\n\n        boolean flush;"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 23,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 534,
              "startColumn": 13,
              "endLine": 534,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnection.java",
              "type": "ServerSession",
              "code": "        ServerSession ssn = getSession(channel);\n        if(ssn != null)\n        {\n            ssn.received(method);\n        }\n        else\n        {"
            },
            {
              "step": 1,
              "variableName": "received",
              "startLine": 504,
              "startColumn": 10,
              "endLine": 504,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 506,
              "startColumn": 20,
              "endLine": 506,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }\n\n    private void send(Method m)"
            },
            {
              "step": 3,
              "variableName": "C context",
              "startLine": 149,
              "startColumn": 30,
              "endLine": 149,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    public abstract <C> void dispatch(C context, MethodDelegate<C> delegate);\n\n    @Override\n    public <C> void delegate(C context, ProtocolDelegate<C> delegate)\n    {\n        if (getEncodedTrack() == Frame.L4)\n        {"
            },
            {
              "step": 4,
              "variableName": "context",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    {\n        if (getEncodedTrack() == Frame.L4)\n        {\n            delegate.command(context, this);\n        }\n        else\n        {"
            },
            {
              "step": 5,
              "variableName": "ServerSession session",
              "startLine": 109,
              "startColumn": 25,
              "endLine": 109,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "    }\n\n    @Override\n    public void command(ServerSession session, Method method)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "session",
              "startLine": 120,
              "startColumn": 21,
              "endLine": 120,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                Object newOutstanding = session.getAsyncCommandMark();\n                if(newOutstanding == null || newOutstanding == asyncCommandMark)\n                {\n                    session.processed(method);\n                }\n\n                if(newOutstanding != null)"
            },
            {
              "step": 7,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 8,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 9,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 10,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 11,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 376,
              "startColumn": 50,
              "endLine": 376,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        {\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{} processed: {}\", this, processed);\n            }\n\n            if (ge(upper, commandsIn))"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 536,
              "startColumn": 25,
              "endLine": 536,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                    // TODO: we currently do not send MessageAccept when AcceptMode is EXPLICIT\n                    if (ssn.isTransactional())\n                    {\n                        ssn.processed(xfr);\n                    }\n                    else\n                    {"
            },
            {
              "step": 1,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 2,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 3,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 4,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 5,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 376,
              "startColumn": 50,
              "endLine": 376,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        {\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{} processed: {}\", this, processed);\n            }\n\n            if (ge(upper, commandsIn))"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1885,
              "startColumn": 13,
              "endLine": 1885,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        method.dispatch(ssn, this);\n        if (processed)\n        {\n            ssn.processed(method);\n        }\n    }\n"
            },
            {
              "step": 1,
              "variableName": "processed",
              "startLine": 348,
              "startColumn": 17,
              "endLine": 348,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }"
            },
            {
              "step": 2,
              "variableName": "processed(command.getId())",
              "startLine": 350,
              "startColumn": 9,
              "endLine": 350,
              "endColumn": 35,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(Method command)\n    {\n        processed(command.getId());\n    }\n\n    public void processed(int command)"
            },
            {
              "step": 3,
              "variableName": "processed",
              "startLine": 353,
              "startColumn": 17,
              "endLine": 353,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(command.getId());\n    }\n\n    public void processed(int command)\n    {\n        processed(command, command);\n    }"
            },
            {
              "step": 4,
              "variableName": "processed(command, command)",
              "startLine": 355,
              "startColumn": 9,
              "endLine": 355,
              "endColumn": 36,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    public void processed(int command)\n    {\n        processed(command, command);\n    }\n\n    public void processed(Range range)"
            },
            {
              "step": 5,
              "variableName": "processed",
              "startLine": 364,
              "startColumn": 17,
              "endLine": 364,
              "endColumn": 26,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        processed(range.getLower(), range.getUpper());\n    }\n\n    public void processed(int lower, int upper)\n    {\n        if(LOGGER.isDebugEnabled())\n        {"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 376,
              "startColumn": 50,
              "endLine": 376,
              "endColumn": 54,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        {\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{} processed: {}\", this, processed);\n            }\n\n            if (ge(upper, commandsIn))"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 24,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 865,
              "startColumn": 9,
              "endLine": 865,
              "endColumn": 12,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "    public void executionSync(final ServerSession ssn, final ExecutionSync sync)\n    {\n        ssn.awaitCommandCompletion();\n        ssn.syncPoint();\n    }\n\n"
            },
            {
              "step": 1,
              "variableName": "syncPoint",
              "startLine": 454,
              "startColumn": 10,
              "endLine": 454,
              "endColumn": 19,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    void syncPoint()\n    {\n        int id = getCommandsIn() - 1;\n        LOGGER.debug(\"{} synced to {}\", this, id);"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 457,
              "startColumn": 41,
              "endLine": 457,
              "endColumn": 45,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "    void syncPoint()\n    {\n        int id = getCommandsIn() - 1;\n        LOGGER.debug(\"{} synced to {}\", this, id);\n        boolean flush;\n        synchronized (processedLock)\n        {"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 25,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1934,
              "startColumn": 36,
              "endLine": 1934,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "            if(ranges.size() == 1)\n            {\n                Range range = ranges.getFirst();\n                boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n\n                if(advanced && cmp.getTimelyReply())\n                {"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 475,
              "startColumn": 49,
              "endLine": 475,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1949,
              "startColumn": 40,
              "endLine": 1949,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                }\n                for (Range range : ranges)\n                {\n                    boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n                    if (advanced && known != null)\n                    {\n                        known.add(range);"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 475,
              "startColumn": 49,
              "endLine": 475,
              "endColumn": 53,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"{} complete({}, {})\", this, lower, upper);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 26,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1934,
              "startColumn": 36,
              "endLine": 1934,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "            if(ranges.size() == 1)\n            {\n                Range range = ranges.getFirst();\n                boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n\n                if(advanced && cmp.getTimelyReply())\n                {"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 496,
              "startColumn": 61,
              "endLine": 496,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{}   commands remaining: {}\", this, commandsOut - maxComplete);\n            }\n\n            commandsLock.notifyAll();"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1934,
              "startColumn": 36,
              "endLine": 1934,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "            if(ranges.size() == 1)\n            {\n                Range range = ranges.getFirst();\n                boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n\n                if(advanced && cmp.getTimelyReply())\n                {"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "maxComplete",
              "startLine": 491,
              "startColumn": 17,
              "endLine": 491,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "            }\n            if (le(lower, maxComplete + 1))\n            {\n                maxComplete = max(maxComplete, upper);\n            }\n\n            if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 3,
              "variableName": "this",
              "startLine": 496,
              "startColumn": 61,
              "endLine": 496,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{}   commands remaining: {}\", this, commandsOut - maxComplete);\n            }\n\n            commandsLock.notifyAll();"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1949,
              "startColumn": 40,
              "endLine": 1949,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                }\n                for (Range range : ranges)\n                {\n                    boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n                    if (advanced && known != null)\n                    {\n                        known.add(range);"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 496,
              "startColumn": 61,
              "endLine": 496,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{}   commands remaining: {}\", this, commandsOut - maxComplete);\n            }\n\n            commandsLock.notifyAll();"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 1949,
              "startColumn": 40,
              "endLine": 1949,
              "endColumn": 43,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                }\n                for (Range range : ranges)\n                {\n                    boolean advanced = ssn.complete(range.getLower(), range.getUpper());\n                    if (advanced && known != null)\n                    {\n                        known.add(range);"
            },
            {
              "step": 1,
              "variableName": "complete",
              "startLine": 470,
              "startColumn": 23,
              "endLine": 470,
              "endColumn": 31,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    protected boolean complete(int lower, int upper)\n    {\n        //avoid autoboxing\n        if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 2,
              "variableName": "maxComplete",
              "startLine": 491,
              "startColumn": 17,
              "endLine": 491,
              "endColumn": 28,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "            }\n            if (le(lower, maxComplete + 1))\n            {\n                maxComplete = max(maxComplete, upper);\n            }\n\n            if(LOGGER.isDebugEnabled())"
            },
            {
              "step": 3,
              "variableName": "this",
              "startLine": 496,
              "startColumn": 61,
              "endLine": 496,
              "endColumn": 65,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "\n            if(LOGGER.isDebugEnabled())\n            {\n                LOGGER.debug(\"{}   commands remaining: {}\", this, commandsOut - maxComplete);\n            }\n\n            commandsLock.notifyAll();"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 27,
      "fileName": "ServerSession.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 534,
              "startColumn": 13,
              "endLine": 534,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnection.java",
              "type": "ServerSession",
              "code": "        ServerSession ssn = getSession(channel);\n        if(ssn != null)\n        {\n            ssn.received(method);\n        }\n        else\n        {"
            },
            {
              "step": 1,
              "variableName": "received",
              "startLine": 504,
              "startColumn": 10,
              "endLine": 504,
              "endColumn": 18,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }"
            },
            {
              "step": 2,
              "variableName": "this",
              "startLine": 506,
              "startColumn": 20,
              "endLine": 506,
              "endColumn": 24,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "\n    void received(Method m)\n    {\n        m.delegate(this, delegate);\n    }\n\n    private void send(Method m)"
            },
            {
              "step": 3,
              "variableName": "C context",
              "startLine": 149,
              "startColumn": 30,
              "endLine": 149,
              "endColumn": 39,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    public abstract <C> void dispatch(C context, MethodDelegate<C> delegate);\n\n    @Override\n    public <C> void delegate(C context, ProtocolDelegate<C> delegate)\n    {\n        if (getEncodedTrack() == Frame.L4)\n        {"
            },
            {
              "step": 4,
              "variableName": "context",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 37,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/transport/Method.java",
              "type": "ServerSession",
              "code": "    {\n        if (getEncodedTrack() == Frame.L4)\n        {\n            delegate.command(context, this);\n        }\n        else\n        {"
            },
            {
              "step": 5,
              "variableName": "ServerSession session",
              "startLine": 109,
              "startColumn": 25,
              "endLine": 109,
              "endColumn": 46,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "    }\n\n    @Override\n    public void command(ServerSession session, Method method)\n    {\n        try\n        {"
            },
            {
              "step": 6,
              "variableName": "session",
              "startLine": 142,
              "startColumn": 23,
              "endLine": 142,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        catch(RuntimeException e)\n        {\n            LOGGER.error(\"Exception processing command\", e);\n            exception(session, method, ExecutionErrorCode.INTERNAL_ERROR, \"Exception processing command: \" + e);\n        }\n    }\n"
            },
            {
              "step": 7,
              "variableName": "ServerSession session",
              "startLine": 1027,
              "startColumn": 28,
              "endLine": 1027,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    private void exception(ServerSession session, Method method, ExecutionErrorCode errorCode, String description)\n    {\n        ExecutionException ex = new ExecutionException();\n        ex.setErrorCode(errorCode);"
            },
            {
              "step": 8,
              "variableName": "session",
              "startLine": 1036,
              "startColumn": 9,
              "endLine": 1036,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "\n        session.invoke(ex);\n\n        session.close(errorCode.getValue(), description);\n    }\n\n    private Exchange<?> getExchange(ServerSession session, String exchangeName, boolean mayCreate)"
            },
            {
              "step": 9,
              "variableName": "close",
              "startLine": 1498,
              "startColumn": 17,
              "endLine": 1498,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        return _modelObject.toLogString();\n    }\n\n    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();"
            },
            {
              "step": 10,
              "variableName": "close()",
              "startLine": 1501,
              "startColumn": 9,
              "endLine": 1501,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();\n    }\n\n    public void close()"
            },
            {
              "step": 11,
              "variableName": "close",
              "startLine": 1504,
              "startColumn": 17,
              "endLine": 1504,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        close();\n    }\n\n    public void close()\n    {\n        // unregister subscriptions in order to prevent sending of new messages\n        // to subscriptions with closing session"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 1515,
              "startColumn": 56,
              "endLine": 1515,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        }\n        if (LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"Closing [{}] in state [{}]\", this, state);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 433,
              "startColumn": 17,
              "endLine": 433,
              "endColumn": 20,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "            {\n                getEventLogger(ssn).message(ChannelMessages.FLOW_CONTROL_IGNORED());\n\n                ssn.close(ErrorCodes.MESSAGE_TOO_LARGE,\n                          \"Session flow control was requested, but not enforced by sender\");\n            }\n            else if(xfr.getBodySize() > ssn.getConnection().getMaxMessageSize())"
            },
            {
              "step": 1,
              "variableName": "close",
              "startLine": 1498,
              "startColumn": 17,
              "endLine": 1498,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        return _modelObject.toLogString();\n    }\n\n    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();"
            },
            {
              "step": 2,
              "variableName": "close()",
              "startLine": 1501,
              "startColumn": 9,
              "endLine": 1501,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();\n    }\n\n    public void close()"
            },
            {
              "step": 3,
              "variableName": "close",
              "startLine": 1504,
              "startColumn": 17,
              "endLine": 1504,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        close();\n    }\n\n    public void close()\n    {\n        // unregister subscriptions in order to prevent sending of new messages\n        // to subscriptions with closing session"
            },
            {
              "step": 4,
              "variableName": "this",
              "startLine": 1515,
              "startColumn": 56,
              "endLine": 1515,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        }\n        if (LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"Closing [{}] in state [{}]\", this, state);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 438,
              "startColumn": 27,
              "endLine": 438,
              "endColumn": 30,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "            }\n            else if(xfr.getBodySize() > ssn.getConnection().getMaxMessageSize())\n            {\n                exception(ssn, xfr, ExecutionErrorCode.RESOURCE_LIMIT_EXCEEDED,\n                          \"Message size of \" + xfr.getBodySize() + \" greater than allowed maximum of \" + ssn.getConnection().getMaxMessageSize());\n            }\n            else"
            },
            {
              "step": 1,
              "variableName": "ServerSession session",
              "startLine": 1027,
              "startColumn": 28,
              "endLine": 1027,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    private void exception(ServerSession session, Method method, ExecutionErrorCode errorCode, String description)\n    {\n        ExecutionException ex = new ExecutionException();\n        ex.setErrorCode(errorCode);"
            },
            {
              "step": 2,
              "variableName": "session",
              "startLine": 1036,
              "startColumn": 9,
              "endLine": 1036,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "\n        session.invoke(ex);\n\n        session.close(errorCode.getValue(), description);\n    }\n\n    private Exchange<?> getExchange(ServerSession session, String exchangeName, boolean mayCreate)"
            },
            {
              "step": 3,
              "variableName": "close",
              "startLine": 1498,
              "startColumn": 17,
              "endLine": 1498,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        return _modelObject.toLogString();\n    }\n\n    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();"
            },
            {
              "step": 4,
              "variableName": "close()",
              "startLine": 1501,
              "startColumn": 9,
              "endLine": 1501,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();\n    }\n\n    public void close()"
            },
            {
              "step": 5,
              "variableName": "close",
              "startLine": 1504,
              "startColumn": 17,
              "endLine": 1504,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        close();\n    }\n\n    public void close()\n    {\n        // unregister subscriptions in order to prevent sending of new messages\n        // to subscriptions with closing session"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 1515,
              "startColumn": 56,
              "endLine": 1515,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        }\n        if (LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"Closing [{}] in state [{}]\", this, state);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "ssn",
              "startLine": 465,
              "startColumn": 31,
              "endLine": 465,
              "endColumn": 34,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "                catch (AccessControlException e)\n                {\n                    ExecutionErrorCode errorCode = ExecutionErrorCode.UNAUTHORIZED_ACCESS;\n                    exception(ssn, xfr, errorCode, e.getMessage());\n\n                    return;\n                }"
            },
            {
              "step": 1,
              "variableName": "ServerSession session",
              "startLine": 1027,
              "startColumn": 28,
              "endLine": 1027,
              "endColumn": 49,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "        }\n    }\n\n    private void exception(ServerSession session, Method method, ExecutionErrorCode errorCode, String description)\n    {\n        ExecutionException ex = new ExecutionException();\n        ex.setErrorCode(errorCode);"
            },
            {
              "step": 2,
              "variableName": "session",
              "startLine": 1036,
              "startColumn": 9,
              "endLine": 1036,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java",
              "type": "ServerSession",
              "code": "\n        session.invoke(ex);\n\n        session.close(errorCode.getValue(), description);\n    }\n\n    private Exchange<?> getExchange(ServerSession session, String exchangeName, boolean mayCreate)"
            },
            {
              "step": 3,
              "variableName": "close",
              "startLine": 1498,
              "startColumn": 17,
              "endLine": 1498,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        return _modelObject.toLogString();\n    }\n\n    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();"
            },
            {
              "step": 4,
              "variableName": "close()",
              "startLine": 1501,
              "startColumn": 9,
              "endLine": 1501,
              "endColumn": 16,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "    public void close(int cause, String message)\n    {\n        _forcedCloseLogMessage.compareAndSet(null, ChannelMessages.CLOSE_FORCED(cause, message));\n        close();\n    }\n\n    public void close()"
            },
            {
              "step": 5,
              "variableName": "close",
              "startLine": 1504,
              "startColumn": 17,
              "endLine": 1504,
              "endColumn": 22,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "ServerSession",
              "code": "        close();\n    }\n\n    public void close()\n    {\n        // unregister subscriptions in order to prevent sending of new messages\n        // to subscriptions with closing session"
            },
            {
              "step": 6,
              "variableName": "this",
              "startLine": 1515,
              "startColumn": 56,
              "endLine": 1515,
              "endColumn": 60,
              "uri": "qpid-broker-j-9.2.1/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSession.java",
              "type": "",
              "code": "        }\n        if (LOGGER.isDebugEnabled())\n        {\n            LOGGER.debug(\"Closing [{}] in state [{}]\", this, state);\n        }\n        synchronized (commandsLock)\n        {"
            }
          ],
          "label": "No"
        }
      ]
    }
  ]
}