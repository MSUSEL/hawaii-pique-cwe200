{
  "201": [
    {
      "resultIndex": 3,
      "fileName": "XtceAssembler.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "histKey",
              "startLine": 193,
              "startColumn": 79,
              "endLine": 193,
              "endColumn": 86,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/commanding/CommandVerificationHandler.java",
              "type": "String",
              "code": "        if (windowStart > 0) {\n            timer.schedule(() -> {\n                if (verifier.state == State.NEW) {\n                    cmdHistPublisher.publishAck(activeCommand.getCommandId(), histKey, processor.getCurrentTime(),\n                            AckStatus.PENDING);\n                    startVerifier(verifier);\n                }"
            },
            {
              "step": 1,
              "variableName": "String key",
              "startLine": 54,
              "startColumn": 46,
              "endLine": 54,
              "endColumn": 56,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/CommandHistoryPublisher.java",
              "type": "String",
              "code": "\n    public abstract void addCommand(PreparedCommand pc);\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state) {\n        publishAck(cmdId, key, time, state, null, null);\n    }\n"
            },
            {
              "step": 2,
              "variableName": "key",
              "startLine": 55,
              "startColumn": 27,
              "endLine": 55,
              "endColumn": 30,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/CommandHistoryPublisher.java",
              "type": "String",
              "code": "    public abstract void addCommand(PreparedCommand pc);\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state) {\n        publishAck(cmdId, key, time, state, null, null);\n    }\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state, String message) {"
            },
            {
              "step": 3,
              "variableName": "String key",
              "startLine": 92,
              "startColumn": 45,
              "endLine": 92,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);"
            },
            {
              "step": 4,
              "variableName": "key + SUFFIX_STATUS",
              "startLine": 95,
              "startColumn": 22,
              "endLine": 95,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 16,
              "startColumn": 27,
              "endLine": 16,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "        return columnDefinitions;\n    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 17,
              "startColumn": 51,
              "endLine": 17,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 7,
              "variableName": "String name",
              "startLine": 10,
              "startColumn": 29,
              "endLine": 10,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    protected final String name;\n    protected final DataType type;\n    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;"
            },
            {
              "step": 8,
              "variableName": "name",
              "startLine": 12,
              "startColumn": 19,
              "endLine": 12,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 9,
              "variableName": "this",
              "startLine": 12,
              "startColumn": 9,
              "endLine": 12,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 10,
              "variableName": "new ColumnDefinition(name, type)",
              "startLine": 17,
              "startColumn": 30,
              "endLine": 17,
              "endColumn": 62,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 11,
              "variableName": "c",
              "startLine": 18,
              "startColumn": 19,
              "endLine": 18,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 12,
              "variableName": "ColumnDefinition c",
              "startLine": 21,
              "startColumn": 27,
              "endLine": 21,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {\n        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }"
            },
            {
              "step": 13,
              "variableName": "c",
              "startLine": 25,
              "startColumn": 31,
              "endLine": 25,
              "endColumn": 32,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 14,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 15,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 16,
              "variableName": "addColumn(c)",
              "startLine": 18,
              "startColumn": 9,
              "endLine": 18,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 17,
              "variableName": "td",
              "startLine": 95,
              "startColumn": 9,
              "endLine": 95,
              "endColumn": 11,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 18,
              "variableName": "td",
              "startLine": 109,
              "startColumn": 36,
              "endLine": 109,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "TupleDefinition definition",
              "startLine": 27,
              "startColumn": 18,
              "endLine": 27,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        this.columns = new ArrayList<>();\n    }\n\n    public Tuple(TupleDefinition definition, List<Object> columns) {\n        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }"
            },
            {
              "step": 20,
              "variableName": "definition",
              "startLine": 31,
              "startColumn": 28,
              "endLine": 31,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 21,
              "variableName": "TupleDefinition definition",
              "startLine": 48,
              "startColumn": 31,
              "endLine": 48,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        columns = new ArrayList<>(Collections.nCopies(tdef.size(), null));\n    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n"
            },
            {
              "step": 22,
              "variableName": "definition",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 24,
              "variableName": "this",
              "startLine": 31,
              "startColumn": 9,
              "endLine": 31,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 25,
              "variableName": "new Tuple(td, vals)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 26,
              "variableName": "Tuple tuple",
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return outputDefinition;\n    }\n\n    public void emitTuple(Tuple tuple) {\n        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {"
            },
            {
              "step": 27,
              "variableName": "tuple",
              "startLine": 56,
              "startColumn": 33,
              "endLine": 56,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {\n                s.onTuple(this, tuple);\n            } catch (Exception e) {\n                if (handler != null) {\n                    handler.handle(tuple, s, e);"
            },
            {
              "step": 28,
              "variableName": "Tuple t",
              "startLine": 318,
              "startColumn": 35,
              "endLine": 318,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public void onTuple(Stream s, Tuple t) {\n        if (quitting) {\n            return;\n        }"
            },
            {
              "step": 29,
              "variableName": "t",
              "startLine": 335,
              "startColumn": 56,
              "endLine": 335,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            replayTime = time;\n\n            ProtoDataType type = ProtoDataType.forNumber((Integer) t.getColumn(0));\n            Object data = handlers.get(type).transform(t);\n            if (data != null) {\n                listener.newData(type, data);\n            }"
            },
            {
              "step": 30,
              "variableName": "Tuple t",
              "startLine": 84,
              "startColumn": 43,
              "endLine": 84,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public List<ParameterValue> transform(Tuple t) {\n        // loop through all the columns containing values\n        // the first column is the ProtoDataType.PP (from the select above),\n        // then are the fixed ones from PP_TUPLE_DEFINITION"
            },
            {
              "step": 31,
              "variableName": "t",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 32,
              "variableName": "getColumnDefinition",
              "startLine": 179,
              "startColumn": 29,
              "endLine": 179,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return definition.getColumn(i);\n    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 34,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 35,
              "variableName": "getColumn",
              "startLine": 80,
              "startColumn": 29,
              "endLine": 80,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        }\n    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n"
            },
            {
              "step": 36,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 37,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 38,
              "variableName": "columnDefinitions.get(index)",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 39,
              "variableName": "definition.getColumn(i)",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 40,
              "variableName": "t.getColumnDefinition(i)",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ColumnDefinition [name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 41,
              "variableName": "getName",
              "startLine": 24,
              "startColumn": 19,
              "endLine": 24,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        return type;\n    }\n\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 42,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 43,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 44,
              "variableName": "t.getColumnDefinition(i).getName()",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 84,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 45,
              "variableName": "String fqn",
              "startLine": 203,
              "startColumn": 42,
              "endLine": 203,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "        return rangeb.build();\n    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;"
            },
            {
              "step": 46,
              "variableName": "fqn",
              "startLine": 204,
              "startColumn": 48,
              "endLine": 204,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 47,
              "variableName": "String fqn",
              "startLine": 31,
              "startColumn": 27,
              "endLine": 31,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "        paramFqn = def.getQualifiedName();\n    }\n\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }"
            },
            {
              "step": 48,
              "variableName": "fqn",
              "startLine": 33,
              "startColumn": 25,
              "endLine": 33,
              "endColumn": 28,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 49,
              "variableName": "this",
              "startLine": 33,
              "startColumn": 9,
              "endLine": 33,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 50,
              "variableName": "new ParameterValue(fqn)",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 51,
              "variableName": "pv",
              "startLine": 206,
              "startColumn": 16,
              "endLine": 206,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }\n\n    public static ParameterValue fromGpb(Parameter pdef, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {"
            },
            {
              "step": 52,
              "variableName": "BasicParameterValue.fromGpb(t.getColumnDefinitio",
              "startLine": 96,
              "startColumn": 22,
              "endLine": 97,
              "endColumn": 70,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 53,
              "variableName": "pv",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 78,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 54,
              "variableName": "getParameterQualifiedName",
              "startLine": 61,
              "startColumn": 19,
              "endLine": 61,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "        return def;\n    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n"
            },
            {
              "step": 55,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 56,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 57,
              "variableName": "pv.getParameterQualifiedName()",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 106,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 58,
              "variableName": "String fqn",
              "startLine": 308,
              "startColumn": 66,
              "endLine": 308,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 59,
              "variableName": "fqn",
              "startLine": 309,
              "startColumn": 43,
              "endLine": 309,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 60,
              "variableName": "String fqn",
              "startLine": 312,
              "startColumn": 66,
              "endLine": 312,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 61,
              "variableName": "fqn",
              "startLine": 315,
              "startColumn": 42,
              "endLine": 315,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 62,
              "variableName": "String parameterQualifiedNamed",
              "startLine": 146,
              "startColumn": 50,
              "endLine": 146,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "     * @throws IllegalArgumentException\n     *             if the <code>parameterQualifiedNamed</code> does not start with {@link #YAMCS_SPACESYSTEM_NAME}\n     */\n    public SystemParameter createSystemParameter(String parameterQualifiedNamed, ParameterType ptype,\n            String shortDescription) {\n\n        if (!parameterQualifiedNamed.startsWith(YAMCS_SPACESYSTEM_NAME)) {"
            },
            {
              "step": 63,
              "variableName": "parameterQualifiedNamed",
              "startLine": 156,
              "startColumn": 58,
              "endLine": 156,
              "endColumn": 81,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 64,
              "variableName": "String fqname",
              "startLine": 20,
              "startColumn": 60,
              "endLine": 20,
              "endColumn": 73,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "        setDataSource(ds);\n    }\n\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);"
            },
            {
              "step": 65,
              "variableName": "fqname",
              "startLine": 23,
              "startColumn": 41,
              "endLine": 23,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 66,
              "variableName": "String fqname",
              "startLine": 221,
              "startColumn": 34,
              "endLine": 221,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @param fqname\n     * @return\n     */\n    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;"
            },
            {
              "step": 67,
              "variableName": "fqname",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;\n        }\n        return fqname.substring(index + 1);\n    }"
            },
            {
              "step": 68,
              "variableName": "NameDescription.getName(fqname)",
              "startLine": 23,
              "startColumn": 17,
              "endLine": 23,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 69,
              "variableName": "String name",
              "startLine": 14,
              "startColumn": 53,
              "endLine": 14,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "public class SystemParameter extends Parameter {\n    private static final long serialVersionUID = 2L;\n\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);"
            },
            {
              "step": 70,
              "variableName": "spaceSystemName + \"/\" + name",
              "startLine": 16,
              "startColumn": 26,
              "endLine": 16,
              "endColumn": 54,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 71,
              "variableName": "setQualifiedName(spaceSystemName + \"/\" + name)",
              "startLine": 16,
              "startColumn": 9,
              "endLine": 16,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 72,
              "variableName": "new SystemParameter(Nam",
              "startLine": 22,
              "startColumn": 30,
              "endLine": 23,
              "endColumn": 53,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);"
            },
            {
              "step": 73,
              "variableName": "sp",
              "startLine": 30,
              "startColumn": 16,
              "endLine": 30,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);\n        sp.setRecordingGroup(fqname.substring(0, pos));\n\n        return sp;\n    }\n\n    private static DataSource getSystemParameterDataSource(String fqname) {"
            },
            {
              "step": 74,
              "variableName": "SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed)",
              "startLine": 156,
              "startColumn": 17,
              "endLine": 156,
              "endColumn": 82,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 75,
              "variableName": "p",
              "startLine": 158,
              "startColumn": 28,
              "endLine": 158,
              "endColumn": 29,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 76,
              "variableName": "doAddParameter(p, true, true)",
              "startLine": 158,
              "startColumn": 13,
              "endLine": 158,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 77,
              "variableName": "mdb",
              "startLine": 315,
              "startColumn": 16,
              "endLine": 315,
              "endColumn": 19,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 78,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 79,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 80,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 81,
              "variableName": "Mdb mdb",
              "startLine": 308,
              "startColumn": 57,
              "endLine": 308,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 82,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 83,
              "variableName": "Mdb mdb",
              "startLine": 312,
              "startColumn": 57,
              "endLine": 312,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 84,
              "variableName": "mdb",
              "startLine": 314,
              "startColumn": 57,
              "endLine": 314,
              "endColumn": 60,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n"
            },
            {
              "step": 85,
              "variableName": "Mdb mdb",
              "startLine": 353,
              "startColumn": 59,
              "endLine": 353,
              "endColumn": 66,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return mdb.createSystemParameter(qualifiedName(namespace, relativeName), type, description);\n    }\n\n    public static ParameterType createSystemParameterType(Mdb mdb, String name, Value v, UnitType unit) {\n        if (v instanceof AggregateValue) {\n            AggregateValue aggrv = (AggregateValue) v;\n            AggregateParameterType.Builder aggrType = new AggregateParameterType.Builder();"
            },
            {
              "step": 86,
              "variableName": "mdb",
              "startLine": 382,
              "startColumn": 33,
              "endLine": 382,
              "endColumn": 36,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                    .build();\n            return mdb.addSystemParameterType(arrayType);\n        } else {\n            return getBasicType(mdb, v.getType(), unit);\n        }\n    }\n"
            },
            {
              "step": 87,
              "variableName": "Mdb mdb",
              "startLine": 402,
              "startColumn": 39,
              "endLine": 402,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return getBasicType(mdb, type, unit);\n    }\n\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {"
            },
            {
              "step": 88,
              "variableName": "mdb",
              "startLine": 404,
              "startColumn": 20,
              "endLine": 404,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {\n            // this normally does not happen becasuse the /yamcs spacesystem is not actually written to disk\n            throw new UncheckedIOException(e);"
            },
            {
              "step": 89,
              "variableName": "getOrCreateBasicParameterType",
              "startLine": 206,
              "startColumn": 26,
              "endLine": 206,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * <p>\n     * The namespace has to be writable otherwise an IllegalArgumentException will be thrown\n     */\n    public ParameterType getOrCreateBasicParameterType(String namespace, Type type, UnitType unit) throws IOException {\n\n        switch (type) {\n        case BINARY:"
            },
            {
              "step": 90,
              "variableName": "getOrCreateParameterType(namespace, \"bina",
              "startLine": 210,
              "startColumn": 20,
              "endLine": 211,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        switch (type) {\n        case BINARY:\n            return getOrCreateParameterType(namespace, \"binary\", unit,\n                    () -> new BinaryParameterType.Builder());\n        case BOOLEAN:\n            return getOrCreateParameterType(namespace, \"boolean\", unit,"
            },
            {
              "step": 91,
              "variableName": "getOrCreateParameterType",
              "startLine": 245,
              "startColumn": 27,
              "endLine": 245,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        }\n    }\n\n    private ParameterType getOrCreateParameterType(String namespace, String name, UnitType unit,\n            Supplier<ParameterType.Builder<?>> supplier) throws IOException {\n\n        String units;"
            },
            {
              "step": 92,
              "variableName": "this",
              "startLine": 275,
              "startColumn": 40,
              "endLine": 275,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        var writer = getWriter(namespace);\n        doAddParameterType(Arrays.asList(ptype), true);\n        writer.writer.write(namespace, this);\n        return ptype;\n    }\n"
            },
            {
              "step": 93,
              "variableName": "Mdb mdb",
              "startLine": 37,
              "startColumn": 35,
              "endLine": 37,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        this.xtceFiles = xtceFiles;\n    }\n\n    public void write(String fqn, Mdb mdb) throws IOException {\n        String sname = NameDescription.getName(fqn);\n        String filename = xtceFiles.get(sname);\n        if (filename == null) {"
            },
            {
              "step": 94,
              "variableName": "mdb",
              "startLine": 43,
              "startColumn": 47,
              "endLine": 43,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (filename == null) {\n            throw new IllegalStateException(\"Have no file for subsystem '\" + sname + \"'. Full name is: '\" + fqn + \"'\");\n        }\n        var xtce = new XtceAssembler().toXtce(mdb, fqn, name -> true);\n        File f = new File(filename);\n        log.debug(\"Writing spaceystem {} to {}\", fqn, filename);\n        try (FileWriter fw = new FileWriter(f)) {"
            },
            {
              "step": 95,
              "variableName": "Mdb mdb",
              "startLine": 199,
              "startColumn": 32,
              "endLine": 199,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * @param filter\n     * @return\n     */\n    public final String toXtce(Mdb mdb, String topSpaceSystem, Predicate<String> filter) {\n        this.mdb = mdb;\n        try {\n            String unindentedXML;"
            },
            {
              "step": 96,
              "variableName": "mdb",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 97,
              "variableName": "getSpaceSystem",
              "startLine": 308,
              "startColumn": 24,
              "endLine": 308,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return rootSystem;\n    }\n\n    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);"
            },
            {
              "step": 98,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 99,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 100,
              "variableName": "get",
              "startLine": 47,
              "startColumn": 14,
              "endLine": 47,
              "endColumn": 17,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    /**\n     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n"
            },
            {
              "step": 101,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 102,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "LinkedHashMap [<map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 103,
              "variableName": "index.get(qualifiedName)",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 104,
              "variableName": "spaceSystemAliases.get(qualifiedName)",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "SpaceSystem [name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 105,
              "variableName": "mdb.getSpaceSystem(topSpaceSystem)",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 69,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 106,
              "variableName": "top",
              "startLine": 211,
              "startColumn": 45,
              "endLine": 211,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }\n                writeSpaceSystem(xmlWriter, top, true, filter);\n                xmlWriter.writeEndDocument();\n                xmlWriter.close();\n                unindentedXML = writer.toString();"
            },
            {
              "step": 107,
              "variableName": "SpaceSystem spaceSystem",
              "startLine": 243,
              "startColumn": 56,
              "endLine": 243,
              "endColumn": 79,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        }\n    }\n\n    private void writeSpaceSystem(XMLStreamWriter doc, SpaceSystem spaceSystem, boolean emitNamespace,\n            Predicate<String> filter)\n            throws XMLStreamException {\n"
            },
            {
              "step": 108,
              "variableName": "spaceSystem",
              "startLine": 257,
              "startColumn": 35,
              "endLine": 257,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        if (emitNamespace) {\n            doc.writeDefaultNamespace(NS_XTCE_V1_2);\n        }\n        writeNameDescription(doc, spaceSystem);\n\n        Header header = spaceSystem.getHeader();\n        if (header != null) {"
            },
            {
              "step": 109,
              "variableName": "NameDescription nameDescription",
              "startLine": 1197,
              "startColumn": 67,
              "endLine": 1197,
              "endColumn": 98,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        doc.writeEndElement();\n    }\n\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {"
            },
            {
              "step": 110,
              "variableName": "nameDescription",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            },
            {
              "step": 111,
              "variableName": "getName",
              "startLine": 78,
              "startColumn": 19,
              "endLine": 78,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * \n     * @return\n     */\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 112,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 113,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 114,
              "variableName": "nameDescription.getName()",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "histKey",
              "startLine": 199,
              "startColumn": 71,
              "endLine": 199,
              "endColumn": 78,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/commanding/CommandVerificationHandler.java",
              "type": "String",
              "code": "                }\n            }, windowStart, TimeUnit.MILLISECONDS);\n\n            cmdHistPublisher.publishAck(activeCommand.getCommandId(), histKey, processor.getCurrentTime(),\n                    AckStatus.SCHEDULED);\n        } else {\n            cmdHistPublisher.publishAck(activeCommand.getCommandId(), histKey, processor.getCurrentTime(),"
            },
            {
              "step": 1,
              "variableName": "String key",
              "startLine": 54,
              "startColumn": 46,
              "endLine": 54,
              "endColumn": 56,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/CommandHistoryPublisher.java",
              "type": "String",
              "code": "\n    public abstract void addCommand(PreparedCommand pc);\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state) {\n        publishAck(cmdId, key, time, state, null, null);\n    }\n"
            },
            {
              "step": 2,
              "variableName": "key",
              "startLine": 55,
              "startColumn": 27,
              "endLine": 55,
              "endColumn": 30,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/CommandHistoryPublisher.java",
              "type": "String",
              "code": "    public abstract void addCommand(PreparedCommand pc);\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state) {\n        publishAck(cmdId, key, time, state, null, null);\n    }\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state, String message) {"
            },
            {
              "step": 3,
              "variableName": "String key",
              "startLine": 92,
              "startColumn": 45,
              "endLine": 92,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);"
            },
            {
              "step": 4,
              "variableName": "key + SUFFIX_STATUS",
              "startLine": 95,
              "startColumn": 22,
              "endLine": 95,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 16,
              "startColumn": 27,
              "endLine": 16,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "        return columnDefinitions;\n    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 17,
              "startColumn": 51,
              "endLine": 17,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 7,
              "variableName": "String name",
              "startLine": 10,
              "startColumn": 29,
              "endLine": 10,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    protected final String name;\n    protected final DataType type;\n    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;"
            },
            {
              "step": 8,
              "variableName": "name",
              "startLine": 12,
              "startColumn": 19,
              "endLine": 12,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 9,
              "variableName": "this",
              "startLine": 12,
              "startColumn": 9,
              "endLine": 12,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 10,
              "variableName": "new ColumnDefinition(name, type)",
              "startLine": 17,
              "startColumn": 30,
              "endLine": 17,
              "endColumn": 62,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 11,
              "variableName": "c",
              "startLine": 18,
              "startColumn": 19,
              "endLine": 18,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 12,
              "variableName": "ColumnDefinition c",
              "startLine": 21,
              "startColumn": 27,
              "endLine": 21,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {\n        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }"
            },
            {
              "step": 13,
              "variableName": "c",
              "startLine": 25,
              "startColumn": 31,
              "endLine": 25,
              "endColumn": 32,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 14,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 15,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 16,
              "variableName": "addColumn(c)",
              "startLine": 18,
              "startColumn": 9,
              "endLine": 18,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 17,
              "variableName": "td",
              "startLine": 95,
              "startColumn": 9,
              "endLine": 95,
              "endColumn": 11,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 18,
              "variableName": "td",
              "startLine": 109,
              "startColumn": 36,
              "endLine": 109,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "TupleDefinition definition",
              "startLine": 27,
              "startColumn": 18,
              "endLine": 27,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        this.columns = new ArrayList<>();\n    }\n\n    public Tuple(TupleDefinition definition, List<Object> columns) {\n        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }"
            },
            {
              "step": 20,
              "variableName": "definition",
              "startLine": 31,
              "startColumn": 28,
              "endLine": 31,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 21,
              "variableName": "TupleDefinition definition",
              "startLine": 48,
              "startColumn": 31,
              "endLine": 48,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        columns = new ArrayList<>(Collections.nCopies(tdef.size(), null));\n    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n"
            },
            {
              "step": 22,
              "variableName": "definition",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 24,
              "variableName": "this",
              "startLine": 31,
              "startColumn": 9,
              "endLine": 31,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 25,
              "variableName": "new Tuple(td, vals)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 26,
              "variableName": "Tuple tuple",
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return outputDefinition;\n    }\n\n    public void emitTuple(Tuple tuple) {\n        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {"
            },
            {
              "step": 27,
              "variableName": "tuple",
              "startLine": 56,
              "startColumn": 33,
              "endLine": 56,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {\n                s.onTuple(this, tuple);\n            } catch (Exception e) {\n                if (handler != null) {\n                    handler.handle(tuple, s, e);"
            },
            {
              "step": 28,
              "variableName": "Tuple t",
              "startLine": 318,
              "startColumn": 35,
              "endLine": 318,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public void onTuple(Stream s, Tuple t) {\n        if (quitting) {\n            return;\n        }"
            },
            {
              "step": 29,
              "variableName": "t",
              "startLine": 335,
              "startColumn": 56,
              "endLine": 335,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            replayTime = time;\n\n            ProtoDataType type = ProtoDataType.forNumber((Integer) t.getColumn(0));\n            Object data = handlers.get(type).transform(t);\n            if (data != null) {\n                listener.newData(type, data);\n            }"
            },
            {
              "step": 30,
              "variableName": "Tuple t",
              "startLine": 84,
              "startColumn": 43,
              "endLine": 84,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public List<ParameterValue> transform(Tuple t) {\n        // loop through all the columns containing values\n        // the first column is the ProtoDataType.PP (from the select above),\n        // then are the fixed ones from PP_TUPLE_DEFINITION"
            },
            {
              "step": 31,
              "variableName": "t",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 32,
              "variableName": "getColumnDefinition",
              "startLine": 179,
              "startColumn": 29,
              "endLine": 179,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return definition.getColumn(i);\n    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 34,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 35,
              "variableName": "getColumn",
              "startLine": 80,
              "startColumn": 29,
              "endLine": 80,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        }\n    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n"
            },
            {
              "step": 36,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 37,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 38,
              "variableName": "columnDefinitions.get(index)",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 39,
              "variableName": "definition.getColumn(i)",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 40,
              "variableName": "t.getColumnDefinition(i)",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ColumnDefinition [name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 41,
              "variableName": "getName",
              "startLine": 24,
              "startColumn": 19,
              "endLine": 24,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        return type;\n    }\n\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 42,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 43,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 44,
              "variableName": "t.getColumnDefinition(i).getName()",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 84,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 45,
              "variableName": "String fqn",
              "startLine": 203,
              "startColumn": 42,
              "endLine": 203,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "        return rangeb.build();\n    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;"
            },
            {
              "step": 46,
              "variableName": "fqn",
              "startLine": 204,
              "startColumn": 48,
              "endLine": 204,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 47,
              "variableName": "String fqn",
              "startLine": 31,
              "startColumn": 27,
              "endLine": 31,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "        paramFqn = def.getQualifiedName();\n    }\n\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }"
            },
            {
              "step": 48,
              "variableName": "fqn",
              "startLine": 33,
              "startColumn": 25,
              "endLine": 33,
              "endColumn": 28,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 49,
              "variableName": "this",
              "startLine": 33,
              "startColumn": 9,
              "endLine": 33,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 50,
              "variableName": "new ParameterValue(fqn)",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 51,
              "variableName": "pv",
              "startLine": 206,
              "startColumn": 16,
              "endLine": 206,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }\n\n    public static ParameterValue fromGpb(Parameter pdef, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {"
            },
            {
              "step": 52,
              "variableName": "BasicParameterValue.fromGpb(t.getColumnDefinitio",
              "startLine": 96,
              "startColumn": 22,
              "endLine": 97,
              "endColumn": 70,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 53,
              "variableName": "pv",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 78,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 54,
              "variableName": "getParameterQualifiedName",
              "startLine": 61,
              "startColumn": 19,
              "endLine": 61,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "        return def;\n    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n"
            },
            {
              "step": 55,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 56,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 57,
              "variableName": "pv.getParameterQualifiedName()",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 106,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 58,
              "variableName": "String fqn",
              "startLine": 308,
              "startColumn": 66,
              "endLine": 308,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 59,
              "variableName": "fqn",
              "startLine": 309,
              "startColumn": 43,
              "endLine": 309,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 60,
              "variableName": "String fqn",
              "startLine": 312,
              "startColumn": 66,
              "endLine": 312,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 61,
              "variableName": "fqn",
              "startLine": 315,
              "startColumn": 42,
              "endLine": 315,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 62,
              "variableName": "String parameterQualifiedNamed",
              "startLine": 146,
              "startColumn": 50,
              "endLine": 146,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "     * @throws IllegalArgumentException\n     *             if the <code>parameterQualifiedNamed</code> does not start with {@link #YAMCS_SPACESYSTEM_NAME}\n     */\n    public SystemParameter createSystemParameter(String parameterQualifiedNamed, ParameterType ptype,\n            String shortDescription) {\n\n        if (!parameterQualifiedNamed.startsWith(YAMCS_SPACESYSTEM_NAME)) {"
            },
            {
              "step": 63,
              "variableName": "parameterQualifiedNamed",
              "startLine": 156,
              "startColumn": 58,
              "endLine": 156,
              "endColumn": 81,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 64,
              "variableName": "String fqname",
              "startLine": 20,
              "startColumn": 60,
              "endLine": 20,
              "endColumn": 73,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "        setDataSource(ds);\n    }\n\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);"
            },
            {
              "step": 65,
              "variableName": "fqname",
              "startLine": 23,
              "startColumn": 41,
              "endLine": 23,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 66,
              "variableName": "String fqname",
              "startLine": 221,
              "startColumn": 34,
              "endLine": 221,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @param fqname\n     * @return\n     */\n    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;"
            },
            {
              "step": 67,
              "variableName": "fqname",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;\n        }\n        return fqname.substring(index + 1);\n    }"
            },
            {
              "step": 68,
              "variableName": "NameDescription.getName(fqname)",
              "startLine": 23,
              "startColumn": 17,
              "endLine": 23,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 69,
              "variableName": "String name",
              "startLine": 14,
              "startColumn": 53,
              "endLine": 14,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "public class SystemParameter extends Parameter {\n    private static final long serialVersionUID = 2L;\n\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);"
            },
            {
              "step": 70,
              "variableName": "spaceSystemName + \"/\" + name",
              "startLine": 16,
              "startColumn": 26,
              "endLine": 16,
              "endColumn": 54,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 71,
              "variableName": "setQualifiedName(spaceSystemName + \"/\" + name)",
              "startLine": 16,
              "startColumn": 9,
              "endLine": 16,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 72,
              "variableName": "new SystemParameter(Nam",
              "startLine": 22,
              "startColumn": 30,
              "endLine": 23,
              "endColumn": 53,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);"
            },
            {
              "step": 73,
              "variableName": "sp",
              "startLine": 30,
              "startColumn": 16,
              "endLine": 30,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);\n        sp.setRecordingGroup(fqname.substring(0, pos));\n\n        return sp;\n    }\n\n    private static DataSource getSystemParameterDataSource(String fqname) {"
            },
            {
              "step": 74,
              "variableName": "SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed)",
              "startLine": 156,
              "startColumn": 17,
              "endLine": 156,
              "endColumn": 82,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 75,
              "variableName": "p",
              "startLine": 158,
              "startColumn": 28,
              "endLine": 158,
              "endColumn": 29,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 76,
              "variableName": "doAddParameter(p, true, true)",
              "startLine": 158,
              "startColumn": 13,
              "endLine": 158,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 77,
              "variableName": "mdb",
              "startLine": 315,
              "startColumn": 16,
              "endLine": 315,
              "endColumn": 19,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 78,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 79,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 80,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 81,
              "variableName": "Mdb mdb",
              "startLine": 308,
              "startColumn": 57,
              "endLine": 308,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 82,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 83,
              "variableName": "Mdb mdb",
              "startLine": 312,
              "startColumn": 57,
              "endLine": 312,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 84,
              "variableName": "mdb",
              "startLine": 314,
              "startColumn": 57,
              "endLine": 314,
              "endColumn": 60,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n"
            },
            {
              "step": 85,
              "variableName": "Mdb mdb",
              "startLine": 353,
              "startColumn": 59,
              "endLine": 353,
              "endColumn": 66,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return mdb.createSystemParameter(qualifiedName(namespace, relativeName), type, description);\n    }\n\n    public static ParameterType createSystemParameterType(Mdb mdb, String name, Value v, UnitType unit) {\n        if (v instanceof AggregateValue) {\n            AggregateValue aggrv = (AggregateValue) v;\n            AggregateParameterType.Builder aggrType = new AggregateParameterType.Builder();"
            },
            {
              "step": 86,
              "variableName": "mdb",
              "startLine": 382,
              "startColumn": 33,
              "endLine": 382,
              "endColumn": 36,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                    .build();\n            return mdb.addSystemParameterType(arrayType);\n        } else {\n            return getBasicType(mdb, v.getType(), unit);\n        }\n    }\n"
            },
            {
              "step": 87,
              "variableName": "Mdb mdb",
              "startLine": 402,
              "startColumn": 39,
              "endLine": 402,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return getBasicType(mdb, type, unit);\n    }\n\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {"
            },
            {
              "step": 88,
              "variableName": "mdb",
              "startLine": 404,
              "startColumn": 20,
              "endLine": 404,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {\n            // this normally does not happen becasuse the /yamcs spacesystem is not actually written to disk\n            throw new UncheckedIOException(e);"
            },
            {
              "step": 89,
              "variableName": "getOrCreateBasicParameterType",
              "startLine": 206,
              "startColumn": 26,
              "endLine": 206,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * <p>\n     * The namespace has to be writable otherwise an IllegalArgumentException will be thrown\n     */\n    public ParameterType getOrCreateBasicParameterType(String namespace, Type type, UnitType unit) throws IOException {\n\n        switch (type) {\n        case BINARY:"
            },
            {
              "step": 90,
              "variableName": "getOrCreateParameterType(namespace, \"bina",
              "startLine": 210,
              "startColumn": 20,
              "endLine": 211,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        switch (type) {\n        case BINARY:\n            return getOrCreateParameterType(namespace, \"binary\", unit,\n                    () -> new BinaryParameterType.Builder());\n        case BOOLEAN:\n            return getOrCreateParameterType(namespace, \"boolean\", unit,"
            },
            {
              "step": 91,
              "variableName": "getOrCreateParameterType",
              "startLine": 245,
              "startColumn": 27,
              "endLine": 245,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        }\n    }\n\n    private ParameterType getOrCreateParameterType(String namespace, String name, UnitType unit,\n            Supplier<ParameterType.Builder<?>> supplier) throws IOException {\n\n        String units;"
            },
            {
              "step": 92,
              "variableName": "this",
              "startLine": 275,
              "startColumn": 40,
              "endLine": 275,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        var writer = getWriter(namespace);\n        doAddParameterType(Arrays.asList(ptype), true);\n        writer.writer.write(namespace, this);\n        return ptype;\n    }\n"
            },
            {
              "step": 93,
              "variableName": "Mdb mdb",
              "startLine": 37,
              "startColumn": 35,
              "endLine": 37,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        this.xtceFiles = xtceFiles;\n    }\n\n    public void write(String fqn, Mdb mdb) throws IOException {\n        String sname = NameDescription.getName(fqn);\n        String filename = xtceFiles.get(sname);\n        if (filename == null) {"
            },
            {
              "step": 94,
              "variableName": "mdb",
              "startLine": 43,
              "startColumn": 47,
              "endLine": 43,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (filename == null) {\n            throw new IllegalStateException(\"Have no file for subsystem '\" + sname + \"'. Full name is: '\" + fqn + \"'\");\n        }\n        var xtce = new XtceAssembler().toXtce(mdb, fqn, name -> true);\n        File f = new File(filename);\n        log.debug(\"Writing spaceystem {} to {}\", fqn, filename);\n        try (FileWriter fw = new FileWriter(f)) {"
            },
            {
              "step": 95,
              "variableName": "Mdb mdb",
              "startLine": 199,
              "startColumn": 32,
              "endLine": 199,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * @param filter\n     * @return\n     */\n    public final String toXtce(Mdb mdb, String topSpaceSystem, Predicate<String> filter) {\n        this.mdb = mdb;\n        try {\n            String unindentedXML;"
            },
            {
              "step": 96,
              "variableName": "mdb",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 97,
              "variableName": "getSpaceSystem",
              "startLine": 308,
              "startColumn": 24,
              "endLine": 308,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return rootSystem;\n    }\n\n    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);"
            },
            {
              "step": 98,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 99,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 100,
              "variableName": "get",
              "startLine": 47,
              "startColumn": 14,
              "endLine": 47,
              "endColumn": 17,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    /**\n     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n"
            },
            {
              "step": 101,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 102,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "LinkedHashMap [<map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 103,
              "variableName": "index.get(qualifiedName)",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 104,
              "variableName": "spaceSystemAliases.get(qualifiedName)",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "SpaceSystem [name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 105,
              "variableName": "mdb.getSpaceSystem(topSpaceSystem)",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 69,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 106,
              "variableName": "top",
              "startLine": 211,
              "startColumn": 45,
              "endLine": 211,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }\n                writeSpaceSystem(xmlWriter, top, true, filter);\n                xmlWriter.writeEndDocument();\n                xmlWriter.close();\n                unindentedXML = writer.toString();"
            },
            {
              "step": 107,
              "variableName": "SpaceSystem spaceSystem",
              "startLine": 243,
              "startColumn": 56,
              "endLine": 243,
              "endColumn": 79,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        }\n    }\n\n    private void writeSpaceSystem(XMLStreamWriter doc, SpaceSystem spaceSystem, boolean emitNamespace,\n            Predicate<String> filter)\n            throws XMLStreamException {\n"
            },
            {
              "step": 108,
              "variableName": "spaceSystem",
              "startLine": 257,
              "startColumn": 35,
              "endLine": 257,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        if (emitNamespace) {\n            doc.writeDefaultNamespace(NS_XTCE_V1_2);\n        }\n        writeNameDescription(doc, spaceSystem);\n\n        Header header = spaceSystem.getHeader();\n        if (header != null) {"
            },
            {
              "step": 109,
              "variableName": "NameDescription nameDescription",
              "startLine": 1197,
              "startColumn": 67,
              "endLine": 1197,
              "endColumn": 98,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        doc.writeEndElement();\n    }\n\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {"
            },
            {
              "step": 110,
              "variableName": "nameDescription",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            },
            {
              "step": 111,
              "variableName": "getName",
              "startLine": 78,
              "startColumn": 19,
              "endLine": 78,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * \n     * @return\n     */\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 112,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 113,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 114,
              "variableName": "nameDescription.getName()",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "histKey",
              "startLine": 202,
              "startColumn": 71,
              "endLine": 202,
              "endColumn": 78,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/commanding/CommandVerificationHandler.java",
              "type": "String",
              "code": "            cmdHistPublisher.publishAck(activeCommand.getCommandId(), histKey, processor.getCurrentTime(),\n                    AckStatus.SCHEDULED);\n        } else {\n            cmdHistPublisher.publishAck(activeCommand.getCommandId(), histKey, processor.getCurrentTime(),\n                    AckStatus.PENDING);\n            verifier.start();\n        }"
            },
            {
              "step": 1,
              "variableName": "String key",
              "startLine": 54,
              "startColumn": 46,
              "endLine": 54,
              "endColumn": 56,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/CommandHistoryPublisher.java",
              "type": "String",
              "code": "\n    public abstract void addCommand(PreparedCommand pc);\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state) {\n        publishAck(cmdId, key, time, state, null, null);\n    }\n"
            },
            {
              "step": 2,
              "variableName": "key",
              "startLine": 55,
              "startColumn": 27,
              "endLine": 55,
              "endColumn": 30,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/CommandHistoryPublisher.java",
              "type": "String",
              "code": "    public abstract void addCommand(PreparedCommand pc);\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state) {\n        publishAck(cmdId, key, time, state, null, null);\n    }\n\n    default void publishAck(CommandId cmdId, String key, long time, AckStatus state, String message) {"
            },
            {
              "step": 3,
              "variableName": "String key",
              "startLine": 92,
              "startColumn": 45,
              "endLine": 92,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);"
            },
            {
              "step": 4,
              "variableName": "key + SUFFIX_STATUS",
              "startLine": 95,
              "startColumn": 22,
              "endLine": 95,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 16,
              "startColumn": 27,
              "endLine": 16,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "        return columnDefinitions;\n    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 17,
              "startColumn": 51,
              "endLine": 17,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 7,
              "variableName": "String name",
              "startLine": 10,
              "startColumn": 29,
              "endLine": 10,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    protected final String name;\n    protected final DataType type;\n    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;"
            },
            {
              "step": 8,
              "variableName": "name",
              "startLine": 12,
              "startColumn": 19,
              "endLine": 12,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 9,
              "variableName": "this",
              "startLine": 12,
              "startColumn": 9,
              "endLine": 12,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 10,
              "variableName": "new ColumnDefinition(name, type)",
              "startLine": 17,
              "startColumn": 30,
              "endLine": 17,
              "endColumn": 62,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 11,
              "variableName": "c",
              "startLine": 18,
              "startColumn": 19,
              "endLine": 18,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 12,
              "variableName": "ColumnDefinition c",
              "startLine": 21,
              "startColumn": 27,
              "endLine": 21,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {\n        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }"
            },
            {
              "step": 13,
              "variableName": "c",
              "startLine": 25,
              "startColumn": 31,
              "endLine": 25,
              "endColumn": 32,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 14,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 15,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 16,
              "variableName": "addColumn(c)",
              "startLine": 18,
              "startColumn": 9,
              "endLine": 18,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 17,
              "variableName": "td",
              "startLine": 95,
              "startColumn": 9,
              "endLine": 95,
              "endColumn": 11,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 18,
              "variableName": "td",
              "startLine": 109,
              "startColumn": 36,
              "endLine": 109,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 19,
              "variableName": "TupleDefinition definition",
              "startLine": 27,
              "startColumn": 18,
              "endLine": 27,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        this.columns = new ArrayList<>();\n    }\n\n    public Tuple(TupleDefinition definition, List<Object> columns) {\n        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }"
            },
            {
              "step": 20,
              "variableName": "definition",
              "startLine": 31,
              "startColumn": 28,
              "endLine": 31,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 21,
              "variableName": "TupleDefinition definition",
              "startLine": 48,
              "startColumn": 31,
              "endLine": 48,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        columns = new ArrayList<>(Collections.nCopies(tdef.size(), null));\n    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n"
            },
            {
              "step": 22,
              "variableName": "definition",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 23,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 24,
              "variableName": "this",
              "startLine": 31,
              "startColumn": 9,
              "endLine": 31,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 25,
              "variableName": "new Tuple(td, vals)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 26,
              "variableName": "Tuple tuple",
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return outputDefinition;\n    }\n\n    public void emitTuple(Tuple tuple) {\n        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {"
            },
            {
              "step": 27,
              "variableName": "tuple",
              "startLine": 56,
              "startColumn": 33,
              "endLine": 56,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {\n                s.onTuple(this, tuple);\n            } catch (Exception e) {\n                if (handler != null) {\n                    handler.handle(tuple, s, e);"
            },
            {
              "step": 28,
              "variableName": "Tuple t",
              "startLine": 318,
              "startColumn": 35,
              "endLine": 318,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public void onTuple(Stream s, Tuple t) {\n        if (quitting) {\n            return;\n        }"
            },
            {
              "step": 29,
              "variableName": "t",
              "startLine": 335,
              "startColumn": 56,
              "endLine": 335,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            replayTime = time;\n\n            ProtoDataType type = ProtoDataType.forNumber((Integer) t.getColumn(0));\n            Object data = handlers.get(type).transform(t);\n            if (data != null) {\n                listener.newData(type, data);\n            }"
            },
            {
              "step": 30,
              "variableName": "Tuple t",
              "startLine": 84,
              "startColumn": 43,
              "endLine": 84,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public List<ParameterValue> transform(Tuple t) {\n        // loop through all the columns containing values\n        // the first column is the ProtoDataType.PP (from the select above),\n        // then are the fixed ones from PP_TUPLE_DEFINITION"
            },
            {
              "step": 31,
              "variableName": "t",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 32,
              "variableName": "getColumnDefinition",
              "startLine": 179,
              "startColumn": 29,
              "endLine": 179,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return definition.getColumn(i);\n    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n"
            },
            {
              "step": 33,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 34,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 35,
              "variableName": "getColumn",
              "startLine": 80,
              "startColumn": 29,
              "endLine": 80,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        }\n    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n"
            },
            {
              "step": 36,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 37,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 38,
              "variableName": "columnDefinitions.get(index)",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 39,
              "variableName": "definition.getColumn(i)",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 40,
              "variableName": "t.getColumnDefinition(i)",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ColumnDefinition [name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 41,
              "variableName": "getName",
              "startLine": 24,
              "startColumn": 19,
              "endLine": 24,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        return type;\n    }\n\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 42,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 43,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 44,
              "variableName": "t.getColumnDefinition(i).getName()",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 84,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 45,
              "variableName": "String fqn",
              "startLine": 203,
              "startColumn": 42,
              "endLine": 203,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "        return rangeb.build();\n    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;"
            },
            {
              "step": 46,
              "variableName": "fqn",
              "startLine": 204,
              "startColumn": 48,
              "endLine": 204,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 47,
              "variableName": "String fqn",
              "startLine": 31,
              "startColumn": 27,
              "endLine": 31,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "        paramFqn = def.getQualifiedName();\n    }\n\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }"
            },
            {
              "step": 48,
              "variableName": "fqn",
              "startLine": 33,
              "startColumn": 25,
              "endLine": 33,
              "endColumn": 28,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 49,
              "variableName": "this",
              "startLine": 33,
              "startColumn": 9,
              "endLine": 33,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 50,
              "variableName": "new ParameterValue(fqn)",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 51,
              "variableName": "pv",
              "startLine": 206,
              "startColumn": 16,
              "endLine": 206,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }\n\n    public static ParameterValue fromGpb(Parameter pdef, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {"
            },
            {
              "step": 52,
              "variableName": "BasicParameterValue.fromGpb(t.getColumnDefinitio",
              "startLine": 96,
              "startColumn": 22,
              "endLine": 97,
              "endColumn": 70,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 53,
              "variableName": "pv",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 78,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 54,
              "variableName": "getParameterQualifiedName",
              "startLine": 61,
              "startColumn": 19,
              "endLine": 61,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "        return def;\n    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n"
            },
            {
              "step": 55,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 56,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 57,
              "variableName": "pv.getParameterQualifiedName()",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 106,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 58,
              "variableName": "String fqn",
              "startLine": 308,
              "startColumn": 66,
              "endLine": 308,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 59,
              "variableName": "fqn",
              "startLine": 309,
              "startColumn": 43,
              "endLine": 309,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 60,
              "variableName": "String fqn",
              "startLine": 312,
              "startColumn": 66,
              "endLine": 312,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 61,
              "variableName": "fqn",
              "startLine": 315,
              "startColumn": 42,
              "endLine": 315,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 62,
              "variableName": "String parameterQualifiedNamed",
              "startLine": 146,
              "startColumn": 50,
              "endLine": 146,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "     * @throws IllegalArgumentException\n     *             if the <code>parameterQualifiedNamed</code> does not start with {@link #YAMCS_SPACESYSTEM_NAME}\n     */\n    public SystemParameter createSystemParameter(String parameterQualifiedNamed, ParameterType ptype,\n            String shortDescription) {\n\n        if (!parameterQualifiedNamed.startsWith(YAMCS_SPACESYSTEM_NAME)) {"
            },
            {
              "step": 63,
              "variableName": "parameterQualifiedNamed",
              "startLine": 156,
              "startColumn": 58,
              "endLine": 156,
              "endColumn": 81,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 64,
              "variableName": "String fqname",
              "startLine": 20,
              "startColumn": 60,
              "endLine": 20,
              "endColumn": 73,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "        setDataSource(ds);\n    }\n\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);"
            },
            {
              "step": 65,
              "variableName": "fqname",
              "startLine": 23,
              "startColumn": 41,
              "endLine": 23,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 66,
              "variableName": "String fqname",
              "startLine": 221,
              "startColumn": 34,
              "endLine": 221,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @param fqname\n     * @return\n     */\n    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;"
            },
            {
              "step": 67,
              "variableName": "fqname",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;\n        }\n        return fqname.substring(index + 1);\n    }"
            },
            {
              "step": 68,
              "variableName": "NameDescription.getName(fqname)",
              "startLine": 23,
              "startColumn": 17,
              "endLine": 23,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 69,
              "variableName": "String name",
              "startLine": 14,
              "startColumn": 53,
              "endLine": 14,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "public class SystemParameter extends Parameter {\n    private static final long serialVersionUID = 2L;\n\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);"
            },
            {
              "step": 70,
              "variableName": "spaceSystemName + \"/\" + name",
              "startLine": 16,
              "startColumn": 26,
              "endLine": 16,
              "endColumn": 54,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 71,
              "variableName": "setQualifiedName(spaceSystemName + \"/\" + name)",
              "startLine": 16,
              "startColumn": 9,
              "endLine": 16,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 72,
              "variableName": "new SystemParameter(Nam",
              "startLine": 22,
              "startColumn": 30,
              "endLine": 23,
              "endColumn": 53,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);"
            },
            {
              "step": 73,
              "variableName": "sp",
              "startLine": 30,
              "startColumn": 16,
              "endLine": 30,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);\n        sp.setRecordingGroup(fqname.substring(0, pos));\n\n        return sp;\n    }\n\n    private static DataSource getSystemParameterDataSource(String fqname) {"
            },
            {
              "step": 74,
              "variableName": "SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed)",
              "startLine": 156,
              "startColumn": 17,
              "endLine": 156,
              "endColumn": 82,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 75,
              "variableName": "p",
              "startLine": 158,
              "startColumn": 28,
              "endLine": 158,
              "endColumn": 29,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 76,
              "variableName": "doAddParameter(p, true, true)",
              "startLine": 158,
              "startColumn": 13,
              "endLine": 158,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 77,
              "variableName": "mdb",
              "startLine": 315,
              "startColumn": 16,
              "endLine": 315,
              "endColumn": 19,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 78,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 79,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 80,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 81,
              "variableName": "Mdb mdb",
              "startLine": 308,
              "startColumn": 57,
              "endLine": 308,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 82,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 83,
              "variableName": "Mdb mdb",
              "startLine": 312,
              "startColumn": 57,
              "endLine": 312,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 84,
              "variableName": "mdb",
              "startLine": 314,
              "startColumn": 57,
              "endLine": 314,
              "endColumn": 60,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n"
            },
            {
              "step": 85,
              "variableName": "Mdb mdb",
              "startLine": 353,
              "startColumn": 59,
              "endLine": 353,
              "endColumn": 66,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return mdb.createSystemParameter(qualifiedName(namespace, relativeName), type, description);\n    }\n\n    public static ParameterType createSystemParameterType(Mdb mdb, String name, Value v, UnitType unit) {\n        if (v instanceof AggregateValue) {\n            AggregateValue aggrv = (AggregateValue) v;\n            AggregateParameterType.Builder aggrType = new AggregateParameterType.Builder();"
            },
            {
              "step": 86,
              "variableName": "mdb",
              "startLine": 382,
              "startColumn": 33,
              "endLine": 382,
              "endColumn": 36,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                    .build();\n            return mdb.addSystemParameterType(arrayType);\n        } else {\n            return getBasicType(mdb, v.getType(), unit);\n        }\n    }\n"
            },
            {
              "step": 87,
              "variableName": "Mdb mdb",
              "startLine": 402,
              "startColumn": 39,
              "endLine": 402,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return getBasicType(mdb, type, unit);\n    }\n\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {"
            },
            {
              "step": 88,
              "variableName": "mdb",
              "startLine": 404,
              "startColumn": 20,
              "endLine": 404,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {\n            // this normally does not happen becasuse the /yamcs spacesystem is not actually written to disk\n            throw new UncheckedIOException(e);"
            },
            {
              "step": 89,
              "variableName": "getOrCreateBasicParameterType",
              "startLine": 206,
              "startColumn": 26,
              "endLine": 206,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * <p>\n     * The namespace has to be writable otherwise an IllegalArgumentException will be thrown\n     */\n    public ParameterType getOrCreateBasicParameterType(String namespace, Type type, UnitType unit) throws IOException {\n\n        switch (type) {\n        case BINARY:"
            },
            {
              "step": 90,
              "variableName": "getOrCreateParameterType(namespace, \"bina",
              "startLine": 210,
              "startColumn": 20,
              "endLine": 211,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        switch (type) {\n        case BINARY:\n            return getOrCreateParameterType(namespace, \"binary\", unit,\n                    () -> new BinaryParameterType.Builder());\n        case BOOLEAN:\n            return getOrCreateParameterType(namespace, \"boolean\", unit,"
            },
            {
              "step": 91,
              "variableName": "getOrCreateParameterType",
              "startLine": 245,
              "startColumn": 27,
              "endLine": 245,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        }\n    }\n\n    private ParameterType getOrCreateParameterType(String namespace, String name, UnitType unit,\n            Supplier<ParameterType.Builder<?>> supplier) throws IOException {\n\n        String units;"
            },
            {
              "step": 92,
              "variableName": "this",
              "startLine": 275,
              "startColumn": 40,
              "endLine": 275,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        var writer = getWriter(namespace);\n        doAddParameterType(Arrays.asList(ptype), true);\n        writer.writer.write(namespace, this);\n        return ptype;\n    }\n"
            },
            {
              "step": 93,
              "variableName": "Mdb mdb",
              "startLine": 37,
              "startColumn": 35,
              "endLine": 37,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        this.xtceFiles = xtceFiles;\n    }\n\n    public void write(String fqn, Mdb mdb) throws IOException {\n        String sname = NameDescription.getName(fqn);\n        String filename = xtceFiles.get(sname);\n        if (filename == null) {"
            },
            {
              "step": 94,
              "variableName": "mdb",
              "startLine": 43,
              "startColumn": 47,
              "endLine": 43,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (filename == null) {\n            throw new IllegalStateException(\"Have no file for subsystem '\" + sname + \"'. Full name is: '\" + fqn + \"'\");\n        }\n        var xtce = new XtceAssembler().toXtce(mdb, fqn, name -> true);\n        File f = new File(filename);\n        log.debug(\"Writing spaceystem {} to {}\", fqn, filename);\n        try (FileWriter fw = new FileWriter(f)) {"
            },
            {
              "step": 95,
              "variableName": "Mdb mdb",
              "startLine": 199,
              "startColumn": 32,
              "endLine": 199,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * @param filter\n     * @return\n     */\n    public final String toXtce(Mdb mdb, String topSpaceSystem, Predicate<String> filter) {\n        this.mdb = mdb;\n        try {\n            String unindentedXML;"
            },
            {
              "step": 96,
              "variableName": "mdb",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 97,
              "variableName": "getSpaceSystem",
              "startLine": 308,
              "startColumn": 24,
              "endLine": 308,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return rootSystem;\n    }\n\n    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);"
            },
            {
              "step": 98,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 99,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 100,
              "variableName": "get",
              "startLine": 47,
              "startColumn": 14,
              "endLine": 47,
              "endColumn": 17,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    /**\n     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n"
            },
            {
              "step": 101,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 102,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "LinkedHashMap [<map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 103,
              "variableName": "index.get(qualifiedName)",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 104,
              "variableName": "spaceSystemAliases.get(qualifiedName)",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "SpaceSystem [name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 105,
              "variableName": "mdb.getSpaceSystem(topSpaceSystem)",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 69,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 106,
              "variableName": "top",
              "startLine": 211,
              "startColumn": 45,
              "endLine": 211,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }\n                writeSpaceSystem(xmlWriter, top, true, filter);\n                xmlWriter.writeEndDocument();\n                xmlWriter.close();\n                unindentedXML = writer.toString();"
            },
            {
              "step": 107,
              "variableName": "SpaceSystem spaceSystem",
              "startLine": 243,
              "startColumn": 56,
              "endLine": 243,
              "endColumn": 79,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        }\n    }\n\n    private void writeSpaceSystem(XMLStreamWriter doc, SpaceSystem spaceSystem, boolean emitNamespace,\n            Predicate<String> filter)\n            throws XMLStreamException {\n"
            },
            {
              "step": 108,
              "variableName": "spaceSystem",
              "startLine": 257,
              "startColumn": 35,
              "endLine": 257,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        if (emitNamespace) {\n            doc.writeDefaultNamespace(NS_XTCE_V1_2);\n        }\n        writeNameDescription(doc, spaceSystem);\n\n        Header header = spaceSystem.getHeader();\n        if (header != null) {"
            },
            {
              "step": 109,
              "variableName": "NameDescription nameDescription",
              "startLine": 1197,
              "startColumn": 67,
              "endLine": 1197,
              "endColumn": 98,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        doc.writeEndElement();\n    }\n\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {"
            },
            {
              "step": 110,
              "variableName": "nameDescription",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            },
            {
              "step": 111,
              "variableName": "getName",
              "startLine": 78,
              "startColumn": 19,
              "endLine": 78,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * \n     * @return\n     */\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 112,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 113,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 114,
              "variableName": "nameDescription.getName()",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "histKey",
              "startLine": 238,
              "startColumn": 67,
              "endLine": 238,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/commanding/CommandVerificationHandler.java",
              "type": "String",
              "code": "        CommandVerifier cv = v.cv;\n        CommandHistoryPublisher cmdHistPublisher = processor.getCommandHistoryPublisher();\n        String histKey = CommandHistoryPublisher.Verifier_KEY_PREFIX + \"_\" + cv.getStage();\n        cmdHistPublisher.publishAck(activeCommand.getCommandId(), histKey, processor.getCurrentTime(),\n                getAckState(v.state), failureReason, returnPv);\n        TerminationAction ta = null;\n        switch (state) {"
            },
            {
              "step": 1,
              "variableName": "String key",
              "startLine": 92,
              "startColumn": 45,
              "endLine": 92,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    }\n\n    @Override\n    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);"
            },
            {
              "step": 2,
              "variableName": "key + SUFFIX_STATUS",
              "startLine": 95,
              "startColumn": 22,
              "endLine": 95,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 3,
              "variableName": "String name",
              "startLine": 16,
              "startColumn": 27,
              "endLine": 16,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "        return columnDefinitions;\n    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 17,
              "startColumn": 51,
              "endLine": 17,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 10,
              "startColumn": 29,
              "endLine": 10,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    protected final String name;\n    protected final DataType type;\n    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;"
            },
            {
              "step": 6,
              "variableName": "name",
              "startLine": 12,
              "startColumn": 19,
              "endLine": 12,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 12,
              "startColumn": 9,
              "endLine": 12,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    \n    public ColumnDefinition(String name, DataType type) {\n        super();\n        this.name=name;\n        this.type=type;\n    }\n"
            },
            {
              "step": 8,
              "variableName": "new ColumnDefinition(name, type)",
              "startLine": 17,
              "startColumn": 30,
              "endLine": 17,
              "endColumn": 62,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n"
            },
            {
              "step": 9,
              "variableName": "c",
              "startLine": 18,
              "startColumn": 19,
              "endLine": 18,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 10,
              "variableName": "ColumnDefinition c",
              "startLine": 21,
              "startColumn": 27,
              "endLine": 21,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {\n        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }"
            },
            {
              "step": 11,
              "variableName": "c",
              "startLine": 25,
              "startColumn": 31,
              "endLine": 25,
              "endColumn": 32,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 12,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 13,
              "variableName": "columnDefinitions",
              "startLine": 25,
              "startColumn": 9,
              "endLine": 25,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (columnNameIndex.containsKey(c.getName())) {\n            throw new IllegalArgumentException(\"Tuple has already a column '\" + c.getName() + \"'\");\n        }\n        columnDefinitions.add(c);\n        columnNameIndex.put(c.getName(), columnDefinitions.size() - 1);\n    }\n"
            },
            {
              "step": 14,
              "variableName": "addColumn(c)",
              "startLine": 18,
              "startColumn": 9,
              "endLine": 18,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "\n    public void addColumn(String name, DataType type) {\n        ColumnDefinition c = new ColumnDefinition(name, type);\n        addColumn(c);\n    }\n\n    public void addColumn(ColumnDefinition c) {"
            },
            {
              "step": 15,
              "variableName": "td",
              "startLine": 95,
              "startColumn": 9,
              "endLine": 95,
              "endColumn": 11,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    public void publishAck(CommandId cmdId, String key, long time, AckStatus state,\n            String message, ParameterValue resultPv) {\n        TupleDefinition td = StandardTupleDefinitions.TC.copy();\n        td.addColumn(key + SUFFIX_STATUS, DataType.STRING);\n        td.addColumn(key + SUFFIX_TIME, DataType.TIMESTAMP);\n        List<Object> vals = new ArrayList<>(Arrays.asList(cmdId.getGenerationTime(), cmdId.getOrigin(),\n                cmdId.getSequenceNumber(), cmdId.getCommandName(), state.toString(),"
            },
            {
              "step": 16,
              "variableName": "td",
              "startLine": 109,
              "startColumn": 36,
              "endLine": 109,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 17,
              "variableName": "TupleDefinition definition",
              "startLine": 27,
              "startColumn": 18,
              "endLine": 27,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        this.columns = new ArrayList<>();\n    }\n\n    public Tuple(TupleDefinition definition, List<Object> columns) {\n        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }"
            },
            {
              "step": 18,
              "variableName": "definition",
              "startLine": 31,
              "startColumn": 28,
              "endLine": 31,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 19,
              "variableName": "TupleDefinition definition",
              "startLine": 48,
              "startColumn": 31,
              "endLine": 48,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        columns = new ArrayList<>(Collections.nCopies(tdef.size(), null));\n    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n"
            },
            {
              "step": 20,
              "variableName": "definition",
              "startLine": 49,
              "startColumn": 27,
              "endLine": 49,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 21,
              "variableName": "this",
              "startLine": 49,
              "startColumn": 9,
              "endLine": 49,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public void setDefinition(TupleDefinition definition) {\n        this.definition = definition;\n    }\n\n    public TupleDefinition getDefinition() {"
            },
            {
              "step": 22,
              "variableName": "this",
              "startLine": 31,
              "startColumn": 9,
              "endLine": 31,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        if (definition.size() != columns.size()) {\n            throw new IllegalArgumentException(\"columns size does not match the definition size\");\n        }\n        this.setDefinition(definition);\n        this.columns = columns;\n    }\n"
            },
            {
              "step": 23,
              "variableName": "new Tuple(td, vals)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/cmdhistory/StreamCommandHistoryPublisher.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            td.addColumn(key + SUFFIX_RETURN, DataType.PARAMETER_VALUE);\n            vals.add(resultPv);\n        }\n        stream.emitTuple(new Tuple(td, vals));\n    }\n\n    @Override"
            },
            {
              "step": 24,
              "variableName": "Tuple tuple",
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return outputDefinition;\n    }\n\n    public void emitTuple(Tuple tuple) {\n        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {"
            },
            {
              "step": 25,
              "variableName": "tuple",
              "startLine": 56,
              "startColumn": 33,
              "endLine": 56,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Stream.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        dataCount.incrementAndGet();\n        for (StreamSubscriber s : subscribers) {\n            try {\n                s.onTuple(this, tuple);\n            } catch (Exception e) {\n                if (handler != null) {\n                    handler.handle(tuple, s, e);"
            },
            {
              "step": 26,
              "variableName": "Tuple t",
              "startLine": 318,
              "startColumn": 35,
              "endLine": 318,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public void onTuple(Stream s, Tuple t) {\n        if (quitting) {\n            return;\n        }"
            },
            {
              "step": 27,
              "variableName": "t",
              "startLine": 335,
              "startColumn": 56,
              "endLine": 335,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/YarchReplay.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            replayTime = time;\n\n            ProtoDataType type = ProtoDataType.forNumber((Integer) t.getColumn(0));\n            Object data = handlers.get(type).transform(t);\n            if (data != null) {\n                listener.newData(type, data);\n            }"
            },
            {
              "step": 28,
              "variableName": "Tuple t",
              "startLine": 84,
              "startColumn": 43,
              "endLine": 84,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    @Override\n    public List<ParameterValue> transform(Tuple t) {\n        // loop through all the columns containing values\n        // the first column is the ProtoDataType.PP (from the select above),\n        // then are the fixed ones from PP_TUPLE_DEFINITION"
            },
            {
              "step": 29,
              "variableName": "t",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 30,
              "variableName": "getColumnDefinition",
              "startLine": 179,
              "startColumn": 29,
              "endLine": 179,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "        return definition.getColumn(i);\n    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n"
            },
            {
              "step": 31,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "Tuple [definition, columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 32,
              "variableName": "definition",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 33,
              "variableName": "getColumn",
              "startLine": 80,
              "startColumn": 29,
              "endLine": 80,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "        }\n    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n"
            },
            {
              "step": 34,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "TupleDefinition [columnDefinitions, <element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 35,
              "variableName": "columnDefinitions",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 33,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ArrayList [<element>, name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 36,
              "variableName": "columnDefinitions.get(index)",
              "startLine": 81,
              "startColumn": 16,
              "endLine": 81,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/TupleDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumn(int index) {\n        return columnDefinitions.get(index);\n    }\n\n    /**"
            },
            {
              "step": 37,
              "variableName": "definition.getColumn(i)",
              "startLine": 180,
              "startColumn": 16,
              "endLine": 180,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/Tuple.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public ColumnDefinition getColumnDefinition(int i) {\n        return definition.getColumn(i);\n    }\n\n    public boolean hasColumn(String colName) {"
            },
            {
              "step": 38,
              "variableName": "t.getColumnDefinition(i)",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ColumnDefinition [name] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 39,
              "variableName": "getName",
              "startLine": 24,
              "startColumn": 19,
              "endLine": 24,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "        return type;\n    }\n\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 40,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "ColumnDefinition [name] : String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 41,
              "variableName": "name",
              "startLine": 25,
              "startColumn": 16,
              "endLine": 25,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/yarch/ColumnDefinition.java",
              "type": "String",
              "code": "    }\n\n    public String getName() {\n        return name;\n    }\n\n    /**"
            },
            {
              "step": 42,
              "variableName": "t.getColumnDefinition(i).getName()",
              "startLine": 96,
              "startColumn": 50,
              "endLine": 96,
              "endColumn": 84,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 43,
              "variableName": "String fqn",
              "startLine": 203,
              "startColumn": 42,
              "endLine": 203,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "        return rangeb.build();\n    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;"
            },
            {
              "step": 44,
              "variableName": "fqn",
              "startLine": 204,
              "startColumn": 48,
              "endLine": 204,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 45,
              "variableName": "String fqn",
              "startLine": 31,
              "startColumn": 27,
              "endLine": 31,
              "endColumn": 37,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "        paramFqn = def.getQualifiedName();\n    }\n\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }"
            },
            {
              "step": 46,
              "variableName": "fqn",
              "startLine": 33,
              "startColumn": 25,
              "endLine": 33,
              "endColumn": 28,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 47,
              "variableName": "this",
              "startLine": 33,
              "startColumn": 9,
              "endLine": 33,
              "endColumn": 13,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "\n    public ParameterValue(String fqn) {\n        this.def = null;\n        this.paramFqn = fqn;\n    }\n\n    // copy constructor - copies all the fields in a shallow mode"
            },
            {
              "step": 48,
              "variableName": "new ParameterValue(fqn)",
              "startLine": 204,
              "startColumn": 29,
              "endLine": 204,
              "endColumn": 52,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }"
            },
            {
              "step": 49,
              "variableName": "pv",
              "startLine": 206,
              "startColumn": 16,
              "endLine": 206,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/BasicParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    public static ParameterValue fromGpb(String fqn, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {\n        ParameterValue pv = new ParameterValue(fqn);\n        copyTo(gpv, pv);\n        return pv;\n    }\n\n    public static ParameterValue fromGpb(Parameter pdef, org.yamcs.protobuf.Pvalue.ParameterValue gpv) {"
            },
            {
              "step": 50,
              "variableName": "BasicParameterValue.fromGpb(t.getColumnDefinitio",
              "startLine": 96,
              "startColumn": 22,
              "endLine": 97,
              "endColumn": 70,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            if (o instanceof ParameterValue) {\n                pv = (ParameterValue) o;\n            } else if (o instanceof org.yamcs.protobuf.Pvalue.ParameterValue) {\n                pv = BasicParameterValue.fromGpb(t.getColumnDefinition(i).getName(),\n                        (org.yamcs.protobuf.Pvalue.ParameterValue) o);\n            } else {\n                log.warn(\"got unexpected value for column {}: {}\", colName, o);"
            },
            {
              "step": 51,
              "variableName": "pv",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 78,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 52,
              "variableName": "getParameterQualifiedName",
              "startLine": 61,
              "startColumn": 19,
              "endLine": 61,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "        return def;\n    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n"
            },
            {
              "step": 53,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "ParameterValue [paramFqn] : String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 54,
              "variableName": "paramFqn",
              "startLine": 62,
              "startColumn": 16,
              "endLine": 62,
              "endColumn": 24,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/ParameterValue.java",
              "type": "String",
              "code": "    }\n\n    public String getParameterQualifiedName() {\n        return paramFqn;\n    }\n\n    /**"
            },
            {
              "step": 55,
              "variableName": "pv.getParameterQualifiedName()",
              "startLine": 105,
              "startColumn": 76,
              "endLine": 105,
              "endColumn": 106,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 56,
              "variableName": "String fqn",
              "startLine": 308,
              "startColumn": 66,
              "endLine": 308,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 57,
              "variableName": "fqn",
              "startLine": 309,
              "startColumn": 43,
              "endLine": 309,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 58,
              "variableName": "String fqn",
              "startLine": 312,
              "startColumn": 66,
              "endLine": 312,
              "endColumn": 76,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 59,
              "variableName": "fqn",
              "startLine": 315,
              "startColumn": 42,
              "endLine": 315,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 60,
              "variableName": "String parameterQualifiedNamed",
              "startLine": 146,
              "startColumn": 50,
              "endLine": 146,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "     * @throws IllegalArgumentException\n     *             if the <code>parameterQualifiedNamed</code> does not start with {@link #YAMCS_SPACESYSTEM_NAME}\n     */\n    public SystemParameter createSystemParameter(String parameterQualifiedNamed, ParameterType ptype,\n            String shortDescription) {\n\n        if (!parameterQualifiedNamed.startsWith(YAMCS_SPACESYSTEM_NAME)) {"
            },
            {
              "step": 61,
              "variableName": "parameterQualifiedNamed",
              "startLine": 156,
              "startColumn": 58,
              "endLine": 156,
              "endColumn": 81,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 62,
              "variableName": "String fqname",
              "startLine": 20,
              "startColumn": 60,
              "endLine": 20,
              "endColumn": 73,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "        setDataSource(ds);\n    }\n\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);"
            },
            {
              "step": 63,
              "variableName": "fqname",
              "startLine": 23,
              "startColumn": 41,
              "endLine": 23,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 64,
              "variableName": "String fqname",
              "startLine": 221,
              "startColumn": 34,
              "endLine": 221,
              "endColumn": 47,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @param fqname\n     * @return\n     */\n    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;"
            },
            {
              "step": 65,
              "variableName": "fqname",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "    public static String getName(String fqname) {\n        int index = fqname.lastIndexOf(PATH_SEPARATOR);\n        if (index < 0) {\n            return fqname;\n        }\n        return fqname.substring(index + 1);\n    }"
            },
            {
              "step": 66,
              "variableName": "NameDescription.getName(fqname)",
              "startLine": 23,
              "startColumn": 17,
              "endLine": 23,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);\n        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);"
            },
            {
              "step": 67,
              "variableName": "String name",
              "startLine": 14,
              "startColumn": 53,
              "endLine": 14,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "public class SystemParameter extends Parameter {\n    private static final long serialVersionUID = 2L;\n\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);"
            },
            {
              "step": 68,
              "variableName": "spaceSystemName + \"/\" + name",
              "startLine": 16,
              "startColumn": 26,
              "endLine": 16,
              "endColumn": 54,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 69,
              "variableName": "setQualifiedName(spaceSystemName + \"/\" + name)",
              "startLine": 16,
              "startColumn": 9,
              "endLine": 16,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    private SystemParameter(String spaceSystemName, String name, DataSource ds) {\n        super(name);\n        setQualifiedName(spaceSystemName + \"/\" + name);\n        setDataSource(ds);\n    }\n"
            },
            {
              "step": 70,
              "variableName": "new SystemParameter(Nam",
              "startLine": 22,
              "startColumn": 30,
              "endLine": 23,
              "endColumn": 53,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n    public static SystemParameter getForFullyQualifiedName(String fqname) {\n        DataSource ds = getSystemParameterDataSource(fqname);\n        SystemParameter sp = new SystemParameter(NameDescription.getSubsystemName(fqname),\n                NameDescription.getName(fqname), ds);\n        // set the recording name \"/yamcs/a/b/c\" -> \"/yamcs/a\"\n        int pos = fqname.indexOf(PATH_SEPARATOR, 0);"
            },
            {
              "step": 71,
              "variableName": "sp",
              "startLine": 30,
              "startColumn": 16,
              "endLine": 30,
              "endColumn": 18,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/SystemParameter.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        pos = fqname.indexOf(PATH_SEPARATOR, pos + 1);\n        sp.setRecordingGroup(fqname.substring(0, pos));\n\n        return sp;\n    }\n\n    private static DataSource getSystemParameterDataSource(String fqname) {"
            },
            {
              "step": 72,
              "variableName": "SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed)",
              "startLine": 156,
              "startColumn": 17,
              "endLine": 156,
              "endColumn": 82,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "\n        SystemParameter p = (SystemParameter) parameters.get(parameterQualifiedNamed);\n        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {"
            },
            {
              "step": 73,
              "variableName": "p",
              "startLine": 158,
              "startColumn": 28,
              "endLine": 158,
              "endColumn": 29,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "SystemParameter [qualifiedName] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 74,
              "variableName": "doAddParameter(p, true, true)",
              "startLine": 158,
              "startColumn": 13,
              "endLine": 158,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (p == null) {\n            p = SystemParameter.getForFullyQualifiedName(parameterQualifiedNamed);\n            p.setParameterType(ptype);\n            doAddParameter(p, true, true);\n        } else {\n            if (p.getParameterType() != ptype) {\n                throw new IllegalArgumentException(\"A parameter with name \" + parameterQualifiedNamed"
            },
            {
              "step": 75,
              "variableName": "mdb",
              "startLine": 315,
              "startColumn": 16,
              "endLine": 315,
              "endColumn": 19,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Yamcs.Value.Type basicType,"
            },
            {
              "step": 76,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 77,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 78,
              "variableName": "mdb",
              "startLine": 105,
              "startColumn": 71,
              "endLine": 105,
              "endColumn": 74,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/archive/ParameterReplayHandler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "            Parameter p = mdb.getParameter(pv.getParameterQualifiedName());\n            if (p == null) {\n                if (Mdb.isSystemParameter(pv.getParameterQualifiedName())) {\n                    p = SystemParametersService.createSystemParameter(mdb, pv.getParameterQualifiedName(),\n                            pv.getEngValue());\n                } else {\n                    log.info(\"Cannot find a parameter with fqn {}\", pv.getParameterQualifiedName());"
            },
            {
              "step": 79,
              "variableName": "Mdb mdb",
              "startLine": 308,
              "startColumn": 57,
              "endLine": 308,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(relativeName, basicType, null, description);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n"
            },
            {
              "step": 80,
              "variableName": "mdb",
              "startLine": 309,
              "startColumn": 38,
              "endLine": 309,
              "endColumn": 41,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue) {\n        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {"
            },
            {
              "step": 81,
              "variableName": "Mdb mdb",
              "startLine": 312,
              "startColumn": 57,
              "endLine": 312,
              "endColumn": 64,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return createSystemParameter(mdb, fqn, engValue, null);\n    }\n\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);"
            },
            {
              "step": 82,
              "variableName": "mdb",
              "startLine": 314,
              "startColumn": 57,
              "endLine": 314,
              "endColumn": 60,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    public static SystemParameter createSystemParameter(Mdb mdb, String fqn, Value engValue, UnitType unit) {\n        String name = NameDescription.getName(fqn);\n        ParameterType ptype = createSystemParameterType(mdb, name, engValue, unit);\n        return mdb.createSystemParameter(fqn, ptype, null);\n    }\n"
            },
            {
              "step": 83,
              "variableName": "Mdb mdb",
              "startLine": 353,
              "startColumn": 59,
              "endLine": 353,
              "endColumn": 66,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return mdb.createSystemParameter(qualifiedName(namespace, relativeName), type, description);\n    }\n\n    public static ParameterType createSystemParameterType(Mdb mdb, String name, Value v, UnitType unit) {\n        if (v instanceof AggregateValue) {\n            AggregateValue aggrv = (AggregateValue) v;\n            AggregateParameterType.Builder aggrType = new AggregateParameterType.Builder();"
            },
            {
              "step": 84,
              "variableName": "mdb",
              "startLine": 382,
              "startColumn": 33,
              "endLine": 382,
              "endColumn": 36,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                    .build();\n            return mdb.addSystemParameterType(arrayType);\n        } else {\n            return getBasicType(mdb, v.getType(), unit);\n        }\n    }\n"
            },
            {
              "step": 85,
              "variableName": "Mdb mdb",
              "startLine": 402,
              "startColumn": 39,
              "endLine": 402,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return getBasicType(mdb, type, unit);\n    }\n\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {"
            },
            {
              "step": 86,
              "variableName": "mdb",
              "startLine": 404,
              "startColumn": 20,
              "endLine": 404,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/parameter/SystemParametersService.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n    static ParameterType getBasicType(Mdb mdb, Yamcs.Value.Type type, UnitType unit) {\n        try {\n            return mdb.getOrCreateBasicParameterType(Mdb.YAMCS_SPACESYSTEM_NAME, type, unit);\n        } catch (IOException e) {\n            // this normally does not happen becasuse the /yamcs spacesystem is not actually written to disk\n            throw new UncheckedIOException(e);"
            },
            {
              "step": 87,
              "variableName": "getOrCreateBasicParameterType",
              "startLine": 206,
              "startColumn": 26,
              "endLine": 206,
              "endColumn": 55,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * <p>\n     * The namespace has to be writable otherwise an IllegalArgumentException will be thrown\n     */\n    public ParameterType getOrCreateBasicParameterType(String namespace, Type type, UnitType unit) throws IOException {\n\n        switch (type) {\n        case BINARY:"
            },
            {
              "step": 88,
              "variableName": "getOrCreateParameterType(namespace, \"bina",
              "startLine": 210,
              "startColumn": 20,
              "endLine": 211,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        switch (type) {\n        case BINARY:\n            return getOrCreateParameterType(namespace, \"binary\", unit,\n                    () -> new BinaryParameterType.Builder());\n        case BOOLEAN:\n            return getOrCreateParameterType(namespace, \"boolean\", unit,"
            },
            {
              "step": 89,
              "variableName": "getOrCreateParameterType",
              "startLine": 245,
              "startColumn": 27,
              "endLine": 245,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        }\n    }\n\n    private ParameterType getOrCreateParameterType(String namespace, String name, UnitType unit,\n            Supplier<ParameterType.Builder<?>> supplier) throws IOException {\n\n        String units;"
            },
            {
              "step": 90,
              "variableName": "this",
              "startLine": 275,
              "startColumn": 40,
              "endLine": 275,
              "endColumn": 44,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/Mdb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "\n        var writer = getWriter(namespace);\n        doAddParameterType(Arrays.asList(ptype), true);\n        writer.writer.write(namespace, this);\n        return ptype;\n    }\n"
            },
            {
              "step": 91,
              "variableName": "Mdb mdb",
              "startLine": 37,
              "startColumn": 35,
              "endLine": 37,
              "endColumn": 42,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        this.xtceFiles = xtceFiles;\n    }\n\n    public void write(String fqn, Mdb mdb) throws IOException {\n        String sname = NameDescription.getName(fqn);\n        String filename = xtceFiles.get(sname);\n        if (filename == null) {"
            },
            {
              "step": 92,
              "variableName": "mdb",
              "startLine": 43,
              "startColumn": 47,
              "endLine": 43,
              "endColumn": 50,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceMdbWriter.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        if (filename == null) {\n            throw new IllegalStateException(\"Have no file for subsystem '\" + sname + \"'. Full name is: '\" + fqn + \"'\");\n        }\n        var xtce = new XtceAssembler().toXtce(mdb, fqn, name -> true);\n        File f = new File(filename);\n        log.debug(\"Writing spaceystem {} to {}\", fqn, filename);\n        try (FileWriter fw = new FileWriter(f)) {"
            },
            {
              "step": 93,
              "variableName": "Mdb mdb",
              "startLine": 199,
              "startColumn": 32,
              "endLine": 199,
              "endColumn": 39,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "     * @param filter\n     * @return\n     */\n    public final String toXtce(Mdb mdb, String topSpaceSystem, Predicate<String> filter) {\n        this.mdb = mdb;\n        try {\n            String unindentedXML;"
            },
            {
              "step": 94,
              "variableName": "mdb",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 95,
              "variableName": "getSpaceSystem",
              "startLine": 308,
              "startColumn": 24,
              "endLine": 308,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "        return rootSystem;\n    }\n\n    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);"
            },
            {
              "step": 96,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "Mdb [spaceSystemAliases, index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 97,
              "variableName": "spaceSystemAliases",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 38,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 98,
              "variableName": "get",
              "startLine": 47,
              "startColumn": 14,
              "endLine": 47,
              "endColumn": 17,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "    /**\n     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n"
            },
            {
              "step": 99,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "NamedDescriptionIndex [index, <map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 100,
              "variableName": "index",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 21,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "LinkedHashMap [<map.value>, name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 101,
              "variableName": "index.get(qualifiedName)",
              "startLine": 48,
              "startColumn": 16,
              "endLine": 48,
              "endColumn": 40,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NamedDescriptionIndex.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * returns the object based on its qualified name\n     */\n    public T get(String qualifiedName) {\n        return index.get(qualifiedName);\n    }\n\n    /**"
            },
            {
              "step": 102,
              "variableName": "spaceSystemAliases.get(qualifiedName)",
              "startLine": 311,
              "startColumn": 20,
              "endLine": 311,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/XtceDb.java",
              "type": "SpaceSystem [name] : String",
              "code": "    public SpaceSystem getSpaceSystem(String qualifiedName) {\n        rwLock.readLock().lock();\n        try {\n            return spaceSystemAliases.get(qualifiedName);\n        } finally {\n            rwLock.readLock().unlock();\n        }"
            },
            {
              "step": 103,
              "variableName": "mdb.getSpaceSystem(topSpaceSystem)",
              "startLine": 207,
              "startColumn": 35,
              "endLine": 207,
              "endColumn": 69,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                XMLOutputFactory factory = XMLOutputFactory.newInstance();\n                XMLStreamWriter xmlWriter = factory.createXMLStreamWriter(writer);\n                xmlWriter.writeStartDocument();\n                SpaceSystem top = mdb.getSpaceSystem(topSpaceSystem);\n                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }"
            },
            {
              "step": 104,
              "variableName": "top",
              "startLine": 211,
              "startColumn": 45,
              "endLine": 211,
              "endColumn": 48,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "                if (top == null) {\n                    throw new IllegalArgumentException(\"Unknown space system '\" + topSpaceSystem + \"'\");\n                }\n                writeSpaceSystem(xmlWriter, top, true, filter);\n                xmlWriter.writeEndDocument();\n                xmlWriter.close();\n                unindentedXML = writer.toString();"
            },
            {
              "step": 105,
              "variableName": "SpaceSystem spaceSystem",
              "startLine": 243,
              "startColumn": 56,
              "endLine": 243,
              "endColumn": 79,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        }\n    }\n\n    private void writeSpaceSystem(XMLStreamWriter doc, SpaceSystem spaceSystem, boolean emitNamespace,\n            Predicate<String> filter)\n            throws XMLStreamException {\n"
            },
            {
              "step": 106,
              "variableName": "spaceSystem",
              "startLine": 257,
              "startColumn": 35,
              "endLine": 257,
              "endColumn": 46,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        if (emitNamespace) {\n            doc.writeDefaultNamespace(NS_XTCE_V1_2);\n        }\n        writeNameDescription(doc, spaceSystem);\n\n        Header header = spaceSystem.getHeader();\n        if (header != null) {"
            },
            {
              "step": 107,
              "variableName": "NameDescription nameDescription",
              "startLine": 1197,
              "startColumn": 67,
              "endLine": 1197,
              "endColumn": 98,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "        doc.writeEndElement();\n    }\n\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {"
            },
            {
              "step": 108,
              "variableName": "nameDescription",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 51,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "SpaceSystem [name] : String",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            },
            {
              "step": 109,
              "variableName": "getName",
              "startLine": 78,
              "startColumn": 19,
              "endLine": 78,
              "endColumn": 26,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * \n     * @return\n     */\n    public String getName() {\n        return name;\n    }\n"
            },
            {
              "step": 110,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "SpaceSystem [name] : String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 111,
              "variableName": "name",
              "startLine": 79,
              "startColumn": 16,
              "endLine": 79,
              "endColumn": 20,
              "uri": "yamcs-yamcs-5.11.10/yamcs-xtce/src/main/java/org/yamcs/xtce/NameDescription.java",
              "type": "String",
              "code": "     * @return\n     */\n    public String getName() {\n        return name;\n    }\n\n    public String getAlias(String namespace) {"
            },
            {
              "step": 112,
              "variableName": "nameDescription.getName()",
              "startLine": 1199,
              "startColumn": 36,
              "endLine": 1199,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/mdb/XtceAssembler.java",
              "type": "",
              "code": "\n    private static void writeNameDescription(XMLStreamWriter doc, NameDescription nameDescription)\n            throws XMLStreamException {\n        doc.writeAttribute(\"name\", nameDescription.getName());\n        if (nameDescription.getShortDescription() != null) {\n            doc.writeAttribute(\"shortDescription\", nameDescription.getShortDescription());\n        }"
            }
          ],
          "label": "No"
        }
      ]
    }
  ],
  "208": [
    {
      "resultIndex": 0,
      "fileName": "JwtHelper.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "hmac.doFinal(data.getBytes())",
              "startLine": 84,
              "startColumn": 28,
              "endLine": 84,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "byte[]",
              "code": "    private static String hmacSha256(byte[] secret, String data) throws NoSuchAlgorithmException, InvalidKeyException {\n        Mac hmac = Mac.getInstance(\"HmacSHA256\");\n        hmac.init(new SecretKeySpec(secret, \"HmacSHA256\"));\n        byte[] macResult = hmac.doFinal(data.getBytes());\n        return Base64.getUrlEncoder().withoutPadding().encodeToString(macResult);\n    }\n"
            },
            {
              "step": 1,
              "variableName": "macResult",
              "startLine": 85,
              "startColumn": 71,
              "endLine": 85,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "byte[]",
              "code": "        Mac hmac = Mac.getInstance(\"HmacSHA256\");\n        hmac.init(new SecretKeySpec(secret, \"HmacSHA256\"));\n        byte[] macResult = hmac.doFinal(data.getBytes());\n        return Base64.getUrlEncoder().withoutPadding().encodeToString(macResult);\n    }\n\n    public static JsonObject decodeUnverified(String token) throws JwtDecodeException {"
            },
            {
              "step": 2,
              "variableName": "Base64.getUrlEncoder().withoutPadding().encodeToString(macResult)",
              "startLine": 85,
              "startColumn": 16,
              "endLine": 85,
              "endColumn": 81,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "String",
              "code": "        Mac hmac = Mac.getInstance(\"HmacSHA256\");\n        hmac.init(new SecretKeySpec(secret, \"HmacSHA256\"));\n        byte[] macResult = hmac.doFinal(data.getBytes());\n        return Base64.getUrlEncoder().withoutPadding().encodeToString(macResult);\n    }\n\n    public static JsonObject decodeUnverified(String token) throws JwtDecodeException {"
            },
            {
              "step": 3,
              "variableName": "hmacSha256(secret, unsignedToken)",
              "startLine": 115,
              "startColumn": 36,
              "endLine": 115,
              "endColumn": 69,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "String",
              "code": "        }\n\n        String unsignedToken = parts[0] + \".\" + parts[1];\n        byte[] expectedSignature = hmacSha256(secret, unsignedToken).getBytes();\n        if (parts.length < 3) {\n            throw new JwtDecodeException(\"Signature missing\");\n        }"
            },
            {
              "step": 4,
              "variableName": "hmacSha256(secret, unsignedToken).getBytes()",
              "startLine": 115,
              "startColumn": 36,
              "endLine": 115,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "byte[]",
              "code": "        }\n\n        String unsignedToken = parts[0] + \".\" + parts[1];\n        byte[] expectedSignature = hmacSha256(secret, unsignedToken).getBytes();\n        if (parts.length < 3) {\n            throw new JwtDecodeException(\"Signature missing\");\n        }"
            },
            {
              "step": 5,
              "variableName": "expectedSignature",
              "startLine": 120,
              "startColumn": 28,
              "endLine": 120,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "",
              "code": "            throw new JwtDecodeException(\"Signature missing\");\n        }\n        byte[] actualSignature = parts[2].getBytes();\n        if (!Arrays.equals(expectedSignature, actualSignature)) {\n            throw new JwtDecodeException(\"Invalid signature\");\n        }\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "JwtHelper.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "hmac.doFinal(data.getBytes())",
              "startLine": 84,
              "startColumn": 28,
              "endLine": 84,
              "endColumn": 57,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "byte[]",
              "code": "    private static String hmacSha256(byte[] secret, String data) throws NoSuchAlgorithmException, InvalidKeyException {\n        Mac hmac = Mac.getInstance(\"HmacSHA256\");\n        hmac.init(new SecretKeySpec(secret, \"HmacSHA256\"));\n        byte[] macResult = hmac.doFinal(data.getBytes());\n        return Base64.getUrlEncoder().withoutPadding().encodeToString(macResult);\n    }\n"
            },
            {
              "step": 1,
              "variableName": "macResult",
              "startLine": 85,
              "startColumn": 71,
              "endLine": 85,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "byte[]",
              "code": "        Mac hmac = Mac.getInstance(\"HmacSHA256\");\n        hmac.init(new SecretKeySpec(secret, \"HmacSHA256\"));\n        byte[] macResult = hmac.doFinal(data.getBytes());\n        return Base64.getUrlEncoder().withoutPadding().encodeToString(macResult);\n    }\n\n    public static JsonObject decodeUnverified(String token) throws JwtDecodeException {"
            },
            {
              "step": 2,
              "variableName": "Base64.getUrlEncoder().withoutPadding().encodeToString(macResult)",
              "startLine": 85,
              "startColumn": 16,
              "endLine": 85,
              "endColumn": 81,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "String",
              "code": "        Mac hmac = Mac.getInstance(\"HmacSHA256\");\n        hmac.init(new SecretKeySpec(secret, \"HmacSHA256\"));\n        byte[] macResult = hmac.doFinal(data.getBytes());\n        return Base64.getUrlEncoder().withoutPadding().encodeToString(macResult);\n    }\n\n    public static JsonObject decodeUnverified(String token) throws JwtDecodeException {"
            },
            {
              "step": 3,
              "variableName": "hmacSha256(secret, unsignedToken)",
              "startLine": 115,
              "startColumn": 36,
              "endLine": 115,
              "endColumn": 69,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "String",
              "code": "        }\n\n        String unsignedToken = parts[0] + \".\" + parts[1];\n        byte[] expectedSignature = hmacSha256(secret, unsignedToken).getBytes();\n        if (parts.length < 3) {\n            throw new JwtDecodeException(\"Signature missing\");\n        }"
            },
            {
              "step": 4,
              "variableName": "hmacSha256(secret, unsignedToken).getBytes()",
              "startLine": 115,
              "startColumn": 36,
              "endLine": 115,
              "endColumn": 80,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "byte[]",
              "code": "        }\n\n        String unsignedToken = parts[0] + \".\" + parts[1];\n        byte[] expectedSignature = hmacSha256(secret, unsignedToken).getBytes();\n        if (parts.length < 3) {\n            throw new JwtDecodeException(\"Signature missing\");\n        }"
            },
            {
              "step": 5,
              "variableName": "expectedSignature",
              "startLine": 120,
              "startColumn": 28,
              "endLine": 120,
              "endColumn": 45,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/http/auth/JwtHelper.java",
              "type": "",
              "code": "            throw new JwtDecodeException(\"Signature missing\");\n        }\n        byte[] actualSignature = parts[2].getBytes();\n        if (!Arrays.equals(expectedSignature, actualSignature)) {\n            throw new JwtDecodeException(\"Invalid signature\");\n        }\n"
            }
          ]
        }
      ]
    }
  ],
  "214": [
    {
      "resultIndex": 2,
      "fileName": "ScriptExecution.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "apiKey",
              "startLine": 67,
              "startColumn": 17,
              "endLine": 67,
              "endColumn": 23,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/activities/ScriptExecution.java",
              "type": "String",
              "code": "            var url = httpServer.getBindings().iterator().next() + httpServer.getContextPath();\n            pb.environment().put(\"YAMCS_URL\", url);\n\n            if (apiKey != null) {\n                pb.environment().put(\"YAMCS_API_KEY\", apiKey);\n            }\n"
            },
            {
              "step": 1,
              "variableName": "apiKey",
              "startLine": 68,
              "startColumn": 55,
              "endLine": 68,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/activities/ScriptExecution.java",
              "type": "",
              "code": "            pb.environment().put(\"YAMCS_URL\", url);\n\n            if (apiKey != null) {\n                pb.environment().put(\"YAMCS_API_KEY\", apiKey);\n            }\n\n            process = pb.start();"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "apiKey",
              "startLine": 517,
              "startColumn": 29,
              "endLine": 517,
              "endColumn": 35,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/security/SecurityStore.java",
              "type": "String",
              "code": "\n    public String generateApiKey(String username) {\n        var apiKey = UUID.randomUUID().toString();\n        apiKey2username.put(apiKey, username);\n        return apiKey;\n    }\n"
            },
            {
              "step": 1,
              "variableName": "apiKey",
              "startLine": 518,
              "startColumn": 16,
              "endLine": 518,
              "endColumn": 22,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/security/SecurityStore.java",
              "type": "String",
              "code": "    public String generateApiKey(String username) {\n        var apiKey = UUID.randomUUID().toString();\n        apiKey2username.put(apiKey, username);\n        return apiKey;\n    }\n\n    public void removeApiKey(String apiKey) {"
            },
            {
              "step": 2,
              "variableName": "securityStore.generateApiKey(user.getName())",
              "startLine": 52,
              "startColumn": 22,
              "endLine": 52,
              "endColumn": 66,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/activities/ScriptExecution.java",
              "type": "String",
              "code": "\n        String apiKey = null;\n        if (securityStore.isEnabled()) {\n            apiKey = securityStore.generateApiKey(user.getName());\n        }\n\n        try {"
            },
            {
              "step": 3,
              "variableName": "apiKey",
              "startLine": 68,
              "startColumn": 55,
              "endLine": 68,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/activities/ScriptExecution.java",
              "type": "",
              "code": "            pb.environment().put(\"YAMCS_URL\", url);\n\n            if (apiKey != null) {\n                pb.environment().put(\"YAMCS_API_KEY\", apiKey);\n            }\n\n            process = pb.start();"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "apiKey",
              "startLine": 518,
              "startColumn": 16,
              "endLine": 518,
              "endColumn": 22,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/security/SecurityStore.java",
              "type": "String",
              "code": "    public String generateApiKey(String username) {\n        var apiKey = UUID.randomUUID().toString();\n        apiKey2username.put(apiKey, username);\n        return apiKey;\n    }\n\n    public void removeApiKey(String apiKey) {"
            },
            {
              "step": 1,
              "variableName": "securityStore.generateApiKey(user.getName())",
              "startLine": 52,
              "startColumn": 22,
              "endLine": 52,
              "endColumn": 66,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/activities/ScriptExecution.java",
              "type": "String",
              "code": "\n        String apiKey = null;\n        if (securityStore.isEnabled()) {\n            apiKey = securityStore.generateApiKey(user.getName());\n        }\n\n        try {"
            },
            {
              "step": 2,
              "variableName": "apiKey",
              "startLine": 68,
              "startColumn": 55,
              "endLine": 68,
              "endColumn": 61,
              "uri": "yamcs-yamcs-5.11.10/yamcs-core/src/main/java/org/yamcs/activities/ScriptExecution.java",
              "type": "",
              "code": "            pb.environment().put(\"YAMCS_URL\", url);\n\n            if (apiKey != null) {\n                pb.environment().put(\"YAMCS_API_KEY\", apiKey);\n            }\n\n            process = pb.start();"
            }
          ],
          "label": "Yes"
        }
      ]
    }
  ]
}