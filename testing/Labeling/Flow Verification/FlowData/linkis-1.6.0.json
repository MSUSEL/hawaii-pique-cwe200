{
  "214": [
    {
      "resultIndex": 0,
      "fileName": "LocalFileSystem.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "user",
              "startLine": 305,
              "startColumn": 52,
              "endLine": 305,
              "endColumn": 56,
              "uri": "linkis-1.6.0/linkis-commons/linkis-storage/src/main/java/org/apache/linkis/storage/fs/impl/LocalFileSystem.java",
              "type": "String",
              "code": "    if (StringUtils.isEmpty(group)) {\n      String groupInfo;\n      try {\n        groupInfo = Utils.exec(new String[] {\"id\", user});\n        LOG.info(\"Get groupinfo:\" + groupInfo + \"  with shell command: id \" + user);\n      } catch (RuntimeException e) {\n        group = user;"
            },
            {
              "step": 1,
              "variableName": "new String[] {\"id\", user}",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 57,
              "uri": "linkis-1.6.0/linkis-commons/linkis-storage/src/main/java/org/apache/linkis/storage/fs/impl/LocalFileSystem.java",
              "type": "String[] [[]] : String",
              "code": "    if (StringUtils.isEmpty(group)) {\n      String groupInfo;\n      try {\n        groupInfo = Utils.exec(new String[] {\"id\", user});\n        LOG.info(\"Get groupinfo:\" + groupInfo + \"  with shell command: id \" + user);\n      } catch (RuntimeException e) {\n        group = user;"
            },
            {
              "step": 2,
              "variableName": "new String[] {\"id\", user}",
              "startLine": 305,
              "startColumn": 32,
              "endLine": 305,
              "endColumn": 57,
              "uri": "linkis-1.6.0/linkis-commons/linkis-storage/src/main/java/org/apache/linkis/storage/fs/impl/LocalFileSystem.java",
              "type": "",
              "code": "    if (StringUtils.isEmpty(group)) {\n      String groupInfo;\n      try {\n        groupInfo = Utils.exec(new String[] {\"id\", user});\n        LOG.info(\"Get groupinfo:\" + groupInfo + \"  with shell command: id \" + user);\n      } catch (RuntimeException e) {\n        group = user;"
            }
          ],
          "label": "No",
          "probability": 0.10721862316131592
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "DefaultEngineConnKillService.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 221,
              "startColumn": 87,
              "endLine": 221,
              "endColumn": 91,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "  }\n\n  private boolean killEngineConnByPort(String port, ServiceInstance serviceInstance) {\n    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);"
            },
            {
              "step": 1,
              "variableName": "port",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 40,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);\n    } else {\n      logger.warn(\"cannot kill {} with empty port.\", serviceInstance);\n      return false;"
            },
            {
              "step": 2,
              "variableName": "String port",
              "startLine": 251,
              "startColumn": 40,
              "endLine": 251,
              "endColumn": 51,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    }\n  }\n\n  private boolean isProcessAliveByPort(String port) {\n    String findCmd =\n        \"ps -ef | grep server.port= \"\n            + port"
            },
            {
              "step": 3,
              "variableName": "findCmd",
              "startLine": 259,
              "startColumn": 17,
              "endLine": 259,
              "endColumn": 24,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 4,
              "variableName": "cmdList",
              "startLine": 259,
              "startColumn": 5,
              "endLine": 259,
              "endColumn": 12,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 5,
              "variableName": "cmdList",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 37,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            },
            {
              "step": 6,
              "variableName": "cmdList.toArray(new String[0])",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 60,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            }
          ],
          "label": "No",
          "probability": 0.03036000020802021
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 222,
              "startColumn": 32,
              "endLine": 222,
              "endColumn": 36,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "\n  private boolean killEngineConnByPort(String port, ServiceInstance serviceInstance) {\n    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);\n    } else {"
            },
            {
              "step": 1,
              "variableName": "port",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 40,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);\n    } else {\n      logger.warn(\"cannot kill {} with empty port.\", serviceInstance);\n      return false;"
            },
            {
              "step": 2,
              "variableName": "String port",
              "startLine": 251,
              "startColumn": 40,
              "endLine": 251,
              "endColumn": 51,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    }\n  }\n\n  private boolean isProcessAliveByPort(String port) {\n    String findCmd =\n        \"ps -ef | grep server.port= \"\n            + port"
            },
            {
              "step": 3,
              "variableName": "findCmd",
              "startLine": 259,
              "startColumn": 17,
              "endLine": 259,
              "endColumn": 24,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 4,
              "variableName": "cmdList",
              "startLine": 259,
              "startColumn": 5,
              "endLine": 259,
              "endColumn": 12,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 5,
              "variableName": "cmdList",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 37,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            },
            {
              "step": 6,
              "variableName": "cmdList.toArray(new String[0])",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 60,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            }
          ],
          "label": "No",
          "probability": 0.025034060701727867
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 223,
              "startColumn": 43,
              "endLine": 223,
              "endColumn": 47,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "  private boolean killEngineConnByPort(String port, ServiceInstance serviceInstance) {\n    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);\n    } else {\n      logger.warn(\"cannot kill {} with empty port.\", serviceInstance);"
            },
            {
              "step": 1,
              "variableName": "port",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 40,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);\n    } else {\n      logger.warn(\"cannot kill {} with empty port.\", serviceInstance);\n      return false;"
            },
            {
              "step": 2,
              "variableName": "String port",
              "startLine": 251,
              "startColumn": 40,
              "endLine": 251,
              "endColumn": 51,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    }\n  }\n\n  private boolean isProcessAliveByPort(String port) {\n    String findCmd =\n        \"ps -ef | grep server.port= \"\n            + port"
            },
            {
              "step": 3,
              "variableName": "findCmd",
              "startLine": 259,
              "startColumn": 17,
              "endLine": 259,
              "endColumn": 24,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 4,
              "variableName": "cmdList",
              "startLine": 259,
              "startColumn": 5,
              "endLine": 259,
              "endColumn": 12,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 5,
              "variableName": "cmdList",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 37,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            },
            {
              "step": 6,
              "variableName": "cmdList.toArray(new String[0])",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 60,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            }
          ],
          "label": "No",
          "probability": 0.040048908442258835
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 40,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    logger.info(\"try to kill {} toString with port({}).\", serviceInstance.toString(), port);\n    if (StringUtils.isNotBlank(port)) {\n      GovernanceUtils.killECProcessByPort(port, serviceInstance.toString(), true);\n      return !isProcessAliveByPort(port);\n    } else {\n      logger.warn(\"cannot kill {} with empty port.\", serviceInstance);\n      return false;"
            },
            {
              "step": 1,
              "variableName": "String port",
              "startLine": 251,
              "startColumn": 40,
              "endLine": 251,
              "endColumn": 51,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    }\n  }\n\n  private boolean isProcessAliveByPort(String port) {\n    String findCmd =\n        \"ps -ef | grep server.port= \"\n            + port"
            },
            {
              "step": 2,
              "variableName": "findCmd",
              "startLine": 259,
              "startColumn": 17,
              "endLine": 259,
              "endColumn": 24,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 3,
              "variableName": "cmdList",
              "startLine": 259,
              "startColumn": 5,
              "endLine": 259,
              "endColumn": 12,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    List<String> cmdList = new ArrayList<>();\n    cmdList.add(\"bash\");\n    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);"
            },
            {
              "step": 4,
              "variableName": "cmdList",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 37,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "ArrayList [<element>] : String",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            },
            {
              "step": 5,
              "variableName": "cmdList.toArray(new String[0])",
              "startLine": 261,
              "startColumn": 30,
              "endLine": 261,
              "endColumn": 60,
              "uri": "linkis-1.6.0/linkis-computation-governance/linkis-engineconn-manager/linkis-engineconn-manager-server/src/main/java/org/apache/linkis/ecm/server/service/impl/DefaultEngineConnKillService.java",
              "type": "",
              "code": "    cmdList.add(\"-c\");\n    cmdList.add(findCmd);\n    try {\n      String rs = Utils.exec(cmdList.toArray(new String[0]), 5000L);\n      return null != rs && rs.contains(\"exists_\" + port);\n    } catch (Exception e) {\n      logger.warn(\"Method isProcessAlive failed\", e);"
            }
          ],
          "label": "No",
          "probability": 0.041773561388254166
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "ThreadUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "cmdList",
              "startLine": 50,
              "startColumn": 57,
              "endLine": 50,
              "endColumn": 64,
              "uri": "linkis-1.6.0/linkis-extensions/linkis-et-monitor/src/main/java/org/apache/linkis/monitor/until/ThreadUtils.java",
              "type": "List",
              "code": "  }\n\n  public static String run(List<String> cmdList, String shellName) {\n    FutureTask future = new FutureTask(() -> Utils.exec(cmdList.toArray(new String[2]), -1));\n    executors.submit(future);\n    String msg = \"\";\n    try {"
            },
            {
              "step": 1,
              "variableName": "cmdList.toArray(new String[2])",
              "startLine": 50,
              "startColumn": 57,
              "endLine": 50,
              "endColumn": 87,
              "uri": "linkis-1.6.0/linkis-extensions/linkis-et-monitor/src/main/java/org/apache/linkis/monitor/until/ThreadUtils.java",
              "type": "",
              "code": "  }\n\n  public static String run(List<String> cmdList, String shellName) {\n    FutureTask future = new FutureTask(() -> Utils.exec(cmdList.toArray(new String[2]), -1));\n    executors.submit(future);\n    String msg = \"\";\n    try {"
            }
          ],
          "label": "No",
          "probability": 0.02200033888220787
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 3,
      "fileName": "HiveUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "password",
              "startLine": 63,
              "startColumn": 37,
              "endLine": 63,
              "endColumn": 45,
              "uri": "linkis-1.6.0/linkis-public-enhancements/linkis-datasource/linkis-metadata/src/main/java/org/apache/linkis/metadata/hive/config/LinkisMybatisConfig.java",
              "type": "String",
              "code": "      password = hiveConf.get(\"javax.jdo.option.ConnectionPassword\");\n      if (DWSConfig.HIVE_PASS_ENCODE_ENABLED.getValue()) {\n        logger.info(\"hive meta password is encode \");\n        password = HiveUtils.decode(password);\n      }\n    }\n"
            },
            {
              "step": 1,
              "variableName": "String str",
              "startLine": 46,
              "startColumn": 31,
              "endLine": 46,
              "endColumn": 41,
              "uri": "linkis-1.6.0/linkis-public-enhancements/linkis-datasource/linkis-metadata/src/main/java/org/apache/linkis/metadata/util/HiveUtils.java",
              "type": "String",
              "code": "    return conf;\n  }\n\n  public static String decode(String str) {\n    Base64.Decoder decoder = Base64.getMimeDecoder();\n    String res = str;\n    try {"
            },
            {
              "step": 2,
              "variableName": "str + \" decode failed\"",
              "startLine": 52,
              "startColumn": 20,
              "endLine": 52,
              "endColumn": 42,
              "uri": "linkis-1.6.0/linkis-public-enhancements/linkis-datasource/linkis-metadata/src/main/java/org/apache/linkis/metadata/util/HiveUtils.java",
              "type": "",
              "code": "    try {\n      res = new String(decoder.decode(str));\n    } catch (Throwable e) {\n      logger.error(str + \" decode failed\", e);\n    }\n    return res;\n  }"
            }
          ],
          "label": "Yes",
          "probability": 0.05909615755081177
        }
      ]
    }
  ]
}