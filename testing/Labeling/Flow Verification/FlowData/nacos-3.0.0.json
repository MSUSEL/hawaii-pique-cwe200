{
  "201": [
    {
      "resultIndex": 0,
      "fileName": "AddressServerClusterController.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ipArray",
              "startLine": 136,
              "startColumn": 59,
              "endLine": 136,
              "endColumn": 66,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String[]",
              "code": "            clusterOperator.updateClusterMetadata(Constants.DEFAULT_NAMESPACE_ID, serviceName, clusterName, metadata);\n        }\n        String[] ipArray = addressServerManager.splitIps(ips);\n        String checkResult = InternetAddressUtil.checkIps(ipArray);\n        if (InternetAddressUtil.checkOk(checkResult)) {\n            List<Instance> instanceList = addressServerGeneratorManager\n                    .generateInstancesByIps(serviceName, productName, clusterName, ipArray);"
            },
            {
              "step": 1,
              "variableName": "String... ips",
              "startLine": 177,
              "startColumn": 35,
              "endLine": 177,
              "endColumn": 48,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "     * @param ips ips\n     * @return 'ok' if check passed, otherwise illegal ip\n     */\n    public static String checkIps(String... ips) {\n        \n        if (ips == null || ips.length == 0) {\n            "
            },
            {
              "step": 2,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 4,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 7,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 136,
              "startColumn": 30,
              "endLine": 136,
              "endColumn": 67,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            clusterOperator.updateClusterMetadata(Constants.DEFAULT_NAMESPACE_ID, serviceName, clusterName, metadata);\n        }\n        String[] ipArray = addressServerManager.splitIps(ips);\n        String checkResult = InternetAddressUtil.checkIps(ipArray);\n        if (InternetAddressUtil.checkOk(checkResult)) {\n            List<Instance> instanceList = addressServerGeneratorManager\n                    .generateInstancesByIps(serviceName, productName, clusterName, ipArray);"
            },
            {
              "step": 8,
              "variableName": "checkResult",
              "startLine": 144,
              "startColumn": 27,
              "endLine": 144,
              "endColumn": 38,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 9,
              "variableName": "String checkResult",
              "startLine": 208,
              "startColumn": 23,
              "endLine": 208,
              "endColumn": 41,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        \n        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }"
            },
            {
              "step": 10,
              "variableName": "checkResult",
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 43,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 209,
              "startColumn": 13,
              "endLine": 209,
              "endColumn": 17,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 12,
              "variableName": "new Result(checkResult, ipArray.length)",
              "startLine": 144,
              "startColumn": 16,
              "endLine": 144,
              "endColumn": 55,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 13,
              "variableName": "registerCluster(serviceName, rawProductName, clusterName, ips)",
              "startLine": 103,
              "startColumn": 29,
              "endLine": 103,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        try {\n            String serviceName = addressServerGeneratorManager.generateNacosServiceName(productName);\n            \n            Result result = registerCluster(serviceName, rawProductName, clusterName, ips);\n            if (InternetAddressUtil.checkOk(result.getCheckResult())) {\n                responseEntity = ResponseEntity\n                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\""
            },
            {
              "step": 14,
              "variableName": "result",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 15,
              "variableName": "getCheckResult",
              "startLine": 213,
              "startColumn": 23,
              "endLine": 213,
              "endColumn": 37,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "            this.size = size;\n        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        "
            },
            {
              "step": 16,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 17,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 18,
              "variableName": "result.getCheckResult()",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 108,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 19,
              "variableName": "responseEntity",
              "startLine": 115,
              "startColumn": 16,
              "endLine": 115,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());\n        }\n        \n        return responseEntity;\n    }\n    \n    private Result registerCluster(String serviceName, String productName, String clusterName, String ips)"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 179,
              "startColumn": 13,
              "endLine": 179,
              "endColumn": 16,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "     */\n    public static String checkIps(String... ips) {\n        \n        if (ips == null || ips.length == 0) {\n            \n            return CHECK_OK;\n        }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 2,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 136,
              "startColumn": 30,
              "endLine": 136,
              "endColumn": 67,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            clusterOperator.updateClusterMetadata(Constants.DEFAULT_NAMESPACE_ID, serviceName, clusterName, metadata);\n        }\n        String[] ipArray = addressServerManager.splitIps(ips);\n        String checkResult = InternetAddressUtil.checkIps(ipArray);\n        if (InternetAddressUtil.checkOk(checkResult)) {\n            List<Instance> instanceList = addressServerGeneratorManager\n                    .generateInstancesByIps(serviceName, productName, clusterName, ipArray);"
            },
            {
              "step": 7,
              "variableName": "checkResult",
              "startLine": 144,
              "startColumn": 27,
              "endLine": 144,
              "endColumn": 38,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "String checkResult",
              "startLine": 208,
              "startColumn": 23,
              "endLine": 208,
              "endColumn": 41,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        \n        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }"
            },
            {
              "step": 9,
              "variableName": "checkResult",
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 43,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 10,
              "variableName": "this",
              "startLine": 209,
              "startColumn": 13,
              "endLine": 209,
              "endColumn": 17,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 11,
              "variableName": "new Result(checkResult, ipArray.length)",
              "startLine": 144,
              "startColumn": 16,
              "endLine": 144,
              "endColumn": 55,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 12,
              "variableName": "registerCluster(serviceName, rawProductName, clusterName, ips)",
              "startLine": 103,
              "startColumn": 29,
              "endLine": 103,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        try {\n            String serviceName = addressServerGeneratorManager.generateNacosServiceName(productName);\n            \n            Result result = registerCluster(serviceName, rawProductName, clusterName, ips);\n            if (InternetAddressUtil.checkOk(result.getCheckResult())) {\n                responseEntity = ResponseEntity\n                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\""
            },
            {
              "step": 13,
              "variableName": "result",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 14,
              "variableName": "getCheckResult",
              "startLine": 213,
              "startColumn": 23,
              "endLine": 213,
              "endColumn": 37,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "            this.size = size;\n        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        "
            },
            {
              "step": 15,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 16,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 17,
              "variableName": "result.getCheckResult()",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 108,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 18,
              "variableName": "responseEntity",
              "startLine": 115,
              "startColumn": 16,
              "endLine": 115,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());\n        }\n        \n        return responseEntity;\n    }\n    \n    private Result registerCluster(String serviceName, String productName, String clusterName, String ips)"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 179,
              "startColumn": 28,
              "endLine": 179,
              "endColumn": 31,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "     */\n    public static String checkIps(String... ips) {\n        \n        if (ips == null || ips.length == 0) {\n            \n            return CHECK_OK;\n        }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 2,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 136,
              "startColumn": 30,
              "endLine": 136,
              "endColumn": 67,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            clusterOperator.updateClusterMetadata(Constants.DEFAULT_NAMESPACE_ID, serviceName, clusterName, metadata);\n        }\n        String[] ipArray = addressServerManager.splitIps(ips);\n        String checkResult = InternetAddressUtil.checkIps(ipArray);\n        if (InternetAddressUtil.checkOk(checkResult)) {\n            List<Instance> instanceList = addressServerGeneratorManager\n                    .generateInstancesByIps(serviceName, productName, clusterName, ipArray);"
            },
            {
              "step": 7,
              "variableName": "checkResult",
              "startLine": 144,
              "startColumn": 27,
              "endLine": 144,
              "endColumn": 38,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "String checkResult",
              "startLine": 208,
              "startColumn": 23,
              "endLine": 208,
              "endColumn": 41,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        \n        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }"
            },
            {
              "step": 9,
              "variableName": "checkResult",
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 43,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 10,
              "variableName": "this",
              "startLine": 209,
              "startColumn": 13,
              "endLine": 209,
              "endColumn": 17,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 11,
              "variableName": "new Result(checkResult, ipArray.length)",
              "startLine": 144,
              "startColumn": 16,
              "endLine": 144,
              "endColumn": 55,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 12,
              "variableName": "registerCluster(serviceName, rawProductName, clusterName, ips)",
              "startLine": 103,
              "startColumn": 29,
              "endLine": 103,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        try {\n            String serviceName = addressServerGeneratorManager.generateNacosServiceName(productName);\n            \n            Result result = registerCluster(serviceName, rawProductName, clusterName, ips);\n            if (InternetAddressUtil.checkOk(result.getCheckResult())) {\n                responseEntity = ResponseEntity\n                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\""
            },
            {
              "step": 13,
              "variableName": "result",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 14,
              "variableName": "getCheckResult",
              "startLine": 213,
              "startColumn": 23,
              "endLine": 213,
              "endColumn": 37,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "            this.size = size;\n        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        "
            },
            {
              "step": 15,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 16,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 17,
              "variableName": "result.getCheckResult()",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 108,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 18,
              "variableName": "responseEntity",
              "startLine": 115,
              "startColumn": 16,
              "endLine": 115,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());\n        }\n        \n        return responseEntity;\n    }\n    \n    private Result registerCluster(String serviceName, String productName, String clusterName, String ips)"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 185,
              "startColumn": 26,
              "endLine": 185,
              "endColumn": 29,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "        }\n        // illegal response\n        StringBuilder illegalResponse = new StringBuilder();\n        for (String ip : ips) {\n            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 2,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 136,
              "startColumn": 30,
              "endLine": 136,
              "endColumn": 67,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            clusterOperator.updateClusterMetadata(Constants.DEFAULT_NAMESPACE_ID, serviceName, clusterName, metadata);\n        }\n        String[] ipArray = addressServerManager.splitIps(ips);\n        String checkResult = InternetAddressUtil.checkIps(ipArray);\n        if (InternetAddressUtil.checkOk(checkResult)) {\n            List<Instance> instanceList = addressServerGeneratorManager\n                    .generateInstancesByIps(serviceName, productName, clusterName, ipArray);"
            },
            {
              "step": 7,
              "variableName": "checkResult",
              "startLine": 144,
              "startColumn": 27,
              "endLine": 144,
              "endColumn": 38,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "String checkResult",
              "startLine": 208,
              "startColumn": 23,
              "endLine": 208,
              "endColumn": 41,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        \n        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }"
            },
            {
              "step": 9,
              "variableName": "checkResult",
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 43,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 10,
              "variableName": "this",
              "startLine": 209,
              "startColumn": 13,
              "endLine": 209,
              "endColumn": 17,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        private final int size;\n        \n        public Result(String checkResult, int size) {\n            this.checkResult = checkResult;\n            this.size = size;\n        }\n        "
            },
            {
              "step": 11,
              "variableName": "new Result(checkResult, ipArray.length)",
              "startLine": 144,
              "startColumn": 16,
              "endLine": 144,
              "endColumn": 55,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                instanceOperator.registerInstance(Constants.DEFAULT_NAMESPACE_ID, serviceName, instance);\n            }\n        }\n        return new Result(checkResult, ipArray.length);\n    }\n    \n    /**"
            },
            {
              "step": 12,
              "variableName": "registerCluster(serviceName, rawProductName, clusterName, ips)",
              "startLine": 103,
              "startColumn": 29,
              "endLine": 103,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        try {\n            String serviceName = addressServerGeneratorManager.generateNacosServiceName(productName);\n            \n            Result result = registerCluster(serviceName, rawProductName, clusterName, ips);\n            if (InternetAddressUtil.checkOk(result.getCheckResult())) {\n                responseEntity = ResponseEntity\n                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\""
            },
            {
              "step": 13,
              "variableName": "result",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 91,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 14,
              "variableName": "getCheckResult",
              "startLine": 213,
              "startColumn": 23,
              "endLine": 213,
              "endColumn": 37,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "            this.size = size;\n        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        "
            },
            {
              "step": 15,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "Result [checkResult] : String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 16,
              "variableName": "checkResult",
              "startLine": 214,
              "startColumn": 20,
              "endLine": 214,
              "endColumn": 31,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "        }\n        \n        public String getCheckResult() {\n            return checkResult;\n        }\n        \n        public int getSize() {"
            },
            {
              "step": 17,
              "variableName": "result.getCheckResult()",
              "startLine": 109,
              "startColumn": 85,
              "endLine": 109,
              "endColumn": 108,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "                        .ok(\"product=\" + rawProductName + \",cluster=\" + rawClusterName + \"; put success with size=\"\n                                + result.getSize());\n            } else {\n                responseEntity = ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result.getCheckResult());\n            }\n        } catch (Exception e) {\n            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());"
            },
            {
              "step": 18,
              "variableName": "responseEntity",
              "startLine": 115,
              "startColumn": 16,
              "endLine": 115,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage());\n        }\n        \n        return responseEntity;\n    }\n    \n    private Result registerCluster(String serviceName, String productName, String clusterName, String ips)"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "AddressServerClusterController.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ipArray",
              "startLine": 184,
              "startColumn": 63,
              "endLine": 184,
              "endColumn": 70,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String[]",
              "code": "            }\n            // delete specified ip list\n            String[] ipArray = addressServerManager.splitIps(ips);\n            String checkResult = InternetAddressUtil.checkIps(ipArray);\n            if (InternetAddressUtil.checkOk(checkResult)) {\n                List<Instance> instanceList = addressServerGeneratorManager\n                        .generateInstancesByIps(serviceName, rawProductName, clusterName, ipArray);"
            },
            {
              "step": 1,
              "variableName": "String... ips",
              "startLine": 177,
              "startColumn": 35,
              "endLine": 177,
              "endColumn": 48,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "     * @param ips ips\n     * @return 'ok' if check passed, otherwise illegal ip\n     */\n    public static String checkIps(String... ips) {\n        \n        if (ips == null || ips.length == 0) {\n            "
            },
            {
              "step": 2,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 4,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 7,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 184,
              "startColumn": 34,
              "endLine": 184,
              "endColumn": 71,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            }\n            // delete specified ip list\n            String[] ipArray = addressServerManager.splitIps(ips);\n            String checkResult = InternetAddressUtil.checkIps(ipArray);\n            if (InternetAddressUtil.checkOk(checkResult)) {\n                List<Instance> instanceList = addressServerGeneratorManager\n                        .generateInstancesByIps(serviceName, rawProductName, clusterName, ipArray);"
            },
            {
              "step": 8,
              "variableName": "responseEntity",
              "startLine": 199,
              "startColumn": 16,
              "endLine": 199,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getCause());\n        }\n        \n        return responseEntity;\n    }\n    \n    private class Result {"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 179,
              "startColumn": 13,
              "endLine": 179,
              "endColumn": 16,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "     */\n    public static String checkIps(String... ips) {\n        \n        if (ips == null || ips.length == 0) {\n            \n            return CHECK_OK;\n        }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 2,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 184,
              "startColumn": 34,
              "endLine": 184,
              "endColumn": 71,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            }\n            // delete specified ip list\n            String[] ipArray = addressServerManager.splitIps(ips);\n            String checkResult = InternetAddressUtil.checkIps(ipArray);\n            if (InternetAddressUtil.checkOk(checkResult)) {\n                List<Instance> instanceList = addressServerGeneratorManager\n                        .generateInstancesByIps(serviceName, rawProductName, clusterName, ipArray);"
            },
            {
              "step": 7,
              "variableName": "responseEntity",
              "startLine": 199,
              "startColumn": 16,
              "endLine": 199,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getCause());\n        }\n        \n        return responseEntity;\n    }\n    \n    private class Result {"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 179,
              "startColumn": 28,
              "endLine": 179,
              "endColumn": 31,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "     */\n    public static String checkIps(String... ips) {\n        \n        if (ips == null || ips.length == 0) {\n            \n            return CHECK_OK;\n        }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 2,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 184,
              "startColumn": 34,
              "endLine": 184,
              "endColumn": 71,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            }\n            // delete specified ip list\n            String[] ipArray = addressServerManager.splitIps(ips);\n            String checkResult = InternetAddressUtil.checkIps(ipArray);\n            if (InternetAddressUtil.checkOk(checkResult)) {\n                List<Instance> instanceList = addressServerGeneratorManager\n                        .generateInstancesByIps(serviceName, rawProductName, clusterName, ipArray);"
            },
            {
              "step": 7,
              "variableName": "responseEntity",
              "startLine": 199,
              "startColumn": 16,
              "endLine": 199,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getCause());\n        }\n        \n        return responseEntity;\n    }\n    \n    private class Result {"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 185,
              "startColumn": 26,
              "endLine": 185,
              "endColumn": 29,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String[]",
              "code": "        }\n        // illegal response\n        StringBuilder illegalResponse = new StringBuilder();\n        for (String ip : ips) {\n            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }"
            },
            {
              "step": 1,
              "variableName": "ip",
              "startLine": 189,
              "startColumn": 36,
              "endLine": 189,
              "endColumn": 38,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 2,
              "variableName": "illegalResponse",
              "startLine": 189,
              "startColumn": 13,
              "endLine": 189,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            if (InternetAddressUtil.isIp(ip)) {\n                continue;\n            }\n            illegalResponse.append(ip).append(\",\");\n        }\n        \n        if (illegalResponse.length() == 0) {"
            },
            {
              "step": 3,
              "variableName": "illegalResponse",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 51,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "StringBuilder",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 36,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 5,
              "variableName": "ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1)",
              "startLine": 196,
              "startColumn": 16,
              "endLine": 196,
              "endColumn": 94,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/InternetAddressUtil.java",
              "type": "String",
              "code": "            return CHECK_OK;\n        }\n        \n        return ILLEGAL_IP_PREFIX + illegalResponse.substring(0, illegalResponse.length() - 1);\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InternetAddressUtil.checkIps(ipArray)",
              "startLine": 184,
              "startColumn": 34,
              "endLine": 184,
              "endColumn": 71,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "String",
              "code": "            }\n            // delete specified ip list\n            String[] ipArray = addressServerManager.splitIps(ips);\n            String checkResult = InternetAddressUtil.checkIps(ipArray);\n            if (InternetAddressUtil.checkOk(checkResult)) {\n                List<Instance> instanceList = addressServerGeneratorManager\n                        .generateInstancesByIps(serviceName, rawProductName, clusterName, ipArray);"
            },
            {
              "step": 7,
              "variableName": "responseEntity",
              "startLine": 199,
              "startColumn": 16,
              "endLine": 199,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java",
              "type": "",
              "code": "            responseEntity = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getCause());\n        }\n        \n        return responseEntity;\n    }\n    \n    private class Result {"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "ServerListController.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "ips",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 19,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 1,
              "variableName": "ips.toString()",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "String",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 2,
              "variableName": "addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts())",
              "startLine": 89,
              "startColumn": 23,
              "endLine": 89,
              "endColumn": 94,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "String",
              "code": "        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}\n"
            },
            {
              "step": 3,
              "variableName": "ResponseEntity.status(HttpStatus.OK)",
              "startLine": 88,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 95,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "",
              "code": "        }\n        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "this.ip",
              "startLine": 107,
              "startColumn": 16,
              "endLine": 107,
              "endColumn": 23,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java",
              "type": "String",
              "code": "    }\n    \n    public String getIp() {\n        return this.ip;\n    }\n    \n    public void setIp(final String ip) {"
            },
            {
              "step": 1,
              "variableName": "instance.getIp()",
              "startLine": 106,
              "startColumn": 24,
              "endLine": 106,
              "endColumn": 40,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "String",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 2,
              "variableName": "ips",
              "startLine": 106,
              "startColumn": 13,
              "endLine": 106,
              "endColumn": 16,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 3,
              "variableName": "ips",
              "startLine": 106,
              "startColumn": 13,
              "endLine": 106,
              "endColumn": 16,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 4,
              "variableName": "...->... [post update] : new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "startLine": 105,
              "startColumn": 30,
              "endLine": 108,
              "endColumn": 10,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 5,
              "variableName": "StringBuilder ips : StringBuilder",
              "startLine": 105,
              "startColumn": 30,
              "endLine": 108,
              "endColumn": 10,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 6,
              "variableName": "ips",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 19,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 7,
              "variableName": "ips.toString()",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "String",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts())",
              "startLine": 89,
              "startColumn": 23,
              "endLine": 89,
              "endColumn": 94,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "String",
              "code": "        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}\n"
            },
            {
              "step": 9,
              "variableName": "ResponseEntity.status(HttpStatus.OK)",
              "startLine": 88,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 95,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "",
              "code": "        }\n        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "ip",
              "startLine": 111,
              "startColumn": 19,
              "endLine": 111,
              "endColumn": 21,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java",
              "type": "String",
              "code": "    }\n    \n    public void setIp(final String ip) {\n        this.ip = ip;\n    }\n    \n    public int getPort() {"
            },
            {
              "step": 1,
              "variableName": "this",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 13,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java",
              "type": "Instance [ip] : String",
              "code": "    }\n    \n    public void setIp(final String ip) {\n        this.ip = ip;\n    }\n    \n    public int getPort() {"
            },
            {
              "step": 2,
              "variableName": "target",
              "startLine": 100,
              "startColumn": 9,
              "endLine": 100,
              "endColumn": 15,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/InstanceUtil.java",
              "type": "Instance [ip] : String",
              "code": "    public static Instance deepCopy(Instance source) {\n        Instance target = new Instance();\n        target.setInstanceId(source.getInstanceId());\n        target.setIp(source.getIp());\n        target.setPort(source.getPort());\n        target.setWeight(source.getWeight());\n        target.setHealthy(source.isHealthy());"
            },
            {
              "step": 3,
              "variableName": "target",
              "startLine": 109,
              "startColumn": 16,
              "endLine": 109,
              "endColumn": 22,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/InstanceUtil.java",
              "type": "Instance [ip] : String",
              "code": "        target.setClusterName(source.getClusterName());\n        target.setServiceName(source.getServiceName());\n        target.setMetadata(new HashMap<>(source.getMetadata()));\n        return target;\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "InstanceUtil.deepCopy(i)",
              "startLine": 267,
              "startColumn": 37,
              "endLine": 267,
              "endColumn": 61,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "Instance [ip] : String",
              "code": "                List<com.alibaba.nacos.api.naming.pojo.Instance> filteredInstances = allInstances.stream()\n                        .map(i -> {\n                            if (!i.isHealthy()) {\n                                i = InstanceUtil.deepCopy(i);\n                                // set all to `healthy` state to protect\n                                i.setHealthy(true);\n                            } // else deepcopy is unnecessary"
            },
            {
              "step": 5,
              "variableName": "i",
              "startLine": 271,
              "startColumn": 36,
              "endLine": 271,
              "endColumn": 37,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "Instance [ip] : String",
              "code": "                                // set all to `healthy` state to protect\n                                i.setHealthy(true);\n                            } // else deepcopy is unnecessary\n                            return i;\n                        })\n                        .collect(Collectors.toCollection(LinkedList::new));\n                filteredResult.setHosts(filteredInstances);"
            },
            {
              "step": 6,
              "variableName": "map(...) : Stream [<element>, ip] : String",
              "startLine": 264,
              "startColumn": 86,
              "endLine": 272,
              "endColumn": 27,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "Stream [<element>, ip] : String",
              "code": "            if ((float) newHealthyCount / allInstances.size() <= threshold) {\n                Loggers.SRV_LOG.warn(\"protect threshold reached, return all ips, service: {}\", filteredResult.getName());\n                filteredResult.setReachProtectionThreshold(true);\n                List<com.alibaba.nacos.api.naming.pojo.Instance> filteredInstances = allInstances.stream()\n                        .map(i -> {\n                            if (!i.isHealthy()) {\n                                i = InstanceUtil.deepCopy(i);"
            },
            {
              "step": 7,
              "variableName": "collect(...) : LinkedList [<element>, ip] : String",
              "startLine": 264,
              "startColumn": 86,
              "endLine": 273,
              "endColumn": 75,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "LinkedList [<element>, ip] : String",
              "code": "            if ((float) newHealthyCount / allInstances.size() <= threshold) {\n                Loggers.SRV_LOG.warn(\"protect threshold reached, return all ips, service: {}\", filteredResult.getName());\n                filteredResult.setReachProtectionThreshold(true);\n                List<com.alibaba.nacos.api.naming.pojo.Instance> filteredInstances = allInstances.stream()\n                        .map(i -> {\n                            if (!i.isHealthy()) {\n                                i = InstanceUtil.deepCopy(i);"
            },
            {
              "step": 8,
              "variableName": "filteredInstances",
              "startLine": 274,
              "startColumn": 41,
              "endLine": 274,
              "endColumn": 58,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "LinkedList [<element>, ip] : String",
              "code": "                            return i;\n                        })\n                        .collect(Collectors.toCollection(LinkedList::new));\n                filteredResult.setHosts(filteredInstances);\n            }\n        };\n        return doSelectInstances(serviceInfo, cluster, healthyOnly, enableOnly, filter);"
            },
            {
              "step": 9,
              "variableName": "List<Instance> hosts",
              "startLine": 117,
              "startColumn": 26,
              "endLine": 117,
              "endColumn": 46,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "LinkedList [<element>, ip] : String",
              "code": "        return System.currentTimeMillis() - lastRefTime > cacheMillis;\n    }\n    \n    public void setHosts(List<Instance> hosts) {\n        this.hosts = hosts;\n    }\n    "
            },
            {
              "step": 10,
              "variableName": "hosts",
              "startLine": 118,
              "startColumn": 22,
              "endLine": 118,
              "endColumn": 27,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "LinkedList [<element>, ip] : String",
              "code": "    }\n    \n    public void setHosts(List<Instance> hosts) {\n        this.hosts = hosts;\n    }\n    \n    public void addHost(Instance host) {"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 118,
              "startColumn": 9,
              "endLine": 118,
              "endColumn": 13,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "    }\n    \n    public void setHosts(List<Instance> hosts) {\n        this.hosts = hosts;\n    }\n    \n    public void addHost(Instance host) {"
            },
            {
              "step": 12,
              "variableName": "filteredResult",
              "startLine": 274,
              "startColumn": 17,
              "endLine": 274,
              "endColumn": 31,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "                            return i;\n                        })\n                        .collect(Collectors.toCollection(LinkedList::new));\n                filteredResult.setHosts(filteredInstances);\n            }\n        };\n        return doSelectInstances(serviceInfo, cluster, healthyOnly, enableOnly, filter);"
            },
            {
              "step": 13,
              "variableName": "result",
              "startLine": 320,
              "startColumn": 29,
              "endLine": 320,
              "endColumn": 35,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "        }\n        result.setHosts(filteredInstances);\n        if (filter != null) {\n            filter.doFilter(result, allInstances, healthyCount);\n        }\n        return result;\n    }"
            },
            {
              "step": 14,
              "variableName": "result",
              "startLine": 322,
              "startColumn": 16,
              "endLine": 322,
              "endColumn": 22,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "        if (filter != null) {\n            filter.doFilter(result, allInstances, healthyCount);\n        }\n        return result;\n    }\n    \n    private static boolean checkCluster(Set<String> clusterSets, com.alibaba.nacos.api.naming.pojo.Instance instance) {"
            },
            {
              "step": 15,
              "variableName": "doSelectInstances(serviceInfo, cluster, healthyOnly, enableOnly, null)",
              "startLine": 191,
              "startColumn": 16,
              "endLine": 191,
              "endColumn": 86,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "     */\n    public static ServiceInfo selectInstances(ServiceInfo serviceInfo, String cluster, boolean healthyOnly,\n            boolean enableOnly) {\n        return doSelectInstances(serviceInfo, cluster, healthyOnly, enableOnly, null);\n    }\n    \n    /**"
            },
            {
              "step": 16,
              "variableName": "selectInstances(serviceInfo, cluster, healthyOnly, false)",
              "startLine": 177,
              "startColumn": 16,
              "endLine": 177,
              "endColumn": 73,
              "uri": "nacos-3.0.0/naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "     * @return new service info\n     */\n    public static ServiceInfo selectInstances(ServiceInfo serviceInfo, String cluster, boolean healthyOnly) {\n        return selectInstances(serviceInfo, cluster, healthyOnly, false);\n    }\n    \n    /**"
            },
            {
              "step": 17,
              "variableName": "ServiceUtil.selectInstances(serviceInfo, cluster, false)",
              "startLine": 87,
              "startColumn": 23,
              "endLine": 87,
              "endColumn": 79,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "                    .body(\"product=\" + product + \",cluster=\" + cluster + \" not found.\");\n        }\n        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }"
            },
            {
              "step": 18,
              "variableName": "serviceInfo",
              "startLine": 89,
              "startColumn": 71,
              "endLine": 89,
              "endColumn": 82,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}\n"
            },
            {
              "step": 19,
              "variableName": "getHosts",
              "startLine": 129,
              "startColumn": 27,
              "endLine": 129,
              "endColumn": 35,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "        this.hosts.addAll(hosts);\n    }\n    \n    public List<Instance> getHosts() {\n        return new ArrayList<>(hosts);\n    }\n    "
            },
            {
              "step": 20,
              "variableName": "hosts",
              "startLine": 130,
              "startColumn": 32,
              "endLine": 130,
              "endColumn": 37,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "ServiceInfo [hosts, <element>, ip] : String",
              "code": "    }\n    \n    public List<Instance> getHosts() {\n        return new ArrayList<>(hosts);\n    }\n    \n    public boolean isValid() {"
            },
            {
              "step": 21,
              "variableName": "hosts",
              "startLine": 130,
              "startColumn": 32,
              "endLine": 130,
              "endColumn": 37,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "LinkedList [<element>, ip] : String",
              "code": "    }\n    \n    public List<Instance> getHosts() {\n        return new ArrayList<>(hosts);\n    }\n    \n    public boolean isValid() {"
            },
            {
              "step": 22,
              "variableName": "new ArrayList<>(hosts)",
              "startLine": 130,
              "startColumn": 16,
              "endLine": 130,
              "endColumn": 38,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
              "type": "ArrayList [<element>, ip] : String",
              "code": "    }\n    \n    public List<Instance> getHosts() {\n        return new ArrayList<>(hosts);\n    }\n    \n    public boolean isValid() {"
            },
            {
              "step": 23,
              "variableName": "serviceInfo.getHosts()",
              "startLine": 89,
              "startColumn": 71,
              "endLine": 89,
              "endColumn": 93,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "ArrayList [<element>, ip] : String",
              "code": "        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}\n"
            },
            {
              "step": 24,
              "variableName": "List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList",
              "startLine": 102,
              "startColumn": 39,
              "endLine": 102,
              "endColumn": 100,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "ArrayList [<element>, ip] : String",
              "code": "     * @param instanceList an instance set will generate string response to client.\n     * @return the result of response to client\n     */\n    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {"
            },
            {
              "step": 25,
              "variableName": "instanceList",
              "startLine": 105,
              "startColumn": 9,
              "endLine": 105,
              "endColumn": 21,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "ArrayList [<element>, ip] : String",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 26,
              "variableName": "...->... [post update] : new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "startLine": 105,
              "startColumn": 30,
              "endLine": 108,
              "endColumn": 10,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 27,
              "variableName": "StringBuilder ips : StringBuilder",
              "startLine": 105,
              "startColumn": 30,
              "endLine": 108,
              "endColumn": 10,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 28,
              "variableName": "ips",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 19,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 29,
              "variableName": "ips.toString()",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "String",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts())",
              "startLine": 89,
              "startColumn": 23,
              "endLine": 89,
              "endColumn": 94,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "String",
              "code": "        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}\n"
            },
            {
              "step": 31,
              "variableName": "ResponseEntity.status(HttpStatus.OK)",
              "startLine": 88,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 95,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "",
              "code": "        }\n        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "this.port",
              "startLine": 115,
              "startColumn": 16,
              "endLine": 115,
              "endColumn": 25,
              "uri": "nacos-3.0.0/api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java",
              "type": "Number",
              "code": "    }\n    \n    public int getPort() {\n        return this.port;\n    }\n    \n    public void setPort(final int port) {"
            },
            {
              "step": 1,
              "variableName": "instance.getPort()",
              "startLine": 106,
              "startColumn": 61,
              "endLine": 106,
              "endColumn": 79,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "Number",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 2,
              "variableName": "ips.append(instance.getIp()).append(':')",
              "startLine": 106,
              "startColumn": 13,
              "endLine": 106,
              "endColumn": 53,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 3,
              "variableName": "ips",
              "startLine": 106,
              "startColumn": 13,
              "endLine": 106,
              "endColumn": 16,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 4,
              "variableName": "ips",
              "startLine": 106,
              "startColumn": 13,
              "endLine": 106,
              "endColumn": 16,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "code": "        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });\n        "
            },
            {
              "step": 5,
              "variableName": "...->... [post update] : new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "startLine": 105,
              "startColumn": 30,
              "endLine": 108,
              "endColumn": 10,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "new Consumer<Instance>(...) { ... } [StringBuilder ips] : StringBuilder",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 6,
              "variableName": "StringBuilder ips : StringBuilder",
              "startLine": 105,
              "startColumn": 30,
              "endLine": 108,
              "endColumn": 10,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "    public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {\n        \n        StringBuilder ips = new StringBuilder();\n        instanceList.forEach(instance -> {\n            ips.append(instance.getIp()).append(':').append(instance.getPort());\n            ips.append('\\n');\n        });"
            },
            {
              "step": 7,
              "variableName": "ips",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 19,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "StringBuilder",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "ips.toString()",
              "startLine": 110,
              "startColumn": 16,
              "endLine": 110,
              "endColumn": 30,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java",
              "type": "String",
              "code": "            ips.append('\\n');\n        });\n        \n        return ips.toString();\n    }\n    \n    /**"
            },
            {
              "step": 9,
              "variableName": "addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts())",
              "startLine": 89,
              "startColumn": 23,
              "endLine": 89,
              "endColumn": 94,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "String",
              "code": "        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}\n"
            },
            {
              "step": 10,
              "variableName": "ResponseEntity.status(HttpStatus.OK)",
              "startLine": 88,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 95,
              "uri": "nacos-3.0.0/address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java",
              "type": "",
              "code": "        }\n        ServiceInfo serviceInfo = serviceStorage.getData(service.get());\n        serviceInfo = ServiceUtil.selectInstances(serviceInfo, cluster, false);\n        return ResponseEntity.status(HttpStatus.OK)\n                .body(addressServerBuilderManager.generateResponseIps(serviceInfo.getHosts()));\n    }\n}"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 3,
      "fileName": "HealthController.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "InternetAddressUtil.IPV6_START_MARK",
              "startLine": 114,
              "startColumn": 25,
              "endLine": 114,
              "endColumn": 60,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "        \n        if (InternetAddressUtil.PREFER_IPV6_ADDRESSES && !tmpSelfIp.startsWith(InternetAddressUtil.IPV6_START_MARK)\n                && !tmpSelfIp.endsWith(InternetAddressUtil.IPV6_END_MARK)) {\n            tmpSelfIp = InternetAddressUtil.IPV6_START_MARK + tmpSelfIp + InternetAddressUtil.IPV6_END_MARK;\n            if (StringUtils.contains(tmpSelfIp, InternetAddressUtil.PERCENT_SIGN_IN_IPV6)) {\n                tmpSelfIp = tmpSelfIp.substring(0, tmpSelfIp.indexOf(InternetAddressUtil.PERCENT_SIGN_IN_IPV6))\n                        + InternetAddressUtil.IPV6_END_MARK;"
            },
            {
              "step": 1,
              "variableName": "tmpSelfIp",
              "startLine": 126,
              "startColumn": 18,
              "endLine": 126,
              "endColumn": 27,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            event.setNewIP(tmpSelfIp);\n            NotifyCenter.publishEvent(event);\n        }\n        selfIP = tmpSelfIp;\n    }\n    \n    /**"
            },
            {
              "step": 2,
              "variableName": "selfIP",
              "startLine": 67,
              "startColumn": 36,
              "endLine": 67,
              "endColumn": 42,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    private static final ScheduledExecutorService INET_AUTO_REFRESH_EXECUTOR = ExecutorFactory.Managed.newSingleScheduledExecutorService(\n            InetUtils.class.getCanonicalName(), new NameThreadFactory(\"com.alibaba.inet.ip.auto-refresh\"));\n    \n    private static volatile String selfIP;\n    \n    private static boolean useOnlySiteLocalInterface = false;\n    "
            },
            {
              "step": 3,
              "variableName": "selfIP",
              "startLine": 181,
              "startColumn": 16,
              "endLine": 181,
              "endColumn": 22,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    }\n    \n    public static String getSelfIP() {\n        return selfIP;\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "InetUtils.getSelfIP()",
              "startLine": 88,
              "startColumn": 48,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "String",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 5,
              "variableName": "sb.append(\"server ip \")",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 40,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 6,
              "variableName": "sb",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 18,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            },
            {
              "step": 7,
              "variableName": "sb.toString()",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 29,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "nacosIp",
              "startLine": 138,
              "startColumn": 33,
              "endLine": 138,
              "endColumn": 40,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "     */\n    public static String getNacosIp() {\n        String nacosIp = System.getProperty(NACOS_SERVER_IP);\n        if (StringUtils.isBlank(nacosIp)) {\n            nacosIp = EnvUtil.getProperty(IP_ADDRESS);\n        }\n        if (!StringUtils.isBlank(nacosIp)) {"
            },
            {
              "step": 1,
              "variableName": "nacosIp",
              "startLine": 147,
              "startColumn": 16,
              "endLine": 147,
              "endColumn": 23,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            }\n        }\n        \n        return nacosIp;\n    }\n    \n    /**"
            },
            {
              "step": 2,
              "variableName": "getNacosIp()",
              "startLine": 102,
              "startColumn": 28,
              "endLine": 102,
              "endColumn": 40,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "     */\n    private static void refreshIp() {\n        \n        String tmpSelfIp = getNacosIp();\n        \n        if (StringUtils.isBlank(tmpSelfIp)) {\n            tmpSelfIp = getPreferHostnameOverIP();"
            },
            {
              "step": 3,
              "variableName": "tmpSelfIp",
              "startLine": 126,
              "startColumn": 18,
              "endLine": 126,
              "endColumn": 27,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            event.setNewIP(tmpSelfIp);\n            NotifyCenter.publishEvent(event);\n        }\n        selfIP = tmpSelfIp;\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "selfIP",
              "startLine": 67,
              "startColumn": 36,
              "endLine": 67,
              "endColumn": 42,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    private static final ScheduledExecutorService INET_AUTO_REFRESH_EXECUTOR = ExecutorFactory.Managed.newSingleScheduledExecutorService(\n            InetUtils.class.getCanonicalName(), new NameThreadFactory(\"com.alibaba.inet.ip.auto-refresh\"));\n    \n    private static volatile String selfIP;\n    \n    private static boolean useOnlySiteLocalInterface = false;\n    "
            },
            {
              "step": 5,
              "variableName": "selfIP",
              "startLine": 181,
              "startColumn": 16,
              "endLine": 181,
              "endColumn": 22,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    }\n    \n    public static String getSelfIP() {\n        return selfIP;\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InetUtils.getSelfIP()",
              "startLine": 88,
              "startColumn": 48,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "String",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 7,
              "variableName": "sb.append(\"server ip \")",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 40,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 8,
              "variableName": "sb",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 18,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            },
            {
              "step": 9,
              "variableName": "sb.toString()",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 29,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "nacosIp",
              "startLine": 141,
              "startColumn": 34,
              "endLine": 141,
              "endColumn": 41,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(nacosIp)) {\n            nacosIp = EnvUtil.getProperty(IP_ADDRESS);\n        }\n        if (!StringUtils.isBlank(nacosIp)) {\n            if (!(InternetAddressUtil.isIp(nacosIp) || InternetAddressUtil.isDomain(nacosIp))) {\n                throw new RuntimeException(\"nacos address \" + nacosIp + \" is not ip\");\n            }"
            },
            {
              "step": 1,
              "variableName": "nacosIp",
              "startLine": 147,
              "startColumn": 16,
              "endLine": 147,
              "endColumn": 23,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            }\n        }\n        \n        return nacosIp;\n    }\n    \n    /**"
            },
            {
              "step": 2,
              "variableName": "getNacosIp()",
              "startLine": 102,
              "startColumn": 28,
              "endLine": 102,
              "endColumn": 40,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "     */\n    private static void refreshIp() {\n        \n        String tmpSelfIp = getNacosIp();\n        \n        if (StringUtils.isBlank(tmpSelfIp)) {\n            tmpSelfIp = getPreferHostnameOverIP();"
            },
            {
              "step": 3,
              "variableName": "tmpSelfIp",
              "startLine": 126,
              "startColumn": 18,
              "endLine": 126,
              "endColumn": 27,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            event.setNewIP(tmpSelfIp);\n            NotifyCenter.publishEvent(event);\n        }\n        selfIP = tmpSelfIp;\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "selfIP",
              "startLine": 67,
              "startColumn": 36,
              "endLine": 67,
              "endColumn": 42,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    private static final ScheduledExecutorService INET_AUTO_REFRESH_EXECUTOR = ExecutorFactory.Managed.newSingleScheduledExecutorService(\n            InetUtils.class.getCanonicalName(), new NameThreadFactory(\"com.alibaba.inet.ip.auto-refresh\"));\n    \n    private static volatile String selfIP;\n    \n    private static boolean useOnlySiteLocalInterface = false;\n    "
            },
            {
              "step": 5,
              "variableName": "selfIP",
              "startLine": 181,
              "startColumn": 16,
              "endLine": 181,
              "endColumn": 22,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    }\n    \n    public static String getSelfIP() {\n        return selfIP;\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InetUtils.getSelfIP()",
              "startLine": 88,
              "startColumn": 48,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "String",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 7,
              "variableName": "sb.append(\"server ip \")",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 40,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 8,
              "variableName": "sb",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 18,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            },
            {
              "step": 9,
              "variableName": "sb.toString()",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 29,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "nacosIp",
              "startLine": 142,
              "startColumn": 44,
              "endLine": 142,
              "endColumn": 51,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            nacosIp = EnvUtil.getProperty(IP_ADDRESS);\n        }\n        if (!StringUtils.isBlank(nacosIp)) {\n            if (!(InternetAddressUtil.isIp(nacosIp) || InternetAddressUtil.isDomain(nacosIp))) {\n                throw new RuntimeException(\"nacos address \" + nacosIp + \" is not ip\");\n            }\n        }"
            },
            {
              "step": 1,
              "variableName": "nacosIp",
              "startLine": 147,
              "startColumn": 16,
              "endLine": 147,
              "endColumn": 23,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            }\n        }\n        \n        return nacosIp;\n    }\n    \n    /**"
            },
            {
              "step": 2,
              "variableName": "getNacosIp()",
              "startLine": 102,
              "startColumn": 28,
              "endLine": 102,
              "endColumn": 40,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "     */\n    private static void refreshIp() {\n        \n        String tmpSelfIp = getNacosIp();\n        \n        if (StringUtils.isBlank(tmpSelfIp)) {\n            tmpSelfIp = getPreferHostnameOverIP();"
            },
            {
              "step": 3,
              "variableName": "tmpSelfIp",
              "startLine": 126,
              "startColumn": 18,
              "endLine": 126,
              "endColumn": 27,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "            event.setNewIP(tmpSelfIp);\n            NotifyCenter.publishEvent(event);\n        }\n        selfIP = tmpSelfIp;\n    }\n    \n    /**"
            },
            {
              "step": 4,
              "variableName": "selfIP",
              "startLine": 67,
              "startColumn": 36,
              "endLine": 67,
              "endColumn": 42,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    private static final ScheduledExecutorService INET_AUTO_REFRESH_EXECUTOR = ExecutorFactory.Managed.newSingleScheduledExecutorService(\n            InetUtils.class.getCanonicalName(), new NameThreadFactory(\"com.alibaba.inet.ip.auto-refresh\"));\n    \n    private static volatile String selfIP;\n    \n    private static boolean useOnlySiteLocalInterface = false;\n    "
            },
            {
              "step": 5,
              "variableName": "selfIP",
              "startLine": 181,
              "startColumn": 16,
              "endLine": 181,
              "endColumn": 22,
              "uri": "nacos-3.0.0/sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java",
              "type": "String",
              "code": "    }\n    \n    public static String getSelfIP() {\n        return selfIP;\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "InetUtils.getSelfIP()",
              "startLine": 88,
              "startColumn": 48,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "String",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 7,
              "variableName": "sb.append(\"server ip \")",
              "startLine": 88,
              "startColumn": 17,
              "endLine": 88,
              "endColumn": 40,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "                sb.append(\"address server down. \");\n            }\n            if (!ServerMemberManager.isInIpList()) {\n                sb.append(\"server ip \").append(InetUtils.getSelfIP())\n                        .append(\" is not in the serverList of address server. \");\n            }\n        }"
            },
            {
              "step": 8,
              "variableName": "sb",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 18,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "StringBuilder",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            },
            {
              "step": 9,
              "variableName": "sb.toString()",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 29,
              "uri": "nacos-3.0.0/config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java",
              "type": "",
              "code": "            }\n        }\n    \n        return sb.toString();\n    }\n    \n    private boolean isAddressServerHealthy() {"
            }
          ]
        }
      ]
    }
  ],
  "208": [
    {
      "resultIndex": 4,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII))",
              "startLine": 126,
              "startColumn": 24,
              "endLine": 126,
              "endColumn": 115,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }"
            },
            {
              "step": 1,
              "variableName": "bytes",
              "startLine": 127,
              "startColumn": 48,
              "endLine": 127,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            },
            {
              "step": 2,
              "variableName": "URL_BASE64_ENCODER.encodeToString(bytes)",
              "startLine": 127,
              "startColumn": 14,
              "endLine": 127,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII))",
              "startLine": 178,
              "startColumn": 24,
              "endLine": 178,
              "endColumn": 115,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }"
            },
            {
              "step": 1,
              "variableName": "bytes",
              "startLine": 179,
              "startColumn": 48,
              "endLine": 179,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            },
            {
              "step": 2,
              "variableName": "URL_BASE64_ENCODER.encodeToString(bytes)",
              "startLine": 179,
              "startColumn": 14,
              "endLine": 179,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII))",
              "startLine": 126,
              "startColumn": 24,
              "endLine": 126,
              "endColumn": 115,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }"
            },
            {
              "step": 1,
              "variableName": "bytes",
              "startLine": 127,
              "startColumn": 48,
              "endLine": 127,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            },
            {
              "step": 2,
              "variableName": "URL_BASE64_ENCODER.encodeToString(bytes)",
              "startLine": 127,
              "startColumn": 14,
              "endLine": 127,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 7,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal(bytes)",
              "startLine": 197,
              "startColumn": 62,
              "endLine": 197,
              "endColumn": 88,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 1,
              "variableName": "URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes))",
              "startLine": 197,
              "startColumn": 28,
              "endLine": 197,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "jwtWithoutSign + JWT_SEPERATOR + signature",
              "startLine": 198,
              "startColumn": 16,
              "endLine": 198,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    \n    private Mac getMacInstance(Key key) {"
            },
            {
              "step": 3,
              "variableName": "signatureAlgorithm.sign(payload, key)",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    private String sign(NacosJwtPayload payload) {\n        return signatureAlgorithm.sign(payload, key);\n    }\n    \n    public JwtBuilder jwtBuilder() {"
            },
            {
              "step": 4,
              "variableName": "sign(nacosJwtPayload)",
              "startLine": 106,
              "startColumn": 20,
              "endLine": 106,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        }\n        \n        public String compact() {\n            return sign(nacosJwtPayload);\n        }\n    }\n}"
            },
            {
              "step": 5,
              "variableName": "jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact()",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 114,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "            // check nacos.core.auth.plugin.nacos.token.secret.key only if auth enabled\n            checkJwtParser();\n        }\n        return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "jwtTokenManager.createToken(username)",
              "startLine": 92,
              "startColumn": 24,
              "endLine": 92,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "                return token;\n            }\n        }\n        String token = jwtTokenManager.createToken(username);\n        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);"
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 93,
              "startColumn": 53,
              "endLine": 93,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            }\n        }\n        String token = jwtTokenManager.createToken(username);\n        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "signature",
              "startLine": 109,
              "startColumn": 69,
              "endLine": 109,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String signature",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "signature",
              "startLine": 127,
              "startColumn": 62,
              "endLine": 127,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal(bytes)",
              "startLine": 197,
              "startColumn": 62,
              "endLine": 197,
              "endColumn": 88,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 1,
              "variableName": "URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes))",
              "startLine": 197,
              "startColumn": 28,
              "endLine": 197,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "jwtWithoutSign + JWT_SEPERATOR + signature",
              "startLine": 198,
              "startColumn": 16,
              "endLine": 198,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    \n    private Mac getMacInstance(Key key) {"
            },
            {
              "step": 3,
              "variableName": "signatureAlgorithm.sign(payload, key)",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    private String sign(NacosJwtPayload payload) {\n        return signatureAlgorithm.sign(payload, key);\n    }\n    \n    public JwtBuilder jwtBuilder() {"
            },
            {
              "step": 4,
              "variableName": "sign(nacosJwtPayload)",
              "startLine": 106,
              "startColumn": 20,
              "endLine": 106,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        }\n        \n        public String compact() {\n            return sign(nacosJwtPayload);\n        }\n    }\n}"
            },
            {
              "step": 5,
              "variableName": "jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact()",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 114,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "            // check nacos.core.auth.plugin.nacos.token.secret.key only if auth enabled\n            checkJwtParser();\n        }\n        return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "jwtTokenManager.createToken(username)",
              "startLine": 92,
              "startColumn": 24,
              "endLine": 92,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "                return token;\n            }\n        }\n        String token = jwtTokenManager.createToken(username);\n        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);"
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 95,
              "startColumn": 75,
              "endLine": 95,
              "endColumn": 80,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        String token = jwtTokenManager.createToken(username);\n        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 121,
              "startColumn": 45,
              "endLine": 121,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "     * @return auth info\n     */\n    @Deprecated\n    public Authentication getAuthentication(String token) throws AccessException {\n        NacosUser nacosUser = jwtParser.parse(token);\n        \n        List<GrantedAuthority> authorities = AuthorityUtils.commaSeparatedStringToAuthorityList(StringUtils.EMPTY);"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 122,
              "startColumn": 47,
              "endLine": 122,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "     */\n    @Deprecated\n    public Authentication getAuthentication(String token) throws AccessException {\n        NacosUser nacosUser = jwtParser.parse(token);\n        \n        List<GrantedAuthority> authorities = AuthorityUtils.commaSeparatedStringToAuthorityList(StringUtils.EMPTY);\n        "
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "signature",
              "startLine": 109,
              "startColumn": 69,
              "endLine": 109,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String signature",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "signature",
              "startLine": 127,
              "startColumn": 62,
              "endLine": 127,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 8,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII))",
              "startLine": 178,
              "startColumn": 24,
              "endLine": 178,
              "endColumn": 115,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }"
            },
            {
              "step": 1,
              "variableName": "bytes",
              "startLine": 179,
              "startColumn": 48,
              "endLine": 179,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            },
            {
              "step": 2,
              "variableName": "URL_BASE64_ENCODER.encodeToString(bytes)",
              "startLine": 179,
              "startColumn": 14,
              "endLine": 179,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 9,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal(bytes)",
              "startLine": 197,
              "startColumn": 62,
              "endLine": 197,
              "endColumn": 88,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 1,
              "variableName": "URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes))",
              "startLine": 197,
              "startColumn": 28,
              "endLine": 197,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "jwtWithoutSign + JWT_SEPERATOR + signature",
              "startLine": 198,
              "startColumn": 16,
              "endLine": 198,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    \n    private Mac getMacInstance(Key key) {"
            },
            {
              "step": 3,
              "variableName": "signatureAlgorithm.sign(payload, key)",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    private String sign(NacosJwtPayload payload) {\n        return signatureAlgorithm.sign(payload, key);\n    }\n    \n    public JwtBuilder jwtBuilder() {"
            },
            {
              "step": 4,
              "variableName": "sign(nacosJwtPayload)",
              "startLine": 106,
              "startColumn": 20,
              "endLine": 106,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        }\n        \n        public String compact() {\n            return sign(nacosJwtPayload);\n        }\n    }\n}"
            },
            {
              "step": 5,
              "variableName": "jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact()",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 114,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "            // check nacos.core.auth.plugin.nacos.token.secret.key only if auth enabled\n            checkJwtParser();\n        }\n        return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "getExecuteTokenManager().createToken(userName)",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "jwtTokenManager.createToken(username)",
              "startLine": 65,
              "startColumn": 62,
              "endLine": 65,
              "endColumn": 99,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUserDetails == null || !PasswordEncoderUtil.matches(rawPassword, nacosUserDetails.getPassword())) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username));\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 38,
              "startColumn": 39,
              "endLine": 38,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 10,
              "variableName": "this",
              "startLine": 40,
              "startColumn": 9,
              "endLine": 40,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 11,
              "variableName": "new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username))",
              "startLine": 65,
              "startColumn": 16,
              "endLine": 65,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        if (nacosUserDetails == null || !PasswordEncoderUtil.matches(rawPassword, nacosUserDetails.getPassword())) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username));\n    }\n    \n    @Override"
            },
            {
              "step": 12,
              "variableName": "authenticate(userName, password)",
              "startLine": 86,
              "startColumn": 20,
              "endLine": 86,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);\n            user = authenticate(userName, password);\n        }\n        \n        return user;"
            },
            {
              "step": 13,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 14,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 283,
              "startColumn": 30,
              "endLine": 283,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "        if (AuthSystemTypes.NACOS.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())\n                || AuthSystemTypes.LDAP.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())) {\n            \n            NacosUser user = iAuthenticationManager.authenticate(request);\n            \n            response.addHeader(AuthConstants.AUTHORIZATION_HEADER, AuthConstants.TOKEN_PREFIX + user.getToken());\n            "
            },
            {
              "step": 15,
              "variableName": "user",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 86,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 16,
              "variableName": "getToken",
              "startLine": 43,
              "startColumn": 19,
              "endLine": 43,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "        this.token = token;\n    }\n    \n    public String getToken() {\n        return token;\n    }\n    "
            },
            {
              "step": 17,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 18,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 19,
              "variableName": "user.getToken()",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 20,
              "variableName": "String token",
              "startLine": 73,
              "startColumn": 38,
              "endLine": 73,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "token",
              "startLine": 74,
              "startColumn": 62,
              "endLine": 74,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    \n}"
            },
            {
              "step": 22,
              "variableName": "String token",
              "startLine": 149,
              "startColumn": 38,
              "endLine": 149,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 23,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 49,
              "endLine": 153,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 24,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 26,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 27,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 28,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 29,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 31,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal(bytes)",
              "startLine": 197,
              "startColumn": 62,
              "endLine": 197,
              "endColumn": 88,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 1,
              "variableName": "URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes))",
              "startLine": 197,
              "startColumn": 28,
              "endLine": 197,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "jwtWithoutSign + JWT_SEPERATOR + signature",
              "startLine": 198,
              "startColumn": 16,
              "endLine": 198,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    \n    private Mac getMacInstance(Key key) {"
            },
            {
              "step": 3,
              "variableName": "signatureAlgorithm.sign(payload, key)",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    private String sign(NacosJwtPayload payload) {\n        return signatureAlgorithm.sign(payload, key);\n    }\n    \n    public JwtBuilder jwtBuilder() {"
            },
            {
              "step": 4,
              "variableName": "sign(nacosJwtPayload)",
              "startLine": 106,
              "startColumn": 20,
              "endLine": 106,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        }\n        \n        public String compact() {\n            return sign(nacosJwtPayload);\n        }\n    }\n}"
            },
            {
              "step": 5,
              "variableName": "jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact()",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 114,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "            // check nacos.core.auth.plugin.nacos.token.secret.key only if auth enabled\n            checkJwtParser();\n        }\n        return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "jwtTokenManager.createToken(username)",
              "startLine": 92,
              "startColumn": 24,
              "endLine": 92,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "                return token;\n            }\n        }\n        String token = jwtTokenManager.createToken(username);\n        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);"
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 99,
              "startColumn": 16,
              "endLine": 99,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);\n        return token;\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "getExecuteTokenManager().createToken(userName)",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "jwtTokenManager.createToken(userDetails.getUsername())",
              "startLine": 93,
              "startColumn": 57,
              "endLine": 93,
              "endColumn": 111,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "String",
              "code": "            throw new AccessException(\"user not found\");\n        }\n        \n        return new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()));\n    }\n    \n    private boolean ldapLogin(String username, String password) {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 38,
              "startColumn": 39,
              "endLine": 38,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }"
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 12,
              "variableName": "this",
              "startLine": 40,
              "startColumn": 9,
              "endLine": 40,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 13,
              "variableName": "new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()))",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 112,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            throw new AccessException(\"user not found\");\n        }\n        \n        return new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()));\n    }\n    \n    private boolean ldapLogin(String username, String password) {"
            },
            {
              "step": 14,
              "variableName": "authenticate(userName, password)",
              "startLine": 86,
              "startColumn": 20,
              "endLine": 86,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);\n            user = authenticate(userName, password);\n        }\n        \n        return user;"
            },
            {
              "step": 15,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 16,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 284,
              "startColumn": 30,
              "endLine": 284,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "NacosUser [token] : String",
              "code": "        if (AuthSystemTypes.NACOS.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())\n                || AuthSystemTypes.LDAP.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())) {\n            \n            NacosUser user = iAuthenticationManager.authenticate(request);\n            \n            response.addHeader(AuthConstants.AUTHORIZATION_HEADER, AuthConstants.TOKEN_PREFIX + user.getToken());\n            "
            },
            {
              "step": 17,
              "variableName": "user",
              "startLine": 290,
              "startColumn": 82,
              "endLine": 290,
              "endColumn": 86,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "NacosUser [token] : String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 18,
              "variableName": "getToken",
              "startLine": 43,
              "startColumn": 19,
              "endLine": 43,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "        this.token = token;\n    }\n    \n    public String getToken() {\n        return token;\n    }\n    "
            },
            {
              "step": 19,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 20,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 21,
              "variableName": "user.getToken()",
              "startLine": 290,
              "startColumn": 82,
              "endLine": 290,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 22,
              "variableName": "String token",
              "startLine": 73,
              "startColumn": 38,
              "endLine": 73,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    "
            },
            {
              "step": 23,
              "variableName": "token",
              "startLine": 74,
              "startColumn": 62,
              "endLine": 74,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    \n}"
            },
            {
              "step": 24,
              "variableName": "String token",
              "startLine": 160,
              "startColumn": 38,
              "endLine": 160,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        return tokenMap.get(token).getNacosUser();\n    }\n    \n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        if (tokenMap.containsKey(token)) {\n            return TimeUnit.MILLISECONDS.toSeconds(\n                    tokenMap.get(token).getExpiredTimeMills() - System.currentTimeMillis());"
            },
            {
              "step": 25,
              "variableName": "token",
              "startLine": 165,
              "startColumn": 53,
              "endLine": 165,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            return TimeUnit.MILLISECONDS.toSeconds(\n                    tokenMap.get(token).getExpiredTimeMills() - System.currentTimeMillis());\n        }\n        return jwtTokenManager.getTokenTtlInSeconds(token);\n    }\n    \n    @Override"
            },
            {
              "step": 26,
              "variableName": "String token",
              "startLine": 149,
              "startColumn": 38,
              "endLine": 149,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 27,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 49,
              "endLine": 153,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 28,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 29,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 30,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 31,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 32,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 33,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 34,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 35,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal(bytes)",
              "startLine": 197,
              "startColumn": 62,
              "endLine": 197,
              "endColumn": 88,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 1,
              "variableName": "URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes))",
              "startLine": 197,
              "startColumn": 28,
              "endLine": 197,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "jwtWithoutSign + JWT_SEPERATOR + signature",
              "startLine": 198,
              "startColumn": 16,
              "endLine": 198,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    \n    private Mac getMacInstance(Key key) {"
            },
            {
              "step": 3,
              "variableName": "signatureAlgorithm.sign(payload, key)",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    private String sign(NacosJwtPayload payload) {\n        return signatureAlgorithm.sign(payload, key);\n    }\n    \n    public JwtBuilder jwtBuilder() {"
            },
            {
              "step": 4,
              "variableName": "sign(nacosJwtPayload)",
              "startLine": 106,
              "startColumn": 20,
              "endLine": 106,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        }\n        \n        public String compact() {\n            return sign(nacosJwtPayload);\n        }\n    }\n}"
            },
            {
              "step": 5,
              "variableName": "jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact()",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 114,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "            // check nacos.core.auth.plugin.nacos.token.secret.key only if auth enabled\n            checkJwtParser();\n        }\n        return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "getExecuteTokenManager().createToken(userName)",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "jwtTokenManager.createToken(username)",
              "startLine": 65,
              "startColumn": 62,
              "endLine": 65,
              "endColumn": 99,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUserDetails == null || !PasswordEncoderUtil.matches(rawPassword, nacosUserDetails.getPassword())) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username));\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 38,
              "startColumn": 39,
              "endLine": 38,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 10,
              "variableName": "this",
              "startLine": 40,
              "startColumn": 9,
              "endLine": 40,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 11,
              "variableName": "new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username))",
              "startLine": 65,
              "startColumn": 16,
              "endLine": 65,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        if (nacosUserDetails == null || !PasswordEncoderUtil.matches(rawPassword, nacosUserDetails.getPassword())) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username));\n    }\n    \n    @Override"
            },
            {
              "step": 12,
              "variableName": "super.authenticate(username, rawPassword)",
              "startLine": 68,
              "startColumn": 20,
              "endLine": 68,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        }\n        \n        try {\n            return super.authenticate(username, rawPassword);\n        } catch (AccessException | UsernameNotFoundException ignored) {\n            if (Loggers.AUTH.isWarnEnabled()) {\n                Loggers.AUTH.warn(\"try login with LDAP, user: {}\", username);"
            },
            {
              "step": 13,
              "variableName": "authenticate(userName, password)",
              "startLine": 86,
              "startColumn": 20,
              "endLine": 86,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);\n            user = authenticate(userName, password);\n        }\n        \n        return user;"
            },
            {
              "step": 14,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 15,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 283,
              "startColumn": 30,
              "endLine": 283,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "        if (AuthSystemTypes.NACOS.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())\n                || AuthSystemTypes.LDAP.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())) {\n            \n            NacosUser user = iAuthenticationManager.authenticate(request);\n            \n            response.addHeader(AuthConstants.AUTHORIZATION_HEADER, AuthConstants.TOKEN_PREFIX + user.getToken());\n            "
            },
            {
              "step": 16,
              "variableName": "user",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 86,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 17,
              "variableName": "getToken",
              "startLine": 43,
              "startColumn": 19,
              "endLine": 43,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "        this.token = token;\n    }\n    \n    public String getToken() {\n        return token;\n    }\n    "
            },
            {
              "step": 18,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 19,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 20,
              "variableName": "user.getToken()",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 21,
              "variableName": "String token",
              "startLine": 73,
              "startColumn": 38,
              "endLine": 73,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "token",
              "startLine": 74,
              "startColumn": 62,
              "endLine": 74,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    \n}"
            },
            {
              "step": 23,
              "variableName": "String token",
              "startLine": 149,
              "startColumn": 38,
              "endLine": 149,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 24,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 49,
              "endLine": 153,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 25,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 26,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 27,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 28,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 29,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 30,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 31,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 32,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "macInstance.doFinal(bytes)",
              "startLine": 197,
              "startColumn": 62,
              "endLine": 197,
              "endColumn": 88,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 1,
              "variableName": "URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes))",
              "startLine": 197,
              "startColumn": 28,
              "endLine": 197,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "                nacosJwtPayload.toString().getBytes(StandardCharsets.UTF_8));\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "jwtWithoutSign + JWT_SEPERATOR + signature",
              "startLine": 198,
              "startColumn": 16,
              "endLine": 198,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        Mac macInstance = getMacInstance(key);\n        byte[] bytes = jwtWithoutSign.getBytes(StandardCharsets.US_ASCII);\n        String signature = URL_BASE64_ENCODER.encodeToString(macInstance.doFinal(bytes));\n        return jwtWithoutSign + JWT_SEPERATOR + signature;\n    }\n    \n    private Mac getMacInstance(Key key) {"
            },
            {
              "step": 3,
              "variableName": "signatureAlgorithm.sign(payload, key)",
              "startLine": 76,
              "startColumn": 16,
              "endLine": 76,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    private String sign(NacosJwtPayload payload) {\n        return signatureAlgorithm.sign(payload, key);\n    }\n    \n    public JwtBuilder jwtBuilder() {"
            },
            {
              "step": 4,
              "variableName": "sign(nacosJwtPayload)",
              "startLine": 106,
              "startColumn": 20,
              "endLine": 106,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        }\n        \n        public String compact() {\n            return sign(nacosJwtPayload);\n        }\n    }\n}"
            },
            {
              "step": 5,
              "variableName": "jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact()",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 114,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "            // check nacos.core.auth.plugin.nacos.token.secret.key only if auth enabled\n            checkJwtParser();\n        }\n        return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();\n    }\n    \n    /**"
            },
            {
              "step": 6,
              "variableName": "jwtTokenManager.createToken(username)",
              "startLine": 92,
              "startColumn": 24,
              "endLine": 92,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "                return token;\n            }\n        }\n        String token = jwtTokenManager.createToken(username);\n        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);"
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 96,
              "startColumn": 45,
              "endLine": 96,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);\n        return token;"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 190,
              "startColumn": 28,
              "endLine": 190,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        \n        private NacosUser nacosUser;\n        \n        public TokenEntity(String token, String userName, long expiredTimeMills, Authentication authentication,\n                NacosUser nacosUser) {\n            this.token = token;\n            this.userName = userName;"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 192,
              "startColumn": 26,
              "endLine": 192,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        \n        public TokenEntity(String token, String userName, long expiredTimeMills, Authentication authentication,\n                NacosUser nacosUser) {\n            this.token = token;\n            this.userName = userName;\n            this.expiredTimeMills = expiredTimeMills;\n            this.authentication = authentication;"
            },
            {
              "step": 10,
              "variableName": "this",
              "startLine": 192,
              "startColumn": 13,
              "endLine": 192,
              "endColumn": 17,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "TokenEntity [token] : String",
              "code": "        \n        public TokenEntity(String token, String userName, long expiredTimeMills, Authentication authentication,\n                NacosUser nacosUser) {\n            this.token = token;\n            this.userName = userName;\n            this.expiredTimeMills = expiredTimeMills;\n            this.authentication = authentication;"
            },
            {
              "step": 11,
              "variableName": "new TokenEntity(token, username, expiredTime, authentication, user)",
              "startLine": 96,
              "startColumn": 29,
              "endLine": 96,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "TokenEntity [token] : String",
              "code": "        NacosUser user = jwtTokenManager.parseToken(token);\n        long expiredTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValidityInSeconds());\n        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);\n        return token;"
            },
            {
              "step": 12,
              "variableName": "model",
              "startLine": 98,
              "startColumn": 31,
              "endLine": 98,
              "endColumn": 36,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "TokenEntity [token] : String",
              "code": "        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);\n        return token;\n    }\n    "
            },
            {
              "step": 13,
              "variableName": "userMap",
              "startLine": 98,
              "startColumn": 9,
              "endLine": 98,
              "endColumn": 16,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "ConcurrentHashMap [<map.value>, token] : String",
              "code": "        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);\n        return token;\n    }\n    "
            },
            {
              "step": 14,
              "variableName": "userMap",
              "startLine": 98,
              "startColumn": 9,
              "endLine": 98,
              "endColumn": 16,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "CachedJwtTokenManager [userMap, <map.value>, token] : String",
              "code": "        Authentication authentication = jwtTokenManager.getAuthentication(token);\n        TokenEntity model = new TokenEntity(token, username, expiredTime, authentication, user);\n        tokenMap.put(token, model);\n        userMap.put(username, model);\n        return token;\n    }\n    "
            },
            {
              "step": 15,
              "variableName": "getExecuteTokenManager()",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "CachedJwtTokenManager [userMap, <map.value>, token] : String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 16,
              "variableName": "getExecuteTokenManager()",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 17,
              "variableName": "jwtTokenManager",
              "startLine": 65,
              "startColumn": 62,
              "endLine": 65,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "        if (nacosUserDetails == null || !PasswordEncoderUtil.matches(rawPassword, nacosUserDetails.getPassword())) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username));\n    }\n    \n    @Override"
            },
            {
              "step": 18,
              "variableName": "jwtTokenManager",
              "startLine": 65,
              "startColumn": 62,
              "endLine": 65,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "AbstractAuthenticationManager [jwtTokenManager, delegate, userMap, <map.value>, token] : String",
              "code": "        if (nacosUserDetails == null || !PasswordEncoderUtil.matches(rawPassword, nacosUserDetails.getPassword())) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return new NacosUser(nacosUserDetails.getUsername(), jwtTokenManager.createToken(username));\n    }\n    \n    @Override"
            },
            {
              "step": 19,
              "variableName": "super",
              "startLine": 68,
              "startColumn": 20,
              "endLine": 68,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "LdapAuthenticationManager [jwtTokenManager, delegate, userMap, <map.value>, token] : String",
              "code": "        }\n        \n        try {\n            return super.authenticate(username, rawPassword);\n        } catch (AccessException | UsernameNotFoundException ignored) {\n            if (Loggers.AUTH.isWarnEnabled()) {\n                Loggers.AUTH.warn(\"try login with LDAP, user: {}\", username);"
            },
            {
              "step": 20,
              "variableName": "jwtTokenManager",
              "startLine": 93,
              "startColumn": 57,
              "endLine": 93,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "LdapAuthenticationManager [jwtTokenManager, delegate, userMap, <map.value>, token] : String",
              "code": "            throw new AccessException(\"user not found\");\n        }\n        \n        return new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()));\n    }\n    \n    private boolean ldapLogin(String username, String password) {"
            },
            {
              "step": 21,
              "variableName": "jwtTokenManager",
              "startLine": 93,
              "startColumn": 57,
              "endLine": 93,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "            throw new AccessException(\"user not found\");\n        }\n        \n        return new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()));\n    }\n    \n    private boolean ldapLogin(String username, String password) {"
            },
            {
              "step": 22,
              "variableName": "createToken",
              "startLine": 48,
              "startColumn": 19,
              "endLine": 48,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "    }\n    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    "
            },
            {
              "step": 23,
              "variableName": "getExecuteTokenManager()",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 24,
              "variableName": "getExecuteTokenManager",
              "startLine": 38,
              "startColumn": 26,
              "endLine": 38,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "        this.delegate = delegate;\n    }\n    \n    private TokenManager getExecuteTokenManager() {\n        return delegate;\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "delegate",
              "startLine": 39,
              "startColumn": 16,
              "endLine": 39,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "TokenManagerDelegate [delegate, userMap, <map.value>, token] : String",
              "code": "    }\n    \n    private TokenManager getExecuteTokenManager() {\n        return delegate;\n    }\n    \n    @Override"
            },
            {
              "step": 26,
              "variableName": "delegate",
              "startLine": 39,
              "startColumn": 16,
              "endLine": 39,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "CachedJwtTokenManager [userMap, <map.value>, token] : String",
              "code": "    }\n    \n    private TokenManager getExecuteTokenManager() {\n        return delegate;\n    }\n    \n    @Override"
            },
            {
              "step": 27,
              "variableName": "getExecuteTokenManager()",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "CachedJwtTokenManager [userMap, <map.value>, token] : String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 28,
              "variableName": "createToken",
              "startLine": 84,
              "startColumn": 19,
              "endLine": 84,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "CachedJwtTokenManager [userMap, <map.value>, token] : String",
              "code": "     * @return token\n     * @throws AccessException access exception\n     */\n    public String createToken(String username) throws AccessException {\n        if (userMap.containsKey(username)) {\n            String token = userMap.get(username).getToken();\n            long expiredTime = userMap.get(username).getExpiredTimeMills();"
            },
            {
              "step": 29,
              "variableName": "userMap",
              "startLine": 86,
              "startColumn": 28,
              "endLine": 86,
              "endColumn": 35,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "CachedJwtTokenManager [userMap, <map.value>, token] : String",
              "code": "     */\n    public String createToken(String username) throws AccessException {\n        if (userMap.containsKey(username)) {\n            String token = userMap.get(username).getToken();\n            long expiredTime = userMap.get(username).getExpiredTimeMills();\n            if (!needRefresh(expiredTime)) {\n                return token;"
            },
            {
              "step": 30,
              "variableName": "userMap",
              "startLine": 86,
              "startColumn": 28,
              "endLine": 86,
              "endColumn": 35,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "ConcurrentHashMap [<map.value>, token] : String",
              "code": "     */\n    public String createToken(String username) throws AccessException {\n        if (userMap.containsKey(username)) {\n            String token = userMap.get(username).getToken();\n            long expiredTime = userMap.get(username).getExpiredTimeMills();\n            if (!needRefresh(expiredTime)) {\n                return token;"
            },
            {
              "step": 31,
              "variableName": "userMap.get(username)",
              "startLine": 86,
              "startColumn": 28,
              "endLine": 86,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "TokenEntity [token] : String",
              "code": "     */\n    public String createToken(String username) throws AccessException {\n        if (userMap.containsKey(username)) {\n            String token = userMap.get(username).getToken();\n            long expiredTime = userMap.get(username).getExpiredTimeMills();\n            if (!needRefresh(expiredTime)) {\n                return token;"
            },
            {
              "step": 32,
              "variableName": "getToken",
              "startLine": 199,
              "startColumn": 23,
              "endLine": 199,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "TokenEntity [token] : String",
              "code": "            this.nacosUser = nacosUser;\n        }\n        \n        public String getToken() {\n            return token;\n        }\n        "
            },
            {
              "step": 33,
              "variableName": "token",
              "startLine": 200,
              "startColumn": 20,
              "endLine": 200,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "TokenEntity [token] : String",
              "code": "        }\n        \n        public String getToken() {\n            return token;\n        }\n        \n        public void setToken(String token) {"
            },
            {
              "step": 34,
              "variableName": "token",
              "startLine": 200,
              "startColumn": 20,
              "endLine": 200,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "        }\n        \n        public String getToken() {\n            return token;\n        }\n        \n        public void setToken(String token) {"
            },
            {
              "step": 35,
              "variableName": "userMap.get(username).getToken()",
              "startLine": 86,
              "startColumn": 28,
              "endLine": 86,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "     */\n    public String createToken(String username) throws AccessException {\n        if (userMap.containsKey(username)) {\n            String token = userMap.get(username).getToken();\n            long expiredTime = userMap.get(username).getExpiredTimeMills();\n            if (!needRefresh(expiredTime)) {\n                return token;"
            },
            {
              "step": 36,
              "variableName": "token",
              "startLine": 89,
              "startColumn": 24,
              "endLine": 89,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            String token = userMap.get(username).getToken();\n            long expiredTime = userMap.get(username).getExpiredTimeMills();\n            if (!needRefresh(expiredTime)) {\n                return token;\n            }\n        }\n        String token = jwtTokenManager.createToken(username);"
            },
            {
              "step": 37,
              "variableName": "getExecuteTokenManager().createToken(userName)",
              "startLine": 49,
              "startColumn": 16,
              "endLine": 49,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public String createToken(String userName) throws AccessException {\n        return getExecuteTokenManager().createToken(userName);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "jwtTokenManager.createToken(userDetails.getUsername())",
              "startLine": 93,
              "startColumn": 57,
              "endLine": 93,
              "endColumn": 111,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "String",
              "code": "            throw new AccessException(\"user not found\");\n        }\n        \n        return new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()));\n    }\n    \n    private boolean ldapLogin(String username, String password) {"
            },
            {
              "step": 39,
              "variableName": "String token",
              "startLine": 38,
              "startColumn": 39,
              "endLine": 38,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }"
            },
            {
              "step": 40,
              "variableName": "token",
              "startLine": 40,
              "startColumn": 22,
              "endLine": 40,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 41,
              "variableName": "this",
              "startLine": 40,
              "startColumn": 9,
              "endLine": 40,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    public NacosUser(String userName, String token) {\n        setUserName(userName);\n        this.token = token;\n    }\n    \n    public String getToken() {"
            },
            {
              "step": 42,
              "variableName": "new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()))",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 112,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            throw new AccessException(\"user not found\");\n        }\n        \n        return new NacosUser(userDetails.getUsername(), jwtTokenManager.createToken(userDetails.getUsername()));\n    }\n    \n    private boolean ldapLogin(String username, String password) {"
            },
            {
              "step": 43,
              "variableName": "authenticate(userName, password)",
              "startLine": 86,
              "startColumn": 20,
              "endLine": 86,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);\n            user = authenticate(userName, password);\n        }\n        \n        return user;"
            },
            {
              "step": 44,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 45,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 283,
              "startColumn": 30,
              "endLine": 283,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "        if (AuthSystemTypes.NACOS.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())\n                || AuthSystemTypes.LDAP.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())) {\n            \n            NacosUser user = iAuthenticationManager.authenticate(request);\n            \n            response.addHeader(AuthConstants.AUTHORIZATION_HEADER, AuthConstants.TOKEN_PREFIX + user.getToken());\n            "
            },
            {
              "step": 46,
              "variableName": "user",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 86,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 47,
              "variableName": "getToken",
              "startLine": 43,
              "startColumn": 19,
              "endLine": 43,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "        this.token = token;\n    }\n    \n    public String getToken() {\n        return token;\n    }\n    "
            },
            {
              "step": 48,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 49,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 50,
              "variableName": "user.getToken()",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 51,
              "variableName": "String token",
              "startLine": 73,
              "startColumn": 38,
              "endLine": 73,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    "
            },
            {
              "step": 52,
              "variableName": "token",
              "startLine": 74,
              "startColumn": 62,
              "endLine": 74,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    \n}"
            },
            {
              "step": 53,
              "variableName": "String token",
              "startLine": 149,
              "startColumn": 38,
              "endLine": 149,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 54,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 49,
              "endLine": 153,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 55,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 56,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 57,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 58,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 59,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 60,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 61,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 62,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 10,
      "fileName": "UserController.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 13,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 17,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 18,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 22,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 23,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 24,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 25,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 26,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 29,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 30,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 31,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 32,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 33,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 38,
              "variableName": "user",
              "startLine": 236,
              "startColumn": 16,
              "endLine": 236,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "user.getUserName()",
              "startLine": 236,
              "startColumn": 16,
              "endLine": 236,
              "endColumn": 34,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 13,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 14,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 15,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 18,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 19,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 20,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 26,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 28,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 30,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 31,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 32,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 33,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 34,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 35,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 37,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 39,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 40,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 41,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 42,
              "variableName": "user",
              "startLine": 236,
              "startColumn": 16,
              "endLine": 236,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            },
            {
              "step": 43,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 45,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 46,
              "variableName": "user.getUserName()",
              "startLine": 236,
              "startColumn": 16,
              "endLine": 236,
              "endColumn": 34,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 11,
      "fileName": "UserControllerV3.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 13,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 17,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 18,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 22,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 23,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 24,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 25,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 26,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 29,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 30,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 31,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 32,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 33,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 38,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 16,
              "endLine": 229,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "user.getUserName()",
              "startLine": 229,
              "startColumn": 16,
              "endLine": 229,
              "endColumn": 34,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 13,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 14,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 15,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 18,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 19,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 20,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 26,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 28,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 30,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 31,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 32,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 33,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 34,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 35,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 37,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 39,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 40,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 41,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 217,
              "startColumn": 20,
              "endLine": 217,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 42,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 16,
              "endLine": 229,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            },
            {
              "step": 43,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 45,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 46,
              "variableName": "user.getUserName()",
              "startLine": 229,
              "startColumn": 16,
              "endLine": 229,
              "endColumn": 34,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/v3/UserControllerV3.java",
              "type": "",
              "code": "            return true;\n        }\n        // same user\n        return user.getUserName().equals(username);\n    }\n    \n    /**"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 12,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 13,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "signature",
              "startLine": 109,
              "startColumn": 69,
              "endLine": 109,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 17,
              "variableName": "String signature",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 18,
              "variableName": "signature",
              "startLine": 127,
              "startColumn": 62,
              "endLine": 127,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 144,
              "startColumn": 79,
              "endLine": 144,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();\n            if (username == null || username.isEmpty()) {\n                throw new AccessException(\"invalid token, username is empty\");"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 121,
              "startColumn": 45,
              "endLine": 121,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "     * @return auth info\n     */\n    @Deprecated\n    public Authentication getAuthentication(String token) throws AccessException {\n        NacosUser nacosUser = jwtParser.parse(token);\n        \n        List<GrantedAuthority> authorities = AuthorityUtils.commaSeparatedStringToAuthorityList(StringUtils.EMPTY);"
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 122,
              "startColumn": 47,
              "endLine": 122,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "     */\n    @Deprecated\n    public Authentication getAuthentication(String token) throws AccessException {\n        NacosUser nacosUser = jwtParser.parse(token);\n        \n        List<GrantedAuthority> authorities = AuthorityUtils.commaSeparatedStringToAuthorityList(StringUtils.EMPTY);\n        "
            },
            {
              "step": 13,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 14,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 15,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 18,
              "variableName": "signature",
              "startLine": 109,
              "startColumn": 69,
              "endLine": 109,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 19,
              "variableName": "String signature",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 20,
              "variableName": "signature",
              "startLine": 127,
              "startColumn": 62,
              "endLine": 127,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 13,
      "fileName": "NacosSignatureAlgorithm.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 149,
              "startColumn": 98,
              "endLine": 149,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (username == null || username.isEmpty()) {\n                throw new AccessException(\"invalid token, username is empty\");\n            }\n            long expiredTime = TimeUnit.SECONDS.toMillis(jwtTokenManager.getExpiredTimeInSeconds(token));\n            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 156,
              "startColumn": 41,
              "endLine": 156,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 160,
              "startColumn": 49,
              "endLine": 160,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token);\n    }\n    \n    @Override"
            },
            {
              "step": 13,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 14,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 15,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 18,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 19,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 20,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 13,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt",
              "startLine": 110,
              "startColumn": 23,
              "endLine": 110,
              "endColumn": 26,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    "
            },
            {
              "step": 15,
              "variableName": "String token",
              "startLine": 47,
              "startColumn": 26,
              "endLine": 47,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "        return token;\n    }\n    \n    public void setToken(String token) {\n        this.token = token;\n    }\n    "
            },
            {
              "step": 16,
              "variableName": "token",
              "startLine": 48,
              "startColumn": 22,
              "endLine": 48,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public void setToken(String token) {\n        this.token = token;\n    }\n    \n    public boolean isGlobalAdmin() {"
            },
            {
              "step": 17,
              "variableName": "this",
              "startLine": 48,
              "startColumn": 9,
              "endLine": 48,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public void setToken(String token) {\n        this.token = token;\n    }\n    \n    public boolean isGlobalAdmin() {"
            },
            {
              "step": 18,
              "variableName": "user",
              "startLine": 110,
              "startColumn": 9,
              "endLine": 110,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [token] : String",
              "code": "            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    "
            },
            {
              "step": 19,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [token] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 20,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 21,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 22,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 23,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 24,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 25,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 26,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 283,
              "startColumn": 30,
              "endLine": 283,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "        if (AuthSystemTypes.NACOS.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())\n                || AuthSystemTypes.LDAP.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())) {\n            \n            NacosUser user = iAuthenticationManager.authenticate(request);\n            \n            response.addHeader(AuthConstants.AUTHORIZATION_HEADER, AuthConstants.TOKEN_PREFIX + user.getToken());\n            "
            },
            {
              "step": 27,
              "variableName": "user",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 86,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [token] : String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 28,
              "variableName": "getToken",
              "startLine": 43,
              "startColumn": 19,
              "endLine": 43,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "        this.token = token;\n    }\n    \n    public String getToken() {\n        return token;\n    }\n    "
            },
            {
              "step": 29,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 30,
              "variableName": "token",
              "startLine": 44,
              "startColumn": 16,
              "endLine": 44,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public String getToken() {\n        return token;\n    }\n    \n    public void setToken(String token) {"
            },
            {
              "step": 31,
              "variableName": "user.getToken()",
              "startLine": 289,
              "startColumn": 82,
              "endLine": 289,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "String",
              "code": "            \n            ObjectNode result = JacksonUtils.createEmptyJsonNode();\n            result.put(Constants.ACCESS_TOKEN, user.getToken());\n            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));\n            result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));\n            result.put(Constants.USERNAME, user.getUserName());\n            return result;"
            },
            {
              "step": 32,
              "variableName": "String token",
              "startLine": 73,
              "startColumn": 38,
              "endLine": 73,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    "
            },
            {
              "step": 33,
              "variableName": "token",
              "startLine": 74,
              "startColumn": 62,
              "endLine": 74,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        return getExecuteTokenManager().getTokenTtlInSeconds(token);\n    }\n    \n}"
            },
            {
              "step": 34,
              "variableName": "String token",
              "startLine": 149,
              "startColumn": 38,
              "endLine": 149,
              "endColumn": 50,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public long getTokenTtlInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 35,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 49,
              "endLine": 153,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 36,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 37,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 38,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 39,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 40,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 41,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 42,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 43,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "request.getHeader(AuthConstants.AUTHORIZATION_HEADER)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }"
            },
            {
              "step": 1,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 3,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 11,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 12,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 13,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 14,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 15,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt",
              "startLine": 110,
              "startColumn": 23,
              "endLine": 110,
              "endColumn": 26,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    "
            },
            {
              "step": 17,
              "variableName": "String token",
              "startLine": 47,
              "startColumn": 26,
              "endLine": 47,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "        return token;\n    }\n    \n    public void setToken(String token) {\n        this.token = token;\n    }\n    "
            },
            {
              "step": 18,
              "variableName": "token",
              "startLine": 48,
              "startColumn": 22,
              "endLine": 48,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public void setToken(String token) {\n        this.token = token;\n    }\n    \n    public boolean isGlobalAdmin() {"
            },
            {
              "step": 19,
              "variableName": "this",
              "startLine": 48,
              "startColumn": 9,
              "endLine": 48,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public void setToken(String token) {\n        this.token = token;\n    }\n    \n    public boolean isGlobalAdmin() {"
            },
            {
              "step": 20,
              "variableName": "user",
              "startLine": 110,
              "startColumn": 9,
              "endLine": 110,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [token] : String",
              "code": "            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [token] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 22,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [token] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 23,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 24,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [token] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 25,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [token] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 26,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [token] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 27,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [token] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 28,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 29,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 30,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 31,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 32,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 33,
              "variableName": "token",
              "startLine": 149,
              "startColumn": 98,
              "endLine": 149,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (username == null || username.isEmpty()) {\n                throw new AccessException(\"invalid token, username is empty\");\n            }\n            long expiredTime = TimeUnit.SECONDS.toMillis(jwtTokenManager.getExpiredTimeInSeconds(token));\n            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }"
            },
            {
              "step": 34,
              "variableName": "String token",
              "startLine": 156,
              "startColumn": 41,
              "endLine": 156,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        return jwtParser.getExpireTimeInSeconds(token) - TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n    }\n    \n    public long getExpiredTimeInSeconds(String token) throws AccessException {\n        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }"
            },
            {
              "step": 35,
              "variableName": "token",
              "startLine": 160,
              "startColumn": 49,
              "endLine": 160,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        if (!authConfigs.isAuthEnabled()) {\n            return tokenValidityInSeconds;\n        }\n        return jwtParser.getExpireTimeInSeconds(token);\n    }\n    \n    @Override"
            },
            {
              "step": 36,
              "variableName": "String token",
              "startLine": 87,
              "startColumn": 40,
              "endLine": 87,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    "
            },
            {
              "step": 37,
              "variableName": "token",
              "startLine": 88,
              "startColumn": 64,
              "endLine": 88,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {\n        return NacosSignatureAlgorithm.getExpiredTimeInSeconds(token, key);\n    }\n    \n    public class JwtBuilder {"
            },
            {
              "step": 38,
              "variableName": "String jwt",
              "startLine": 146,
              "startColumn": 48,
              "endLine": 146,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public static long getExpiredTimeInSeconds(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 39,
              "variableName": "jwt",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 40,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 150,
              "startColumn": 26,
              "endLine": 150,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 41,
              "variableName": "signature",
              "startLine": 162,
              "startColumn": 75,
              "endLine": 162,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        return signatureAlgorithm.getExpireTimeInSeconds(header, payload, signature, key);\n    }\n    \n    /**"
            },
            {
              "step": 42,
              "variableName": "String signature",
              "startLine": 175,
              "startColumn": 71,
              "endLine": 175,
              "endColumn": 87,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return expire time in seconds\n     * @throws AccessException access exception\n     */\n    public long getExpireTimeInSeconds(String header, String payload, String signature, Key key)\n            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));"
            },
            {
              "step": 43,
              "variableName": "signature",
              "startLine": 179,
              "startColumn": 62,
              "endLine": 179,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "",
              "code": "            throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);"
            }
          ]
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 14,
      "fileName": "CredentialWatcher.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.SECRET_KEY",
              "startLine": 122,
              "startColumn": 59,
              "endLine": 122,
              "endColumn": 87,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "        if (!credentials.valid()) {\n            LOGGER\n                    .warn(\"[1] Credential file missing required property {} Credential file missing {} or {}\", appName,\n                            IdentifyConstants.ACCESS_KEY, IdentifyConstants.SECRET_KEY);\n            propertyPath = null;\n            // return;\n        }"
            },
            {
              "step": 1,
              "variableName": "LOGGER",
              "startLine": 120,
              "startColumn": 13,
              "endLine": 122,
              "endColumn": 88,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "Object[] [[]] : String",
              "code": "            return;\n        }\n        if (!credentials.valid()) {\n            LOGGER\n                    .warn(\"[1] Credential file missing required property {} Credential file missing {} or {}\", appName,\n                            IdentifyConstants.ACCESS_KEY, IdentifyConstants.SECRET_KEY);\n            propertyPath = null;"
            },
            {
              "step": 2,
              "variableName": "LOGGER",
              "startLine": 120,
              "startColumn": 13,
              "endLine": 122,
              "endColumn": 88,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            return;\n        }\n        if (!credentials.valid()) {\n            LOGGER\n                    .warn(\"[1] Credential file missing required property {} Credential file missing {} or {}\", appName,\n                            IdentifyConstants.ACCESS_KEY, IdentifyConstants.SECRET_KEY);\n            propertyPath = null;"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 15,
      "fileName": "StsCredentialHolder.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "securityCredentialsUrl",
              "startLine": 87,
              "startColumn": 25,
              "endLine": 87,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsCredentialHolder.java",
              "type": "String",
              "code": "            if (!result.ok()) {\n                LOGGER.error(\n                        \"can not get security credentials, securityCredentialsUrl: {}, responseCode: {}, response: {}\",\n                        securityCredentialsUrl, result.getCode(), result.getMessage());\n                throw new NacosRuntimeException(NacosException.SERVER_ERROR,\n                        \"can not get security credentials, responseCode: \" + result.getCode() + \", response: \" + result\n                                .getMessage());"
            },
            {
              "step": 1,
              "variableName": "LOGGER.error(",
              "startLine": 85,
              "startColumn": 17,
              "endLine": 87,
              "endColumn": 87,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsCredentialHolder.java",
              "type": "Object[] [[]] : String",
              "code": "                    .get(securityCredentialsUrl, Header.EMPTY, Query.EMPTY, String.class);\n            \n            if (!result.ok()) {\n                LOGGER.error(\n                        \"can not get security credentials, securityCredentialsUrl: {}, responseCode: {}, response: {}\",\n                        securityCredentialsUrl, result.getCode(), result.getMessage());\n                throw new NacosRuntimeException(NacosException.SERVER_ERROR,"
            },
            {
              "step": 2,
              "variableName": "LOGGER.error(",
              "startLine": 85,
              "startColumn": 17,
              "endLine": 87,
              "endColumn": 87,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsCredentialHolder.java",
              "type": "",
              "code": "                    .get(securityCredentialsUrl, Header.EMPTY, Query.EMPTY, String.class);\n            \n            if (!result.ok()) {\n                LOGGER.error(\n                        \"can not get security credentials, securityCredentialsUrl: {}, responseCode: {}, response: {}\",\n                        securityCredentialsUrl, result.getCode(), result.getMessage());\n                throw new NacosRuntimeException(NacosException.SERVER_ERROR,"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 16,
      "fileName": "NacosRestTemplate.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "securityCredentialsUrl",
              "startLine": 82,
              "startColumn": 26,
              "endLine": 82,
              "endColumn": 48,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsCredentialHolder.java",
              "type": "String",
              "code": "        String securityCredentialsUrl = StsConfig.getInstance().getSecurityCredentialsUrl();\n        try {\n            HttpRestResult<String> result = HttpClientManager.getInstance().getNacosRestTemplate()\n                    .get(securityCredentialsUrl, Header.EMPTY, Query.EMPTY, String.class);\n            \n            if (!result.ok()) {\n                LOGGER.error("
            },
            {
              "step": 1,
              "variableName": "String url",
              "startLine": 72,
              "startColumn": 38,
              "endLine": 72,
              "endColumn": 48,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "     * @return {@link HttpRestResult}\n     * @throws Exception ex\n     */\n    public <T> HttpRestResult<T> get(String url, Header header, Query query, Type responseType) throws Exception {\n        return execute(url, HttpMethod.GET, new RequestHttpEntity(header, query), responseType);\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "url",
              "startLine": 73,
              "startColumn": 24,
              "endLine": 73,
              "endColumn": 27,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "     * @throws Exception ex\n     */\n    public <T> HttpRestResult<T> get(String url, Header header, Query query, Type responseType) throws Exception {\n        return execute(url, HttpMethod.GET, new RequestHttpEntity(header, query), responseType);\n    }\n    \n    /**"
            },
            {
              "step": 3,
              "variableName": "String url",
              "startLine": 479,
              "startColumn": 43,
              "endLine": 479,
              "endColumn": 53,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "    }\n    \n    @SuppressWarnings(\"unchecked\")\n    private <T> HttpRestResult<T> execute(String url, String httpMethod, RequestHttpEntity requestEntity,\n            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {"
            },
            {
              "step": 4,
              "variableName": "url",
              "startLine": 481,
              "startColumn": 38,
              "endLine": 481,
              "endColumn": 41,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "    @SuppressWarnings(\"unchecked\")\n    private <T> HttpRestResult<T> execute(String url, String httpMethod, RequestHttpEntity requestEntity,\n            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }"
            },
            {
              "step": 5,
              "variableName": "String url",
              "startLine": 252,
              "startColumn": 32,
              "endLine": 252,
              "endColumn": 42,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java",
              "type": "String",
              "code": "     * @param query query param {@link Query}\n     * @return {@link URI}\n     */\n    public static URI buildUri(String url, Query query) throws URISyntaxException {\n        if (query != null && !query.isEmpty()) {\n            url = url + \"?\" + query.toQueryUrl();\n        }"
            },
            {
              "step": 6,
              "variableName": "url",
              "startLine": 256,
              "startColumn": 24,
              "endLine": 256,
              "endColumn": 27,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java",
              "type": "String",
              "code": "        if (query != null && !query.isEmpty()) {\n            url = url + \"?\" + query.toQueryUrl();\n        }\n        return new URI(url);\n    }\n    \n    /**"
            },
            {
              "step": 7,
              "variableName": "new URI(url)",
              "startLine": 256,
              "startColumn": 16,
              "endLine": 256,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java",
              "type": "URI",
              "code": "        if (query != null && !query.isEmpty()) {\n            url = url + \"?\" + query.toQueryUrl();\n        }\n        return new URI(url);\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "HttpUtils.buildUri(url, requestEntity.getQuery())",
              "startLine": 481,
              "startColumn": 19,
              "endLine": 481,
              "endColumn": 68,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "URI",
              "code": "    @SuppressWarnings(\"unchecked\")\n    private <T> HttpRestResult<T> execute(String url, String httpMethod, RequestHttpEntity requestEntity,\n            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }"
            },
            {
              "step": 9,
              "variableName": "uri",
              "startLine": 483,
              "startColumn": 76,
              "endLine": 483,
              "endColumn": 79,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "URI",
              "code": "            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }\n        \n        ResponseHandler<T> responseHandler = super.selectResponseHandler(responseType);"
            },
            {
              "step": 10,
              "variableName": "logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody())",
              "startLine": 483,
              "startColumn": 13,
              "endLine": 483,
              "endColumn": 105,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "Object[] [[]] : URI",
              "code": "            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }\n        \n        ResponseHandler<T> responseHandler = super.selectResponseHandler(responseType);"
            },
            {
              "step": 11,
              "variableName": "logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody())",
              "startLine": 483,
              "startColumn": 13,
              "endLine": 483,
              "endColumn": 105,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "",
              "code": "            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }\n        \n        ResponseHandler<T> responseHandler = super.selectResponseHandler(responseType);"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 17,
      "fileName": "BaseDatabaseOperate.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 36,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 41,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 42,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 43,
              "variableName": "identityContext",
              "startLine": 107,
              "startColumn": 70,
              "endLine": 107,
              "endColumn": 85,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            }\n            Resource resource = protocolAuthService.parseResource(req, secured);\n            IdentityContext identityContext = protocolAuthService.parseIdentity(req);\n            AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n            RequestContext requestContext = RequestContextHolder.getContext();\n            requestContext.getAuthContext().setIdentityContext(identityContext);\n            requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 75,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                return;\n            }\n            String action = secured.action().toString();\n            result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n            if (!result.isSuccess()) {\n                throw new AccessException(result.format());\n            }"
            },
            {
              "step": 45,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 49,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 50,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 51,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 52,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 53,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 54,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 55,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 56,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 57,
              "variableName": "nacosUser",
              "startLine": 104,
              "startColumn": 40,
              "endLine": 104,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            return;\n        }\n        \n        if (!roleService.hasPermission(nacosUser, permission)) {\n            throw new AccessException(\"authorization failed!\");\n        }\n    }"
            },
            {
              "step": 58,
              "variableName": "NacosUser nacosUser",
              "startLine": 52,
              "startColumn": 34,
              "endLine": 52,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasPermission(NacosUser nacosUser, Permission permission) {\n        if (isUpdatePasswordPermission(permission)) {\n            return true;\n        }"
            },
            {
              "step": 59,
              "variableName": "nacosUser",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 60,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 62,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 63,
              "variableName": "nacosUser.getUserName()",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 64,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 65,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 66,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 67,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 70,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 71,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 72,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 73,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 74,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 75,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 77,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 78,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 79,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 80,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 81,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[], []] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 82,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 12,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 13,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 14,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 18,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 19,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 25,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 26,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 27,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 30,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 31,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 32,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 33,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 36,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 40,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 41,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 42,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 43,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 45,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "identityContext",
              "startLine": 104,
              "startColumn": 74,
              "endLine": 104,
              "endColumn": 89,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                request.putHeader(Constants.Identity.X_REAL_IP, clientIp);\n                Resource resource = protocolAuthService.parseResource(request, secured);\n                IdentityContext identityContext = protocolAuthService.parseIdentity(request);\n                AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n                RequestContext requestContext = RequestContextHolder.getContext();\n                requestContext.getAuthContext().setIdentityContext(identityContext);\n                requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 113,
              "startColumn": 64,
              "endLine": 113,
              "endColumn": 79,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                    throw new AccessException(result.format());\n                }\n                String action = secured.action().toString();\n                result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n                if (!result.isSuccess()) {\n                    throw new AccessException(result.format());\n                }"
            },
            {
              "step": 49,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 50,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 51,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 52,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 53,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 54,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 55,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 56,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 57,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 58,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 59,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 60,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 61,
              "variableName": "nacosUser",
              "startLine": 100,
              "startColumn": 32,
              "endLine": 100,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return;\n        }\n        if (hasGlobalAdminRole(nacosUser)) {\n            return;\n        }\n        "
            },
            {
              "step": 62,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 63,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 64,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 65,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 66,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 67,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 70,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 71,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 73,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 74,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 75,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 76,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 77,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 78,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 79,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 80,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 81,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 82,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 83,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 84,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 85,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 86,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 87,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 88,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[]",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 89,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : Object[]",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 90,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 36,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 37,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 38,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 40,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 43,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 44,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 45,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 46,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 47,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 48,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 49,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 50,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 51,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 52,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 53,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 55,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 57,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 58,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 59,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 60,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 61,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 62,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 63,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 64,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 65,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[], []] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 66,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 116,
              "startColumn": 16,
              "endLine": 116,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        \n        return bearerToken;\n    }\n    \n    @Override"
            },
            {
              "step": 1,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 2,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 3,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 11,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 12,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 15,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 17,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 20,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 25,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 28,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 29,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 30,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 31,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 32,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 34,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 37,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 38,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 43,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 45,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 46,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 47,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 48,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 49,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 50,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 51,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 52,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 53,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 55,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 57,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 58,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 59,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 60,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 62,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 63,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 64,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[], []] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 65,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 92,
              "startColumn": 13,
              "endLine": 93,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 18,
      "fileName": "BaseDatabaseOperate.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 36,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 41,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 42,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 43,
              "variableName": "identityContext",
              "startLine": 107,
              "startColumn": 70,
              "endLine": 107,
              "endColumn": 85,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            }\n            Resource resource = protocolAuthService.parseResource(req, secured);\n            IdentityContext identityContext = protocolAuthService.parseIdentity(req);\n            AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n            RequestContext requestContext = RequestContextHolder.getContext();\n            requestContext.getAuthContext().setIdentityContext(identityContext);\n            requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 75,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                return;\n            }\n            String action = secured.action().toString();\n            result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n            if (!result.isSuccess()) {\n                throw new AccessException(result.format());\n            }"
            },
            {
              "step": 45,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 49,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 50,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 51,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 52,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 53,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 54,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 55,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 56,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 57,
              "variableName": "nacosUser",
              "startLine": 104,
              "startColumn": 40,
              "endLine": 104,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            return;\n        }\n        \n        if (!roleService.hasPermission(nacosUser, permission)) {\n            throw new AccessException(\"authorization failed!\");\n        }\n    }"
            },
            {
              "step": 58,
              "variableName": "NacosUser nacosUser",
              "startLine": 52,
              "startColumn": 34,
              "endLine": 52,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasPermission(NacosUser nacosUser, Permission permission) {\n        if (isUpdatePasswordPermission(permission)) {\n            return true;\n        }"
            },
            {
              "step": 59,
              "variableName": "nacosUser",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 60,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 62,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 63,
              "variableName": "nacosUser.getUserName()",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 64,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 65,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 66,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 67,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 70,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 71,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 72,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 73,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 74,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 75,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 77,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 78,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 79,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 80,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 81,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 82,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 83,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 84,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 85,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 86,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 87,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 88,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 89,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 90,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 91,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 92,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 93,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 94,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 95,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 96,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 97,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[], []] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 98,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 12,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 13,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 14,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 18,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 19,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 25,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 26,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 27,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 30,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 31,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 32,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 33,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 36,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 40,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 41,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 42,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 43,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 45,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "identityContext",
              "startLine": 104,
              "startColumn": 74,
              "endLine": 104,
              "endColumn": 89,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                request.putHeader(Constants.Identity.X_REAL_IP, clientIp);\n                Resource resource = protocolAuthService.parseResource(request, secured);\n                IdentityContext identityContext = protocolAuthService.parseIdentity(request);\n                AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n                RequestContext requestContext = RequestContextHolder.getContext();\n                requestContext.getAuthContext().setIdentityContext(identityContext);\n                requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 113,
              "startColumn": 64,
              "endLine": 113,
              "endColumn": 79,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                    throw new AccessException(result.format());\n                }\n                String action = secured.action().toString();\n                result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n                if (!result.isSuccess()) {\n                    throw new AccessException(result.format());\n                }"
            },
            {
              "step": 49,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 50,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 51,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 52,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 53,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 54,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 55,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 56,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 57,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 58,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 59,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 60,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 61,
              "variableName": "nacosUser",
              "startLine": 100,
              "startColumn": 32,
              "endLine": 100,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return;\n        }\n        if (hasGlobalAdminRole(nacosUser)) {\n            return;\n        }\n        "
            },
            {
              "step": 62,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 63,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 64,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 65,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 66,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 67,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 70,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 71,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 73,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 74,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 75,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 76,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 77,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 78,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 79,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 80,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 81,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 82,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 83,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 84,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 85,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 86,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 87,
              "variableName": "Object[] arg",
              "startLine": 41,
              "startColumn": 69,
              "endLine": 41,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DerbyPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        if (!fetchSql.contains(AuthPageConstant.OFFSET)) {\n            fetchSql += \" \" + AuthPageConstant.OFFSET_ROWS + \" \" + AuthPageConstant.FETCH_NEXT;\n            "
            },
            {
              "step": 88,
              "variableName": "arg",
              "startLine": 54,
              "startColumn": 48,
              "endLine": 54,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DerbyPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "            return new OffsetFetchResult(fetchSql, newArgs);\n        }\n        \n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 89,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 90,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 91,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 92,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 54,
              "startColumn": 16,
              "endLine": 54,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DerbyPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "            return new OffsetFetchResult(fetchSql, newArgs);\n        }\n        \n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 93,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 94,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 95,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 96,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 97,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 98,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 99,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 100,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 101,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 102,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 103,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 104,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[]",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 105,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : Object[]",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 106,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 36,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 37,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 38,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 40,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 43,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 44,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 45,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 46,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 47,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 48,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 49,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 50,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 51,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 52,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 53,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 55,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 57,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 58,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 59,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 60,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 61,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 62,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 63,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 64,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 65,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 66,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 67,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 68,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 69,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 70,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 71,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 72,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 73,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 74,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 75,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 77,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 78,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 79,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 80,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 81,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[], []] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 82,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 116,
              "startColumn": 16,
              "endLine": 116,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        \n        return bearerToken;\n    }\n    \n    @Override"
            },
            {
              "step": 1,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 2,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 3,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 11,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 12,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 15,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 17,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 20,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 25,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 28,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 29,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 30,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 31,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 32,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 34,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 37,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 38,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 43,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 45,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 46,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 47,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 48,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 49,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 50,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 51,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 52,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 53,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 55,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 57,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 58,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 59,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 60,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 61,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 62,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 63,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 64,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 65,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 66,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 67,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 68,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 70,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 71,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 73,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 74,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 75,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 76,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 77,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 78,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 79,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 80,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[], []] : String",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            },
            {
              "step": 81,
              "variableName": "LOGGER.error(\"[db-error] DataAccessException",
              "startLine": 140,
              "startColumn": 13,
              "endLine": 141,
              "endColumn": 57,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 19,
      "fileName": "NacosConfigService.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.PASSWORD",
              "startLine": 209,
              "startColumn": 53,
              "endLine": 209,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 209,
              "startColumn": 33,
              "endLine": 209,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 6,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "ClientBasicParamUtil.getInputParameters(clientProperties.asProperties())",
              "startLine": 77,
              "startColumn": 21,
              "endLine": 77,
              "endColumn": 93,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java",
              "type": "",
              "code": "    public NacosConfigService(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties clientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        LOGGER.info(ClientBasicParamUtil.getInputParameters(clientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(clientProperties);\n        \n        initNamespace(clientProperties);"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.PASSWORD",
              "startLine": 209,
              "startColumn": 53,
              "endLine": 209,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 15,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 209,
              "startColumn": 33,
              "endLine": 209,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 8,
              "variableName": "ClientBasicParamUtil.getInputParameters(clientProperties.asProperties())",
              "startLine": 77,
              "startColumn": 21,
              "endLine": 77,
              "endColumn": 93,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java",
              "type": "",
              "code": "    public NacosConfigService(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties clientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        LOGGER.info(ClientBasicParamUtil.getInputParameters(clientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(clientProperties);\n        \n        initNamespace(clientProperties);"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.SECRET_KEY",
              "startLine": 211,
              "startColumn": 53,
              "endLine": 211,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 211,
              "startColumn": 33,
              "endLine": 211,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 6,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "ClientBasicParamUtil.getInputParameters(clientProperties.asProperties())",
              "startLine": 77,
              "startColumn": 21,
              "endLine": 77,
              "endColumn": 93,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java",
              "type": "",
              "code": "    public NacosConfigService(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties clientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        LOGGER.info(ClientBasicParamUtil.getInputParameters(clientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(clientProperties);\n        \n        initNamespace(clientProperties);"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.SECRET_KEY",
              "startLine": 211,
              "startColumn": 53,
              "endLine": 211,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 15,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 211,
              "startColumn": 33,
              "endLine": 211,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 8,
              "variableName": "ClientBasicParamUtil.getInputParameters(clientProperties.asProperties())",
              "startLine": 77,
              "startColumn": 21,
              "endLine": 77,
              "endColumn": 93,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java",
              "type": "",
              "code": "    public NacosConfigService(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties clientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        LOGGER.info(ClientBasicParamUtil.getInputParameters(clientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(clientProperties);\n        \n        initNamespace(clientProperties);"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 20,
      "fileName": "NacosNamingService.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.PASSWORD",
              "startLine": 209,
              "startColumn": 53,
              "endLine": 209,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 209,
              "startColumn": 33,
              "endLine": 209,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 6,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties())",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 105,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java",
              "type": "",
              "code": "    private void init(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties nacosClientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        NAMING_LOGGER.info(ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(nacosClientProperties);\n        this.namespace = InitUtils.initNamespaceForNaming(nacosClientProperties);\n        InitUtils.initSerialization();"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.PASSWORD",
              "startLine": 209,
              "startColumn": 53,
              "endLine": 209,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 15,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 209,
              "startColumn": 33,
              "endLine": 209,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.ENDPOINT_PORT, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 8,
              "variableName": "ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties())",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 105,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java",
              "type": "",
              "code": "    private void init(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties nacosClientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        NAMING_LOGGER.info(ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(nacosClientProperties);\n        this.namespace = InitUtils.initNamespaceForNaming(nacosClientProperties);\n        InitUtils.initSerialization();"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.SECRET_KEY",
              "startLine": 211,
              "startColumn": 53,
              "endLine": 211,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 211,
              "startColumn": 33,
              "endLine": 211,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 6,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties())",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 105,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java",
              "type": "",
              "code": "    private void init(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties nacosClientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        NAMING_LOGGER.info(ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(nacosClientProperties);\n        this.namespace = InitUtils.initNamespaceForNaming(nacosClientProperties);\n        InitUtils.initSerialization();"
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "PropertyKeyConst.SECRET_KEY",
              "startLine": 211,
              "startColumn": 53,
              "endLine": 211,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 1,
              "variableName": "String propertyKey",
              "startLine": 218,
              "startColumn": 90,
              "endLine": 218,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,\n            boolean needDesensitise) {\n        String propertyValue = properties.getProperty(propertyKey);\n        if (StringUtils.isBlank(propertyValue)) {"
            },
            {
              "step": 2,
              "variableName": "propertyKey",
              "startLine": 224,
              "startColumn": 36,
              "endLine": 224,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 3,
              "variableName": "result.append(\"\\t\")",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 28,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 4,
              "variableName": "result",
              "startLine": 224,
              "startColumn": 9,
              "endLine": 224,
              "endColumn": 15,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "        if (StringUtils.isBlank(propertyValue)) {\n            return;\n        }\n        result.append(\"\\t\").append(propertyKey).append(\"=\")\n                .append(needDesensitise ? desensitiseParameter(propertyValue) : propertyValue).append(\"\\n\");\n    }\n    "
            },
            {
              "step": 5,
              "variableName": "result",
              "startLine": 211,
              "startColumn": 33,
              "endLine": 211,
              "endColumn": 39,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.USERNAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.PASSWORD, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.ACCESS_KEY, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SECRET_KEY, true);\n            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }"
            },
            {
              "step": 6,
              "variableName": "result",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 22,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "StringBuilder",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 7,
              "variableName": "result.toString()",
              "startLine": 215,
              "startColumn": 16,
              "endLine": 215,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/utils/ClientBasicParamUtil.java",
              "type": "String",
              "code": "            appendKeyParameters(result, properties, PropertyKeyConst.RAM_ROLE_NAME, false);\n            appendKeyParameters(result, properties, PropertyKeyConst.SIGNATURE_REGION_ID, false);\n        }\n        return result.toString();\n    }\n    \n    private static void appendKeyParameters(StringBuilder result, Properties properties, String propertyKey,"
            },
            {
              "step": 8,
              "variableName": "ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties())",
              "startLine": 114,
              "startColumn": 28,
              "endLine": 114,
              "endColumn": 105,
              "uri": "nacos-3.0.0/client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java",
              "type": "",
              "code": "    private void init(Properties properties) throws NacosException {\n        PreInitUtils.asyncPreLoadCostComponent();\n        final NacosClientProperties nacosClientProperties = NacosClientProperties.PROTOTYPE.derive(properties);\n        NAMING_LOGGER.info(ClientBasicParamUtil.getInputParameters(nacosClientProperties.asProperties()));\n        ValidatorUtils.checkInitParam(nacosClientProperties);\n        this.namespace = InitUtils.initNamespaceForNaming(nacosClientProperties);\n        InitUtils.initSerialization();"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 22,
      "fileName": "CredentialWatcher.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 212,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 213,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 211,
              "startColumn": 21,
              "endLine": 211,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                    propertyPath = value;\n                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPath(init)",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 31,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    }\n    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 8,
              "variableName": "\"[26] Unable to",
              "startLine": 135,
              "startColumn": 28,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            properties.load(propertiesIs);\n        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 212,
              "startColumn": 84,
              "endLine": 212,
              "endColumn": 120,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 213,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 211,
              "startColumn": 21,
              "endLine": 211,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                    propertyPath = value;\n                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPath(init)",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 31,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    }\n    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 8,
              "variableName": "\"[26] Unable to",
              "startLine": 135,
              "startColumn": 28,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            properties.load(propertiesIs);\n        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 69,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 236,
              "startColumn": 21,
              "endLine": 236,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPathToStream()",
              "startLine": 112,
              "startColumn": 36,
              "endLine": 112,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 8,
              "variableName": "\"[26] Unable to",
              "startLine": 135,
              "startColumn": 28,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            properties.load(propertiesIs);\n        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 72,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 236,
              "startColumn": 21,
              "endLine": 236,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPathToStream()",
              "startLine": 112,
              "startColumn": 36,
              "endLine": 112,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 136,
              "startColumn": 31,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;\n        } finally {"
            },
            {
              "step": 8,
              "variableName": "\"[26] Unable to",
              "startLine": 135,
              "startColumn": 28,
              "endLine": 136,
              "endColumn": 43,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            properties.load(propertiesIs);\n        } catch (IOException e) {\n            LOGGER\n                    .error(\"[26] Unable to load credential file, appName:\" + appName + \"Unable to load credential file \"\n                            + propertyPath, e);\n            propertyPath = null;\n            return false;"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 23,
      "fileName": "CredentialWatcher.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 212,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 213,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 211,
              "startColumn": 21,
              "endLine": 211,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                    propertyPath = value;\n                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPath(init)",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 31,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    }\n    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 8,
              "variableName": "\"[27] Unable to close credential file, appName",
              "startLine": 143,
              "startColumn": 30,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            try {\n                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 212,
              "startColumn": 84,
              "endLine": 212,
              "endColumn": 120,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 213,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 211,
              "startColumn": 21,
              "endLine": 211,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                    propertyPath = value;\n                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPath(init)",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 31,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    }\n    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 8,
              "variableName": "\"[27] Unable to close credential file, appName",
              "startLine": 143,
              "startColumn": 30,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            try {\n                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 69,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 236,
              "startColumn": 21,
              "endLine": 236,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPathToStream()",
              "startLine": 112,
              "startColumn": 36,
              "endLine": 112,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 8,
              "variableName": "\"[27] Unable to close credential file, appName",
              "startLine": 143,
              "startColumn": 30,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            try {\n                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 72,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 236,
              "startColumn": 21,
              "endLine": 236,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPathToStream()",
              "startLine": 112,
              "startColumn": 36,
              "endLine": 112,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 144,
              "startColumn": 64,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }\n        "
            },
            {
              "step": 8,
              "variableName": "\"[27] Unable to close credential file, appName",
              "startLine": 143,
              "startColumn": 30,
              "endLine": 144,
              "endColumn": 76,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "            try {\n                propertiesIs.close();\n            } catch (IOException e) {\n                LOGGER.error(\"[27] Unable to close credential file, appName:\" + appName\n                        + \"Unable to close credential file \" + propertyPath, e);\n            }\n        }"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 24,
      "fileName": "CredentialWatcher.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 212,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 213,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 211,
              "startColumn": 21,
              "endLine": 211,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                    propertyPath = value;\n                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPath(init)",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 31,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    }\n    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 212,
              "startColumn": 84,
              "endLine": 212,
              "endColumn": 120,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.",
              "startLine": 212,
              "startColumn": 29,
              "endLine": 213,
              "endColumn": 47,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {\n                    if (init) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 211,
              "startColumn": 21,
              "endLine": 211,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "                    propertyPath = value;\n                }\n                if (propertyPath == null || propertyPath.isEmpty()) {\n                    propertyPath =\n                            IdentifyConstants.CREDENTIAL_PATH + (appName == null ? IdentifyConstants.CREDENTIAL_DEFAULT\n                                    : appName);\n                } else {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPath(init)",
              "startLine": 111,
              "startColumn": 9,
              "endLine": 111,
              "endColumn": 31,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    }\n    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 69,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 236,
              "startColumn": 21,
              "endLine": 236,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPathToStream()",
              "startLine": 112,
              "startColumn": 36,
              "endLine": 112,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 72,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 1,
              "variableName": "IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT",
              "startLine": 236,
              "startColumn": 36,
              "endLine": 236,
              "endColumn": 108,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 2,
              "variableName": "propertyPath",
              "startLine": 236,
              "startColumn": 21,
              "endLine": 236,
              "endColumn": 33,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "            } catch (FileNotFoundException e) {\n                if (appName != null && !appName.equals(IdentifyConstants.CREDENTIAL_DEFAULT) && propertyPath\n                        .equals(IdentifyConstants.CREDENTIAL_PATH + appName)) {\n                    propertyPath = IdentifyConstants.CREDENTIAL_PATH + IdentifyConstants.CREDENTIAL_DEFAULT;\n                    continue;\n                }\n                if (!IdentifyConstants.DOCKER_CREDENTIAL_PATH.equals(propertyPath)) {"
            },
            {
              "step": 3,
              "variableName": "loadPropertyPathToStream()",
              "startLine": 112,
              "startColumn": 36,
              "endLine": 112,
              "endColumn": 62,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "    \n    private void loadCredential(boolean init) {\n        loadPropertyPath(init);\n        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);"
            },
            {
              "step": 4,
              "variableName": "loadCredentialFromProperties(propertiesIs, init, credentials)",
              "startLine": 115,
              "startColumn": 19,
              "endLine": 115,
              "endColumn": 80,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        InputStream propertiesIs = loadPropertyPathToStream();\n        Credentials credentials = new Credentials();\n        boolean loadResult = Objects.isNull(propertiesIs) ? loadCredentialFromEnv(init, credentials)\n                : loadCredentialFromProperties(propertiesIs, init, credentials);\n        if (!loadResult) {\n            return;\n        }"
            },
            {
              "step": 5,
              "variableName": "loadCredentialFromProperties",
              "startLine": 129,
              "startColumn": 21,
              "endLine": 129,
              "endColumn": 49,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        serviceInstance.setCredential(credentials);\n    }\n    \n    private boolean loadCredentialFromProperties(InputStream propertiesIs, boolean init, Credentials credentials) {\n        Properties properties = new Properties();\n        try {\n            properties.load(propertiesIs);"
            },
            {
              "step": 6,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "CredentialWatcher [propertyPath] : String",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            },
            {
              "step": 7,
              "variableName": "propertyPath",
              "startLine": 149,
              "startColumn": 66,
              "endLine": 149,
              "endColumn": 78,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java",
              "type": "",
              "code": "        }\n        \n        if (init) {\n            LOGGER.info(\"[{}] Load credential file {}\", appName, propertyPath);\n        }\n        \n        String accessKey = null;"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 26,
      "fileName": "NacosRestTemplate.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "securityCredentialsUrl",
              "startLine": 82,
              "startColumn": 26,
              "endLine": 82,
              "endColumn": 48,
              "uri": "nacos-3.0.0/client-basic/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsCredentialHolder.java",
              "type": "String",
              "code": "        String securityCredentialsUrl = StsConfig.getInstance().getSecurityCredentialsUrl();\n        try {\n            HttpRestResult<String> result = HttpClientManager.getInstance().getNacosRestTemplate()\n                    .get(securityCredentialsUrl, Header.EMPTY, Query.EMPTY, String.class);\n            \n            if (!result.ok()) {\n                LOGGER.error("
            },
            {
              "step": 1,
              "variableName": "String url",
              "startLine": 72,
              "startColumn": 38,
              "endLine": 72,
              "endColumn": 48,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "     * @return {@link HttpRestResult}\n     * @throws Exception ex\n     */\n    public <T> HttpRestResult<T> get(String url, Header header, Query query, Type responseType) throws Exception {\n        return execute(url, HttpMethod.GET, new RequestHttpEntity(header, query), responseType);\n    }\n    "
            },
            {
              "step": 2,
              "variableName": "url",
              "startLine": 73,
              "startColumn": 24,
              "endLine": 73,
              "endColumn": 27,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "     * @throws Exception ex\n     */\n    public <T> HttpRestResult<T> get(String url, Header header, Query query, Type responseType) throws Exception {\n        return execute(url, HttpMethod.GET, new RequestHttpEntity(header, query), responseType);\n    }\n    \n    /**"
            },
            {
              "step": 3,
              "variableName": "String url",
              "startLine": 479,
              "startColumn": 43,
              "endLine": 479,
              "endColumn": 53,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "    }\n    \n    @SuppressWarnings(\"unchecked\")\n    private <T> HttpRestResult<T> execute(String url, String httpMethod, RequestHttpEntity requestEntity,\n            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {"
            },
            {
              "step": 4,
              "variableName": "url",
              "startLine": 481,
              "startColumn": 38,
              "endLine": 481,
              "endColumn": 41,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "String",
              "code": "    @SuppressWarnings(\"unchecked\")\n    private <T> HttpRestResult<T> execute(String url, String httpMethod, RequestHttpEntity requestEntity,\n            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }"
            },
            {
              "step": 5,
              "variableName": "String url",
              "startLine": 252,
              "startColumn": 32,
              "endLine": 252,
              "endColumn": 42,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java",
              "type": "String",
              "code": "     * @param query query param {@link Query}\n     * @return {@link URI}\n     */\n    public static URI buildUri(String url, Query query) throws URISyntaxException {\n        if (query != null && !query.isEmpty()) {\n            url = url + \"?\" + query.toQueryUrl();\n        }"
            },
            {
              "step": 6,
              "variableName": "url",
              "startLine": 256,
              "startColumn": 24,
              "endLine": 256,
              "endColumn": 27,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java",
              "type": "String",
              "code": "        if (query != null && !query.isEmpty()) {\n            url = url + \"?\" + query.toQueryUrl();\n        }\n        return new URI(url);\n    }\n    \n    /**"
            },
            {
              "step": 7,
              "variableName": "new URI(url)",
              "startLine": 256,
              "startColumn": 16,
              "endLine": 256,
              "endColumn": 28,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java",
              "type": "URI",
              "code": "        if (query != null && !query.isEmpty()) {\n            url = url + \"?\" + query.toQueryUrl();\n        }\n        return new URI(url);\n    }\n    \n    /**"
            },
            {
              "step": 8,
              "variableName": "HttpUtils.buildUri(url, requestEntity.getQuery())",
              "startLine": 481,
              "startColumn": 19,
              "endLine": 481,
              "endColumn": 68,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "URI",
              "code": "    @SuppressWarnings(\"unchecked\")\n    private <T> HttpRestResult<T> execute(String url, String httpMethod, RequestHttpEntity requestEntity,\n            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }"
            },
            {
              "step": 9,
              "variableName": "uri",
              "startLine": 483,
              "startColumn": 76,
              "endLine": 483,
              "endColumn": 79,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java",
              "type": "",
              "code": "            Type responseType) throws Exception {\n        URI uri = HttpUtils.buildUri(url, requestEntity.getQuery());\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"HTTP method: {}, url: {}, body: {}\", httpMethod, uri, requestEntity.getBody());\n        }\n        \n        ResponseHandler<T> responseHandler = super.selectResponseHandler(responseType);"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 27,
      "fileName": "LoggerUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 36,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 41,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 42,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 43,
              "variableName": "identityContext",
              "startLine": 107,
              "startColumn": 70,
              "endLine": 107,
              "endColumn": 85,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            }\n            Resource resource = protocolAuthService.parseResource(req, secured);\n            IdentityContext identityContext = protocolAuthService.parseIdentity(req);\n            AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n            RequestContext requestContext = RequestContextHolder.getContext();\n            requestContext.getAuthContext().setIdentityContext(identityContext);\n            requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 75,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                return;\n            }\n            String action = secured.action().toString();\n            result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n            if (!result.isSuccess()) {\n                throw new AccessException(result.format());\n            }"
            },
            {
              "step": 45,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 49,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 50,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 51,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 52,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 53,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 54,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 55,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 56,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 57,
              "variableName": "nacosUser",
              "startLine": 104,
              "startColumn": 40,
              "endLine": 104,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            return;\n        }\n        \n        if (!roleService.hasPermission(nacosUser, permission)) {\n            throw new AccessException(\"authorization failed!\");\n        }\n    }"
            },
            {
              "step": 58,
              "variableName": "NacosUser nacosUser",
              "startLine": 52,
              "startColumn": 34,
              "endLine": 52,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasPermission(NacosUser nacosUser, Permission permission) {\n        if (isUpdatePasswordPermission(permission)) {\n            return true;\n        }"
            },
            {
              "step": 59,
              "variableName": "nacosUser",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 60,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 62,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 63,
              "variableName": "nacosUser.getUserName()",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 64,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 65,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 66,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 67,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 70,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 71,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 72,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 73,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 74,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 75,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 77,
              "variableName": "Object[] args",
              "startLine": 248,
              "startColumn": 39,
              "endLine": 248,
              "endColumn": 52,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            "
            },
            {
              "step": 78,
              "variableName": "args",
              "startLine": 250,
              "startColumn": 97,
              "endLine": 250,
              "endColumn": 101,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 79,
              "variableName": "LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args)",
              "startLine": 250,
              "startColumn": 13,
              "endLine": 250,
              "endColumn": 102,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[], []] : String",
              "code": "    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 80,
              "variableName": "Object... args",
              "startLine": 48,
              "startColumn": 69,
              "endLine": 48,
              "endColumn": 83,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "Object[] [[], []] : String",
              "code": "     * @param s      log message\n     * @param args   arguments\n     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }"
            },
            {
              "step": 81,
              "variableName": "args",
              "startLine": 50,
              "startColumn": 29,
              "endLine": 50,
              "endColumn": 33,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "",
              "code": "     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }\n    }\n    "
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 12,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 13,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 14,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 18,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 19,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 25,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 26,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 27,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 30,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 31,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 32,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 33,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 36,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 40,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 41,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 42,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 43,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 45,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "identityContext",
              "startLine": 104,
              "startColumn": 74,
              "endLine": 104,
              "endColumn": 89,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                request.putHeader(Constants.Identity.X_REAL_IP, clientIp);\n                Resource resource = protocolAuthService.parseResource(request, secured);\n                IdentityContext identityContext = protocolAuthService.parseIdentity(request);\n                AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n                RequestContext requestContext = RequestContextHolder.getContext();\n                requestContext.getAuthContext().setIdentityContext(identityContext);\n                requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 113,
              "startColumn": 64,
              "endLine": 113,
              "endColumn": 79,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                    throw new AccessException(result.format());\n                }\n                String action = secured.action().toString();\n                result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n                if (!result.isSuccess()) {\n                    throw new AccessException(result.format());\n                }"
            },
            {
              "step": 49,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 50,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 51,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 52,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 53,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 54,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 55,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 56,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 57,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 58,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 59,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 60,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 61,
              "variableName": "nacosUser",
              "startLine": 100,
              "startColumn": 32,
              "endLine": 100,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return;\n        }\n        if (hasGlobalAdminRole(nacosUser)) {\n            return;\n        }\n        "
            },
            {
              "step": 62,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 63,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 64,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 65,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 66,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 67,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 70,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 71,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 73,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 74,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 75,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 76,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 77,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 78,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 79,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 80,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 81,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 82,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 83,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 84,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 85,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 86,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 87,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 88,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 89,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 90,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 91,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 92,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 93,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 94,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 95,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 96,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 97,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 98,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 99,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 100,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 101,
              "variableName": "Object[] args",
              "startLine": 297,
              "startColumn": 46,
              "endLine": 297,
              "endColumn": 59,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryMany info : sql : {}, args : {}\", sql, args);\n            "
            },
            {
              "step": 102,
              "variableName": "args",
              "startLine": 299,
              "startColumn": 98,
              "endLine": 299,
              "endColumn": 102,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryMany info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_MANY_WITH_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 103,
              "variableName": "LoggerUtils.printIfDebugEnabled(LOGGER, \"queryMany info : sql : {}, args : {}\", sql, args)",
              "startLine": 299,
              "startColumn": 13,
              "endLine": 299,
              "endColumn": 103,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[], []] : String",
              "code": "    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryMany info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_MANY_WITH_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 104,
              "variableName": "Object... args",
              "startLine": 48,
              "startColumn": 69,
              "endLine": 48,
              "endColumn": 83,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "Object[] [[], []] : String",
              "code": "     * @param s      log message\n     * @param args   arguments\n     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }"
            },
            {
              "step": 105,
              "variableName": "args",
              "startLine": 50,
              "startColumn": 29,
              "endLine": 50,
              "endColumn": 33,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "",
              "code": "     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }\n    }\n    "
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 36,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 37,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 38,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 40,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 43,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 44,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 45,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 46,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 47,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 48,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 49,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 50,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 51,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 52,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 53,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 55,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 57,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 58,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 59,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 60,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 61,
              "variableName": "Object[] args",
              "startLine": 248,
              "startColumn": 39,
              "endLine": 248,
              "endColumn": 52,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            "
            },
            {
              "step": 62,
              "variableName": "args",
              "startLine": 250,
              "startColumn": 97,
              "endLine": 250,
              "endColumn": 101,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 63,
              "variableName": "LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args)",
              "startLine": 250,
              "startColumn": 13,
              "endLine": 250,
              "endColumn": 102,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[], []] : String",
              "code": "    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 64,
              "variableName": "Object... args",
              "startLine": 48,
              "startColumn": 69,
              "endLine": 48,
              "endColumn": 83,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "Object[] [[], []] : String",
              "code": "     * @param s      log message\n     * @param args   arguments\n     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }"
            },
            {
              "step": 65,
              "variableName": "args",
              "startLine": 50,
              "startColumn": 29,
              "endLine": 50,
              "endColumn": 33,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "",
              "code": "     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }\n    }\n    "
            }
          ],
          "label": "No"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 116,
              "startColumn": 16,
              "endLine": 116,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        \n        return bearerToken;\n    }\n    \n    @Override"
            },
            {
              "step": 1,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 2,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 3,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 11,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 12,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 15,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 17,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 20,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 25,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 28,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 29,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 30,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 31,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 32,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 34,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 37,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 38,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 43,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 45,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 46,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 47,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 48,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 49,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 50,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 51,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 52,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 53,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 55,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 57,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 58,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 59,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 60,
              "variableName": "Object[] args",
              "startLine": 248,
              "startColumn": 39,
              "endLine": 248,
              "endColumn": 52,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            "
            },
            {
              "step": 61,
              "variableName": "args",
              "startLine": 250,
              "startColumn": 97,
              "endLine": 250,
              "endColumn": 101,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 62,
              "variableName": "LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args)",
              "startLine": 250,
              "startColumn": 13,
              "endLine": 250,
              "endColumn": 102,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/persistence/DistributedDatabaseOperateImpl.java",
              "type": "Object[] [[], []] : String",
              "code": "    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        try {\n            LoggerUtils.printIfDebugEnabled(LOGGER, \"queryOne info : sql : {}, args : {}\", sql, args);\n            \n            byte[] data = serializer.serialize(\n                    SelectRequest.builder().queryType(QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS).sql(sql).args(args)"
            },
            {
              "step": 63,
              "variableName": "Object... args",
              "startLine": 48,
              "startColumn": 69,
              "endLine": 48,
              "endColumn": 83,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "Object[] [[], []] : String",
              "code": "     * @param s      log message\n     * @param args   arguments\n     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }"
            },
            {
              "step": 64,
              "variableName": "args",
              "startLine": 50,
              "startColumn": 29,
              "endLine": 50,
              "endColumn": 33,
              "uri": "nacos-3.0.0/common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java",
              "type": "",
              "code": "     */\n    public static void printIfDebugEnabled(Logger logger, String s, Object... args) {\n        if (logger.isDebugEnabled()) {\n            logger.debug(s, args);\n        }\n    }\n    "
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 28,
      "fileName": "BaseDatabaseOperate.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 36,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 41,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 42,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 43,
              "variableName": "identityContext",
              "startLine": 107,
              "startColumn": 70,
              "endLine": 107,
              "endColumn": 85,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            }\n            Resource resource = protocolAuthService.parseResource(req, secured);\n            IdentityContext identityContext = protocolAuthService.parseIdentity(req);\n            AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n            RequestContext requestContext = RequestContextHolder.getContext();\n            requestContext.getAuthContext().setIdentityContext(identityContext);\n            requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 75,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                return;\n            }\n            String action = secured.action().toString();\n            result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n            if (!result.isSuccess()) {\n                throw new AccessException(result.format());\n            }"
            },
            {
              "step": 45,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 49,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 50,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 51,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 52,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 53,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 54,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 55,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 56,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 57,
              "variableName": "nacosUser",
              "startLine": 104,
              "startColumn": 40,
              "endLine": 104,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            return;\n        }\n        \n        if (!roleService.hasPermission(nacosUser, permission)) {\n            throw new AccessException(\"authorization failed!\");\n        }\n    }"
            },
            {
              "step": 58,
              "variableName": "NacosUser nacosUser",
              "startLine": 52,
              "startColumn": 34,
              "endLine": 52,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasPermission(NacosUser nacosUser, Permission permission) {\n        if (isUpdatePasswordPermission(permission)) {\n            return true;\n        }"
            },
            {
              "step": 59,
              "variableName": "nacosUser",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 60,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 62,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 63,
              "variableName": "nacosUser.getUserName()",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 64,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 65,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 66,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 67,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 70,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 71,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 72,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 73,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 74,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 75,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 77,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 78,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 79,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 80,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 12,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 13,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 14,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 18,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 19,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 25,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 26,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 27,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 30,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 31,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 32,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 33,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 36,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 40,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 41,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 42,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 43,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 45,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "identityContext",
              "startLine": 104,
              "startColumn": 74,
              "endLine": 104,
              "endColumn": 89,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                request.putHeader(Constants.Identity.X_REAL_IP, clientIp);\n                Resource resource = protocolAuthService.parseResource(request, secured);\n                IdentityContext identityContext = protocolAuthService.parseIdentity(request);\n                AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n                RequestContext requestContext = RequestContextHolder.getContext();\n                requestContext.getAuthContext().setIdentityContext(identityContext);\n                requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 113,
              "startColumn": 64,
              "endLine": 113,
              "endColumn": 79,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                    throw new AccessException(result.format());\n                }\n                String action = secured.action().toString();\n                result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n                if (!result.isSuccess()) {\n                    throw new AccessException(result.format());\n                }"
            },
            {
              "step": 49,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 50,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 51,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 52,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 53,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 54,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 55,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 56,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 57,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 58,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 59,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 60,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 61,
              "variableName": "nacosUser",
              "startLine": 100,
              "startColumn": 32,
              "endLine": 100,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return;\n        }\n        if (hasGlobalAdminRole(nacosUser)) {\n            return;\n        }\n        "
            },
            {
              "step": 62,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 63,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 64,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 65,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 66,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 67,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 70,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 71,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 73,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 74,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 75,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 76,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 77,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 78,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 79,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 80,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 81,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 82,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 83,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 84,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 85,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 86,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 87,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 88,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 36,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 37,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 38,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 40,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 43,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 44,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 45,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 46,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 47,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 48,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 49,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 50,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 51,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 52,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 53,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 55,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 57,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 58,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 59,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 60,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 61,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 62,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 63,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 64,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 116,
              "startColumn": 16,
              "endLine": 116,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        \n        return bearerToken;\n    }\n    \n    @Override"
            },
            {
              "step": 1,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 2,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 3,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 11,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 12,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 15,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 17,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 20,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 25,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 28,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 29,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 30,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 31,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 32,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 34,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 37,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 38,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 43,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 45,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 46,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 47,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 48,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 49,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 50,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 51,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 52,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 53,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 55,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 57,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 58,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 59,
              "variableName": "args",
              "startLine": 70,
              "startColumn": 70,
              "endLine": 70,
              "endColumn": 74,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n        \n        // Query the total number of current records\n        Integer rowCountInt = databaseOperate.queryOne(sqlCountRows, args, Integer.class);\n        if (rowCountInt == null) {\n            throw new IllegalArgumentException(\"fetchPageLimit error\");\n        }"
            },
            {
              "step": 60,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 39,
              "endLine": 83,
              "endColumn": 52,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "args",
              "startLine": 84,
              "startColumn": 44,
              "endLine": 84,
              "endColumn": 48,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> R queryOne(String sql, Object[] args, Class<R> cls) {\n        return queryOne(jdbcTemplate, sql, args, cls);\n    }\n    \n    @Override"
            },
            {
              "step": 62,
              "variableName": "Object[] args",
              "startLine": 83,
              "startColumn": 67,
              "endLine": 83,
              "endColumn": 80,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return R\n     */\n    default <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Object[] args, Class<R> cls) {\n        try {\n            return jdbcTemplate.queryForObject(sql, args, cls);\n        } catch (IncorrectResultSizeDataAccessException e) {"
            },
            {
              "step": 63,
              "variableName": "args",
              "startLine": 92,
              "startColumn": 97,
              "endLine": 92,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 29,
      "fileName": "BaseDatabaseOperate.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 36,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 37,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 38,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 39,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 40,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 41,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 42,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 43,
              "variableName": "identityContext",
              "startLine": 107,
              "startColumn": 70,
              "endLine": 107,
              "endColumn": 85,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            }\n            Resource resource = protocolAuthService.parseResource(req, secured);\n            IdentityContext identityContext = protocolAuthService.parseIdentity(req);\n            AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n            RequestContext requestContext = RequestContextHolder.getContext();\n            requestContext.getAuthContext().setIdentityContext(identityContext);\n            requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 124,
              "startColumn": 60,
              "endLine": 124,
              "endColumn": 75,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/AbstractWebAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                return;\n            }\n            String action = secured.action().toString();\n            result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n            if (!result.isSuccess()) {\n                throw new AccessException(result.format());\n            }"
            },
            {
              "step": 45,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 49,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 50,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 51,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 52,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 53,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 54,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 55,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 56,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 57,
              "variableName": "nacosUser",
              "startLine": 104,
              "startColumn": 40,
              "endLine": 104,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            return;\n        }\n        \n        if (!roleService.hasPermission(nacosUser, permission)) {\n            throw new AccessException(\"authorization failed!\");\n        }\n    }"
            },
            {
              "step": 58,
              "variableName": "NacosUser nacosUser",
              "startLine": 52,
              "startColumn": 34,
              "endLine": 52,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasPermission(NacosUser nacosUser, Permission permission) {\n        if (isUpdatePasswordPermission(permission)) {\n            return true;\n        }"
            },
            {
              "step": 59,
              "variableName": "nacosUser",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "NacosUser [userName] : String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 60,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 61,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 62,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 63,
              "variableName": "nacosUser.getUserName()",
              "startLine": 57,
              "startColumn": 48,
              "endLine": 57,
              "endColumn": 71,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "            return true;\n        }\n        \n        List<RoleInfo> roleInfoList = getRoles(nacosUser.getUserName());\n        if (CollectionUtils.isEmpty(roleInfoList)) {\n            return false;\n        }"
            },
            {
              "step": 64,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 65,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 66,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 67,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 70,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 71,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 72,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 73,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 74,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 75,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 77,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 78,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 79,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 80,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 81,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 82,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 83,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 84,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 85,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 86,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 87,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 88,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 89,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 90,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 91,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 92,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 93,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 94,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 95,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 96,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 101,
              "startColumn": 20,
              "endLine": 101,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    private String resolveToken(IdentityContext identityContext) {\n        String bearerToken = identityContext.getParameter(AuthConstants.AUTHORIZATION_HEADER, StringUtils.EMPTY);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        \n        return identityContext.getParameter(Constants.ACCESS_TOKEN, StringUtils.EMPTY);"
            },
            {
              "step": 2,
              "variableName": "resolveToken(identityContext)",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 53,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "    \n    private NacosUser validateUser(IdentityContext identityContext) throws AccessException {\n        checkNacosAuthManager();\n        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 86,
              "startColumn": 60,
              "endLine": 86,
              "endColumn": 65,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 142,
              "startColumn": 33,
              "endLine": 142,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        if (!tokenMap.containsKey(token)) {\n            Authentication authentication = jwtTokenManager.getAuthentication(token);\n            String username = authentication.getName();"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 153,
              "startColumn": 57,
              "endLine": 153,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 12,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 13,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 14,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 16,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 18,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 19,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 21,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 25,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 26,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 27,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 28,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 29,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 30,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 31,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 32,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 33,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 34,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 153,
              "startColumn": 30,
              "endLine": 153,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            if (expiredTime <= System.currentTimeMillis()) {\n                throw new AccessException(\"expired token\");\n            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 155,
              "startColumn": 20,
              "endLine": 155,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/CachedJwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            }\n            NacosUser user = jwtTokenManager.parseToken(token);\n            tokenMap.putIfAbsent(token, new TokenEntity(token, username, expiredTime, authentication, user));\n            return user;\n        }\n        return tokenMap.get(token).getNacosUser();\n    }"
            },
            {
              "step": 36,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 37,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 38,
              "variableName": "authenticationManager.authenticate(token)",
              "startLine": 86,
              "startColumn": 25,
              "endLine": 86,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "        String token = resolveToken(identityContext);\n        NacosUser nacosUser;\n        if (StringUtils.isNotBlank(token)) {\n            nacosUser = authenticationManager.authenticate(token);\n        } else {\n            String userName = (String) identityContext.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 92,
              "startColumn": 68,
              "endLine": 92,
              "endColumn": 77,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 40,
              "variableName": "Object value",
              "startLine": 74,
              "startColumn": 42,
              "endLine": 74,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param key   key of request\n     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}"
            },
            {
              "step": 41,
              "variableName": "value",
              "startLine": 75,
              "startColumn": 24,
              "endLine": 75,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 42,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 43,
              "variableName": "param",
              "startLine": 75,
              "startColumn": 9,
              "endLine": 75,
              "endColumn": 14,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param value value of request's key\n     */\n    public void setParameter(String key, Object value) {\n        param.put(key, value);\n    }\n}\n"
            },
            {
              "step": 44,
              "variableName": "identityContext",
              "startLine": 92,
              "startColumn": 9,
              "endLine": 92,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "            String password = (String) identityContext.getParameter(AuthConstants.PARAM_PASSWORD);\n            nacosUser = authenticationManager.authenticate(userName, password);\n        }\n        identityContext.setParameter(AuthConstants.NACOS_USER_KEY, nacosUser);\n        identityContext.setParameter(com.alibaba.nacos.plugin.auth.constant.Constants.Identity.IDENTITY_ID,\n                nacosUser.getUserName());\n        return nacosUser;"
            },
            {
              "step": 45,
              "variableName": "identityContext",
              "startLine": 74,
              "startColumn": 48,
              "endLine": 74,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateIdentity(IdentityContext identityContext, Resource resource) {\n        try {\n            NacosUser nacosUser = validateUser(identityContext);\n            return AuthResult.successResult(nacosUser);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.UNAUTHORIZED.value(), e.getErrMsg());"
            },
            {
              "step": 46,
              "variableName": "identityContext",
              "startLine": 80,
              "startColumn": 61,
              "endLine": 80,
              "endColumn": 76,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateIdentity(identityContext, resource);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 47,
              "variableName": "identityContext",
              "startLine": 104,
              "startColumn": 74,
              "endLine": 104,
              "endColumn": 89,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                request.putHeader(Constants.Identity.X_REAL_IP, clientIp);\n                Resource resource = protocolAuthService.parseResource(request, secured);\n                IdentityContext identityContext = protocolAuthService.parseIdentity(request);\n                AuthResult result = protocolAuthService.validateIdentity(identityContext, resource);\n                RequestContext requestContext = RequestContextHolder.getContext();\n                requestContext.getAuthContext().setIdentityContext(identityContext);\n                requestContext.getAuthContext().setResource(resource);"
            },
            {
              "step": 48,
              "variableName": "identityContext",
              "startLine": 113,
              "startColumn": 64,
              "endLine": 113,
              "endColumn": 79,
              "uri": "nacos-3.0.0/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "                    throw new AccessException(result.format());\n                }\n                String action = secured.action().toString();\n                result = protocolAuthService.validateAuthority(identityContext, new Permission(resource, action));\n                if (!result.isSuccess()) {\n                    throw new AccessException(result.format());\n                }"
            },
            {
              "step": 49,
              "variableName": "IdentityContext identityContext",
              "startLine": 86,
              "startColumn": 41,
              "endLine": 86,
              "endColumn": 72,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) throws AccessException {\n        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {"
            },
            {
              "step": 50,
              "variableName": "identityContext",
              "startLine": 90,
              "startColumn": 62,
              "endLine": 90,
              "endColumn": 77,
              "uri": "nacos-3.0.0/auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "        Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()\n                .findAuthServiceSpiImpl(authConfig.getNacosAuthSystemType());\n        if (authPluginService.isPresent()) {\n            return authPluginService.get().validateAuthority(identityContext, permission);\n        }\n        return AuthResult.successResult();\n    }"
            },
            {
              "step": 51,
              "variableName": "IdentityContext identityContext",
              "startLine": 108,
              "startColumn": 41,
              "endLine": 108,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    }\n    \n    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);"
            },
            {
              "step": 52,
              "variableName": "identityContext",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 53,
              "variableName": "getParameter",
              "startLine": 40,
              "startColumn": 19,
              "endLine": 40,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @param key key of request\n     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    "
            },
            {
              "step": 54,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "IdentityContext [param, <map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 55,
              "variableName": "param",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 21,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "HashMap [<map.value>, userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 56,
              "variableName": "param.get(key)",
              "startLine": 41,
              "startColumn": 16,
              "endLine": 41,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/IdentityContext.java",
              "type": "NacosUser [userName] : String",
              "code": "     * @return value of param key\n     */\n    public Object getParameter(String key) {\n        return param.get(key);\n    }\n    \n    /**"
            },
            {
              "step": 57,
              "variableName": "identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 42,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 58,
              "variableName": "(NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY)",
              "startLine": 110,
              "startColumn": 30,
              "endLine": 110,
              "endColumn": 100,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    @Override\n    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {"
            },
            {
              "step": 59,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 57,
              "endLine": 111,
              "endColumn": 61,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java",
              "type": "NacosUser [userName] : String",
              "code": "    public AuthResult validateAuthority(IdentityContext identityContext, Permission permission) {\n        try {\n            NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n            authenticationManager.authorize(permission, user);\n            return AuthResult.successResult(user);\n        } catch (AccessException e) {\n            return AuthResult.failureResult(HttpStatus.FORBIDDEN.value(), e.getErrMsg());"
            },
            {
              "step": 60,
              "variableName": "NacosUser nacosUser",
              "startLine": 93,
              "startColumn": 50,
              "endLine": 93,
              "endColumn": 69,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public void authorize(Permission permission, NacosUser nacosUser) throws AccessException {\n        if (Loggers.AUTH.isDebugEnabled()) {\n            Loggers.AUTH.debug(\"auth permission: {}, nacosUser: {}\", permission, nacosUser);\n        }"
            },
            {
              "step": 61,
              "variableName": "nacosUser",
              "startLine": 100,
              "startColumn": 32,
              "endLine": 100,
              "endColumn": 41,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return;\n        }\n        if (hasGlobalAdminRole(nacosUser)) {\n            return;\n        }\n        "
            },
            {
              "step": 62,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 63,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 64,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 65,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 66,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 67,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 68,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 70,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 71,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 73,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 74,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 75,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 76,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 77,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 78,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 79,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 80,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 81,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 82,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 83,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 84,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 85,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 86,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 87,
              "variableName": "Object[] arg",
              "startLine": 41,
              "startColumn": 69,
              "endLine": 41,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DerbyPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        if (!fetchSql.contains(AuthPageConstant.OFFSET)) {\n            fetchSql += \" \" + AuthPageConstant.OFFSET_ROWS + \" \" + AuthPageConstant.FETCH_NEXT;\n            "
            },
            {
              "step": 88,
              "variableName": "arg",
              "startLine": 54,
              "startColumn": 48,
              "endLine": 54,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DerbyPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "            return new OffsetFetchResult(fetchSql, newArgs);\n        }\n        \n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 89,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 90,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 91,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 92,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 54,
              "startColumn": 16,
              "endLine": 54,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DerbyPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "            return new OffsetFetchResult(fetchSql, newArgs);\n        }\n        \n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 93,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 94,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 95,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 96,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 97,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 98,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 99,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 100,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 101,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 102,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 103,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 104,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 1,
              "variableName": "bearerToken.substring(AuthConstants.TOKEN_PREFIX.length())",
              "startLine": 112,
              "startColumn": 20,
              "endLine": 112,
              "endColumn": 78,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    private String resolveToken(HttpServletRequest request) {\n        String bearerToken = request.getHeader(AuthConstants.AUTHORIZATION_HEADER);\n        if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(AuthConstants.TOKEN_PREFIX)) {\n            return bearerToken.substring(AuthConstants.TOKEN_PREFIX.length());\n        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        "
            },
            {
              "step": 2,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 3,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 4,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 5,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 6,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 7,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 8,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 9,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 10,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 11,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 12,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 15,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 16,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 17,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 20,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 21,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 22,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 23,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 24,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 25,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 27,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 28,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 29,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 30,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 31,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 32,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 34,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 35,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 36,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 37,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 38,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 39,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 40,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 43,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 44,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 45,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 46,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 47,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 48,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 49,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 50,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 51,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 52,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 53,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 55,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 57,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 58,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 59,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 60,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 61,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 62,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 63,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 64,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 65,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 66,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 67,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 68,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 69,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 70,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 71,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 72,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 73,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 74,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 75,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 76,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 77,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 78,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 79,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 80,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "bearerToken",
              "startLine": 116,
              "startColumn": 16,
              "endLine": 116,
              "endColumn": 27,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        }\n        bearerToken = request.getParameter(Constants.ACCESS_TOKEN);\n        \n        return bearerToken;\n    }\n    \n    @Override"
            },
            {
              "step": 1,
              "variableName": "resolveToken(httpServletRequest)",
              "startLine": 78,
              "startColumn": 24,
              "endLine": 78,
              "endColumn": 56,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser authenticate(HttpServletRequest httpServletRequest) throws AccessException {\n        String token = resolveToken(httpServletRequest);\n        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {"
            },
            {
              "step": 2,
              "variableName": "token",
              "startLine": 82,
              "startColumn": 33,
              "endLine": 82,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 3,
              "variableName": "String token",
              "startLine": 69,
              "startColumn": 35,
              "endLine": 69,
              "endColumn": 47,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser authenticate(String token) throws AccessException {\n        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }"
            },
            {
              "step": 4,
              "variableName": "token",
              "startLine": 73,
              "startColumn": 43,
              "endLine": 73,
              "endColumn": 48,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 5,
              "variableName": "String token",
              "startLine": 63,
              "startColumn": 33,
              "endLine": 63,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    "
            },
            {
              "step": 6,
              "variableName": "token",
              "startLine": 64,
              "startColumn": 52,
              "endLine": 64,
              "endColumn": 57,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 7,
              "variableName": "String token",
              "startLine": 139,
              "startColumn": 33,
              "endLine": 139,
              "endColumn": 45,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "        parseToken(token);\n    }\n    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }"
            },
            {
              "step": 8,
              "variableName": "token",
              "startLine": 141,
              "startColumn": 32,
              "endLine": 141,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 9,
              "variableName": "String token",
              "startLine": 83,
              "startColumn": 28,
              "endLine": 83,
              "endColumn": 40,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "        return new JwtBuilder();\n    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    "
            },
            {
              "step": 10,
              "variableName": "token",
              "startLine": 84,
              "startColumn": 47,
              "endLine": 84,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 11,
              "variableName": "String jwt",
              "startLine": 93,
              "startColumn": 36,
              "endLine": 93,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public static NacosUser verify(String jwt, Key key) throws AccessException {\n        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }"
            },
            {
              "step": 12,
              "variableName": "jwt",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 13,
              "variableName": "jwt.split(\"\\\\.\")",
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 42,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String[]",
              "code": "        if (StringUtils.isBlank(jwt)) {\n            throw new AccessException(\"user not found!\");\n        }\n        String[] split = jwt.split(\"\\\\.\");\n        if (split.length != JWT_PARTS) {\n            throw new AccessException(\"token invalid!\");\n        }"
            },
            {
              "step": 14,
              "variableName": "payload",
              "startLine": 109,
              "startColumn": 60,
              "endLine": 109,
              "endColumn": 67,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 15,
              "variableName": "String payload",
              "startLine": 124,
              "startColumn": 44,
              "endLine": 124,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "     * @return object for payload\n     * @throws AccessException access exception\n     */\n    public NacosUser verify(String header, String payload, String signature, Key key) throws AccessException {\n        Mac macInstance = getMacInstance(key);\n        byte[] bytes = macInstance.doFinal((header + JWT_SEPERATOR + payload).getBytes(StandardCharsets.US_ASCII));\n        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {"
            },
            {
              "step": 16,
              "variableName": "payload",
              "startLine": 130,
              "startColumn": 88,
              "endLine": 130,
              "endColumn": 95,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 17,
              "variableName": "URL_BASE64_DECODER.decode(payload)",
              "startLine": 130,
              "startColumn": 62,
              "endLine": 130,
              "endColumn": 96,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "byte[]",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 18,
              "variableName": "JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class)",
              "startLine": 130,
              "startColumn": 43,
              "endLine": 130,
              "endColumn": 120,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        if (!URL_BASE64_ENCODER.encodeToString(bytes).equals(signature)) {\n            throw new AccessException(\"Invalid signature\");\n        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }"
            },
            {
              "step": 19,
              "variableName": "nacosJwtPayload",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosJwtPayload",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 20,
              "variableName": "getSub",
              "startLine": 33,
              "startColumn": 19,
              "endLine": 33,
              "endColumn": 25,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "NacosJwtPayload",
              "code": "    \n    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    "
            },
            {
              "step": 21,
              "variableName": "sub",
              "startLine": 34,
              "startColumn": 16,
              "endLine": 34,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtPayload.java",
              "type": "String",
              "code": "    private long exp = System.currentTimeMillis() / 1000L;\n    \n    public String getSub() {\n        return sub;\n    }\n    \n    public void setSub(String sub) {"
            },
            {
              "step": 22,
              "variableName": "nacosJwtPayload.getSub()",
              "startLine": 132,
              "startColumn": 34,
              "endLine": 132,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 23,
              "variableName": "String userName",
              "startLine": 34,
              "startColumn": 22,
              "endLine": 34,
              "endColumn": 37,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    public NacosUser() {\n    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    "
            },
            {
              "step": 24,
              "variableName": "userName",
              "startLine": 35,
              "startColumn": 21,
              "endLine": 35,
              "endColumn": 29,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 25,
              "variableName": "setUserName(userName)",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser(String userName) {\n        setUserName(userName);\n    }\n    \n    public NacosUser(String userName, String token) {"
            },
            {
              "step": 26,
              "variableName": "new NacosUser(nacosJwtPayload.getSub())",
              "startLine": 132,
              "startColumn": 20,
              "endLine": 132,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosJwtPayload nacosJwtPayload = JacksonUtils.toObj(URL_BASE64_DECODER.decode(payload), NacosJwtPayload.class);\n        if (nacosJwtPayload.getExp() >= TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())) {\n            return new NacosUser(nacosJwtPayload.getSub());\n        }\n        \n        throw new AccessException(\"token expired!\");"
            },
            {
              "step": 27,
              "variableName": "signatureAlgorithm.verify(header, payload, signature, key)",
              "startLine": 109,
              "startColumn": 26,
              "endLine": 109,
              "endColumn": 84,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (signatureAlgorithm == null) {\n            throw new AccessException(\"unsupported signature algorithm\");\n        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }"
            },
            {
              "step": 28,
              "variableName": "user",
              "startLine": 111,
              "startColumn": 16,
              "endLine": 111,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = signatureAlgorithm.verify(header, payload, signature, key);\n        user.setToken(jwt);\n        return user;\n    }\n    \n    /**"
            },
            {
              "step": 29,
              "variableName": "NacosSignatureAlgorithm.verify(token, key)",
              "startLine": 84,
              "startColumn": 16,
              "endLine": 84,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosJwtParser.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    public NacosUser parse(String token) throws AccessException {\n        return NacosSignatureAlgorithm.verify(token, key);\n    }\n    \n    public long getExpireTimeInSeconds(String token) throws AccessException {"
            },
            {
              "step": 30,
              "variableName": "jwtParser.parse(token)",
              "startLine": 141,
              "startColumn": 16,
              "endLine": 141,
              "endColumn": 38,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    public NacosUser parseToken(String token) throws AccessException {\n        checkJwtParser();\n        return jwtParser.parse(token);\n    }\n    \n    public long getTokenValidityInSeconds() {"
            },
            {
              "step": 31,
              "variableName": "getExecuteTokenManager().parseToken(token)",
              "startLine": 64,
              "startColumn": 16,
              "endLine": 64,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/TokenManagerDelegate.java",
              "type": "NacosUser [userName] : String",
              "code": "    \n    @Override\n    public NacosUser parseToken(String token) throws AccessException {\n        return getExecuteTokenManager().parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 32,
              "variableName": "jwtTokenManager.parseToken(token)",
              "startLine": 73,
              "startColumn": 16,
              "endLine": 73,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (StringUtils.isBlank(token)) {\n            throw new AccessException(USER_NOT_FOUND_MESSAGE);\n        }\n        return jwtTokenManager.parseToken(token);\n    }\n    \n    @Override"
            },
            {
              "step": 33,
              "variableName": "authenticate(token)",
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 39,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        \n        NacosUser user;\n        if (StringUtils.isNotBlank(token)) {\n            user = authenticate(token);\n        } else {\n            String userName = httpServletRequest.getParameter(AuthConstants.PARAM_USERNAME);\n            String password = httpServletRequest.getParameter(AuthConstants.PARAM_PASSWORD);"
            },
            {
              "step": 34,
              "variableName": "user",
              "startLine": 89,
              "startColumn": 16,
              "endLine": 89,
              "endColumn": 20,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "            user = authenticate(userName, password);\n        }\n        \n        return user;\n    }\n    \n    @Override"
            },
            {
              "step": 35,
              "variableName": "iAuthenticationManager.authenticate(request)",
              "startLine": 224,
              "startColumn": 20,
              "endLine": 224,
              "endColumn": 64,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "        }\n        NacosUser user = (NacosUser) identityContext.getParameter(AuthConstants.NACOS_USER_KEY);\n        if (user == null) {\n            user = iAuthenticationManager.authenticate(request);\n            if (user == null) {\n                throw new HttpSessionRequiredException(\"session expired!\");\n            }"
            },
            {
              "step": 36,
              "variableName": "user",
              "startLine": 229,
              "startColumn": 55,
              "endLine": 229,
              "endColumn": 59,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java",
              "type": "NacosUser [userName] : String",
              "code": "                throw new HttpSessionRequiredException(\"session expired!\");\n            }\n            //get user form jwt need check permission\n            iAuthenticationManager.hasGlobalAdminRole(user);\n        }\n        // admin\n        if (user.isGlobalAdmin()) {"
            },
            {
              "step": 37,
              "variableName": "NacosUser nacosUser",
              "startLine": 130,
              "startColumn": 39,
              "endLine": 130,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(NacosUser nacosUser) {\n        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }"
            },
            {
              "step": 38,
              "variableName": "nacosUser",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 62,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "NacosUser [userName] : String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 39,
              "variableName": "getUserName",
              "startLine": 37,
              "startColumn": 19,
              "endLine": 37,
              "endColumn": 30,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "     */\n    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    "
            },
            {
              "step": 40,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "NacosUser [userName] : String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 41,
              "variableName": "userName",
              "startLine": 38,
              "startColumn": 16,
              "endLine": 38,
              "endColumn": 24,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java",
              "type": "String",
              "code": "    private String userName;\n    \n    public String getUserName() {\n        return userName;\n    }\n    \n    public void setUserName(String userName) {"
            },
            {
              "step": 42,
              "variableName": "nacosUser.getUserName()",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 76,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "        if (nacosUser.isGlobalAdmin()) {\n            return true;\n        }\n        nacosUser.setGlobalAdmin(hasGlobalAdminRole(nacosUser.getUserName()));\n        return nacosUser.isGlobalAdmin();\n    }\n}"
            },
            {
              "step": 43,
              "variableName": "String username",
              "startLine": 120,
              "startColumn": 39,
              "endLine": 120,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    "
            },
            {
              "step": 44,
              "variableName": "username",
              "startLine": 121,
              "startColumn": 47,
              "endLine": 121,
              "endColumn": 55,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String username) {\n        return roleService.hasGlobalAdminRole(username);\n    }\n    \n    @Override"
            },
            {
              "step": 45,
              "variableName": "String userName",
              "startLine": 114,
              "startColumn": 39,
              "endLine": 114,
              "endColumn": 54,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }"
            },
            {
              "step": 46,
              "variableName": "userName",
              "startLine": 115,
              "startColumn": 41,
              "endLine": 115,
              "endColumn": 49,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/AbstractCheckedRoleService.java",
              "type": "String",
              "code": "    \n    @Override\n    public boolean hasGlobalAdminRole(String userName) {\n        List<RoleInfo> roles = getRoles(userName);\n        return roles.stream().anyMatch(roleInfo -> AuthConstants.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole()));\n    }\n    "
            },
            {
              "step": 47,
              "variableName": "String username",
              "startLine": 60,
              "startColumn": 36,
              "endLine": 60,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);"
            },
            {
              "step": 48,
              "variableName": "username",
              "startLine": 63,
              "startColumn": 52,
              "endLine": 63,
              "endColumn": 60,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    public List<RoleInfo> getRoles(String username) {\n        List<RoleInfo> roleInfoList = getCachedRoleInfoMap().get(username);\n        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {\n            Page<RoleInfo> roleInfoPage = getRoles(username, StringUtils.EMPTY, DEFAULT_PAGE_NO, Integer.MAX_VALUE);\n            if (roleInfoPage != null) {\n                roleInfoList = roleInfoPage.getPageItems();\n                if (!CollectionUtils.isEmpty(roleInfoList)) {"
            },
            {
              "step": 49,
              "variableName": "String username",
              "startLine": 75,
              "startColumn": 36,
              "endLine": 75,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();"
            },
            {
              "step": 50,
              "variableName": "username",
              "startLine": 76,
              "startColumn": 81,
              "endLine": 76,
              "endColumn": 89,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceDirectImpl.java",
              "type": "String",
              "code": "    \n    @Override\n    public Page<RoleInfo> getRoles(String username, String role, int pageNo, int pageSize) {\n        Page<RoleInfo> roles = rolePersistService.getRolesByUserNameAndRoleName(username, role, pageNo, pageSize);\n        if (roles == null) {\n            return new Page<>();\n        }"
            },
            {
              "step": 51,
              "variableName": "String username",
              "startLine": 71,
              "startColumn": 57,
              "endLine": 71,
              "endColumn": 72,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "    }\n    \n    @Override\n    public Page<RoleInfo> getRolesByUserNameAndRoleName(String username, String role, int pageNo, int pageSize) {\n        \n        AuthPaginationHelper<RoleInfo> helper = createPaginationHelper();\n        "
            },
            {
              "step": 52,
              "variableName": "username",
              "startLine": 83,
              "startColumn": 24,
              "endLine": 83,
              "endColumn": 32,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 53,
              "variableName": "params",
              "startLine": 83,
              "startColumn": 13,
              "endLine": 83,
              "endColumn": 19,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "        List<String> params = new ArrayList<>();\n        if (StringUtils.isNotBlank(username)) {\n            where.append(\" AND username = ? \");\n            params.add(username);\n        }\n        if (StringUtils.isNotBlank(role)) {\n            where.append(\" AND role = ? \");"
            },
            {
              "step": 54,
              "variableName": "params",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "ArrayList [<element>] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 55,
              "variableName": "params.toArray()",
              "startLine": 90,
              "startColumn": 77,
              "endLine": 90,
              "endColumn": 93,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImpl.java",
              "type": "Object[] [[]] : String",
              "code": "            params.add(role);\n        }\n        \n        return helper.fetchPage(sqlCountRows + where, sqlFetchRows + where, params.toArray(), pageNo, pageSize,\n                ROLE_INFO_ROW_MAPPER);\n        \n    }"
            },
            {
              "step": 56,
              "variableName": "final Object[] args",
              "startLine": 57,
              "startColumn": 84,
              "endLine": 57,
              "endColumn": 103,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "     * @return Paging data\n     */\n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }"
            },
            {
              "step": 57,
              "variableName": "args",
              "startLine": 59,
              "startColumn": 54,
              "endLine": 59,
              "endColumn": 58,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, final Object[] args,\n            final int pageNo, final int pageSize, final RowMapper rowMapper) {\n        return fetchPage(sqlCountRows, sqlFetchRows, args, pageNo, pageSize, null, rowMapper);\n    }\n    \n    @Override"
            },
            {
              "step": 58,
              "variableName": "Object[] args",
              "startLine": 63,
              "startColumn": 84,
              "endLine": 63,
              "endColumn": 97,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, Object[] args, final int pageNo,\n            final int pageSize, final Long lastMaxId, final RowMapper rowMapper) {\n        if (pageNo <= 0 || pageSize <= 0) {\n            throw new IllegalArgumentException(\"pageNo and pageSize must be greater than zero\");"
            },
            {
              "step": 59,
              "variableName": "args",
              "startLine": 93,
              "startColumn": 79,
              "endLine": 93,
              "endColumn": 83,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 60,
              "variableName": "Object[] arg",
              "startLine": 225,
              "startColumn": 70,
              "endLine": 225,
              "endColumn": 82,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        }\n    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }"
            },
            {
              "step": 61,
              "variableName": "arg",
              "startLine": 227,
              "startColumn": 95,
              "endLine": 227,
              "endColumn": 98,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    \n}"
            },
            {
              "step": 62,
              "variableName": "Object[] arg",
              "startLine": 35,
              "startColumn": 69,
              "endLine": 35,
              "endColumn": 81,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    "
            },
            {
              "step": 63,
              "variableName": "arg",
              "startLine": 36,
              "startColumn": 48,
              "endLine": 36,
              "endColumn": 51,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 64,
              "variableName": "Object[] newArgs",
              "startLine": 33,
              "startColumn": 47,
              "endLine": 33,
              "endColumn": 63,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    public OffsetFetchResult() {\n    }\n    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }"
            },
            {
              "step": 65,
              "variableName": "newArgs",
              "startLine": 35,
              "startColumn": 24,
              "endLine": 35,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 66,
              "variableName": "this",
              "startLine": 35,
              "startColumn": 9,
              "endLine": 35,
              "endColumn": 13,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    public OffsetFetchResult(String fetchSql, Object[] newArgs) {\n        this.fetchSql = fetchSql;\n        this.newArgs = newArgs;\n    }\n    \n    public String getFetchSql() {"
            },
            {
              "step": 67,
              "variableName": "new OffsetFetchResult(fetchSql, arg)",
              "startLine": 36,
              "startColumn": 16,
              "endLine": 36,
              "endColumn": 52,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/support/DefaultPageHandlerAdapter.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    \n    @Override\n    public OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return new OffsetFetchResult(fetchSql, arg);\n    }\n    \n}"
            },
            {
              "step": 68,
              "variableName": "PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()",
              "startLine": 226,
              "startColumn": 16,
              "endLine": 227,
              "endColumn": 117,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    private OffsetFetchResult addOffsetAndFetchNext(String fetchSql, Object[] arg, int pageNo, int pageSize) {\n        return PageHandlerAdapterFactory.getInstance().getHandlerAdapterMap()\n                .get(DerbyPageHandlerAdapter.class.getName()).addOffsetAndFetchNext(fetchSql, arg, pageNo, pageSize);\n    }\n    "
            },
            {
              "step": 69,
              "variableName": "addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize)",
              "startLine": 93,
              "startColumn": 47,
              "endLine": 93,
              "endColumn": 102,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        \n        // fill the sql Page args\n        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        "
            },
            {
              "step": 70,
              "variableName": "offsetFetchResult",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 33,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 71,
              "variableName": "getNewArgs",
              "startLine": 46,
              "startColumn": 21,
              "endLine": 46,
              "endColumn": 31,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "        this.fetchSql = fetchSql;\n    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    "
            },
            {
              "step": 72,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "OffsetFetchResult [newArgs, []] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 73,
              "variableName": "newArgs",
              "startLine": 47,
              "startColumn": 16,
              "endLine": 47,
              "endColumn": 23,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/model/OffsetFetchResult.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    public Object[] getNewArgs() {\n        return newArgs;\n    }\n    \n    public void setNewArgs(Object[] newArgs) {"
            },
            {
              "step": 74,
              "variableName": "offsetFetchResult.getNewArgs()",
              "startLine": 95,
              "startColumn": 16,
              "endLine": 95,
              "endColumn": 46,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        String fetchSql = sqlFetchRows;\n        OffsetFetchResult offsetFetchResult = addOffsetAndFetchNext(fetchSql, args, pageNo, pageSize);\n        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {"
            },
            {
              "step": 75,
              "variableName": "args",
              "startLine": 97,
              "startColumn": 62,
              "endLine": 97,
              "endColumn": 66,
              "uri": "nacos-3.0.0/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/embedded/AuthEmbeddedPaginationHelperImpl.java",
              "type": "Object[] [[]] : String",
              "code": "        fetchSql = offsetFetchResult.getFetchSql();\n        args = offsetFetchResult.getNewArgs();\n        \n        List<E> result = databaseOperate.queryMany(fetchSql, args, rowMapper);\n        for (E item : result) {\n            page.getPageItems().add(item);\n        }"
            },
            {
              "step": 76,
              "variableName": "Object[] args",
              "startLine": 93,
              "startColumn": 46,
              "endLine": 93,
              "endColumn": 59,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    }\n    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    "
            },
            {
              "step": 77,
              "variableName": "args",
              "startLine": 94,
              "startColumn": 45,
              "endLine": 94,
              "endColumn": 49,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/StandaloneDatabaseOperateImpl.java",
              "type": "Object[] [[]] : String",
              "code": "    \n    @Override\n    public <R> List<R> queryMany(String sql, Object[] args, RowMapper<R> mapper) {\n        return queryMany(jdbcTemplate, sql, args, mapper);\n    }\n    \n    @Override"
            },
            {
              "step": 78,
              "variableName": "Object[] args",
              "startLine": 133,
              "startColumn": 74,
              "endLine": 133,
              "endColumn": 87,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "Object[] [[]] : String",
              "code": "     * @param <R>          target type\n     * @return result list\n     */\n    default <R> List<R> queryMany(JdbcTemplate jdbcTemplate, String sql, Object[] args, RowMapper<R> mapper) {\n        try {\n            return jdbcTemplate.query(sql, args, mapper);\n        } catch (CannotGetJdbcConnectionException e) {"
            },
            {
              "step": 79,
              "variableName": "args",
              "startLine": 140,
              "startColumn": 97,
              "endLine": 140,
              "endColumn": 101,
              "uri": "nacos-3.0.0/persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/operate/BaseDatabaseOperate.java",
              "type": "",
              "code": "            LOGGER.error(\"[db-error] {}\", e.toString());\n            throw e;\n        } catch (DataAccessException e) {\n            LOGGER.error(\"[db-error] DataAccessException sql : {}, args : {}, error : {}\", sql, args,\n                    ExceptionUtil.getAllExceptionMsg(e));\n            throw e;\n        }"
            }
          ]
        }
      ]
    }
  ]
}