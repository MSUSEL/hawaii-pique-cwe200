{
  "201": [
    {
      "resultIndex": 0,
      "fileName": "ParaClient.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 1,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 2,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 3,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 4,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 5,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 6,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 7,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 8,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 9,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 10,
              "variableName": "jsonEntity",
              "startLine": 567,
              "startColumn": 53,
              "endLine": 567,
              "endColumn": 63,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            },
            {
              "step": 11,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 567,
              "startColumn": 33,
              "endLine": 567,
              "endColumn": 94,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1828,
              "startColumn": 4,
              "endLine": 1828,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic User signIn(String provider, String providerToken, boolean rememberJWT) {\n\t\tif (!StringUtils.isBlank(provider) && !StringUtils.isBlank(providerToken)) {\n\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 567,
              "startColumn": 53,
              "endLine": 567,
              "endColumn": 63,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 567,
              "startColumn": 33,
              "endLine": 567,
              "endColumn": 94,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1829,
              "startColumn": 4,
              "endLine": 1829,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\tif (!StringUtils.isBlank(provider) && !StringUtils.isBlank(providerToken)) {\n\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 567,
              "startColumn": 53,
              "endLine": 567,
              "endColumn": 63,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 567,
              "startColumn": 33,
              "endLine": 567,
              "endColumn": 94,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1830,
              "startColumn": 4,
              "endLine": 1830,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 567,
              "startColumn": 53,
              "endLine": 567,
              "endColumn": 63,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 567,
              "startColumn": 33,
              "endLine": 567,
              "endColumn": 94,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"POST\":\n\t\t\t\treq = new HttpPost(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPost) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PUT\":"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 1,
      "fileName": "ParaClient.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 1,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 2,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 3,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 4,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 5,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 6,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 7,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 8,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 9,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 10,
              "variableName": "jsonEntity",
              "startLine": 573,
              "startColumn": 52,
              "endLine": 573,
              "endColumn": 62,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            },
            {
              "step": 11,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 573,
              "startColumn": 32,
              "endLine": 573,
              "endColumn": 93,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1828,
              "startColumn": 4,
              "endLine": 1828,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic User signIn(String provider, String providerToken, boolean rememberJWT) {\n\t\tif (!StringUtils.isBlank(provider) && !StringUtils.isBlank(providerToken)) {\n\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 573,
              "startColumn": 52,
              "endLine": 573,
              "endColumn": 62,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 573,
              "startColumn": 32,
              "endLine": 573,
              "endColumn": 93,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1829,
              "startColumn": 4,
              "endLine": 1829,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\tif (!StringUtils.isBlank(provider) && !StringUtils.isBlank(providerToken)) {\n\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 573,
              "startColumn": 52,
              "endLine": 573,
              "endColumn": 62,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 573,
              "startColumn": 32,
              "endLine": 573,
              "endColumn": 93,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1830,
              "startColumn": 4,
              "endLine": 1830,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 573,
              "startColumn": 52,
              "endLine": 573,
              "endColumn": 62,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 573,
              "startColumn": 32,
              "endLine": 573,
              "endColumn": 93,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PUT\":\n\t\t\t\treq = new HttpPut(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPut) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"PATCH\":"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 2,
      "fileName": "ParaClient.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 1,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 2,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 3,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 4,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 5,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 6,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 7,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 8,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 9,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 10,
              "variableName": "jsonEntity",
              "startLine": 579,
              "startColumn": 54,
              "endLine": 579,
              "endColumn": 64,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            },
            {
              "step": 11,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 579,
              "startColumn": 34,
              "endLine": 579,
              "endColumn": 95,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1828,
              "startColumn": 4,
              "endLine": 1828,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic User signIn(String provider, String providerToken, boolean rememberJWT) {\n\t\tif (!StringUtils.isBlank(provider) && !StringUtils.isBlank(providerToken)) {\n\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 579,
              "startColumn": 54,
              "endLine": 579,
              "endColumn": 64,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 579,
              "startColumn": 34,
              "endLine": 579,
              "endColumn": 95,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1829,
              "startColumn": 4,
              "endLine": 1829,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\tif (!StringUtils.isBlank(provider) && !StringUtils.isBlank(providerToken)) {\n\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 579,
              "startColumn": 54,
              "endLine": 579,
              "endColumn": 64,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 579,
              "startColumn": 34,
              "endLine": 579,
              "endColumn": 95,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1830,
              "startColumn": 4,
              "endLine": 1830,
              "endColumn": 15,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tMap<String, String> credentials = new HashMap<>();\n\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");"
            },
            {
              "step": 1,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 2,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 3,
              "variableName": "entity",
              "startLine": 421,
              "startColumn": 59,
              "endLine": 421,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "Object entity",
              "startLine": 468,
              "startColumn": 72,
              "endLine": 468,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\n\t<T> T invokeSignedRequest(String accessKey, String secretKey,\n\t\t\tString method, String apiURL, String path,\n\t\t\tMap<String, String> headers, MultivaluedMap<String, String> params, Object entity, Class<?> returnType) {\n\n\t\tboolean isJWT = StringUtils.startsWithIgnoreCase(secretKey, \"Bearer\");\n"
            },
            {
              "step": 5,
              "variableName": "entity",
              "startLine": 475,
              "startColumn": 45,
              "endLine": 475,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 6,
              "variableName": "Object entity",
              "startLine": 528,
              "startColumn": 38,
              "endLine": 528,
              "endColumn": 51,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\treturn null;\n\t}\n\n\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);"
            },
            {
              "step": 7,
              "variableName": "ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity)",
              "startLine": 531,
              "startColumn": 12,
              "endLine": 531,
              "endColumn": 76,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\tprivate byte[] getJsonEntityAsBytes(Object entity) {\n\t\tif (entity != null) {\n\t\t\ttry {\n\t\t\t\treturn ParaObjectUtils.getJsonWriterNoIdent().writeValueAsBytes(entity);\n\t\t\t} catch (JsonProcessingException ex) {\n\t\t\t\tlogger.error(null, ex);\n\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "getJsonEntityAsBytes(entity)",
              "startLine": 475,
              "startColumn": 24,
              "endLine": 475,
              "endColumn": 52,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\ttry {\n\t\t\tString uri = getEndpoint() + path;\n\t\t\tMap<String, String> signedHeaders = new HashMap<>();\n\t\t\tbyte[] jsonEntity = getJsonEntityAsBytes(entity);\n\n\t\t\tSigner signer = new Signer();\n\t\t\tif (!isJWT) {"
            },
            {
              "step": 9,
              "variableName": "jsonEntity",
              "startLine": 486,
              "startColumn": 56,
              "endLine": 486,
              "endColumn": 66,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\turi = setQueryParameters(uri, params);\n\t\t\tString reqDetails = Utils.formatMessage(\" [{0} {1}]\", method, uri);\n\n\t\t\tHttpUriRequest req = getHttpUriRequest(uri, method, jsonEntity);\n\n\t\t\tif (headers != null) {\n\t\t\t\tfor (Map.Entry<String, String> header : headers.entrySet()) {"
            },
            {
              "step": 10,
              "variableName": "byte[] jsonEntity",
              "startLine": 558,
              "startColumn": 70,
              "endLine": 558,
              "endColumn": 87,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\treturn uri;\n\t}\n\n\tprivate HttpUriRequest getHttpUriRequest(String uri, String method, byte[] jsonEntity) throws URISyntaxException {\n\t\tHttpUriRequest req;\n\t\tswitch (method) {\n\t\t\tcase \"GET\":"
            },
            {
              "step": 11,
              "variableName": "jsonEntity",
              "startLine": 579,
              "startColumn": 54,
              "endLine": 579,
              "endColumn": 64,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "byte[]",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            },
            {
              "step": 12,
              "variableName": "new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON)",
              "startLine": 579,
              "startColumn": 34,
              "endLine": 579,
              "endColumn": 95,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t\t\tcase \"PATCH\":\n\t\t\t\treq = new HttpPatch(uri);\n\t\t\t\tif (jsonEntity != null) {\n\t\t\t\t\t((HttpPatch) req).setEntity(new ByteArrayEntity(jsonEntity, ContentType.APPLICATION_JSON));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":"
            }
          ],
          "label": "Yes"
        }
      ]
    }
  ],
  "532": [
    {
      "resultIndex": 3,
      "fileName": "ParaClient.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 1,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 2,
              "variableName": "entity",
              "startLine": 419,
              "startColumn": 66,
              "endLine": 419,
              "endColumn": 72,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}"
            },
            {
              "step": 3,
              "variableName": "logger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType)",
              "startLine": 419,
              "startColumn": 3,
              "endLine": 419,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "Object[] [[]] : HashMap",
              "code": "\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}"
            },
            {
              "step": 4,
              "variableName": "logger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType)",
              "startLine": 419,
              "startColumn": 3,
              "endLine": 419,
              "endColumn": 85,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 4,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 695,
              "startColumn": 43,
              "endLine": 695,
              "endColumn": 53,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);\n\t\t\t\tCoreUtils.getInstance().getDao().update(user.getAppid(), user);"
            },
            {
              "step": 17,
              "variableName": "logger.info(\"Identifier changed for user '{}', fr",
              "startLine": 694,
              "startColumn": 5,
              "endLine": 695,
              "endColumn": 54,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\tuser.setPassword(password);\n\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);"
            },
            {
              "step": 18,
              "variableName": "logger.info(\"Identifier changed for user '{}', fr",
              "startLine": 694,
              "startColumn": 5,
              "endLine": 695,
              "endColumn": 54,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t\tuser.setPassword(password);\n\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 695,
              "startColumn": 43,
              "endLine": 695,
              "endColumn": 53,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);\n\t\t\t\tCoreUtils.getInstance().getDao().update(user.getAppid(), user);"
            },
            {
              "step": 19,
              "variableName": "logger.info(\"Identifier changed for user '{}', fr",
              "startLine": 694,
              "startColumn": 5,
              "endLine": 695,
              "endColumn": 54,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\tuser.setPassword(password);\n\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);"
            },
            {
              "step": 20,
              "variableName": "logger.info(\"Identifier changed for user '{}', fr",
              "startLine": 694,
              "startColumn": 5,
              "endLine": 695,
              "endColumn": 54,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t\tuser.setPassword(password);\n\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 5,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 702,
              "startColumn": 74,
              "endLine": 702,
              "endColumn": 84,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            },
            {
              "step": 17,
              "variableName": "logger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId())",
              "startLine": 702,
              "startColumn": 3,
              "endLine": 702,
              "endColumn": 96,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            },
            {
              "step": 18,
              "variableName": "logger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId())",
              "startLine": 702,
              "startColumn": 3,
              "endLine": 702,
              "endColumn": 96,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 702,
              "startColumn": 74,
              "endLine": 702,
              "endColumn": 84,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "logger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId())",
              "startLine": 702,
              "startColumn": 3,
              "endLine": 702,
              "endColumn": 96,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            },
            {
              "step": 20,
              "variableName": "logger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId())",
              "startLine": 702,
              "startColumn": 3,
              "endLine": 702,
              "endColumn": 96,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 6,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 137,
              "startColumn": 37,
              "endLine": 137,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}\n\t\t\t\t} else if (User.passwordMatches(u)) {\n\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t}\n\t\t\t} catch (LimitExceededException e) {"
            },
            {
              "step": 10,
              "variableName": "User u",
              "startLine": 713,
              "startColumn": 46,
              "endLine": 713,
              "endColumn": 52,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return true if password matches the one in the data store\n\t * @throws LimitExceededException if rate limit is exceeded when password doesn't match.\n\t */\n\tpublic static final boolean passwordMatches(User u) throws LimitExceededException {\n\t\tif (u == null) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 735,
              "startColumn": 34,
              "endLine": 735,
              "endColumn": 44,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t\t\tif (((Sysprop) s).hasProperty(\"lockedUntil\") &&\n\t\t\t\t\t\t\t(long) ((Sysprop) s).getProperty(\"lockedUntil\") > System.currentTimeMillis()) {\n\t\t\t\t\t\tlogger.warn(\"Too many login attempts for user {} ({}/{}), account locked.\",\n\t\t\t\t\t\t\t\tu.getId(), u.getAppid(), identifier);\n\t\t\t\t\t\tthrow new LimitExceededException(\"Too many login attempts!\");\n\t\t\t\t\t}\n\t\t\t\t\t((Sysprop) s).setVotes(((Sysprop) s).getVotes() + 1);"
            },
            {
              "step": 17,
              "variableName": "logger.warn(\"Too many login attempts f",
              "startLine": 734,
              "startColumn": 7,
              "endLine": 735,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\t} else {\n\t\t\t\t\tif (((Sysprop) s).hasProperty(\"lockedUntil\") &&\n\t\t\t\t\t\t\t(long) ((Sysprop) s).getProperty(\"lockedUntil\") > System.currentTimeMillis()) {\n\t\t\t\t\t\tlogger.warn(\"Too many login attempts for user {} ({}/{}), account locked.\",\n\t\t\t\t\t\t\t\tu.getId(), u.getAppid(), identifier);\n\t\t\t\t\t\tthrow new LimitExceededException(\"Too many login attempts!\");\n\t\t\t\t\t}"
            },
            {
              "step": 18,
              "variableName": "logger.warn(\"Too many login attempts f",
              "startLine": 734,
              "startColumn": 7,
              "endLine": 735,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t\t} else {\n\t\t\t\t\tif (((Sysprop) s).hasProperty(\"lockedUntil\") &&\n\t\t\t\t\t\t\t(long) ((Sysprop) s).getProperty(\"lockedUntil\") > System.currentTimeMillis()) {\n\t\t\t\t\t\tlogger.warn(\"Too many login attempts for user {} ({}/{}), account locked.\",\n\t\t\t\t\t\t\t\tu.getId(), u.getAppid(), identifier);\n\t\t\t\t\t\tthrow new LimitExceededException(\"Too many login attempts!\");\n\t\t\t\t\t}"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 7,
      "fileName": "AWSDynamoDAO.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 682,
              "startColumn": 27,
              "endLine": 682,
              "endColumn": 28,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\tuser = users.get(0);\n\t\t\t\t// keep this random! dangerous to set it to user.getPassword()\n\t\t\t\tpassword = Utils.generateSecurityToken();\n\t\t\t\tuser.createIdentifier(u.getIdentifier(), password);\n\t\t\t\tif (p.getCount() > 1) {\n\t\t\t\t\tlogger.warn(\"{} user objects exist with the same email {}\", p.getCount(), user.getEmail());\n\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 682,
              "startColumn": 27,
              "endLine": 682,
              "endColumn": 44,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t\tuser = users.get(0);\n\t\t\t\t// keep this random! dangerous to set it to user.getPassword()\n\t\t\t\tpassword = Utils.generateSecurityToken();\n\t\t\t\tuser.createIdentifier(u.getIdentifier(), password);\n\t\t\t\tif (p.getCount() > 1) {\n\t\t\t\t\tlogger.warn(\"{} user objects exist with the same email {}\", p.getCount(), user.getEmail());\n\t\t\t\t}"
            },
            {
              "step": 16,
              "variableName": "String newIdent",
              "startLine": 804,
              "startColumn": 35,
              "endLine": 804,
              "endColumn": 50,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param password a password for the user (optional)\n\t * @return true if successful\n\t */\n\tprivate boolean createIdentifier(String newIdent, String password) {\n\t\tif (StringUtils.isBlank(getId()) || StringUtils.isBlank(newIdent)) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "newIdent",
              "startLine": 809,
              "startColumn": 11,
              "endLine": 809,
              "endColumn": 19,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 18,
              "variableName": "String id",
              "startLine": 155,
              "startColumn": 26,
              "endLine": 155,
              "endColumn": 35,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 15,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 156,
              "startColumn": 3,
              "endLine": 156,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 809,
              "startColumn": 3,
              "endLine": 809,
              "endColumn": 4,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 817,
              "startColumn": 62,
              "endLine": 817,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\ts.addProperty(Config._PASSWORD, hashed);\n\t\t\tsetPassword(hashed);\n\t\t}\n\t\treturn CoreUtils.getInstance().getDao().create(getAppid(), s) != null;\n\t}\n\n\t/**"
            },
            {
              "step": 23,
              "variableName": "P so",
              "startLine": 117,
              "startColumn": 60,
              "endLine": 117,
              "endColumn": 64,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t/////////////////////////////////////////////\n\n\t@Override\n\tpublic <P extends ParaObject> String create(String appid, P so) {\n\t\tif (so == null) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "so",
              "startLine": 128,
              "startColumn": 13,
              "endLine": 128,
              "endColumn": 15,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\tso.setTimestamp(Utils.timestamp());\n\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}"
            },
            {
              "step": 25,
              "variableName": "getId",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 27,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\t////////////////////////////////////////////////////////\n\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n"
            },
            {
              "step": 26,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 27,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 28,
              "variableName": "so.getId()",
              "startLine": 128,
              "startColumn": 13,
              "endLine": 128,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\tso.setTimestamp(Utils.timestamp());\n\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}"
            },
            {
              "step": 29,
              "variableName": "String key",
              "startLine": 169,
              "startColumn": 27,
              "endLine": 169,
              "endColumn": 37,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t//\t\t\t\tROW FUNCTIONS\n\t/////////////////////////////////////////////\n\n\tprivate String createRow(String key, String appid, Map<String, AttributeValue> row) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appid) || row == null || row.isEmpty()) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 30,
              "variableName": "key",
              "startLine": 179,
              "startColumn": 90,
              "endLine": 179,
              "endColumn": 93,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t\tthrowIfNecessary(e);\n\t\t}\n\t\treturn key;"
            },
            {
              "step": 31,
              "variableName": "logger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 179,
              "startColumn": 4,
              "endLine": 179,
              "endColumn": 97,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t\tthrowIfNecessary(e);\n\t\t}\n\t\treturn key;"
            },
            {
              "step": 32,
              "variableName": "logger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 179,
              "startColumn": 4,
              "endLine": 179,
              "endColumn": 97,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t\tthrowIfNecessary(e);\n\t\t}\n\t\treturn key;"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "getIdentifier()",
              "startLine": 335,
              "startColumn": 21,
              "endLine": 335,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\n\t\tif (CoreUtils.getInstance().getDao().create(getAppid(), this) != null) {\n\t\t\tcreateIdentifier(getIdentifier(), getPassword());\n\t\t} else {\n\t\t\tlogger.warn(\"Failed to create user - dao.create() returned null.\");\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "getIdentifier()",
              "startLine": 335,
              "startColumn": 21,
              "endLine": 335,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\n\t\tif (CoreUtils.getInstance().getDao().create(getAppid(), this) != null) {\n\t\t\tcreateIdentifier(getIdentifier(), getPassword());\n\t\t} else {\n\t\t\tlogger.warn(\"Failed to create user - dao.create() returned null.\");\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "String newIdent",
              "startLine": 804,
              "startColumn": 35,
              "endLine": 804,
              "endColumn": 50,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param password a password for the user (optional)\n\t * @return true if successful\n\t */\n\tprivate boolean createIdentifier(String newIdent, String password) {\n\t\tif (StringUtils.isBlank(getId()) || StringUtils.isBlank(newIdent)) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "newIdent",
              "startLine": 809,
              "startColumn": 11,
              "endLine": 809,
              "endColumn": 19,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 18,
              "variableName": "String id",
              "startLine": 155,
              "startColumn": 26,
              "endLine": 155,
              "endColumn": 35,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 15,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 156,
              "startColumn": 3,
              "endLine": 156,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 809,
              "startColumn": 3,
              "endLine": 809,
              "endColumn": 4,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 817,
              "startColumn": 62,
              "endLine": 817,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\ts.addProperty(Config._PASSWORD, hashed);\n\t\t\tsetPassword(hashed);\n\t\t}\n\t\treturn CoreUtils.getInstance().getDao().create(getAppid(), s) != null;\n\t}\n\n\t/**"
            },
            {
              "step": 23,
              "variableName": "P so",
              "startLine": 117,
              "startColumn": 60,
              "endLine": 117,
              "endColumn": 64,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t/////////////////////////////////////////////\n\n\t@Override\n\tpublic <P extends ParaObject> String create(String appid, P so) {\n\t\tif (so == null) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "so",
              "startLine": 128,
              "startColumn": 13,
              "endLine": 128,
              "endColumn": 15,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\tso.setTimestamp(Utils.timestamp());\n\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}"
            },
            {
              "step": 25,
              "variableName": "getId",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 27,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\t////////////////////////////////////////////////////////\n\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n"
            },
            {
              "step": 26,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 27,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 28,
              "variableName": "so.getId()",
              "startLine": 128,
              "startColumn": 13,
              "endLine": 128,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\tso.setTimestamp(Utils.timestamp());\n\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}"
            },
            {
              "step": 29,
              "variableName": "String key",
              "startLine": 169,
              "startColumn": 27,
              "endLine": 169,
              "endColumn": 37,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t//\t\t\t\tROW FUNCTIONS\n\t/////////////////////////////////////////////\n\n\tprivate String createRow(String key, String appid, Map<String, AttributeValue> row) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appid) || row == null || row.isEmpty()) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 30,
              "variableName": "key",
              "startLine": 175,
              "startColumn": 25,
              "endLine": 175,
              "endColumn": 28,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t}\n\t\tString table = getTableNameForAppid(appid);\n\t\ttry {\n\t\t\tkey = getKeyForAppid(key, appid);\n\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {"
            },
            {
              "step": 31,
              "variableName": "String key",
              "startLine": 471,
              "startColumn": 38,
              "endLine": 471,
              "endColumn": 48,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoUtils.java",
              "type": "String",
              "code": "\t * @param appIdentifier appid\n\t * @return the key\n\t */\n\tpublic static String getKeyForAppid(String key, String appIdentifier) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appIdentifier)) {\n\t\t\treturn key;\n\t\t}"
            },
            {
              "step": 32,
              "variableName": "key",
              "startLine": 473,
              "startColumn": 11,
              "endLine": 473,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoUtils.java",
              "type": "String",
              "code": "\t */\n\tpublic static String getKeyForAppid(String key, String appIdentifier) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appIdentifier)) {\n\t\t\treturn key;\n\t\t}\n\t\tif (isSharedAppid(appIdentifier)) {\n\t\t\t// app is sharing a table with other apps, key is composite \"appid_key\""
            },
            {
              "step": 33,
              "variableName": "getKeyForAppid(key, appid)",
              "startLine": 175,
              "startColumn": 10,
              "endLine": 175,
              "endColumn": 36,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t}\n\t\tString table = getTableNameForAppid(appid);\n\t\ttry {\n\t\t\tkey = getKeyForAppid(key, appid);\n\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {"
            },
            {
              "step": 34,
              "variableName": "key",
              "startLine": 179,
              "startColumn": 90,
              "endLine": 179,
              "endColumn": 93,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t\tthrowIfNecessary(e);\n\t\t}\n\t\treturn key;"
            },
            {
              "step": 35,
              "variableName": "logger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 179,
              "startColumn": 4,
              "endLine": 179,
              "endColumn": 97,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t\tthrowIfNecessary(e);\n\t\t}\n\t\treturn key;"
            },
            {
              "step": 36,
              "variableName": "logger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 179,
              "startColumn": 4,
              "endLine": 179,
              "endColumn": 97,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\tsetRowKey(key, row);\n\t\t\tclient().putItem(b -> b.tableName(table).item(row));\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not write row to DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t\tthrowIfNecessary(e);\n\t\t}\n\t\treturn key;"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 8,
      "fileName": "AWSDynamoDAO.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 664,
              "startColumn": 67,
              "endLine": 664,
              "endColumn": 77,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {\n\t\t\tuser = CoreUtils.getInstance().getDao().read(u.getAppid(), s.getCreatorid());\n\t\t\tpassword = (String) s.getProperty(Config._PASSWORD);"
            },
            {
              "step": 17,
              "variableName": "String key",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "key",
              "startLine": 138,
              "startColumn": 26,
              "endLine": 138,
              "endColumn": 29,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}\n\t\tP so = fromRow(readRow(key, appid));\n\t\tlogger.debug(\"DAO.read() {}->{}\", appid, key);\n\t\treturn so != null ? so : null;\n\t}"
            },
            {
              "step": 19,
              "variableName": "String key",
              "startLine": 236,
              "startColumn": 46,
              "endLine": 236,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\treturn false;\n\t}\n\n\tprivate Map<String, AttributeValue> readRow(String key, String appid) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appid)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 20,
              "variableName": "key",
              "startLine": 248,
              "startColumn": 91,
              "endLine": 248,
              "endColumn": 94,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            },
            {
              "step": 21,
              "variableName": "logger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 248,
              "startColumn": 4,
              "endLine": 248,
              "endColumn": 98,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            },
            {
              "step": 22,
              "variableName": "logger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 248,
              "startColumn": 4,
              "endLine": 248,
              "endColumn": 98,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 137,
              "startColumn": 37,
              "endLine": 137,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}\n\t\t\t\t} else if (User.passwordMatches(u)) {\n\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t}\n\t\t\t} catch (LimitExceededException e) {"
            },
            {
              "step": 10,
              "variableName": "User u",
              "startLine": 713,
              "startColumn": 46,
              "endLine": 713,
              "endColumn": 52,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return true if password matches the one in the data store\n\t * @throws LimitExceededException if rate limit is exceeded when password doesn't match.\n\t */\n\tpublic static final boolean passwordMatches(User u) throws LimitExceededException {\n\t\tif (u == null) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 722,
              "startColumn": 70,
              "endLine": 722,
              "endColumn": 80,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}\n\t\tParaObject s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null) {\n\t\t\tif (s instanceof Sysprop) {\n\t\t\t\tString storedHash = (String) ((Sysprop) s).getProperty(Config._PASSWORD);"
            },
            {
              "step": 17,
              "variableName": "String key",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "key",
              "startLine": 138,
              "startColumn": 26,
              "endLine": 138,
              "endColumn": 29,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}\n\t\tP so = fromRow(readRow(key, appid));\n\t\tlogger.debug(\"DAO.read() {}->{}\", appid, key);\n\t\treturn so != null ? so : null;\n\t}"
            },
            {
              "step": 19,
              "variableName": "String key",
              "startLine": 236,
              "startColumn": 46,
              "endLine": 236,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\treturn false;\n\t}\n\n\tprivate Map<String, AttributeValue> readRow(String key, String appid) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appid)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 20,
              "variableName": "key",
              "startLine": 248,
              "startColumn": 91,
              "endLine": 248,
              "endColumn": 94,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            },
            {
              "step": 21,
              "variableName": "logger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 248,
              "startColumn": 4,
              "endLine": 248,
              "endColumn": 98,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            },
            {
              "step": 22,
              "variableName": "logger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 248,
              "startColumn": 4,
              "endLine": 248,
              "endColumn": 98,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 664,
              "startColumn": 67,
              "endLine": 664,
              "endColumn": 77,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {\n\t\t\tuser = CoreUtils.getInstance().getDao().read(u.getAppid(), s.getCreatorid());\n\t\t\tpassword = (String) s.getProperty(Config._PASSWORD);"
            },
            {
              "step": 19,
              "variableName": "String key",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 20,
              "variableName": "key",
              "startLine": 138,
              "startColumn": 26,
              "endLine": 138,
              "endColumn": 29,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}\n\t\tP so = fromRow(readRow(key, appid));\n\t\tlogger.debug(\"DAO.read() {}->{}\", appid, key);\n\t\treturn so != null ? so : null;\n\t}"
            },
            {
              "step": 21,
              "variableName": "String key",
              "startLine": 236,
              "startColumn": 46,
              "endLine": 236,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\treturn false;\n\t}\n\n\tprivate Map<String, AttributeValue> readRow(String key, String appid) {\n\t\tif (StringUtils.isBlank(key) || StringUtils.isBlank(appid)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 22,
              "variableName": "key",
              "startLine": 248,
              "startColumn": 91,
              "endLine": 248,
              "endColumn": 94,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            },
            {
              "step": 23,
              "variableName": "logger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 248,
              "startColumn": 4,
              "endLine": 248,
              "endColumn": 98,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            },
            {
              "step": 24,
              "variableName": "logger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e)",
              "startLine": 248,
              "startColumn": 4,
              "endLine": 248,
              "endColumn": 98,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\t\trow = res.item();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.error(\"Could not read row from DB - table={}, appid={}, key={}:\", table, appid, key, e);\n\t\t}\n\t\treturn (row == null || row.isEmpty()) ? null : row;\n\t}"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 9,
      "fileName": "SecurityUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 145,
              "startColumn": 48,
              "endLine": 145,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t+ user.getIdentifier() + \") is locked.\");\n\t\t\t}\n\t\t}\n\t\treturn SecurityUtils.checkIfActive(userAuth, user, false);\n\t}\n}\n"
            },
            {
              "step": 10,
              "variableName": "User user",
              "startLine": 361,
              "startColumn": 78,
              "endLine": 361,
              "endColumn": 87,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "User [identifier] : String",
              "code": "\t * @param throwException throw or not\n\t * @return the authentication object if {@code user.active == true}\n\t */\n\tpublic static UserAuthentication checkIfActive(UserAuthentication userAuth, User user, boolean throwException) {\n\t\tif (userAuth == null || user == null || user.getIdentifier() == null) {\n\t\t\tif (throwException) {\n\t\t\t\tthrow new BadCredentialsException(\"Bad credentials.\");"
            },
            {
              "step": 11,
              "variableName": "user",
              "startLine": 374,
              "startColumn": 81,
              "endLine": 374,
              "endColumn": 85,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\tthrow new LockedException(\"Account \" + user.getId() + \" (\" + user.getAppid() + \"/\" +\n\t\t\t\t\t\tuser.getIdentifier() + \") is locked.\");\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "user.getIdentifier()",
              "startLine": 374,
              "startColumn": 81,
              "endLine": 374,
              "endColumn": 101,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "String",
              "code": "\t\t\t\tthrow new LockedException(\"Account \" + user.getId() + \" (\" + user.getAppid() + \"/\" +\n\t\t\t\t\t\tuser.getIdentifier() + \") is locked.\");\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "logger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier())",
              "startLine": 374,
              "startColumn": 5,
              "endLine": 374,
              "endColumn": 102,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\tthrow new LockedException(\"Account \" + user.getId() + \" (\" + user.getAppid() + \"/\" +\n\t\t\t\t\t\tuser.getIdentifier() + \") is locked.\");\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "logger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier())",
              "startLine": 374,
              "startColumn": 5,
              "endLine": 374,
              "endColumn": 102,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "",
              "code": "\t\t\t\tthrow new LockedException(\"Account \" + user.getId() + \" (\" + user.getAppid() + \"/\" +\n\t\t\t\t\t\tuser.getIdentifier() + \") is locked.\");\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 10,
      "fileName": "HealthUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "rootAppCredentials",
              "startLine": 134,
              "startColumn": 8,
              "endLine": 134,
              "endColumn": 26,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "Map",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            },
            {
              "step": 1,
              "variableName": "rootAppCredentials.get(\"accessKey\")",
              "startLine": 134,
              "startColumn": 8,
              "endLine": 134,
              "endColumn": 43,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "String",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            },
            {
              "step": 2,
              "variableName": "logger.info(\"Initialized root app with access key '{}' and secret '{}', \"",
              "startLine": 132,
              "startColumn": 6,
              "endLine": 134,
              "endColumn": 91,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\ttry {\n\t\t\t\t\tconfString = loadConfigFile(confFile);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}"
            },
            {
              "step": 3,
              "variableName": "logger.info(\"Initialized root app with access key '{}' and secret '{}', \"",
              "startLine": 132,
              "startColumn": 6,
              "endLine": 134,
              "endColumn": 91,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "",
              "code": "\t\t\t\ttry {\n\t\t\t\t\tconfString = loadConfigFile(confFile);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "rootAppCredentials",
              "startLine": 134,
              "startColumn": 45,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "Map",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            },
            {
              "step": 1,
              "variableName": "rootAppCredentials.get(\"secretKey\")",
              "startLine": 134,
              "startColumn": 45,
              "endLine": 134,
              "endColumn": 80,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "String",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            },
            {
              "step": 2,
              "variableName": "logger.info(\"Initialized root app with access key '{}' and secret '{}', \"",
              "startLine": 132,
              "startColumn": 6,
              "endLine": 134,
              "endColumn": 91,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "Object[] [[]] : String",
              "code": "\t\t\t\ttry {\n\t\t\t\t\tconfString = loadConfigFile(confFile);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}"
            },
            {
              "step": 3,
              "variableName": "logger.info(\"Initialized root app with access key '{}' and secret '{}', \"",
              "startLine": 132,
              "startColumn": 6,
              "endLine": 134,
              "endColumn": 91,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "",
              "code": "\t\t\t\ttry {\n\t\t\t\t\tconfString = loadConfigFile(confFile);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 11,
      "fileName": "ParaClient.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "credentials",
              "startLine": 1831,
              "startColumn": 54,
              "endLine": 1831,
              "endColumn": 65,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t\t\tcredentials.put(Config._APPID, accessKey);\n\t\t\tcredentials.put(\"provider\", provider);\n\t\t\tcredentials.put(\"token\", providerToken);\n\t\t\tMap<String, Object> result = invokePost(JWT_PATH, credentials, Map.class);\n\t\t\tif (result != null && result.containsKey(\"user\") && result.containsKey(\"jwt\")) {\n\t\t\t\tMap<?, ?> jwtData = (Map<?, ?>) result.get(\"jwt\");\n\t\t\t\tif (rememberJWT) {"
            },
            {
              "step": 1,
              "variableName": "Object entity",
              "startLine": 418,
              "startColumn": 47,
              "endLine": 418,
              "endColumn": 60,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "HashMap",
              "code": "\t * @param returnType the type of object to return\n\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);"
            },
            {
              "step": 2,
              "variableName": "entity",
              "startLine": 419,
              "startColumn": 66,
              "endLine": 419,
              "endColumn": 72,
              "uri": "para-1.50.6/para-client/src/main/java/com/erudika/para/client/ParaClient.java",
              "type": "",
              "code": "\t * @return a POJO\n\t */\n\tpublic <T> T invokePost(String resourcePath, Object entity, Class<?> returnType) {\n\t\tlogger.debug(\"POST {}, entity: {}\", getFullPath(resourcePath), entity, returnType);\n\t\treturn invokeSignedRequest(accessKey, key(true), POST.toString(),\n\t\t\t\tgetEndpoint(), getFullPath(resourcePath), null, null, entity, returnType);\n\t}"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 12,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "getIdentifier()",
              "startLine": 314,
              "startColumn": 85,
              "endLine": 314,
              "endColumn": 100,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}\n"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "getIdentifier()",
              "startLine": 314,
              "startColumn": 85,
              "endLine": 314,
              "endColumn": 100,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 13,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[1]",
              "startLine": 111,
              "startColumn": 42,
              "endLine": 111,
              "endColumn": 50,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n\n\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();"
            },
            {
              "step": 3,
              "variableName": "StringUtils.trimToEmpty(parts[1])",
              "startLine": 111,
              "startColumn": 18,
              "endLine": 111,
              "endColumn": 51,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n\n\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();"
            },
            {
              "step": 4,
              "variableName": "name",
              "startLine": 129,
              "startColumn": 19,
              "endLine": 129,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\tuser.setActive(Boolean.parseBoolean(Para.getConfig().getSettingForApp(app, \"security.allow_unverified_emails\",\n\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);"
            },
            {
              "step": 5,
              "variableName": "String name",
              "startLine": 1075,
              "startColumn": 28,
              "endLine": 1075,
              "endColumn": 39,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setName(String name) {\n\t\tthis.name = (name == null || !name.isEmpty()) ? name : this.name;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "(name == null || !name.isEmpty()) ? name : this.name",
              "startLine": 1076,
              "startColumn": 15,
              "endLine": 1076,
              "endColumn": 67,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "... : String",
              "code": "\n\t@Override\n\tpublic final void setName(String name) {\n\t\tthis.name = (name == null || !name.isEmpty()) ? name : this.name;\n\t}\n\n\t@Override"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 1076,
              "startColumn": 3,
              "endLine": 1076,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [name] : String",
              "code": "\n\t@Override\n\tpublic final void setName(String name) {\n\t\tthis.name = (name == null || !name.isEmpty()) ? name : this.name;\n\t}\n\n\t@Override"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 129,
              "startColumn": 6,
              "endLine": 129,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [name] : String",
              "code": "\t\t\t\t\tuser.setActive(Boolean.parseBoolean(Para.getConfig().getSettingForApp(app, \"security.allow_unverified_emails\",\n\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [name] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [name] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "getName()",
              "startLine": 320,
              "startColumn": 70,
              "endLine": 320,
              "endColumn": 79,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [name] : String",
              "code": "\n\t\t// admin detected\n\t\tif (!Para.getConfig().adminIdentifier().isEmpty() && Para.getConfig().adminIdentifier().equals(getIdentifier())) {\n\t\t\tlogger.info(\"Creating new user '{}' ({}) with admin privileges.\", getName(), getIdentifier());\n\t\t\tsetGroups(User.Groups.ADMINS.toString());\n\t\t}\n"
            },
            {
              "step": 12,
              "variableName": "getName",
              "startLine": 1069,
              "startColumn": 22,
              "endLine": 1069,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [name] : String",
              "code": "\t}\n\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}"
            },
            {
              "step": 13,
              "variableName": "name",
              "startLine": 1070,
              "startColumn": 43,
              "endLine": 1070,
              "endColumn": 47,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [name] : String",
              "code": "\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}\n"
            },
            {
              "step": 14,
              "variableName": "name",
              "startLine": 1070,
              "startColumn": 43,
              "endLine": 1070,
              "endColumn": 47,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "String name",
              "startLine": 163,
              "startColumn": 25,
              "endLine": 163,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/utils/CoreUtils.java",
              "type": "String",
              "code": "\t\t}\n\n\t\t@Override\n\t\tpublic String getName(String name, String id) {\n\t\t\treturn (name == null) ? \"ParaObject \".concat((id == null) ?\n\t\t\t\t\tLong.toString(System.currentTimeMillis()) : id) : name;\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "(name == null) ? \"ParaObject \".concat((id == null",
              "startLine": 164,
              "startColumn": 11,
              "endLine": 165,
              "endColumn": 60,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/utils/CoreUtils.java",
              "type": "... : String",
              "code": "\n\t\t@Override\n\t\tpublic String getName(String name, String id) {\n\t\t\treturn (name == null) ? \"ParaObject \".concat((id == null) ?\n\t\t\t\t\tLong.toString(System.currentTimeMillis()) : id) : name;\n\t\t}\n"
            },
            {
              "step": 17,
              "variableName": "CoreUtils.getInstance().getName(name, id)",
              "startLine": 1070,
              "startColumn": 11,
              "endLine": 1070,
              "endColumn": 52,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}\n"
            },
            {
              "step": 18,
              "variableName": "CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\")",
              "startLine": 1070,
              "startColumn": 11,
              "endLine": 1070,
              "endColumn": 104,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "CoreUtils.getInstance",
              "startLine": 1070,
              "startColumn": 11,
              "endLine": 1071,
              "endColumn": 32,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}\n"
            },
            {
              "step": 20,
              "variableName": "CoreUtils.getInstance().getN",
              "startLine": 1070,
              "startColumn": 11,
              "endLine": 1071,
              "endColumn": 39,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getName() {\n\t\t\treturn CoreUtils.getInstance().getName(name, id).replaceAll(\"[\\\\p{S}\\\\p{P}\\\\p{C}&&[^'\\\\-,\\\\.]]\", \"\").\n\t\t\t\t\treplaceAll(\"\\\\p{Z}+\", \" \").trim();\n\t}\n"
            },
            {
              "step": 21,
              "variableName": "getName()",
              "startLine": 320,
              "startColumn": 70,
              "endLine": 320,
              "endColumn": 79,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\n\t\t// admin detected\n\t\tif (!Para.getConfig().adminIdentifier().isEmpty() && Para.getConfig().adminIdentifier().equals(getIdentifier())) {\n\t\t\tlogger.info(\"Creating new user '{}' ({}) with admin privileges.\", getName(), getIdentifier());\n\t\t\tsetGroups(User.Groups.ADMINS.toString());\n\t\t}\n"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 14,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "getIdentifier()",
              "startLine": 320,
              "startColumn": 81,
              "endLine": 320,
              "endColumn": 96,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\n\t\t// admin detected\n\t\tif (!Para.getConfig().adminIdentifier().isEmpty() && Para.getConfig().adminIdentifier().equals(getIdentifier())) {\n\t\t\tlogger.info(\"Creating new user '{}' ({}) with admin privileges.\", getName(), getIdentifier());\n\t\t\tsetGroups(User.Groups.ADMINS.toString());\n\t\t}\n"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "getIdentifier()",
              "startLine": 320,
              "startColumn": 81,
              "endLine": 320,
              "endColumn": 96,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\n\t\t// admin detected\n\t\tif (!Para.getConfig().adminIdentifier().isEmpty() && Para.getConfig().adminIdentifier().equals(getIdentifier())) {\n\t\t\tlogger.info(\"Creating new user '{}' ({}) with admin privileges.\", getName(), getIdentifier());\n\t\t\tsetGroups(User.Groups.ADMINS.toString());\n\t\t}\n"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 15,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 695,
              "startColumn": 43,
              "endLine": 695,
              "endColumn": 53,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);\n\t\t\t\tCoreUtils.getInstance().getDao().update(user.getAppid(), user);"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 695,
              "startColumn": 43,
              "endLine": 695,
              "endColumn": 53,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t}\n\t\t\tif (!identifier.equals(user.getIdentifier())) {\n\t\t\t\tlogger.info(\"Identifier changed for user '{}', from {} to {}.\",\n\t\t\t\t\t\tuser.getId(), user.getIdentifier(), identifier);\n\t\t\t\t// the main identifier was changed - update\n\t\t\t\tuser.setIdentifier(identifier);\n\t\t\t\tCoreUtils.getInstance().getDao().update(user.getAppid(), user);"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 16,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 702,
              "startColumn": 74,
              "endLine": 702,
              "endColumn": 84,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            }
          ]
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 702,
              "startColumn": 74,
              "endLine": 702,
              "endColumn": 84,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t}\n\t\t\treturn user;\n\t\t}\n\t\tlogger.debug(\"User not found for identifier {}/{}, {}.\", u.getAppid(), identifier, u.getId());\n\t\treturn null;\n\t}\n"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 17,
      "fileName": "User.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 137,
              "startColumn": 37,
              "endLine": 137,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}\n\t\t\t\t} else if (User.passwordMatches(u)) {\n\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t}\n\t\t\t} catch (LimitExceededException e) {"
            },
            {
              "step": 10,
              "variableName": "User u",
              "startLine": 713,
              "startColumn": 46,
              "endLine": 713,
              "endColumn": 52,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return true if password matches the one in the data store\n\t * @throws LimitExceededException if rate limit is exceeded when password doesn't match.\n\t */\n\tpublic static final boolean passwordMatches(User u) throws LimitExceededException {\n\t\tif (u == null) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 735,
              "startColumn": 34,
              "endLine": 735,
              "endColumn": 44,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "",
              "code": "\t\t\t\t\tif (((Sysprop) s).hasProperty(\"lockedUntil\") &&\n\t\t\t\t\t\t\t(long) ((Sysprop) s).getProperty(\"lockedUntil\") > System.currentTimeMillis()) {\n\t\t\t\t\t\tlogger.warn(\"Too many login attempts for user {} ({}/{}), account locked.\",\n\t\t\t\t\t\t\t\tu.getId(), u.getAppid(), identifier);\n\t\t\t\t\t\tthrow new LimitExceededException(\"Too many login attempts!\");\n\t\t\t\t\t}\n\t\t\t\t\t((Sysprop) s).setVotes(((Sysprop) s).getVotes() + 1);"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 18,
      "fileName": "MockDAO.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 682,
              "startColumn": 27,
              "endLine": 682,
              "endColumn": 28,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\tuser = users.get(0);\n\t\t\t\t// keep this random! dangerous to set it to user.getPassword()\n\t\t\t\tpassword = Utils.generateSecurityToken();\n\t\t\t\tuser.createIdentifier(u.getIdentifier(), password);\n\t\t\t\tif (p.getCount() > 1) {\n\t\t\t\t\tlogger.warn(\"{} user objects exist with the same email {}\", p.getCount(), user.getEmail());\n\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 682,
              "startColumn": 27,
              "endLine": 682,
              "endColumn": 44,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t\tuser = users.get(0);\n\t\t\t\t// keep this random! dangerous to set it to user.getPassword()\n\t\t\t\tpassword = Utils.generateSecurityToken();\n\t\t\t\tuser.createIdentifier(u.getIdentifier(), password);\n\t\t\t\tif (p.getCount() > 1) {\n\t\t\t\t\tlogger.warn(\"{} user objects exist with the same email {}\", p.getCount(), user.getEmail());\n\t\t\t\t}"
            },
            {
              "step": 16,
              "variableName": "String newIdent",
              "startLine": 804,
              "startColumn": 35,
              "endLine": 804,
              "endColumn": 50,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param password a password for the user (optional)\n\t * @return true if successful\n\t */\n\tprivate boolean createIdentifier(String newIdent, String password) {\n\t\tif (StringUtils.isBlank(getId()) || StringUtils.isBlank(newIdent)) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "newIdent",
              "startLine": 809,
              "startColumn": 11,
              "endLine": 809,
              "endColumn": 19,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 18,
              "variableName": "String id",
              "startLine": 155,
              "startColumn": 26,
              "endLine": 155,
              "endColumn": 35,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 15,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 156,
              "startColumn": 3,
              "endLine": 156,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 809,
              "startColumn": 3,
              "endLine": 809,
              "endColumn": 4,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 817,
              "startColumn": 62,
              "endLine": 817,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\ts.addProperty(Config._PASSWORD, hashed);\n\t\t\tsetPassword(hashed);\n\t\t}\n\t\treturn CoreUtils.getInstance().getDao().create(getAppid(), s) != null;\n\t}\n\n\t/**"
            },
            {
              "step": 23,
              "variableName": "P so",
              "startLine": 54,
              "startColumn": 60,
              "endLine": 54,
              "endColumn": 64,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> String create(String appid, P so) {\n\t\tif (so == null) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "so",
              "startLine": 59,
              "startColumn": 35,
              "endLine": 59,
              "endColumn": 37,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tcreateObject(appid, so);\n\t\tlogger.debug(\"DAO.create() {}\", so.getId());\n\t\treturn so.getId();\n\t}\n"
            },
            {
              "step": 25,
              "variableName": "getId",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 27,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\t////////////////////////////////////////////////////////\n\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n"
            },
            {
              "step": 26,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 27,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 28,
              "variableName": "so.getId()",
              "startLine": 59,
              "startColumn": 35,
              "endLine": 59,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tcreateObject(appid, so);\n\t\tlogger.debug(\"DAO.create() {}\", so.getId());\n\t\treturn so.getId();\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "getIdentifier()",
              "startLine": 335,
              "startColumn": 21,
              "endLine": 335,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\n\t\tif (CoreUtils.getInstance().getDao().create(getAppid(), this) != null) {\n\t\t\tcreateIdentifier(getIdentifier(), getPassword());\n\t\t} else {\n\t\t\tlogger.warn(\"Failed to create user - dao.create() returned null.\");\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "getIdentifier()",
              "startLine": 335,
              "startColumn": 21,
              "endLine": 335,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\n\t\tif (CoreUtils.getInstance().getDao().create(getAppid(), this) != null) {\n\t\t\tcreateIdentifier(getIdentifier(), getPassword());\n\t\t} else {\n\t\t\tlogger.warn(\"Failed to create user - dao.create() returned null.\");\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "String newIdent",
              "startLine": 804,
              "startColumn": 35,
              "endLine": 804,
              "endColumn": 50,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param password a password for the user (optional)\n\t * @return true if successful\n\t */\n\tprivate boolean createIdentifier(String newIdent, String password) {\n\t\tif (StringUtils.isBlank(getId()) || StringUtils.isBlank(newIdent)) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "newIdent",
              "startLine": 809,
              "startColumn": 11,
              "endLine": 809,
              "endColumn": 19,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 18,
              "variableName": "String id",
              "startLine": 155,
              "startColumn": 26,
              "endLine": 155,
              "endColumn": 35,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 15,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 156,
              "startColumn": 3,
              "endLine": 156,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 809,
              "startColumn": 3,
              "endLine": 809,
              "endColumn": 4,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 817,
              "startColumn": 62,
              "endLine": 817,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\ts.addProperty(Config._PASSWORD, hashed);\n\t\t\tsetPassword(hashed);\n\t\t}\n\t\treturn CoreUtils.getInstance().getDao().create(getAppid(), s) != null;\n\t}\n\n\t/**"
            },
            {
              "step": 23,
              "variableName": "P so",
              "startLine": 54,
              "startColumn": 60,
              "endLine": 54,
              "endColumn": 64,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> String create(String appid, P so) {\n\t\tif (so == null) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "so",
              "startLine": 59,
              "startColumn": 35,
              "endLine": 59,
              "endColumn": 37,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tcreateObject(appid, so);\n\t\tlogger.debug(\"DAO.create() {}\", so.getId());\n\t\treturn so.getId();\n\t}\n"
            },
            {
              "step": 25,
              "variableName": "getId",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 27,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\t////////////////////////////////////////////////////////\n\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n"
            },
            {
              "step": 26,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 27,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 28,
              "variableName": "so.getId()",
              "startLine": 59,
              "startColumn": 35,
              "endLine": 59,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tcreateObject(appid, so);\n\t\tlogger.debug(\"DAO.create() {}\", so.getId());\n\t\treturn so.getId();\n\t}\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 19,
      "fileName": "MockDAO.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 664,
              "startColumn": 67,
              "endLine": 664,
              "endColumn": 77,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {\n\t\t\tuser = CoreUtils.getInstance().getDao().read(u.getAppid(), s.getCreatorid());\n\t\t\tpassword = (String) s.getProperty(Config._PASSWORD);"
            },
            {
              "step": 17,
              "variableName": "String key",
              "startLine": 65,
              "startColumn": 53,
              "endLine": 65,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "String",
              "code": "\n\t@Override\n\t@SuppressWarnings(\"unchecked\")\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (key == null || StringUtils.isBlank(appid)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "key",
              "startLine": 70,
              "startColumn": 39,
              "endLine": 70,
              "endColumn": 42,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tP so = (P) getMap(appid).get(key);\n\t\tlogger.debug(\"DAO.read() {} -> {}\", key, so);\n\t\treturn so;\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 137,
              "startColumn": 37,
              "endLine": 137,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}\n\t\t\t\t} else if (User.passwordMatches(u)) {\n\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t}\n\t\t\t} catch (LimitExceededException e) {"
            },
            {
              "step": 10,
              "variableName": "User u",
              "startLine": 713,
              "startColumn": 46,
              "endLine": 713,
              "endColumn": 52,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return true if password matches the one in the data store\n\t * @throws LimitExceededException if rate limit is exceeded when password doesn't match.\n\t */\n\tpublic static final boolean passwordMatches(User u) throws LimitExceededException {\n\t\tif (u == null) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 722,
              "startColumn": 70,
              "endLine": 722,
              "endColumn": 80,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}\n\t\tParaObject s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null) {\n\t\t\tif (s instanceof Sysprop) {\n\t\t\t\tString storedHash = (String) ((Sysprop) s).getProperty(Config._PASSWORD);"
            },
            {
              "step": 17,
              "variableName": "String key",
              "startLine": 65,
              "startColumn": 53,
              "endLine": 65,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "String",
              "code": "\n\t@Override\n\t@SuppressWarnings(\"unchecked\")\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (key == null || StringUtils.isBlank(appid)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "key",
              "startLine": 70,
              "startColumn": 39,
              "endLine": 70,
              "endColumn": 42,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tP so = (P) getMap(appid).get(key);\n\t\tlogger.debug(\"DAO.read() {} -> {}\", key, so);\n\t\treturn so;\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 664,
              "startColumn": 67,
              "endLine": 664,
              "endColumn": 77,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {\n\t\t\tuser = CoreUtils.getInstance().getDao().read(u.getAppid(), s.getCreatorid());\n\t\t\tpassword = (String) s.getProperty(Config._PASSWORD);"
            },
            {
              "step": 19,
              "variableName": "String key",
              "startLine": 65,
              "startColumn": 53,
              "endLine": 65,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "String",
              "code": "\n\t@Override\n\t@SuppressWarnings(\"unchecked\")\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (key == null || StringUtils.isBlank(appid)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 20,
              "variableName": "key",
              "startLine": 70,
              "startColumn": 39,
              "endLine": 70,
              "endColumn": 42,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/persistence/MockDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tP so = (P) getMap(appid).get(key);\n\t\tlogger.debug(\"DAO.read() {} -> {}\", key, so);\n\t\treturn so;\n\t}\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 20,
      "fileName": "AWSDynamoDAO.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 682,
              "startColumn": 27,
              "endLine": 682,
              "endColumn": 28,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\tuser = users.get(0);\n\t\t\t\t// keep this random! dangerous to set it to user.getPassword()\n\t\t\t\tpassword = Utils.generateSecurityToken();\n\t\t\t\tuser.createIdentifier(u.getIdentifier(), password);\n\t\t\t\tif (p.getCount() > 1) {\n\t\t\t\t\tlogger.warn(\"{} user objects exist with the same email {}\", p.getCount(), user.getEmail());\n\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 682,
              "startColumn": 27,
              "endLine": 682,
              "endColumn": 44,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\t\tuser = users.get(0);\n\t\t\t\t// keep this random! dangerous to set it to user.getPassword()\n\t\t\t\tpassword = Utils.generateSecurityToken();\n\t\t\t\tuser.createIdentifier(u.getIdentifier(), password);\n\t\t\t\tif (p.getCount() > 1) {\n\t\t\t\t\tlogger.warn(\"{} user objects exist with the same email {}\", p.getCount(), user.getEmail());\n\t\t\t\t}"
            },
            {
              "step": 16,
              "variableName": "String newIdent",
              "startLine": 804,
              "startColumn": 35,
              "endLine": 804,
              "endColumn": 50,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param password a password for the user (optional)\n\t * @return true if successful\n\t */\n\tprivate boolean createIdentifier(String newIdent, String password) {\n\t\tif (StringUtils.isBlank(getId()) || StringUtils.isBlank(newIdent)) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "newIdent",
              "startLine": 809,
              "startColumn": 11,
              "endLine": 809,
              "endColumn": 19,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 18,
              "variableName": "String id",
              "startLine": 155,
              "startColumn": 26,
              "endLine": 155,
              "endColumn": 35,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 15,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 156,
              "startColumn": 3,
              "endLine": 156,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 809,
              "startColumn": 3,
              "endLine": 809,
              "endColumn": 4,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 817,
              "startColumn": 62,
              "endLine": 817,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\ts.addProperty(Config._PASSWORD, hashed);\n\t\t\tsetPassword(hashed);\n\t\t}\n\t\treturn CoreUtils.getInstance().getDao().create(getAppid(), s) != null;\n\t}\n\n\t/**"
            },
            {
              "step": 23,
              "variableName": "P so",
              "startLine": 117,
              "startColumn": 60,
              "endLine": 117,
              "endColumn": 64,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t/////////////////////////////////////////////\n\n\t@Override\n\tpublic <P extends ParaObject> String create(String appid, P so) {\n\t\tif (so == null) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "so",
              "startLine": 129,
              "startColumn": 46,
              "endLine": 129,
              "endColumn": 48,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}\n"
            },
            {
              "step": 25,
              "variableName": "getId",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 27,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\t////////////////////////////////////////////////////////\n\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n"
            },
            {
              "step": 26,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 27,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 28,
              "variableName": "so.getId()",
              "startLine": 129,
              "startColumn": 46,
              "endLine": 129,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "getIdentifier()",
              "startLine": 335,
              "startColumn": 21,
              "endLine": 335,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\n\t\tif (CoreUtils.getInstance().getDao().create(getAppid(), this) != null) {\n\t\t\tcreateIdentifier(getIdentifier(), getPassword());\n\t\t} else {\n\t\t\tlogger.warn(\"Failed to create user - dao.create() returned null.\");\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "getIdentifier()",
              "startLine": 335,
              "startColumn": 21,
              "endLine": 335,
              "endColumn": 36,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\n\t\tif (CoreUtils.getInstance().getDao().create(getAppid(), this) != null) {\n\t\t\tcreateIdentifier(getIdentifier(), getPassword());\n\t\t} else {\n\t\t\tlogger.warn(\"Failed to create user - dao.create() returned null.\");\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "String newIdent",
              "startLine": 804,
              "startColumn": 35,
              "endLine": 804,
              "endColumn": 50,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param password a password for the user (optional)\n\t * @return true if successful\n\t */\n\tprivate boolean createIdentifier(String newIdent, String password) {\n\t\tif (StringUtils.isBlank(getId()) || StringUtils.isBlank(newIdent)) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "newIdent",
              "startLine": 809,
              "startColumn": 11,
              "endLine": 809,
              "endColumn": 19,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 18,
              "variableName": "String id",
              "startLine": 155,
              "startColumn": 26,
              "endLine": 155,
              "endColumn": 35,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n"
            },
            {
              "step": 19,
              "variableName": "id",
              "startLine": 156,
              "startColumn": 13,
              "endLine": 156,
              "endColumn": 15,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 20,
              "variableName": "this",
              "startLine": 156,
              "startColumn": 3,
              "endLine": 156,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override"
            },
            {
              "step": 21,
              "variableName": "s",
              "startLine": 809,
              "startColumn": 3,
              "endLine": 809,
              "endColumn": 4,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tSysprop s = new Sysprop();\n\t\ts.setId(newIdent);\n\t\ts.setName(Config._IDENTIFIER);\n\t\ts.setCreatorid(getId());\n\t\tif (!StringUtils.isBlank(password)) {"
            },
            {
              "step": 22,
              "variableName": "s",
              "startLine": 817,
              "startColumn": 62,
              "endLine": 817,
              "endColumn": 63,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t\ts.addProperty(Config._PASSWORD, hashed);\n\t\t\tsetPassword(hashed);\n\t\t}\n\t\treturn CoreUtils.getInstance().getDao().create(getAppid(), s) != null;\n\t}\n\n\t/**"
            },
            {
              "step": 23,
              "variableName": "P so",
              "startLine": 117,
              "startColumn": 60,
              "endLine": 117,
              "endColumn": 64,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t/////////////////////////////////////////////\n\n\t@Override\n\tpublic <P extends ParaObject> String create(String appid, P so) {\n\t\tif (so == null) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 24,
              "variableName": "so",
              "startLine": 129,
              "startColumn": 46,
              "endLine": 129,
              "endColumn": 48,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "Sysprop [id] : String",
              "code": "\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}\n"
            },
            {
              "step": 25,
              "variableName": "getId",
              "startLine": 150,
              "startColumn": 22,
              "endLine": 150,
              "endColumn": 27,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\t////////////////////////////////////////////////////////\n\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n"
            },
            {
              "step": 26,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "Sysprop [id] : String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 27,
              "variableName": "id",
              "startLine": 151,
              "startColumn": 10,
              "endLine": 151,
              "endColumn": 12,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/Sysprop.java",
              "type": "String",
              "code": "\n\t@Override\n\tpublic final String getId() {\n\t\treturn id;\n\t}\n\n\t@Override"
            },
            {
              "step": 28,
              "variableName": "so.getId()",
              "startLine": 129,
              "startColumn": 46,
              "endLine": 129,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t}\n\t\tso.setAppid(appid);\n\t\tcreateRow(so.getId(), appid, toRow(so, null));\n\t\tlogger.debug(\"DAO.create() {}->{}\", appid, so.getId());\n\t\treturn so.getId();\n\t}\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 21,
      "fileName": "AWSDynamoDAO.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 122,
              "startColumn": 38,
              "endLine": 122,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:\n\t\t\t// do not overwrite 'u' here - overwrites the password hash!\n\t\t\tuser = User.readUserForIdentifier(u);\n\t\t\ttry {\n\t\t\t\tif (user == null) {\n\t\t\t\t\tuser = new User();"
            },
            {
              "step": 10,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 664,
              "startColumn": 67,
              "endLine": 664,
              "endColumn": 77,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {\n\t\t\tuser = CoreUtils.getInstance().getDao().read(u.getAppid(), s.getCreatorid());\n\t\t\tpassword = (String) s.getProperty(Config._PASSWORD);"
            },
            {
              "step": 17,
              "variableName": "String key",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "key",
              "startLine": 139,
              "startColumn": 44,
              "endLine": 139,
              "endColumn": 47,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tP so = fromRow(readRow(key, appid));\n\t\tlogger.debug(\"DAO.read() {}->{}\", appid, key);\n\t\treturn so != null ? so : null;\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 117,
              "startColumn": 20,
              "endLine": 117,
              "endColumn": 25,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "u",
              "startLine": 117,
              "startColumn": 4,
              "endLine": 117,
              "endColumn": 5,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tString appid = (app == null) ? null : app.getAppIdentifier();\n\t\t\tUser u = new User();\n\t\t\tu.setAppid(appid);\n\t\t\tu.setIdentifier(email);\n\t\t\tu.setPassword(pass);\n\t\t\tu.setEmail(email);\n\t\t\t// NOTE TO SELF:"
            },
            {
              "step": 9,
              "variableName": "u",
              "startLine": 137,
              "startColumn": 37,
              "endLine": 137,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}\n\t\t\t\t} else if (User.passwordMatches(u)) {\n\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t}\n\t\t\t} catch (LimitExceededException e) {"
            },
            {
              "step": 10,
              "variableName": "User u",
              "startLine": 713,
              "startColumn": 46,
              "endLine": 713,
              "endColumn": 52,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return true if password matches the one in the data store\n\t * @throws LimitExceededException if rate limit is exceeded when password doesn't match.\n\t */\n\tpublic static final boolean passwordMatches(User u) throws LimitExceededException {\n\t\tif (u == null) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 11,
              "variableName": "u",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "u.getIdentifier()",
              "startLine": 718,
              "startColumn": 23,
              "endLine": 718,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t\treturn false;\n\t\t}\n\t\tString password = u.getPassword();\n\t\tString identifier = u.getIdentifier();\n\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 722,
              "startColumn": 70,
              "endLine": 722,
              "endColumn": 80,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tif (StringUtils.isBlank(password) || StringUtils.isBlank(identifier) || password.length() > MAX_PASSWORD_LENGTH) {\n\t\t\treturn false;\n\t\t}\n\t\tParaObject s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null) {\n\t\t\tif (s instanceof Sysprop) {\n\t\t\t\tString storedHash = (String) ((Sysprop) s).getProperty(Config._PASSWORD);"
            },
            {
              "step": 17,
              "variableName": "String key",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 18,
              "variableName": "key",
              "startLine": 139,
              "startColumn": 44,
              "endLine": 139,
              "endColumn": 47,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tP so = fromRow(readRow(key, appid));\n\t\tlogger.debug(\"DAO.read() {}->{}\", appid, key);\n\t\treturn so != null ? so : null;\n\t}\n"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 133,
              "startColumn": 10,
              "endLine": 133,
              "endColumn": 14,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {\n\t\t\t\t\t\t// allow temporary first-time login without verifying email address\n\t\t\t\t\t\tuserAuth = new UserAuthentication(new AuthenticatedUserDetails(user));\n\t\t\t\t\t}"
            },
            {
              "step": 10,
              "variableName": "create",
              "startLine": 304,
              "startColumn": 16,
              "endLine": 304,
              "endColumn": 22,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t}\n\n\t@Override\n\tpublic String create() {\n\t\tif (StringUtils.isBlank(getIdentifier())) {\n\t\t\tlogger.warn(\"Failed to create user - identifier not set.\");\n\t\t\treturn null;"
            },
            {
              "step": 11,
              "variableName": "this",
              "startLine": 313,
              "startColumn": 29,
              "endLine": 313,
              "endColumn": 33,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t\tlogger.warn(\"Failed to create user - password too short.\");\n\t\t\treturn null;\n\t\t}\n\t\tif (readUserForIdentifier(this) != null) {\n\t\t\tlogger.warn(\"Failed to create user - user with identifier '{}' already exists.\", getIdentifier());\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "final User u",
              "startLine": 656,
              "startColumn": 49,
              "endLine": 656,
              "endColumn": 61,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param u a user having a valid identifier set.\n\t * @return a user or null if no user is found for this identifier\n\t */\n\tpublic static final User readUserForIdentifier(final User u) {\n\t\tif (u == null || StringUtils.isBlank(u.getIdentifier())) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 13,
              "variableName": "u",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 24,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 14,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 15,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 16,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 17,
              "variableName": "u.getIdentifier()",
              "startLine": 662,
              "startColumn": 23,
              "endLine": 662,
              "endColumn": 40,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\t}\n\t\tUser user = null;\n\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {"
            },
            {
              "step": 18,
              "variableName": "identifier",
              "startLine": 664,
              "startColumn": 67,
              "endLine": 664,
              "endColumn": 77,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t\tString password = null;\n\t\tString identifier = u.getIdentifier();\n\t\t// Try to read the identifier object first, then read the user object linked to it.\n\t\tSysprop s = CoreUtils.getInstance().getDao().read(u.getAppid(), identifier);\n\t\tif (s != null && s.getCreatorid() != null) {\n\t\t\tuser = CoreUtils.getInstance().getDao().read(u.getAppid(), s.getCreatorid());\n\t\t\tpassword = (String) s.getProperty(Config._PASSWORD);"
            },
            {
              "step": 19,
              "variableName": "String key",
              "startLine": 134,
              "startColumn": 53,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "String",
              "code": "\t}\n\n\t@Override\n\tpublic <P extends ParaObject> P read(String appid, String key) {\n\t\tif (StringUtils.isBlank(key)) {\n\t\t\treturn null;\n\t\t}"
            },
            {
              "step": 20,
              "variableName": "key",
              "startLine": 139,
              "startColumn": 44,
              "endLine": 139,
              "endColumn": 47,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/persistence/AWSDynamoDAO.java",
              "type": "",
              "code": "\t\t\treturn null;\n\t\t}\n\t\tP so = fromRow(readRow(key, appid));\n\t\tlogger.debug(\"DAO.read() {}->{}\", appid, key);\n\t\treturn so != null ? so : null;\n\t}\n"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 22,
      "fileName": "OAuth1HmacSigner.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "oauthToken",
              "startLine": 219,
              "startColumn": 42,
              "endLine": 219,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 1,
              "variableName": "new String[]{oauthToken}",
              "startLine": 219,
              "startColumn": 29,
              "endLine": 219,
              "endColumn": 53,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 2,
              "variableName": "new String[]{oauthToken}",
              "startLine": 219,
              "startColumn": 29,
              "endLine": 219,
              "endColumn": 53,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 3,
              "variableName": "pMap",
              "startLine": 219,
              "startColumn": 5,
              "endLine": 219,
              "endColumn": 9,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 4,
              "variableName": "paramMap",
              "startLine": 78,
              "startColumn": 27,
              "endLine": 78,
              "endColumn": 35,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tMac mac = Mac.getInstance(\"HmacSHA1\");\n\t\t\t\tmac.init(key);\n\n\t\t\t\taddRequiredParameters(paramMap, apiKey, oauthToken);\n\n\t\t\t\tString sbs = httpMethod.toUpperCase() + \"&\" + percentEncode(normalizeRequestUrl(url))\n\t\t\t\t\t\t+ \"&\" + percentEncode(normalizeRequestParameters(paramMap));"
            },
            {
              "step": 5,
              "variableName": "paramMap",
              "startLine": 92,
              "startColumn": 19,
              "endLine": 92,
              "endColumn": 27,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tsb.append(\"OAuth \");\n\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}"
            },
            {
              "step": 6,
              "variableName": "paramMap.get(\"realm\")",
              "startLine": 92,
              "startColumn": 19,
              "endLine": 92,
              "endColumn": 40,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\t\tsb.append(\"OAuth \");\n\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}"
            },
            {
              "step": 7,
              "variableName": "paramMap.get(\"realm\")[0]",
              "startLine": 92,
              "startColumn": 19,
              "endLine": 92,
              "endColumn": 43,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\tsb.append(\"OAuth \");\n\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "val",
              "startLine": 93,
              "startColumn": 34,
              "endLine": 93,
              "endColumn": 37,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 9,
              "variableName": "\"realm=\\\"\".concat(val)",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 10,
              "variableName": "\"realm=\\\"\".concat(val).concat(\"\\\"\")",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 51,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 11,
              "variableName": "sb",
              "startLine": 93,
              "startColumn": 6,
              "endLine": 93,
              "endColumn": 8,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 12,
              "variableName": "sb",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 13,
              "variableName": "sb.toString()",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 34,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 14,
              "variableName": "header",
              "startLine": 114,
              "startColumn": 46,
              "endLine": 114,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}\n\t\t} catch (Exception e) {"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "oauthToken",
              "startLine": 219,
              "startColumn": 42,
              "endLine": 219,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 1,
              "variableName": "new String[]{oauthToken}",
              "startLine": 219,
              "startColumn": 29,
              "endLine": 219,
              "endColumn": 53,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 2,
              "variableName": "new String[]{oauthToken}",
              "startLine": 219,
              "startColumn": 29,
              "endLine": 219,
              "endColumn": 53,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 3,
              "variableName": "pMap",
              "startLine": 219,
              "startColumn": 5,
              "endLine": 219,
              "endColumn": 9,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {\n\t\tif (pMap != null) {\n\t\t\tif (oauthToken != null) {\n\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});"
            },
            {
              "step": 4,
              "variableName": "paramMap",
              "startLine": 78,
              "startColumn": 27,
              "endLine": 78,
              "endColumn": 35,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tMac mac = Mac.getInstance(\"HmacSHA1\");\n\t\t\t\tmac.init(key);\n\n\t\t\t\taddRequiredParameters(paramMap, apiKey, oauthToken);\n\n\t\t\t\tString sbs = httpMethod.toUpperCase() + \"&\" + percentEncode(normalizeRequestUrl(url))\n\t\t\t\t\t\t+ \"&\" + percentEncode(normalizeRequestParameters(paramMap));"
            },
            {
              "step": 5,
              "variableName": "paramMap",
              "startLine": 97,
              "startColumn": 69,
              "endLine": 97,
              "endColumn": 77,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n\n\t\t\t\tMap<String, SortedSet<String>> oauthParams = getOAuthParameters(paramMap);\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tset.add(percentEncode(sig));\n\t\t\t\toauthParams.put(\"oauth_signature\", set);"
            },
            {
              "step": 6,
              "variableName": "Map<String, String[]> params",
              "startLine": 197,
              "startColumn": 67,
              "endLine": 197,
              "endColumn": 95,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\treturn \"\";\n\t}\n\n\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();"
            },
            {
              "step": 7,
              "variableName": "params",
              "startLine": 199,
              "startColumn": 40,
              "endLine": 199,
              "endColumn": 46,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\n\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();"
            },
            {
              "step": 8,
              "variableName": "params.entrySet()",
              "startLine": 199,
              "startColumn": 40,
              "endLine": 199,
              "endColumn": 57,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "Set [<element>, <map.value>, []] : String",
              "code": "\n\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();"
            },
            {
              "step": 9,
              "variableName": "param",
              "startLine": 200,
              "startColumn": 17,
              "endLine": 200,
              "endColumn": 22,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "Entry [<map.value>, []] : String",
              "code": "\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {"
            },
            {
              "step": 10,
              "variableName": "param",
              "startLine": 203,
              "startColumn": 23,
              "endLine": 203,
              "endColumn": 28,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "Entry [<map.value>, []] : String",
              "code": "\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}"
            },
            {
              "step": 11,
              "variableName": "param.getValue()",
              "startLine": 203,
              "startColumn": 23,
              "endLine": 203,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "val",
              "startLine": 204,
              "startColumn": 10,
              "endLine": 204,
              "endColumn": 13,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}\n\t\t\t\t}"
            },
            {
              "step": 13,
              "variableName": "val",
              "startLine": 205,
              "startColumn": 15,
              "endLine": 205,
              "endColumn": 18,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {"
            },
            {
              "step": 14,
              "variableName": "set",
              "startLine": 205,
              "startColumn": 7,
              "endLine": 205,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {"
            },
            {
              "step": 15,
              "variableName": "set",
              "startLine": 209,
              "startColumn": 27,
              "endLine": 209,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {\n\t\t\t\t\toauthParams.put(key, set);\n\t\t\t\t}\n\t\t\t}\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "oauthParams",
              "startLine": 209,
              "startColumn": 6,
              "endLine": 209,
              "endColumn": 17,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {\n\t\t\t\t\toauthParams.put(key, set);\n\t\t\t\t}\n\t\t\t}\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "oauthParams",
              "startLine": 213,
              "startColumn": 10,
              "endLine": 213,
              "endColumn": 21,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oauthParams;\n\t}\n\n\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {"
            },
            {
              "step": 18,
              "variableName": "getOAuthParameters(paramMap)",
              "startLine": 97,
              "startColumn": 50,
              "endLine": 97,
              "endColumn": 78,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n\n\t\t\t\tMap<String, SortedSet<String>> oauthParams = getOAuthParameters(paramMap);\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tset.add(percentEncode(sig));\n\t\t\t\toauthParams.put(\"oauth_signature\", set);"
            },
            {
              "step": 19,
              "variableName": "oauthParams",
              "startLine": 105,
              "startColumn": 33,
              "endLine": 105,
              "endColumn": 44,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\tIterator<String> iter = oauthParams.keySet().iterator();\n\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);"
            },
            {
              "step": 20,
              "variableName": "oauthParams.get(param)",
              "startLine": 105,
              "startColumn": 33,
              "endLine": 105,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\tIterator<String> iter = oauthParams.keySet().iterator();\n\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);"
            },
            {
              "step": 21,
              "variableName": "valSet",
              "startLine": 106,
              "startColumn": 67,
              "endLine": 106,
              "endColumn": 73,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {"
            },
            {
              "step": 22,
              "variableName": "valSet.first()",
              "startLine": 106,
              "startColumn": 67,
              "endLine": 106,
              "endColumn": 81,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {"
            },
            {
              "step": 23,
              "variableName": "headerElem",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {\n\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}"
            },
            {
              "step": 24,
              "variableName": "sb",
              "startLine": 108,
              "startColumn": 6,
              "endLine": 108,
              "endColumn": 8,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {\n\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}"
            },
            {
              "step": 25,
              "variableName": "sb",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 26,
              "variableName": "sb.toString()",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 34,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 27,
              "variableName": "header",
              "startLine": 114,
              "startColumn": 46,
              "endLine": 114,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}\n\t\t} catch (Exception e) {"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 2,
          "flow": [
            {
              "step": 0,
              "variableName": "apiKey",
              "startLine": 222,
              "startColumn": 49,
              "endLine": 222,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 1,
              "variableName": "new String[]{apiKey}",
              "startLine": 222,
              "startColumn": 36,
              "endLine": 222,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 2,
              "variableName": "new String[]{apiKey}",
              "startLine": 222,
              "startColumn": 36,
              "endLine": 222,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 3,
              "variableName": "pMap",
              "startLine": 222,
              "startColumn": 5,
              "endLine": 222,
              "endColumn": 9,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 4,
              "variableName": "paramMap",
              "startLine": 78,
              "startColumn": 27,
              "endLine": 78,
              "endColumn": 35,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tMac mac = Mac.getInstance(\"HmacSHA1\");\n\t\t\t\tmac.init(key);\n\n\t\t\t\taddRequiredParameters(paramMap, apiKey, oauthToken);\n\n\t\t\t\tString sbs = httpMethod.toUpperCase() + \"&\" + percentEncode(normalizeRequestUrl(url))\n\t\t\t\t\t\t+ \"&\" + percentEncode(normalizeRequestParameters(paramMap));"
            },
            {
              "step": 5,
              "variableName": "paramMap",
              "startLine": 92,
              "startColumn": 19,
              "endLine": 92,
              "endColumn": 27,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tsb.append(\"OAuth \");\n\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}"
            },
            {
              "step": 6,
              "variableName": "paramMap.get(\"realm\")",
              "startLine": 92,
              "startColumn": 19,
              "endLine": 92,
              "endColumn": 40,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\t\tsb.append(\"OAuth \");\n\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}"
            },
            {
              "step": 7,
              "variableName": "paramMap.get(\"realm\")[0]",
              "startLine": 92,
              "startColumn": 19,
              "endLine": 92,
              "endColumn": 43,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\tsb.append(\"OAuth \");\n\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}"
            },
            {
              "step": 8,
              "variableName": "val",
              "startLine": 93,
              "startColumn": 34,
              "endLine": 93,
              "endColumn": 37,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 9,
              "variableName": "\"realm=\\\"\".concat(val)",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 38,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 10,
              "variableName": "\"realm=\\\"\".concat(val).concat(\"\\\"\")",
              "startLine": 93,
              "startColumn": 16,
              "endLine": 93,
              "endColumn": 51,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 11,
              "variableName": "sb",
              "startLine": 93,
              "startColumn": 6,
              "endLine": 93,
              "endColumn": 8,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t// add the realm parameter, if any\n\t\t\t\tif (paramMap.containsKey(\"realm\")) {\n\t\t\t\t\tString val = paramMap.get(\"realm\")[0];\n\t\t\t\t\tsb.append(\"realm=\\\"\".concat(val).concat(\"\\\"\"));\n\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n"
            },
            {
              "step": 12,
              "variableName": "sb",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 13,
              "variableName": "sb.toString()",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 34,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 14,
              "variableName": "header",
              "startLine": 114,
              "startColumn": 46,
              "endLine": 114,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}\n\t\t} catch (Exception e) {"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 3,
          "flow": [
            {
              "step": 0,
              "variableName": "apiKey",
              "startLine": 222,
              "startColumn": 49,
              "endLine": 222,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 1,
              "variableName": "new String[]{apiKey}",
              "startLine": 222,
              "startColumn": 36,
              "endLine": 222,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 2,
              "variableName": "new String[]{apiKey}",
              "startLine": 222,
              "startColumn": 36,
              "endLine": 222,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 3,
              "variableName": "pMap",
              "startLine": 222,
              "startColumn": 5,
              "endLine": 222,
              "endColumn": 9,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tpMap.put(\"oauth_token\", new String[]{oauthToken});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_consumer_key\") == null) {\n\t\t\t\tpMap.put(\"oauth_consumer_key\", new String[]{apiKey});\n\t\t\t}\n\t\t\tif (pMap.get(\"oauth_signature_method\") == null) {\n\t\t\t\tpMap.put(\"oauth_signature_method\", new String[]{\"HMAC-SHA1\"});"
            },
            {
              "step": 4,
              "variableName": "paramMap",
              "startLine": 78,
              "startColumn": 27,
              "endLine": 78,
              "endColumn": 35,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\tMac mac = Mac.getInstance(\"HmacSHA1\");\n\t\t\t\tmac.init(key);\n\n\t\t\t\taddRequiredParameters(paramMap, apiKey, oauthToken);\n\n\t\t\t\tString sbs = httpMethod.toUpperCase() + \"&\" + percentEncode(normalizeRequestUrl(url))\n\t\t\t\t\t\t+ \"&\" + percentEncode(normalizeRequestParameters(paramMap));"
            },
            {
              "step": 5,
              "variableName": "paramMap",
              "startLine": 97,
              "startColumn": 69,
              "endLine": 97,
              "endColumn": 77,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n\n\t\t\t\tMap<String, SortedSet<String>> oauthParams = getOAuthParameters(paramMap);\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tset.add(percentEncode(sig));\n\t\t\t\toauthParams.put(\"oauth_signature\", set);"
            },
            {
              "step": 6,
              "variableName": "Map<String, String[]> params",
              "startLine": 197,
              "startColumn": 67,
              "endLine": 197,
              "endColumn": 95,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\t\treturn \"\";\n\t}\n\n\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();"
            },
            {
              "step": 7,
              "variableName": "params",
              "startLine": 199,
              "startColumn": 40,
              "endLine": 199,
              "endColumn": 46,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, []] : String",
              "code": "\n\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();"
            },
            {
              "step": 8,
              "variableName": "params.entrySet()",
              "startLine": 199,
              "startColumn": 40,
              "endLine": 199,
              "endColumn": 57,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "Set [<element>, <map.value>, []] : String",
              "code": "\n\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();"
            },
            {
              "step": 9,
              "variableName": "param",
              "startLine": 200,
              "startColumn": 17,
              "endLine": 200,
              "endColumn": 22,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "Entry [<map.value>, []] : String",
              "code": "\tprivate static Map<String, SortedSet<String>> getOAuthParameters(Map<String, String[]> params) {\n\t\tTreeMap<String, SortedSet<String>> oauthParams = new TreeMap<>();\n\t\tfor (Entry<String, String[]> param : params.entrySet()) {\n\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {"
            },
            {
              "step": 10,
              "variableName": "param",
              "startLine": 203,
              "startColumn": 23,
              "endLine": 203,
              "endColumn": 28,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "Entry [<map.value>, []] : String",
              "code": "\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}"
            },
            {
              "step": 11,
              "variableName": "param.getValue()",
              "startLine": 203,
              "startColumn": 23,
              "endLine": 203,
              "endColumn": 39,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String[] [[]] : String",
              "code": "\t\t\tString key = param.getKey();\n\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}"
            },
            {
              "step": 12,
              "variableName": "val",
              "startLine": 204,
              "startColumn": 10,
              "endLine": 204,
              "endColumn": 13,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\tif ((key.startsWith(\"oauth_\") || key.startsWith(\"x_oauth_\")) && param.getValue() != null) {\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}\n\t\t\t\t}"
            },
            {
              "step": 13,
              "variableName": "val",
              "startLine": 205,
              "startColumn": 15,
              "endLine": 205,
              "endColumn": 18,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {"
            },
            {
              "step": 14,
              "variableName": "set",
              "startLine": 205,
              "startColumn": 7,
              "endLine": 205,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tfor (String val : param.getValue()) {\n\t\t\t\t\tif (val != null) {\n\t\t\t\t\t\tset.add(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {"
            },
            {
              "step": 15,
              "variableName": "set",
              "startLine": 209,
              "startColumn": 27,
              "endLine": 209,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {\n\t\t\t\t\toauthParams.put(key, set);\n\t\t\t\t}\n\t\t\t}\n\t\t}"
            },
            {
              "step": 16,
              "variableName": "oauthParams",
              "startLine": 209,
              "startColumn": 6,
              "endLine": 209,
              "endColumn": 17,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!set.isEmpty()) {\n\t\t\t\t\toauthParams.put(key, set);\n\t\t\t\t}\n\t\t\t}\n\t\t}"
            },
            {
              "step": 17,
              "variableName": "oauthParams",
              "startLine": 213,
              "startColumn": 10,
              "endLine": 213,
              "endColumn": 21,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oauthParams;\n\t}\n\n\tprivate static void addRequiredParameters(Map<String, String[]> pMap, String apiKey, String oauthToken) {"
            },
            {
              "step": 18,
              "variableName": "getOAuthParameters(paramMap)",
              "startLine": 97,
              "startColumn": 50,
              "endLine": 97,
              "endColumn": 78,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\t\tsb.append(\", \");\n\t\t\t\t}\n\n\t\t\t\tMap<String, SortedSet<String>> oauthParams = getOAuthParameters(paramMap);\n\t\t\t\tTreeSet<String> set = new TreeSet<>();\n\t\t\t\tset.add(percentEncode(sig));\n\t\t\t\toauthParams.put(\"oauth_signature\", set);"
            },
            {
              "step": 19,
              "variableName": "oauthParams",
              "startLine": 105,
              "startColumn": 33,
              "endLine": 105,
              "endColumn": 44,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeMap [<map.value>, <element>] : String",
              "code": "\t\t\t\tIterator<String> iter = oauthParams.keySet().iterator();\n\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);"
            },
            {
              "step": 20,
              "variableName": "oauthParams.get(param)",
              "startLine": 105,
              "startColumn": 33,
              "endLine": 105,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\tIterator<String> iter = oauthParams.keySet().iterator();\n\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);"
            },
            {
              "step": 21,
              "variableName": "valSet",
              "startLine": 106,
              "startColumn": 67,
              "endLine": 106,
              "endColumn": 73,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "TreeSet [<element>] : String",
              "code": "\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {"
            },
            {
              "step": 22,
              "variableName": "valSet.first()",
              "startLine": 106,
              "startColumn": 67,
              "endLine": 106,
              "endColumn": 81,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\twhile (iter.hasNext()) {\n\t\t\t\t\tString param = iter.next();\n\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {"
            },
            {
              "step": 23,
              "variableName": "headerElem",
              "startLine": 108,
              "startColumn": 16,
              "endLine": 108,
              "endColumn": 26,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {\n\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}"
            },
            {
              "step": 24,
              "variableName": "sb",
              "startLine": 108,
              "startColumn": 6,
              "endLine": 108,
              "endColumn": 8,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t\tSortedSet<String> valSet = oauthParams.get(param);\n\t\t\t\t\tString value = (valSet == null || valSet.isEmpty()) ? null : valSet.first();\n\t\t\t\t\tString headerElem = (value == null) ? null : param + \"=\\\"\" + value + \"\\\"\";\n\t\t\t\t\tsb.append(headerElem);\n\t\t\t\t\tif (iter.hasNext()) {\n\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}"
            },
            {
              "step": 25,
              "variableName": "sb",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 23,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "StringBuilder",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 26,
              "variableName": "sb.toString()",
              "startLine": 113,
              "startColumn": 21,
              "endLine": 113,
              "endColumn": 34,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "String",
              "code": "\t\t\t\t\t\tsb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}"
            },
            {
              "step": 27,
              "variableName": "header",
              "startLine": 114,
              "startColumn": 46,
              "endLine": 114,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/OAuth1HmacSigner.java",
              "type": "",
              "code": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tString header = sb.toString();\n\t\t\t\tlogger.debug(\"OAuth1 signed header: {}\", header);\n\t\t\t\treturn header;\n\t\t\t}\n\t\t} catch (Exception e) {"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 23,
      "fileName": "SecurityUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 3)",
              "startLine": 109,
              "startColumn": 21,
              "endLine": 109,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String[]",
              "code": "\t\tUserAuthentication userAuth = null;\n\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";"
            },
            {
              "step": 2,
              "variableName": "parts[0]",
              "startLine": 110,
              "startColumn": 47,
              "endLine": 110,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 3,
              "variableName": "StringUtils.toRootLowerCase(parts[0])",
              "startLine": 110,
              "startColumn": 19,
              "endLine": 110,
              "endColumn": 56,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\tUser user = new User();\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 3);\n\t\t\tString email = StringUtils.toRootLowerCase(parts[0]);\n\t\t\tString name = StringUtils.trimToEmpty(parts[1]);\n\t\t\tString pass = (parts.length > 2) ? parts[2] : \"\";\n"
            },
            {
              "step": 4,
              "variableName": "email",
              "startLine": 130,
              "startColumn": 25,
              "endLine": 130,
              "endColumn": 30,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 5,
              "variableName": "String identifier",
              "startLine": 238,
              "startColumn": 28,
              "endLine": 238,
              "endColumn": 45,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the main identifier.\n\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n"
            },
            {
              "step": 6,
              "variableName": "identifier",
              "startLine": 239,
              "startColumn": 21,
              "endLine": 239,
              "endColumn": 31,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 7,
              "variableName": "this",
              "startLine": 239,
              "startColumn": 3,
              "endLine": 239,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @param identifier the main identifier\n\t */\n\tpublic void setIdentifier(String identifier) {\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 8,
              "variableName": "user",
              "startLine": 130,
              "startColumn": 6,
              "endLine": 130,
              "endColumn": 10,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t\tBoolean.toString(Para.getConfig().allowUnverifiedEmails()))));\n\t\t\t\t\tuser.setAppid(appid);\n\t\t\t\t\tuser.setName(name);\n\t\t\t\t\tuser.setIdentifier(email);\n\t\t\t\t\tuser.setEmail(email);\n\t\t\t\t\tuser.setPassword(pass);\n\t\t\t\t\tif (user.create() != null) {"
            },
            {
              "step": 9,
              "variableName": "user",
              "startLine": 145,
              "startColumn": 48,
              "endLine": 145,
              "endColumn": 52,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/PasswordAuthFilter.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\t\t\t+ user.getIdentifier() + \") is locked.\");\n\t\t\t}\n\t\t}\n\t\treturn SecurityUtils.checkIfActive(userAuth, user, false);\n\t}\n}\n"
            },
            {
              "step": 10,
              "variableName": "User user",
              "startLine": 361,
              "startColumn": 78,
              "endLine": 361,
              "endColumn": 87,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "User [identifier] : String",
              "code": "\t * @param throwException throw or not\n\t * @return the authentication object if {@code user.active == true}\n\t */\n\tpublic static UserAuthentication checkIfActive(UserAuthentication userAuth, User user, boolean throwException) {\n\t\tif (userAuth == null || user == null || user.getIdentifier() == null) {\n\t\t\tif (throwException) {\n\t\t\t\tthrow new BadCredentialsException(\"Bad credentials.\");"
            },
            {
              "step": 11,
              "variableName": "user",
              "startLine": 374,
              "startColumn": 81,
              "endLine": 374,
              "endColumn": 85,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "User [identifier] : String",
              "code": "\t\t\t\tthrow new LockedException(\"Account \" + user.getId() + \" (\" + user.getAppid() + \"/\" +\n\t\t\t\t\t\tuser.getIdentifier() + \") is locked.\");\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "getIdentifier",
              "startLine": 230,
              "startColumn": 16,
              "endLine": 230,
              "endColumn": 29,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * An identifier is basically a unique username that identifies a user.\n\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n"
            },
            {
              "step": 13,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [identifier] : String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 14,
              "variableName": "identifier",
              "startLine": 231,
              "startColumn": 10,
              "endLine": 231,
              "endColumn": 20,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return the main identifier\n\t */\n\tpublic String getIdentifier() {\n\t\treturn identifier;\n\t}\n\n\t/**"
            },
            {
              "step": 15,
              "variableName": "user.getIdentifier()",
              "startLine": 374,
              "startColumn": 81,
              "endLine": 374,
              "endColumn": 101,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/SecurityUtils.java",
              "type": "",
              "code": "\t\t\t\tthrow new LockedException(\"Account \" + user.getId() + \" (\" + user.getAppid() + \"/\" +\n\t\t\t\t\t\tuser.getIdentifier() + \") is locked.\");\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Account {} ({}/{}) is locked.\", user.getId(), user.getAppid(), user.getIdentifier());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}"
            }
          ]
        }
      ]
    },
    {
      "resultIndex": 24,
      "fileName": "FacebookAuthFilter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 184,
              "startColumn": 70,
              "endLine": 184,
              "endColumn": 81,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/FacebookAuthFilter.java",
              "type": "String",
              "code": "\t\t\t\t\tlogger.info(\"Authentication request failed because response was missing or contained invalid JSON.\");\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.warn(\"Facebook auth request failed: GET \" + PROFILE_URL + accessToken, e);\n\t\t\t}\n\t\t\treturn SecurityUtils.checkIfActive(userAuth, user, false);\n\t\t});"
            },
            {
              "step": 1,
              "variableName": "\"Facebook auth request failed: GET \" + PROFILE_URL + accessToken",
              "startLine": 184,
              "startColumn": 17,
              "endLine": 184,
              "endColumn": 81,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/FacebookAuthFilter.java",
              "type": "",
              "code": "\t\t\t\t\tlogger.info(\"Authentication request failed because response was missing or contained invalid JSON.\");\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.warn(\"Facebook auth request failed: GET \" + PROFILE_URL + accessToken, e);\n\t\t\t}\n\t\t\treturn SecurityUtils.checkIfActive(userAuth, user, false);\n\t\t});"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 25,
      "fileName": "GenericOAuth2Filter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "refreshToken",
              "startLine": 206,
              "startColumn": 31,
              "endLine": 206,
              "endColumn": 43,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "String",
              "code": "\t\t\t\t\tuser.setPassword(Utils.generateSecurityToken());\n\t\t\t\t\tif (tokenDelegationEnabled) {\n\t\t\t\t\t\tuser.setIdpAccessToken(accessToken);\n\t\t\t\t\t\tuser.setIdpRefreshToken(refreshToken);\n\t\t\t\t\t\tuser.setIdpIdToken(idToken);\n\t\t\t\t\t\tprintTokenDebugInfo(user);\n\t\t\t\t\t}"
            },
            {
              "step": 1,
              "variableName": "String idpRefreshToken",
              "startLine": 627,
              "startColumn": 33,
              "endLine": 627,
              "endColumn": 55,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the refresh token.\n\t * @param idpRefreshToken a refresh token\n\t */\n\tpublic void setIdpRefreshToken(String idpRefreshToken) {\n\t\tthis.idpRefreshToken = idpRefreshToken;\n\t}\n"
            },
            {
              "step": 2,
              "variableName": "idpRefreshToken",
              "startLine": 628,
              "startColumn": 26,
              "endLine": 628,
              "endColumn": 41,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param idpRefreshToken a refresh token\n\t */\n\tpublic void setIdpRefreshToken(String idpRefreshToken) {\n\t\tthis.idpRefreshToken = idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 3,
              "variableName": "this",
              "startLine": 628,
              "startColumn": 3,
              "endLine": 628,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t * @param idpRefreshToken a refresh token\n\t */\n\tpublic void setIdpRefreshToken(String idpRefreshToken) {\n\t\tthis.idpRefreshToken = idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "user",
              "startLine": 206,
              "startColumn": 7,
              "endLine": 206,
              "endColumn": 11,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\t\t\t\tuser.setPassword(Utils.generateSecurityToken());\n\t\t\t\t\tif (tokenDelegationEnabled) {\n\t\t\t\t\t\tuser.setIdpAccessToken(accessToken);\n\t\t\t\t\t\tuser.setIdpRefreshToken(refreshToken);\n\t\t\t\t\t\tuser.setIdpIdToken(idToken);\n\t\t\t\t\t\tprintTokenDebugInfo(user);\n\t\t\t\t\t}"
            },
            {
              "step": 5,
              "variableName": "user",
              "startLine": 208,
              "startColumn": 27,
              "endLine": 208,
              "endColumn": 31,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\t\t\t\t\tuser.setIdpAccessToken(accessToken);\n\t\t\t\t\t\tuser.setIdpRefreshToken(refreshToken);\n\t\t\t\t\t\tuser.setIdpIdToken(idToken);\n\t\t\t\t\t\tprintTokenDebugInfo(user);\n\t\t\t\t\t}\n\t\t\t\t\tuser.setPicture(getPicture(app, user, accessToken, alias, pic));\n\t\t\t\t\tuser.setIdentifier(oauthPrefix(alias).concat(oauthAccountId));"
            },
            {
              "step": 6,
              "variableName": "User user",
              "startLine": 553,
              "startColumn": 35,
              "endLine": 553,
              "endColumn": 44,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\treturn fname;\n\t}\n\n\tprivate void printTokenDebugInfo(User user) {\n\t\ttry {\n\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +"
            },
            {
              "step": 7,
              "variableName": "user",
              "startLine": 558,
              "startColumn": 30,
              "endLine": 558,
              "endColumn": 34,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +\n\t\t\t\t\t\"\\nidpIdTokenPayload: \" + Utils.base64dec(user.getIdpIdTokenPayload()) +\n\t\t\t\t\t\"\\nidpRefreshToken: \" + user.getIdpRefreshToken());\n\t\t} catch (Exception e) {\n\t\t\tLOG.debug(null, e);\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "getIdpRefreshToken",
              "startLine": 619,
              "startColumn": 16,
              "endLine": 619,
              "endColumn": 34,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t * Stores the refresh token from the identity provider.\n\t * @return a JWT refresh token\n\t */\n\tpublic String getIdpRefreshToken() {\n\t\treturn idpRefreshToken;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "idpRefreshToken",
              "startLine": 620,
              "startColumn": 10,
              "endLine": 620,
              "endColumn": 25,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t * @return a JWT refresh token\n\t */\n\tpublic String getIdpRefreshToken() {\n\t\treturn idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 10,
              "variableName": "idpRefreshToken",
              "startLine": 620,
              "startColumn": 10,
              "endLine": 620,
              "endColumn": 25,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return a JWT refresh token\n\t */\n\tpublic String getIdpRefreshToken() {\n\t\treturn idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 11,
              "variableName": "user.getIdpRefreshToken()",
              "startLine": 558,
              "startColumn": 30,
              "endLine": 558,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "String",
              "code": "\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +\n\t\t\t\t\t\"\\nidpIdTokenPayload: \" + Utils.base64dec(user.getIdpIdTokenPayload()) +\n\t\t\t\t\t\"\\nidpRefreshToken: \" + user.getIdpRefreshToken());\n\t\t} catch (Exception e) {\n\t\t\tLOG.debug(null, e);\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "\"Updated OAuth2 tokens for user \" + user.",
              "startLine": 555,
              "startColumn": 14,
              "endLine": 558,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "",
              "code": "\n\tprivate void printTokenDebugInfo(User user) {\n\t\ttry {\n\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +\n\t\t\t\t\t\"\\nidpIdTokenPayload: \" + Utils.base64dec(user.getIdpIdTokenPayload()) +\n\t\t\t\t\t\"\\nidpRefreshToken: \" + user.getIdpRefreshToken());"
            }
          ],
          "label": "Yes"
        },
        {
          "codeFlowIndex": 1,
          "flow": [
            {
              "step": 0,
              "variableName": "refreshToken",
              "startLine": 250,
              "startColumn": 28,
              "endLine": 250,
              "endColumn": 40,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "String",
              "code": "\t\t}\n\t\tif (tokenDelegationEnabled) {\n\t\t\tuser.setIdpAccessToken(accessToken);\n\t\t\tuser.setIdpRefreshToken(refreshToken);\n\t\t\tuser.setIdpIdToken(idToken);\n\t\t\tprintTokenDebugInfo(user);\n\t\t\tupdate = true;"
            },
            {
              "step": 1,
              "variableName": "String idpRefreshToken",
              "startLine": 627,
              "startColumn": 33,
              "endLine": 627,
              "endColumn": 55,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * Sets the refresh token.\n\t * @param idpRefreshToken a refresh token\n\t */\n\tpublic void setIdpRefreshToken(String idpRefreshToken) {\n\t\tthis.idpRefreshToken = idpRefreshToken;\n\t}\n"
            },
            {
              "step": 2,
              "variableName": "idpRefreshToken",
              "startLine": 628,
              "startColumn": 26,
              "endLine": 628,
              "endColumn": 41,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @param idpRefreshToken a refresh token\n\t */\n\tpublic void setIdpRefreshToken(String idpRefreshToken) {\n\t\tthis.idpRefreshToken = idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 3,
              "variableName": "this",
              "startLine": 628,
              "startColumn": 3,
              "endLine": 628,
              "endColumn": 7,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t * @param idpRefreshToken a refresh token\n\t */\n\tpublic void setIdpRefreshToken(String idpRefreshToken) {\n\t\tthis.idpRefreshToken = idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 4,
              "variableName": "user",
              "startLine": 250,
              "startColumn": 4,
              "endLine": 250,
              "endColumn": 8,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\t}\n\t\tif (tokenDelegationEnabled) {\n\t\t\tuser.setIdpAccessToken(accessToken);\n\t\t\tuser.setIdpRefreshToken(refreshToken);\n\t\t\tuser.setIdpIdToken(idToken);\n\t\t\tprintTokenDebugInfo(user);\n\t\t\tupdate = true;"
            },
            {
              "step": 5,
              "variableName": "user",
              "startLine": 252,
              "startColumn": 24,
              "endLine": 252,
              "endColumn": 28,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\t\tuser.setIdpAccessToken(accessToken);\n\t\t\tuser.setIdpRefreshToken(refreshToken);\n\t\t\tuser.setIdpIdToken(idToken);\n\t\t\tprintTokenDebugInfo(user);\n\t\t\tupdate = true;\n\t\t}\n\t\treturn update;"
            },
            {
              "step": 6,
              "variableName": "User user",
              "startLine": 553,
              "startColumn": 35,
              "endLine": 553,
              "endColumn": 44,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\treturn fname;\n\t}\n\n\tprivate void printTokenDebugInfo(User user) {\n\t\ttry {\n\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +"
            },
            {
              "step": 7,
              "variableName": "user",
              "startLine": 558,
              "startColumn": 30,
              "endLine": 558,
              "endColumn": 34,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +\n\t\t\t\t\t\"\\nidpIdTokenPayload: \" + Utils.base64dec(user.getIdpIdTokenPayload()) +\n\t\t\t\t\t\"\\nidpRefreshToken: \" + user.getIdpRefreshToken());\n\t\t} catch (Exception e) {\n\t\t\tLOG.debug(null, e);\n\t\t}"
            },
            {
              "step": 8,
              "variableName": "getIdpRefreshToken",
              "startLine": 619,
              "startColumn": 16,
              "endLine": 619,
              "endColumn": 34,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t * Stores the refresh token from the identity provider.\n\t * @return a JWT refresh token\n\t */\n\tpublic String getIdpRefreshToken() {\n\t\treturn idpRefreshToken;\n\t}\n"
            },
            {
              "step": 9,
              "variableName": "idpRefreshToken",
              "startLine": 620,
              "startColumn": 10,
              "endLine": 620,
              "endColumn": 25,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "User [idpRefreshToken] : String",
              "code": "\t * @return a JWT refresh token\n\t */\n\tpublic String getIdpRefreshToken() {\n\t\treturn idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 10,
              "variableName": "idpRefreshToken",
              "startLine": 620,
              "startColumn": 10,
              "endLine": 620,
              "endColumn": 25,
              "uri": "para-1.50.6/para-core/src/main/java/com/erudika/para/core/User.java",
              "type": "String",
              "code": "\t * @return a JWT refresh token\n\t */\n\tpublic String getIdpRefreshToken() {\n\t\treturn idpRefreshToken;\n\t}\n\n\t/**"
            },
            {
              "step": 11,
              "variableName": "user.getIdpRefreshToken()",
              "startLine": 558,
              "startColumn": 30,
              "endLine": 558,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "String",
              "code": "\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +\n\t\t\t\t\t\"\\nidpIdTokenPayload: \" + Utils.base64dec(user.getIdpIdTokenPayload()) +\n\t\t\t\t\t\"\\nidpRefreshToken: \" + user.getIdpRefreshToken());\n\t\t} catch (Exception e) {\n\t\t\tLOG.debug(null, e);\n\t\t}"
            },
            {
              "step": 12,
              "variableName": "\"Updated OAuth2 tokens for user \" + user.",
              "startLine": 555,
              "startColumn": 14,
              "endLine": 558,
              "endColumn": 55,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/GenericOAuth2Filter.java",
              "type": "",
              "code": "\n\tprivate void printTokenDebugInfo(User user) {\n\t\ttry {\n\t\t\tLOG.debug(\"Updated OAuth2 tokens for user \" + user.getId() + \":\" +\n\t\t\t\t\t\"\\nidpAccessTokenPayload: \" + Utils.base64dec(user.getIdpAccessTokenPayload()) +\n\t\t\t\t\t\"\\nidpIdTokenPayload: \" + Utils.base64dec(user.getIdpIdTokenPayload()) +\n\t\t\t\t\t\"\\nidpRefreshToken: \" + user.getIdpRefreshToken());"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 26,
      "fileName": "LdapAuthFilter.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "accessToken",
              "startLine": 200,
              "startColumn": 21,
              "endLine": 200,
              "endColumn": 32,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/LdapAuthFilter.java",
              "type": "String",
              "code": "\tpublic UserAuthentication getOrCreateUser(App app, String accessToken) throws IOException {\n\t\tUserAuthentication userAuth = null;\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 2);\n\t\t\tString username = parts[0];\n\t\t\tString password = parts[1];\n\t\t\ttry {"
            },
            {
              "step": 1,
              "variableName": "accessToken.split(Para.getConfig().separator(), 2)",
              "startLine": 200,
              "startColumn": 21,
              "endLine": 200,
              "endColumn": 71,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/LdapAuthFilter.java",
              "type": "String[]",
              "code": "\tpublic UserAuthentication getOrCreateUser(App app, String accessToken) throws IOException {\n\t\tUserAuthentication userAuth = null;\n\t\tif (accessToken != null && accessToken.contains(Para.getConfig().separator())) {\n\t\t\tString[] parts = accessToken.split(Para.getConfig().separator(), 2);\n\t\t\tString username = parts[0];\n\t\t\tString password = parts[1];\n\t\t\ttry {"
            },
            {
              "step": 2,
              "variableName": "username",
              "startLine": 215,
              "startColumn": 66,
              "endLine": 215,
              "endColumn": 74,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/LdapAuthFilter.java",
              "type": "",
              "code": "\t\t\t\t\tuserAuth = getOrCreateUser(app, ldapAuth);\n\t\t\t\t}\n\t\t\t} catch (Exception ex) {\n\t\t\t\tLOG.info(\"Failed to authenticate '{}' with LDAP server: {}\", username, ex.getMessage());\n\t\t\t}\n\t\t}\n\t\treturn SecurityUtils.checkIfActive(userAuth, SecurityUtils.getAuthenticatedUser(userAuth), false);"
            }
          ],
          "label": "No"
        }
      ]
    },
    {
      "resultIndex": 27,
      "fileName": "HealthUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "rootAppCredentials",
              "startLine": 134,
              "startColumn": 8,
              "endLine": 134,
              "endColumn": 26,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "Map",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            },
            {
              "step": 1,
              "variableName": "rootAppCredentials.get(\"accessKey\")",
              "startLine": 134,
              "startColumn": 8,
              "endLine": 134,
              "endColumn": 43,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            }
          ],
          "label": "Yes"
        }
      ]
    },
    {
      "resultIndex": 28,
      "fileName": "HealthUtils.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "rootAppCredentials",
              "startLine": 134,
              "startColumn": 45,
              "endLine": 134,
              "endColumn": 63,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "Map",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            },
            {
              "step": 1,
              "variableName": "rootAppCredentials.get(\"secretKey\")",
              "startLine": 134,
              "startColumn": 45,
              "endLine": 134,
              "endColumn": 80,
              "uri": "para-1.50.6/para-server/src/main/java/com/erudika/para/server/utils/HealthUtils.java",
              "type": "",
              "code": "\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tlogger.info(\"Initialized root app with access key '{}' and secret '{}', \"\n\t\t\t\t\t\t\t+ \"but could not write these to {}.\",\n\t\t\t\t\t\t\trootAppCredentials.get(\"accessKey\"), rootAppCredentials.get(\"secretKey\"), confFile);\n\t\t\t\t}\n\t\t\t\tString accessKey = \"para.root_access_key = \\\"\" + rootAppCredentials.get(\"accessKey\") + \"\\\"\";\n\t\t\t\tString secretKey = \"para.root_secret_key = \\\"\" + rootAppCredentials.get(\"secretKey\") + \"\\\"\";"
            }
          ]
        }
      ]
    }
  ]
}