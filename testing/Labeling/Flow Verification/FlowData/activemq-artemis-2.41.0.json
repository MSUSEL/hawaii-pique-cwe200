{
  "208": [
    {
      "resultIndex": 0,
      "fileName": "ScramClientFunctionalityImpl.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "mac.doFinal()",
              "startLine": 104,
              "startColumn": 14,
              "endLine": 104,
              "endColumn": 27,
              "uri": "activemq-artemis-2.41.0/artemis-server/src/main/java/org/apache/activemq/artemis/spi/core/security/scram/ScramUtils.java",
              "type": "byte[]",
              "code": "\n      Mac mac = createHmac(key, hmacName);\n      mac.update(string.getBytes(StandardCharsets.US_ASCII));\n      return mac.doFinal();\n   }\n\n   public static byte[] computeHmac(final byte[] key, Mac hmac, final String string) throws ScramException {"
            },
            {
              "step": 1,
              "variableName": "ScramUtils.computeHmac(serverKey, mHmacName, mAuthMessage)",
              "startLine": 211,
              "startColumn": 17,
              "endLine": 211,
              "endColumn": 75,
              "uri": "activemq-artemis-2.41.0/artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/sasl/scram/ScramClientFunctionalityImpl.java",
              "type": "byte[]",
              "code": "   private byte[] getExpectedServerSignature() throws ScramException {\n      try {\n         byte[] serverKey = ScramUtils.computeHmac(mSaltedPassword, mHmacName, \"Server Key\");\n         return ScramUtils.computeHmac(serverKey, mHmacName, mAuthMessage);\n      } catch (InvalidKeyException | NoSuchAlgorithmException e) {\n         mState = State.ENDED;\n         throw new ScramException(e);"
            },
            {
              "step": 2,
              "variableName": "getExpectedServerSignature()",
              "startLine": 183,
              "startColumn": 43,
              "endLine": 183,
              "endColumn": 71,
              "uri": "activemq-artemis-2.41.0/artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/sasl/scram/ScramClientFunctionalityImpl.java",
              "type": "",
              "code": "      byte[] serverSignature = Base64.getDecoder().decode(m.group(1));\n\n      mState = State.ENDED;\n      if (!Arrays.equals(serverSignature, getExpectedServerSignature())) {\n         throw new ScramException(\"Server signature missmatch\");\n      }\n   }"
            }
          ],
          "label": "Yes"
        }
      ]
    }
  ],
  "209": [
    {
      "resultIndex": 5,
      "fileName": "ServerUtil.java",
      "flows": [
        {
          "codeFlowIndex": 0,
          "flow": [
            {
              "step": 0,
              "variableName": "port",
              "startLine": 141,
              "startColumn": 56,
              "endLine": 141,
              "endColumn": 60,
              "uri": "activemq-artemis-2.41.0/artemis-cli/src/main/java/org/apache/activemq/artemis/util/ServerUtil.java",
              "type": "Number",
              "code": "   }\n\n   public static boolean waitForServerToStartOnPort(int port, String username, String password, int timeout) throws InterruptedException {\n      return waitForServerToStart(\"tcp://localhost:\" + port, username, password, timeout);\n   }\n\n   public static boolean waitForServerToStart(String uri, long timeout) throws InterruptedException {"
            },
            {
              "step": 1,
              "variableName": "\"tcp://localhost:\" + port",
              "startLine": 141,
              "startColumn": 35,
              "endLine": 141,
              "endColumn": 60,
              "uri": "activemq-artemis-2.41.0/artemis-cli/src/main/java/org/apache/activemq/artemis/util/ServerUtil.java",
              "type": "String",
              "code": "   }\n\n   public static boolean waitForServerToStartOnPort(int port, String username, String password, int timeout) throws InterruptedException {\n      return waitForServerToStart(\"tcp://localhost:\" + port, username, password, timeout);\n   }\n\n   public static boolean waitForServerToStart(String uri, long timeout) throws InterruptedException {"
            },
            {
              "step": 2,
              "variableName": "String uri",
              "startLine": 148,
              "startColumn": 47,
              "endLine": 148,
              "endColumn": 57,
              "uri": "activemq-artemis-2.41.0/artemis-cli/src/main/java/org/apache/activemq/artemis/util/ServerUtil.java",
              "type": "String",
              "code": "      return waitForServerToStart(uri, null, null, timeout);\n   }\n\n   public static boolean waitForServerToStart(String uri, String username, String password, long timeout) throws InterruptedException {\n      long realTimeout = System.currentTimeMillis() + timeout;\n      while (System.currentTimeMillis() < realTimeout) {\n         try (ActiveMQConnectionFactory cf = ActiveMQJMSClient.createConnectionFactory(uri, null);"
            },
            {
              "step": 3,
              "variableName": "\"awaiting server \" + uri + \" start at \"",
              "startLine": 155,
              "startColumn": 32,
              "endLine": 155,
              "endColumn": 71,
              "uri": "activemq-artemis-2.41.0/artemis-cli/src/main/java/org/apache/activemq/artemis/util/ServerUtil.java",
              "type": "",
              "code": "              Connection c = cf.createConnection(username, password)) {\n            System.out.println(\"server \" + uri + \" started\");\n         } catch (Exception e) {\n            System.out.println(\"awaiting server \" + uri + \" start at \");\n            Thread.sleep(500);\n            continue;\n         }"
            }
          ],
          "label": "No"
        }
      ]
    }
  ]
}