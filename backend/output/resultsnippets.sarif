{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.13.1",
        "notifications" : [ {
          "id" : "java/baseline/expected-extracted-files",
          "name" : "java/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "cli/database/analyze",
          "name" : "cli/database/analyze",
          "shortDescription" : {
            "text" : "CodeQL CLI: database analyze"
          },
          "fullDescription" : {
            "text" : "CodeQL CLI: database analyze"
          },
          "defaultConfiguration" : {
            "enabled" : true
          }
        } ],
        "rules" : [ {
          "id" : "java/example/empty-block",
          "name" : "java/example/empty-block",
          "shortDescription" : {
            "text" : "Empty block"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "id" : "java/example/empty-block",
            "kind" : "problem",
            "name" : "Empty block",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "Ibrahim/execute-Sql-command",
          "name" : "Ibrahim/execute-Sql-command",
          "shortDescription" : {
            "text" : "Execute-Sql-Command"
          },
          "fullDescription" : {
            "text" : "Execute Sql Command Attack surface component"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-089" ],
            "description" : "Execute Sql Command Attack surface component",
            "id" : "Ibrahim/execute-Sql-command",
            "kind" : "problem",
            "name" : "Execute-Sql-Command",
            "precision" : "low",
            "problem.severity" : "error",
            "security-severity" : "9.8"
          }
        }, {
          "id" : "java/hardcoded-password-field",
          "name" : "java/hardcoded-password-field",
          "shortDescription" : {
            "text" : "Hard-coded password field"
          },
          "fullDescription" : {
            "text" : "Hard-coding a password string may compromise security."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-798" ],
            "description" : "Hard-coding a password string may compromise security.",
            "id" : "java/hardcoded-password-field",
            "kind" : "problem",
            "name" : "Hard-coded password field",
            "precision" : "low",
            "problem.severity" : "error",
            "security-severity" : "9.8"
          }
        }, {
          "id" : "java/sensitive-log",
          "name" : "java/sensitive-log",
          "shortDescription" : {
            "text" : "Insertion of sensitive information into log files"
          },
          "fullDescription" : {
            "text" : "Writing sensitive information to log files can allow that information to be leaked to an attacker more easily."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-532" ],
            "description" : "Writing sensitive information to log files can allow that\n              information to be leaked to an attacker more easily.",
            "id" : "java/sensitive-log",
            "kind" : "path-problem",
            "name" : "Insertion of sensitive information into log files",
            "precision" : "medium",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "java/concatenated-sql-query",
          "name" : "java/concatenated-sql-query",
          "shortDescription" : {
            "text" : "Query built by concatenation with a possibly-untrusted string"
          },
          "fullDescription" : {
            "text" : "Building a SQL or Java Persistence query by concatenating a possibly-untrusted string is vulnerable to insertion of malicious code."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-089", "external/cwe/cwe-564" ],
            "description" : "Building a SQL or Java Persistence query by concatenating a possibly-untrusted string\n              is vulnerable to insertion of malicious code.",
            "id" : "java/concatenated-sql-query",
            "kind" : "problem",
            "name" : "Query built by concatenation with a possibly-untrusted string",
            "precision" : "medium",
            "problem.severity" : "error",
            "security-severity" : "8.8"
          }
        }, {
          "id" : "java/stack-trace-exposure",
          "name" : "java/stack-trace-exposure",
          "shortDescription" : {
            "text" : "Information exposure through a stack trace"
          },
          "fullDescription" : {
            "text" : "Information from a stack trace propagates to an external user. Stack traces can unintentionally reveal implementation details that are useful to an attacker for developing a subsequent exploit."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-209", "external/cwe/cwe-497" ],
            "description" : "Information from a stack trace propagates to an external user.\n              Stack traces can unintentionally reveal implementation details\n              that are useful to an attacker for developing a subsequent exploit.",
            "id" : "java/stack-trace-exposure",
            "kind" : "problem",
            "name" : "Information exposure through a stack trace",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "5.4"
          }
        }, {
          "id" : "java/xss",
          "name" : "java/xss",
          "shortDescription" : {
            "text" : "Cross-site scripting"
          },
          "fullDescription" : {
            "text" : "Writing user input directly to a web page allows for a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079" ],
            "description" : "Writing user input directly to a web page\n              allows for a cross-site scripting vulnerability.",
            "id" : "java/xss",
            "kind" : "path-problem",
            "name" : "Cross-site scripting",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "6.1"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "legacy-upgrades",
        "semanticVersion" : "0.0.0",
        "locations" : [ {
          "uri" : "file:///C:/codeql/legacy-upgrades/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///C:/codeql/legacy-upgrades/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      }, {
        "name" : "getting-started/codeql-extra-queries-java",
        "semanticVersion" : "0.0.0+b63a7e59c982eb2af5af8e024ee84e213440946b",
        "locations" : [ {
          "uri" : "file:///C:/Users/ijmvse/Desktop/starter/codeql-custom-queries-java/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///C:/Users/ijmvse/Desktop/starter/codeql-custom-queries-java/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "invocations" : [ {
      "toolExecutionNotifications" : [ {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 1
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/Constant.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 5
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/SQLInjectionExample.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 2
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/App.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 6
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/StackTraceExposure.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 0
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/test/java/com/example/AppTest.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 7
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/XSS.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 4
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
              "uriBaseId" : "%SRCROOT%",
              "index" : 3
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "java/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "message" : {
          "text" : "A fatal error occurred: Could not process query metadata for C:\\Users\\ijmvse\\Desktop\\starter\\codeql-custom-queries-java\\ExecuteSqlCommandAttackSurface.ql.\r\nError was: Cannot process query metadata for a problem query without the '@id' metadata property. To learn more, see https://codeql.github.com/docs/writing-codeql-queries/metadata-for-codeql-queries/ [MISSING_QUERY_ID]"
        },
        "level" : "error",
        "descriptor" : {
          "id" : "cli/database/analyze",
          "index" : 1
        },
        "properties" : {
          "attributes" : {
            "exitCode" : 2
          },
          "visibility" : {
            "telemetry" : false
          }
        }
      } ],
      "executionSuccessful" : true
    } ],
    "artifacts" : [ {
      "location" : {
        "uri" : "src/main/java/com/example/StackTraceExposure.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "src/main/java/com/example/SQLInjectionExample.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "src/main/java/com/example/XSS.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "src/main/java/com/example/Constant.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "src/main/java/com/example/App.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "src/test/java/com/example/AppTest.java",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    } ],
    "results" : [ {
      "ruleId" : "java/example/empty-block",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "java/example/empty-block",
        "index" : 0
      },
      "message" : {
        "text" : "This is an empty block."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/StackTraceExposure.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 62,
            "endLine" : 32,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 34,
            "snippet" : {
              "text" : "\r\n    }\r\n    private void log(String string, NullPointerException ex) {\r\n    }\r\n    public void doSomeWork(){\r\n        \r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96cd466a1ce0df1c:1",
        "primaryLocationStartColumnFingerprint" : "57"
      }
    }, {
      "ruleId" : "java/example/empty-block",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "java/example/empty-block",
        "index" : 0
      },
      "message" : {
        "text" : "This is an empty block."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/StackTraceExposure.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 29,
            "endLine" : 35,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 37,
            "snippet" : {
              "text" : "    private void log(String string, NullPointerException ex) {\r\n    }\r\n    public void doSomeWork(){\r\n        \r\n    }\r\n\r\n\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22361d70650c26ee:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "Ibrahim/execute-Sql-command",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "Ibrahim/execute-Sql-command",
        "index" : 1
      },
      "message" : {
        "text" : "Sql Attack Surface User Trying to execute Sql Command."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 13,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(delete);\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fdeced0d298a9a8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "Ibrahim/execute-Sql-command",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "Ibrahim/execute-Sql-command",
        "index" : 1
      },
      "message" : {
        "text" : "Sql Attack Surface User Trying to execute Sql Command."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 13,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "            preparedStatement.setString(4, \"x\");\r\n\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fdeced0d298a9a8:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "Ibrahim/execute-Sql-command",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "Ibrahim/execute-Sql-command",
        "index" : 1
      },
      "message" : {
        "text" : "Sql Attack Surface User Trying to execute Sql Command."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 13,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(set);\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fdeced0d298a9a8:3",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "Ibrahim/execute-Sql-command",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "Ibrahim/execute-Sql-command",
        "index" : 1
      },
      "message" : {
        "text" : "Sql Attack Surface User Trying to execute Sql Command."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 25,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(getAllStudentSQL);\r\n            resultSet = preparedStatement.executeQuery();\r\n            while (resultSet.next()) {\r\n                listStudent.add(new Student(resultSet.getInt(Constant.STUDENT_ID),\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cbe447309f8d825b:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "Ibrahim/execute-Sql-command",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "Ibrahim/execute-Sql-command",
        "index" : 1
      },
      "message" : {
        "text" : "Sql Attack Surface User Trying to execute Sql Command."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SQLInjectionExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 24,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "\t\t\tString query1 = \"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='\"\r\n\t\t\t\t+ category + \"' ORDER BY PRICE\";\r\n\t\t\tResultSet results = statement.executeQuery(query1);\r\n            \r\n            // Executing the query\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18d68562f0104a6:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "java/hardcoded-password-field",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "java/hardcoded-password-field",
        "index" : 2
      },
      "message" : {
        "text" : "Sensitive field is assigned a hard-coded [value](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 9,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "\r\n    public void BadPattern(){\r\n        String password = \"Pass@0rd\";\r\n\r\n        // BAD: user password is written to debug log\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8348b14ffd40e5c4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 27,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "\r\n    public void BadPattern(){\r\n        String password = \"Pass@0rd\";\r\n\r\n        // BAD: user password is written to debug log\r\n"
            }
          }
        },
        "message" : {
          "text" : "value"
        }
      } ]
    }, {
      "ruleId" : "java/hardcoded-password-field",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "java/hardcoded-password-field",
        "index" : 2
      },
      "message" : {
        "text" : "Sensitive field is assigned a hard-coded [value](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 9,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "\r\n     public void GoodPattern(){\r\n        String password = \"Pass@0rd\";  \r\n        logger.info(\"User password changed\");\r\n    }\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa7bd420b1ae1ae7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 27,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "\r\n     public void GoodPattern(){\r\n        String password = \"Pass@0rd\";  \r\n        logger.info(\"User password changed\");\r\n    }\r\n"
            }
          }
        },
        "message" : {
          "text" : "value"
        }
      } ]
    }, {
      "ruleId" : "java/hardcoded-password-field",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "java/hardcoded-password-field",
        "index" : 2
      },
      "message" : {
        "text" : "Sensitive field is assigned a hard-coded [value](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 9,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "\r\n    public void setPassword(){\r\n        String password = \"Pass@0rd\"; \r\n        this.log(password); \r\n    }\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8dee0aa0d028ab36:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 27,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "\r\n    public void setPassword(){\r\n        String password = \"Pass@0rd\"; \r\n        this.log(password); \r\n    }\r\n"
            }
          }
        },
        "message" : {
          "text" : "value"
        }
      } ]
    }, {
      "ruleId" : "java/sensitive-log",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "java/sensitive-log",
        "index" : 3
      },
      "message" : {
        "text" : "This [potentially sensitive information](1) is written to a log file."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 21,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\r\n        // BAD: user password is written to debug log\r\n        logger.info(\"User password is \"+password);\r\n    }\r\n\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1abfdf4bdb56626:1",
        "primaryLocationStartColumnFingerprint" : "12"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 16,
                  "startColumn" : 41,
                  "endColumn" : 49
                },
                "contextRegion" : {
                  "startLine" : 14,
                  "endLine" : 18,
                  "snippet" : {
                    "text" : "\r\n        // BAD: user password is written to debug log\r\n        logger.info(\"User password is \"+password);\r\n    }\r\n\r\n"
                  }
                }
              },
              "message" : {
                "text" : "password : String"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 16,
                  "startColumn" : 21,
                  "endColumn" : 49
                },
                "contextRegion" : {
                  "startLine" : 14,
                  "endLine" : 18,
                  "snippet" : {
                    "text" : "\r\n        // BAD: user password is written to debug log\r\n        logger.info(\"User password is \"+password);\r\n    }\r\n\r\n"
                  }
                }
              },
              "message" : {
                "text" : "... + ..."
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 41,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\r\n        // BAD: user password is written to debug log\r\n        logger.info(\"User password is \"+password);\r\n    }\r\n\r\n"
            }
          }
        },
        "message" : {
          "text" : "potentially sensitive information"
        }
      } ]
    }, {
      "ruleId" : "java/sensitive-log",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "java/sensitive-log",
        "index" : 3
      },
      "message" : {
        "text" : "This [potentially sensitive information](1) is written to a log file."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 21,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "\r\n    public void log(String str){\r\n        logger.info(\"User password is \"+str);\r\n    }\r\n    \r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c2f875793eeb525:1",
        "primaryLocationStartColumnFingerprint" : "12"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 26,
                  "startColumn" : 18,
                  "endColumn" : 26
                },
                "contextRegion" : {
                  "startLine" : 24,
                  "endLine" : 28,
                  "snippet" : {
                    "text" : "    public void setPassword(){\r\n        String password = \"Pass@0rd\"; \r\n        this.log(password); \r\n    }\r\n\r\n"
                  }
                }
              },
              "message" : {
                "text" : "password : String"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 29,
                  "startColumn" : 21,
                  "endColumn" : 31
                },
                "contextRegion" : {
                  "startLine" : 27,
                  "endLine" : 31,
                  "snippet" : {
                    "text" : "    }\r\n\r\n    public void log(String str){\r\n        logger.info(\"User password is \"+str);\r\n    }\r\n"
                  }
                }
              },
              "message" : {
                "text" : "str : String"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 30,
                  "startColumn" : 21,
                  "endColumn" : 44
                },
                "contextRegion" : {
                  "startLine" : 28,
                  "endLine" : 32,
                  "snippet" : {
                    "text" : "\r\n    public void log(String str){\r\n        logger.info(\"User password is \"+str);\r\n    }\r\n    \r\n"
                  }
                }
              },
              "message" : {
                "text" : "... + ..."
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SensitiveInfoExpouser.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 18,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "    public void setPassword(){\r\n        String password = \"Pass@0rd\"; \r\n        this.log(password); \r\n    }\r\n\r\n"
            }
          }
        },
        "message" : {
          "text" : "potentially sensitive information"
        }
      } ]
    }, {
      "ruleId" : "java/concatenated-sql-query",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "java/concatenated-sql-query",
        "index" : 4
      },
      "message" : {
        "text" : "Query built by concatenation with [this expression](1), which may be untrusted.\nQuery built by concatenation with [this expression](2), which may be untrusted."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 84,
            "endColumn" : 90
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "\r\n        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(delete);\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9f7d0f14a6b97f1:1",
        "primaryLocationStartColumnFingerprint" : "71"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 17,
            "startColumn" : 98,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 15,
            "endLine" : 19,
            "snippet" : {
              "text" : "\r\n    public static void deleteStudentFromDB(String lastname, String name) {\r\n        String delete = \"DELETE FROM Student WHERE lastname = '\" + lastname + \"' and name = '\" + name + \"'\";\r\n\r\n        try {\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 17,
            "startColumn" : 68,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 15,
            "endLine" : 19,
            "snippet" : {
              "text" : "\r\n    public static void deleteStudentFromDB(String lastname, String name) {\r\n        String delete = \"DELETE FROM Student WHERE lastname = '\" + lastname + \"' and name = '\" + name + \"'\";\r\n\r\n        try {\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      } ]
    }, {
      "ruleId" : "java/concatenated-sql-query",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "java/concatenated-sql-query",
        "index" : 4
      },
      "message" : {
        "text" : "Query built by concatenation with [this expression](1), which may be untrusted.\nQuery built by concatenation with [this expression](2), which may be untrusted.\nQuery built by concatenation with [this expression](3), which may be untrusted.\nQuery built by concatenation with [this expression](4), which may be untrusted.\nQuery built by concatenation with [this expression](5), which may be untrusted."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 84,
            "endColumn" : 87
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "                + newName +\"' , team= '\"+ newTeam + \"' WHERE lastname= '\" + lastname + \"' and name= '\" + name + \"' \";\r\n        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(set);\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "415b3f37c1f81180:1",
        "primaryLocationStartColumnFingerprint" : "71"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 106,
            "endColumn" : 110
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "    public static void setStudentFromDB(String lastname, String name,  String newLastName, String newName, String newTeam) {\r\n        String set = \"UPDATE \" + Constant.STUDENT_TABLE + \" SET lastname = '\" + newLastName + \"' , \" + \"name= '\"\r\n                + newName +\"' , team= '\"+ newTeam + \"' WHERE lastname= '\" + lastname + \"' and name= '\" + name + \"' \";\r\n        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(set);\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 77,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "    public static void setStudentFromDB(String lastname, String name,  String newLastName, String newName, String newTeam) {\r\n        String set = \"UPDATE \" + Constant.STUDENT_TABLE + \" SET lastname = '\" + newLastName + \"' , \" + \"name= '\"\r\n                + newName +\"' , team= '\"+ newTeam + \"' WHERE lastname= '\" + lastname + \"' and name= '\" + name + \"' \";\r\n        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(set);\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      }, {
        "id" : 3,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 43,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "    public static void setStudentFromDB(String lastname, String name,  String newLastName, String newName, String newTeam) {\r\n        String set = \"UPDATE \" + Constant.STUDENT_TABLE + \" SET lastname = '\" + newLastName + \"' , \" + \"name= '\"\r\n                + newName +\"' , team= '\"+ newTeam + \"' WHERE lastname= '\" + lastname + \"' and name= '\" + name + \"' \";\r\n        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(set);\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      }, {
        "id" : 4,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 19,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "    public static void setStudentFromDB(String lastname, String name,  String newLastName, String newName, String newTeam) {\r\n        String set = \"UPDATE \" + Constant.STUDENT_TABLE + \" SET lastname = '\" + newLastName + \"' , \" + \"name= '\"\r\n                + newName +\"' , team= '\"+ newTeam + \"' WHERE lastname= '\" + lastname + \"' and name= '\" + name + \"' \";\r\n        try {\r\n            PreparedStatement preparedStatement = getConnection().prepareStatement(set);\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      }, {
        "id" : 5,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/ExecuteSqlCommandAttackSurfaceExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 81,
            "endColumn" : 92
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\r\n    public static void setStudentFromDB(String lastname, String name,  String newLastName, String newName, String newTeam) {\r\n        String set = \"UPDATE \" + Constant.STUDENT_TABLE + \" SET lastname = '\" + newLastName + \"' , \" + \"name= '\"\r\n                + newName +\"' , team= '\"+ newTeam + \"' WHERE lastname= '\" + lastname + \"' and name= '\" + name + \"' \";\r\n        try {\r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      } ]
    }, {
      "ruleId" : "java/concatenated-sql-query",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "java/concatenated-sql-query",
        "index" : 4
      },
      "message" : {
        "text" : "Query built by concatenation with [this expression](1), which may be untrusted."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SQLInjectionExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 47,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "\t\t\tString query1 = \"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='\"\r\n\t\t\t\t+ category + \"' ORDER BY PRICE\";\r\n\t\t\tResultSet results = statement.executeQuery(query1);\r\n            \r\n            // Executing the query\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18d68562f0104a6:1",
        "primaryLocationStartColumnFingerprint" : "43"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/SQLInjectionExample.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 7,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "\t\t\t\r\n\t\t\tString query1 = \"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='\"\r\n\t\t\t\t+ category + \"' ORDER BY PRICE\";\r\n\t\t\tResultSet results = statement.executeQuery(query1);\r\n            \r\n"
            }
          }
        },
        "message" : {
          "text" : "this expression"
        }
      } ]
    }, {
      "ruleId" : "java/stack-trace-exposure",
      "ruleIndex" : 5,
      "rule" : {
        "id" : "java/stack-trace-exposure",
        "index" : 5
      },
      "message" : {
        "text" : "[Error information](1) can be exposed to an external user."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/StackTraceExposure.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 13,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "        } catch (NullPointerException ex) {\r\n            // BAD: printing a stack trace back to the response\r\n            ex.printStackTrace(response.getWriter());\r\n            return;\r\n        }\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4b60cf2a6e9c3720:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/StackTraceExposure.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 13,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "        } catch (NullPointerException ex) {\r\n            // BAD: printing a stack trace back to the response\r\n            ex.printStackTrace(response.getWriter());\r\n            return;\r\n        }\r\n"
            }
          }
        },
        "message" : {
          "text" : "Error information"
        }
      } ]
    }, {
      "ruleId" : "java/xss",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "java/xss",
        "index" : 6
      },
      "message" : {
        "text" : "Cross-site scripting vulnerability due to a [user-provided value](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/XSS.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 5,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "\t\t// BAD: a request parameter is written directly to the Servlet response stream\r\n\t\tresponse.getWriter().print(\r\n\t\t\t\t\"The page \\\"\" + request.getParameter(\"page\") + \"\\\" was not found.\");\r\n\r\n\t}\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b2e9a340b1dc6a3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/XSS.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 4
                },
                "region" : {
                  "startLine" : 14,
                  "startColumn" : 21,
                  "endColumn" : 49
                },
                "contextRegion" : {
                  "startLine" : 12,
                  "endLine" : 16,
                  "snippet" : {
                    "text" : "\t\t// BAD: a request parameter is written directly to the Servlet response stream\r\n\t\tresponse.getWriter().print(\r\n\t\t\t\t\"The page \\\"\" + request.getParameter(\"page\") + \"\\\" was not found.\");\r\n\r\n\t}\r\n"
                  }
                }
              },
              "message" : {
                "text" : "getParameter(...) : String"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/com/example/XSS.java",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 4
                },
                "region" : {
                  "startLine" : 14,
                  "startColumn" : 5,
                  "endColumn" : 71
                },
                "contextRegion" : {
                  "startLine" : 12,
                  "endLine" : 16,
                  "snippet" : {
                    "text" : "\t\t// BAD: a request parameter is written directly to the Servlet response stream\r\n\t\tresponse.getWriter().print(\r\n\t\t\t\t\"The page \\\"\" + request.getParameter(\"page\") + \"\\\" was not found.\");\r\n\r\n\t}\r\n"
                  }
                }
              },
              "message" : {
                "text" : "... + ..."
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/com/example/XSS.java",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 21,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "\t\t// BAD: a request parameter is written directly to the Servlet response stream\r\n\t\tresponse.getWriter().print(\r\n\t\t\t\t\"The page \\\"\" + request.getParameter(\"page\") + \"\\\" was not found.\");\r\n\r\n\t}\r\n"
            }
          }
        },
        "message" : {
          "text" : "user-provided value"
        }
      } ]
    } ],
    "columnKind" : "utf16CodeUnits",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}