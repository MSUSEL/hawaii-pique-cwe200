
extensions:  
  - addsTo:
      pack: custom-codeql-queries
      extensible: sensitiveComments
    data:
    - ["$%^&&*().java", "$%^&&*()"]
    - ["BAD_APIEndpointDebugging.java", "api_key_123456789"]
    - ["GOOD_SecureDebuggingPractices.java", "password"]
    - ["GOOD_CloudServiceConfigSecure.java", "cloudAccessSecret!"]
    - ["GOOD_DockerRunEncryptedConfig.java", "config123Secret!"]
    - ["GOOD_DebugFeatureToggle.java", "123-45-6789"]
    - ["GOOD_DebugLoggingEnabled.java", "Access Token"]
    - ["GOOD_SecureSoftwareUpdate.java", "signatureKey123"]
    - ["GOOD_APIEndpointDebugging.java", "api_key_123456789"]
    - ["GOOD_SensitivePathDisclosureInErrors.java", "/sensitive/config/secrets.txt"]
    - ["GOOD_VerboseAuthenticationFailure.java", "guessme"]
    - ["BAD_VerboseAuthenticationFailure.java", "guessme"]
    - ["BAD_APIAccessLogger.java", "Logging sensitive API key"]
    - ["GOOD_SensitiveDataApiExposureSent.java", "Bank Account Number: 1234567890"]
    - ["GOOD_ConsistentAuthenticationTiming.java", "Fetching the valid username and password from environment variables"]
    - ["GOOD_EncryptDataBeforeTransmission.java", "Bar12345Bar12345"]
    - ["GOOD_EncryptDataBeforeTransmission.java", "The API token is 123"]
    - ["BAD_SendingofEncryptionKey.java", "secretKey123!"]
    - ["GOOD_NetworkConfigSecureHandling.java", "Encrypt the password or securely retrieve it if stored encrypted elsewhere"]
    - ["GOOD_PasswordSecureCommands.java", "mySecretPass123"]
    - ["BAD_SensitivePathDisclosureInErrors.java", "/sensitive/config/secrets.txt"]
    - ["BAD_SoftwareLicensingError.java", "License key is missing"]
    - ["BAD_SoftwareLicensingError.java", "Critical licensing error, contact support with code"]
    - ["GOOD_ErrorHandler.java", "sensitive session information"]
    - ["BAD_ConfigLoaderTest.java", "ABCD-1234-EFGH-5678"]
    - ["BAD_DatabaseConnectionTest.java", "password"]
    - ["BAD_DebugFeatureToggle.java", "123-45-6789"]
    - ["BAD_DebugLoggingEnabled.java", "ACCESS_TOKEN"]
    - ["BAD_DebugLoggingSensitiveInfo.java", "defaultPass"]
    - ["BAD_PatentApplicationError.java", "John Doe"]
    - ["BAD_RealTimeBiddingError.java", "Session1234"]
    - ["BAD_SendSensitiveDataByEmail.java", "Sending sensitive data in email content"]
    - ["BAD_SensitiveDataApiExposureSent.java", "Sending sensitive data directly to the client via API response"]
    - ["BAD_SensitiveDataHttpServletResponse.java", "Sensitive data being written directly to the HTTP response"]
    - ["GOOD_TokenManager.java", "newToken12345"]
    - ["GOOD_DebugLoggingSensitiveInfo.java", "defaultPass"]
    - ["GOOD_DebugModeActive.java", "ABCD-1234-EFGH-5678"]
    - ["GOOD_DebugOutputWithCredentials.java", "adminSecret"]
    - ["GOOD_LogDbConnectionDetails.java", "admin"]
    - ["GOOD_LogDbConnectionDetails.java", "admin123"]
    - ["BAD_CryptoSeedExposure.java", "secureRandomSeed12345"]
    - ["BAD_UserDataManager.java", "Storing data for user: "]
    - ["BAD_LoginServiceCustom.java", "password123"]
    - ["GOOD_DatabaseCredentialsReset.java", "password"]
    - ["BAD_DatabaseCredentialsReset.java", "Direct exposure of potentially sensitive command details and password"]
    - ["GOOD_SensitiveInfoExposureViaShellError.java", "secret"]
    - ["GOOD_LogUserCredentials.java", "adminPass"]
    - ["GOOD_LogUserCredentials.java", "pass1234"]
    - ["BAD_DockerRunSensitiveInfoExposure.java", "Running a Docker container with sensitive environment variable"]
    - ["BAD_EnvVarExposure.java", "Environment variables can also be viewed by other users on the same system, leading to potential exposure of sensitive data"]
    - ["BAD_EnvVarExposure.java", "Setting an environment variable with sensitive information"]
    - ["BAD_NoSuchElementException.java", "pass123"]
    - ["BAD_PaymentProcessingTest.java", "Hardcoded sensitive credit card information"]
    - ["BAD_PersonalDataHandlerTest.java", "SSN: 123-45-6789"]
    - ["BAD_UserAuthenticationTest.java", "admin123"]
    - ["BAD_NetworkConfigCredentialsExposure.java", "Command to configure VPN with a password exposed directly in the command line"]
    - ["BAD_PasswordExposureInCommands.java", "Exposing a password in a system command is a severe security risk"]
    - ["BAD_ProcessInvocationWithArgs.java", "Sensitive data such as passwords passed this way can be viewed by other users on the system using tools like 'ps'"]
    - ["BAD_ProcessInvocationWithArgs.java", "Constructing the command with the password passed as an argument"]
    - ["BAD_ProcessInvocationWithArgs.java", "Insecure: Printing stack trace might expose sensitive information indirectly"]
    - ["GOOD_SensitiveNullPointerExceptionHandling.java", "secret key"]
    - ["GOOD_NoSuchElementException.java", "pass123"]
    - ["GOOD_APIKeyUpdater.java", "apiKey"]
    - ["GOOD_CredentialUpdater.java", "username"]
    - ["GOOD_CredentialUpdater.java", "password"]
    - ["BAD_ApiKeyManagementServlet.java", "API key is received from the request, simulating a query parameter"]
    - ["BAD_LogUserCredentials.java", "adminPass"]
    - ["BAD_LogUserCredentials.java", "pass1234"]
    - ["BAD_TokenManager.java", "newToken12345"]
    - ["BAD_UserAuthenticationLogger.java", "username"]
    - ["BAD_UserAuthenticationLogger.java", "password"]
    - ["BAD_APIKeyUpdater.java", "Risky command execution"]
    - ["BAD_APIKeyUpdater.java", "Explicitly logging error that could include command syntax and apiKey"]
    - ["BAD_UserDeletionTest.java", "adminTokenXYZ"]
    - ["BAD_DebugModeActive.java", "Highly sensitive information"]
    - ["BAD_DebugOutputWithCredentials.java", "Potentially exposes user credentials in debug output"]
    - ["BAD_DebugOutputWithCredentials.java", "Potentially exposes user credentials in debug output"]
    - ["BAD_DebugOutputWithCredentials.java", "Example of a failed authentication attempt that exposes credentials in debug mode"]
    - ["BAD_ExceptionDebuggingWithSensitiveData.java", "Logging sensitive information during exception handling"]
    - ["BAD_AuthenticationFailureServlet.java", "Insecure: Sending authentication failure details back to the client"]
    - ["GOOD_ExternalizeSensitiveConfig.java", "db.url"]
    - ["GOOD_ExternalizeSensitiveConfig.java", "db.user"]
    - ["GOOD_ExternalizeSensitiveConfig.java", "db.password"]
    - ["BAD_SensitiveInfoExposureViaShellError.java", "password=secret"]
    - ["GOOD_MisconfiguredPermissions.java", "/path/to/sensitive/script.sh"]
    - ["GOOD_SecretFileDecryptor.java", "decryption failure details"]
    - ["GOOD_ApiKeySubmissionPOST.java", "secretApiKey123"]
    - ["BAD_SalaryDivisionExceptionHandling.java", "50000"]
    - ["BAD_SalaryDivisionExceptionHandling.java", "0"]
    - ["BAD_SalaryDivisionExceptionHandling.java", "329"]
    - ["BAD_SensitiveNullPointerExceptionHandling.java", "secretKey"]
    - ["BAD_MessagingSystem.java", "Your secret PIN is 1234"]
    - ["BAD_MilitaryOperationPlanError.java", "Operation Red Dawn at 0400 hours"]
    - ["BAD_MilitaryOperationPlanError.java", "Secure the target zone"]
    - ["GOOD_EncryptTempFileProcess.java", "Highly confidential information"]
    - ["GOOD_EnvVarEncryption.java", "Environment variables can also be viewed by other users on the same system, leading to potential exposure of sensitive data"]
    - ["GOOD_ProfileUpdateServlet.java", "Potentially sensitive"]
    - ["BAD_BufferOverflowException.java", "AWS Key"]
    - ["BAD_BufferOverflowException.java", "username and password details"]
    - ["GOOD_ExternalServiceErrorServlet.java", "In real-world scenarios, ensure that sensitive information is not logged like this"]
    - ["GOOD_FileReadErrorServlet.java", "This line potentially exposes the full file path, which is a security risk."]
    - ["GOOD_FileReadErrorServlet.java", "In real-world applications, you should avoid providing this level of detail to the end user."]
    - ["GOOD_SecureErrorLogging2.java", "Sensitive database connection failure"]
    - ["BAD_HardcodedSecretInConfig.java", "supersecretkey12345"]
    - ["BAD_HardcodedSecretInConfig.java", "0123456789abcdef"]
    - ["BAD_SSHConnectionHandler.java", "adminPass"]
    - ["BAD_EmailServiceTest.java", "password123!"]
    - ["BAD_FileEncryptionTest.java", "SuperSecretKey!"]
    - ["BAD_NetworkConfigurationTest.java", "newPassword123!"]
    - ["GOOD_ArithmeticException.java", "sensitive business logic detail"]
    - ["GOOD_ArithmeticException.java", "critical mistake in business logic"]
    - ["BAD_IoTDeviceFirmwareUpdateServlet.java", "0.23Beta"]
    - ["BAD_ApiClient.java", "ABCD1234APIKEYSECRET"]
    - ["BAD_ApiKeyEmbedded.java", "ABCD1234EFGH5678"]
    - ["GOOD_DatabaseErrorServlet.java", "Exposing SQL exception details including credentials"]
    - ["GOOD_DetailedRuntimeExceptionServlet.java", "Sending detailed runtime exception back to the client"]
    - ["GOOD_ExposedExceptionDetailsAPI.java", "Throwing detailed exception information back to the client"]
    - ["GOOD_HealthInfoSubmissionPOST.java", "https://healthcare.example.com/bookAppointment"]
    - ["GOOD_HttpsApiCall.java", "YourBase64EncodedSecretKeyHere"]
    - ["BAD_ErrorHandler.java", "sensitive session information"]
    - ["BAD_ErrorReportHandlerLog.java", "detailed error information"]
    - ["BAD_FinancialTransactionLogger.java", "bank account number"]
    - ["GOOD_AuthenticationPOST.java", "https://example.com/auth"]
    - ["GOOD_BankingTransactionQuery.java", "https://example.com/transactions"]
    - ["BAD_HealthInfoSubmissionGET.java", "Highly sensitive and insecure"]
    - ["BAD_PasswordChangeGET.java", "oldPass123"]
    - ["BAD_PasswordChangeGET.java", "newPass456"]
    - ["GOOD_FinancialTransactionAPI.java", "Exposing detailed transaction handling errors"]
    - ["GOOD_GenericErrorHandling.java", "Sensitive error message"]
    - ["GOOD_InitializationErrorServlet.java", "Exposing internal configuration details during initialization failure"]
    - ["BAD_CloudResourceErrorAPI.java", "Exposing cloud resource access error to the client"]
    - ["BAD_ConfigExposureServlet.java", "Sending configuration exception details back to the client"]
    - ["BAD_DatabaseErrorServlet.java", "Exposing SQL exception details including credentials"]
    - ["BAD_AwsService.java", "Sensitive AWS secret key"]
    - ["BAD_ClientCredentials.java", "Client ID and Secret for OAuth"]
    - ["BAD_DatabaseAccess.java", "Sensitive information included"]
    - ["BAD_ApiKeyInComments.java", "ak_test_12345"]
    - ["BAD_AuthenticationBypassComments.java", "admin123"]
    - ["BAD_DatabaseSchemaDetails.java", "passwords frequently"]
    - ["BAD_DatabaseSchemaDetails.java", "default 'admin'"]
    - ["BAD_InitializationErrorServlet.java", "Exposing internal configuration details"]
    - ["BAD_PaymentErrorExposureServlet.java", "Exposing payment processing exception details"]
    - ["BAD_UserDataHandlingAPI.java", "Exposing detailed user data handling errors"]
    - ["BAD_EncryptionDetailsComments.java", "fixedSeedValue"]
    - ["BAD_EncryptionKeyInComments.java", "AESKey123456789"]
    - ["BAD_HardcodedCredentialsInComments.java", "admin"]
    - ["BAD_HardcodedCredentialsInComments.java", "admin12345"]
    - ["BAD_HardcodedCredentialsInComments.java", "jdbc:mysql://localhost:3306/production"]
    - ["BAD_NetworkConfigurationComments.java", "255.255.255.0"]
    - ["BAD_NetworkConfigurationComments.java", "192.168.1.1"]
    - ["BAD_NetworkConfigurationComments.java", "192.168.1.100"]
    - ["BAD_RecoveryKeyComments.java", "12345-ABCDE-67890-FGHIJ"]
    - ["BAD_SecurityCheckBypassComments.java", "devBypassKey#2023"]
    - ["BAD_TestingCredentialsComments.java", "testUser"]
    - ["BAD_TestingCredentialsComments.java", "Test@1234"]
    - ["GOOD_ApiKeyManagementServlet.java", "API key is received from the request, simulating a query parameter"]
    - ["GOOD_ApiKeyManagementServlet.java", "Logging the API key along with error details using Log4J, which is a bad practice as it exposes sensitive data"]

